# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_shouldMakeSuccessfulGetRequestToStatusPage

# Run progress: 0.00% complete, ETA 11:04:00
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_shouldMakeSuccessfulGetRequestToStatusPage(AdminPortalTest.java:552)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_shouldMakeSuccessfulGetRequestToStatusPage_jmhTest.benchmark_shouldMakeSuccessfulGetRequestToStatusPage_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_shouldMakeSuccessfulGetRequestToStatusPage_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_shouldMakeSuccessfulGetRequestToStatusPage_jmhTest.benchmark_shouldMakeSuccessfulGetRequestToStatusPage_AverageTime(AdminPortalTest__Benchmark_benchmark_shouldMakeSuccessfulGetRequestToStatusPage_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 0.08% complete, ETA 00:09:54
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_shouldMakeSuccessfulGetRequestToStatusPage(AdminPortalTest.java:552)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_shouldMakeSuccessfulGetRequestToStatusPage_jmhTest.benchmark_shouldMakeSuccessfulGetRequestToStatusPage_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_shouldMakeSuccessfulGetRequestToStatusPage_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_shouldMakeSuccessfulGetRequestToStatusPage_jmhTest.benchmark_shouldMakeSuccessfulGetRequestToStatusPage_AverageTime(AdminPortalTest__Benchmark_benchmark_shouldMakeSuccessfulGetRequestToStatusPage_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_DeleteAllStubbedRequests_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI

# Run progress: 0.15% complete, ETA 00:08:43
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_DeleteAllStubbedRequests_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI(AdminPortalTest.java:672)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_DeleteAllStubbedRequests_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_DeleteAllStubbedRequests_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_DeleteAllStubbedRequests_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_DeleteAllStubbedRequests_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_DeleteAllStubbedRequests_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_DeleteAllStubbedRequests_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 0.23% complete, ETA 00:08:17
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_DeleteAllStubbedRequests_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI(AdminPortalTest.java:672)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_DeleteAllStubbedRequests_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_DeleteAllStubbedRequests_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_DeleteAllStubbedRequests_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_DeleteAllStubbedRequests_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_DeleteAllStubbedRequests_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_DeleteAllStubbedRequests_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI

# Run progress: 0.30% complete, ETA 00:08:12
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI(AdminPortalTest.java:654)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 0.38% complete, ETA 00:08:01
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI(AdminPortalTest.java:654)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid

# Run progress: 0.45% complete, ETA 00:07:57
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid(AdminPortalTest.java:660)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_AverageTime(AdminPortalTest__Benchmark_benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 0.53% complete, ETA 00:07:52
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid(AdminPortalTest.java:660)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_AverageTime(AdminPortalTest__Benchmark_benchmark_should_DeleteStubbedRequest_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_Return400_WhenCreatingWholeStubsConfig_WithDuplicateUUIDs

# Run progress: 0.60% complete, ETA 00:07:52
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_Return400_WhenCreatingWholeStubsConfig_WithDuplicateUUIDs(AdminPortalTest.java:696)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeStubsConfig_WithDuplicateUUIDs_jmhTest.benchmark_should_Return400_WhenCreatingWholeStubsConfig_WithDuplicateUUIDs_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeStubsConfig_WithDuplicateUUIDs_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeStubsConfig_WithDuplicateUUIDs_jmhTest.benchmark_should_Return400_WhenCreatingWholeStubsConfig_WithDuplicateUUIDs_AverageTime(AdminPortalTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeStubsConfig_WithDuplicateUUIDs_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 0.68% complete, ETA 00:07:49
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_Return400_WhenCreatingWholeStubsConfig_WithDuplicateUUIDs(AdminPortalTest.java:696)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeStubsConfig_WithDuplicateUUIDs_jmhTest.benchmark_should_Return400_WhenCreatingWholeStubsConfig_WithDuplicateUUIDs_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeStubsConfig_WithDuplicateUUIDs_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeStubsConfig_WithDuplicateUUIDs_jmhTest.benchmark_should_Return400_WhenCreatingWholeStubsConfig_WithDuplicateUUIDs_AverageTime(AdminPortalTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeStubsConfig_WithDuplicateUUIDs_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot

# Run progress: 0.75% complete, ETA 00:07:48
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot(AdminPortalTest.java:558)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 0.83% complete, ETA 00:07:46
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot(AdminPortalTest.java:558)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidIndexURI

# Run progress: 0.90% complete, ETA 00:07:42
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidIndexURI(AdminPortalTest.java:648)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 0.98% complete, ETA 00:07:37
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidIndexURI(AdminPortalTest.java:648)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidUuid

# Run progress: 1.05% complete, ETA 00:07:35
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidUuid(AdminPortalTest.java:666)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidUuid_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidUuid_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidUuid_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidUuid_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 1.13% complete, ETA 00:07:32
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidUuid(AdminPortalTest.java:666)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidUuid_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidUuid_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidUuid_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidUuid_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulDeleteMade_ToAdminPortalRootWithInvalidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPostMade_ToAdminPortalRoot

# Run progress: 1.20% complete, ETA 00:07:30
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPostMade_ToAdminPortalRoot(AdminPortalTest.java:684)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPostMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPostMade_ToAdminPortalRoot_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPostMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPostMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPostMade_ToAdminPortalRoot_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPostMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 1.28% complete, ETA 00:07:27
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPostMade_ToAdminPortalRoot(AdminPortalTest.java:684)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPostMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPostMade_ToAdminPortalRoot_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPostMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPostMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPostMade_ToAdminPortalRoot_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPostMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidIndexURI

# Run progress: 1.36% complete, ETA 00:07:25
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidIndexURI(AdminPortalTest.java:588)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 1.43% complete, ETA 00:07:23
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidIndexURI(AdminPortalTest.java:588)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidUuid

# Run progress: 1.51% complete, ETA 00:07:21
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidUuid(AdminPortalTest.java:594)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidUuid_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidUuid_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 1.58% complete, ETA 00:07:19
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidUuid(AdminPortalTest.java:594)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidUuid_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidUuid_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulEmptyPutMade_ToAdminPortalRootWithValidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithInvalidIndexURI

# Run progress: 1.66% complete, ETA 00:07:18
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithInvalidIndexURI(AdminPortalTest.java:570)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithInvalidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithInvalidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 1.73% complete, ETA 00:07:17
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithInvalidIndexURI(AdminPortalTest.java:570)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithInvalidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithInvalidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithNonExistentUuid

# Run progress: 1.81% complete, ETA 00:07:16
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithNonExistentUuid(AdminPortalTest.java:576)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithNonExistentUuid_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithNonExistentUuid_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithNonExistentUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithNonExistentUuid_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithNonExistentUuid_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithNonExistentUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 1.88% complete, ETA 00:07:16
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithNonExistentUuid(AdminPortalTest.java:576)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithNonExistentUuid_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithNonExistentUuid_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithNonExistentUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithNonExistentUuid_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithNonExistentUuid_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulGetMade_ToAdminPortalRootWithNonExistentUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulInvalidPostMade_ToAdminPortalRoot

# Run progress: 1.96% complete, ETA 00:07:15
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulInvalidPostMade_ToAdminPortalRoot(AdminPortalTest.java:690)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulInvalidPostMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulInvalidPostMade_ToAdminPortalRoot_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulInvalidPostMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulInvalidPostMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulInvalidPostMade_ToAdminPortalRoot_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulInvalidPostMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 2.03% complete, ETA 00:07:14
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulInvalidPostMade_ToAdminPortalRoot(AdminPortalTest.java:690)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulInvalidPostMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulInvalidPostMade_ToAdminPortalRoot_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulInvalidPostMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulInvalidPostMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulInvalidPostMade_ToAdminPortalRoot_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulInvalidPostMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulPostMade_ToAdminPortalRootWithAnIndexURI

# Run progress: 2.11% complete, ETA 00:07:14
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulPostMade_ToAdminPortalRootWithAnIndexURI(AdminPortalTest.java:678)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPostMade_ToAdminPortalRootWithAnIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulPostMade_ToAdminPortalRootWithAnIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPostMade_ToAdminPortalRootWithAnIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPostMade_ToAdminPortalRootWithAnIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulPostMade_ToAdminPortalRootWithAnIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPostMade_ToAdminPortalRootWithAnIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 2.18% complete, ETA 00:07:13
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulPostMade_ToAdminPortalRootWithAnIndexURI(AdminPortalTest.java:678)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPostMade_ToAdminPortalRootWithAnIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulPostMade_ToAdminPortalRootWithAnIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPostMade_ToAdminPortalRootWithAnIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPostMade_ToAdminPortalRootWithAnIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulPostMade_ToAdminPortalRootWithAnIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPostMade_ToAdminPortalRootWithAnIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRoot

# Run progress: 2.26% complete, ETA 00:07:11
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRoot(AdminPortalTest.java:582)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRoot_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRoot_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 2.33% complete, ETA 00:07:11
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRoot(AdminPortalTest.java:582)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRoot_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRoot_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithInvalidIndexURI

# Run progress: 2.41% complete, ETA 00:07:10
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithInvalidIndexURI(AdminPortalTest.java:600)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithInvalidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithInvalidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 2.48% complete, ETA 00:07:09
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithInvalidIndexURI(AdminPortalTest.java:600)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithInvalidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithInvalidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithInvalidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithNonExistentUuid

# Run progress: 2.56% complete, ETA 00:07:09
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithNonExistentUuid(AdminPortalTest.java:606)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithNonExistentUuid_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithNonExistentUuid_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithNonExistentUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithNonExistentUuid_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithNonExistentUuid_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithNonExistentUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 2.64% complete, ETA 00:07:08
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithNonExistentUuid(AdminPortalTest.java:606)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithNonExistentUuid_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithNonExistentUuid_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithNonExistentUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithNonExistentUuid_jmhTest.benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithNonExistentUuid_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnExpectedError_WhenSuccessfulPutMade_ToAdminPortalRootWithNonExistentUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulHeadMade_ToAdminPortalRoot

# Run progress: 2.71% complete, ETA 00:07:07
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulHeadMade_ToAdminPortalRoot(AdminPortalTest.java:540)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulHeadMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulHeadMade_ToAdminPortalRoot_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulHeadMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulHeadMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulHeadMade_ToAdminPortalRoot_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulHeadMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 2.79% complete, ETA 00:07:06
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulHeadMade_ToAdminPortalRoot(AdminPortalTest.java:540)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulHeadMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulHeadMade_ToAdminPortalRoot_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulHeadMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulHeadMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulHeadMade_ToAdminPortalRoot_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulHeadMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulOptionsMade_ToAdminPortalRoot

# Run progress: 2.86% complete, ETA 00:07:05
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulOptionsMade_ToAdminPortalRoot(AdminPortalTest.java:534)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulOptionsMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulOptionsMade_ToAdminPortalRoot_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulOptionsMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulOptionsMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulOptionsMade_ToAdminPortalRoot_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulOptionsMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 2.94% complete, ETA 00:07:05
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulOptionsMade_ToAdminPortalRoot(AdminPortalTest.java:534)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulOptionsMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulOptionsMade_ToAdminPortalRoot_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulOptionsMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulOptionsMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulOptionsMade_ToAdminPortalRoot_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulOptionsMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulTraceMade_ToAdminPortalRoot

# Run progress: 3.01% complete, ETA 00:07:04
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulTraceMade_ToAdminPortalRoot(AdminPortalTest.java:546)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulTraceMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulTraceMade_ToAdminPortalRoot_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulTraceMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulTraceMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulTraceMade_ToAdminPortalRoot_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulTraceMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 3.09% complete, ETA 00:07:03
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulTraceMade_ToAdminPortalRoot(AdminPortalTest.java:546)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulTraceMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulTraceMade_ToAdminPortalRoot_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulTraceMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulTraceMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulTraceMade_ToAdminPortalRoot_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnMethodNotImplemented_WhenSuccessfulTraceMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_ReturnSingleStubbedRequestAsYAML_WhenSuccessfulGetMade_ToAdminPortalRootWithValidIndexURI

# Run progress: 3.16% complete, ETA 00:07:03
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnSingleStubbedRequestAsYAML_WhenSuccessfulGetMade_ToAdminPortalRootWithValidIndexURI(AdminPortalTest.java:564)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnSingleStubbedRequestAsYAML_WhenSuccessfulGetMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_ReturnSingleStubbedRequestAsYAML_WhenSuccessfulGetMade_ToAdminPortalRootWithValidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnSingleStubbedRequestAsYAML_WhenSuccessfulGetMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnSingleStubbedRequestAsYAML_WhenSuccessfulGetMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_ReturnSingleStubbedRequestAsYAML_WhenSuccessfulGetMade_ToAdminPortalRootWithValidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnSingleStubbedRequestAsYAML_WhenSuccessfulGetMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 3.24% complete, ETA 00:07:03
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_ReturnSingleStubbedRequestAsYAML_WhenSuccessfulGetMade_ToAdminPortalRootWithValidIndexURI(AdminPortalTest.java:564)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnSingleStubbedRequestAsYAML_WhenSuccessfulGetMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_ReturnSingleStubbedRequestAsYAML_WhenSuccessfulGetMade_ToAdminPortalRootWithValidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_ReturnSingleStubbedRequestAsYAML_WhenSuccessfulGetMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_ReturnSingleStubbedRequestAsYAML_WhenSuccessfulGetMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_ReturnSingleStubbedRequestAsYAML_WhenSuccessfulGetMade_ToAdminPortalRootWithValidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_ReturnSingleStubbedRequestAsYAML_WhenSuccessfulGetMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidIndexURI

# Run progress: 3.31% complete, ETA 00:07:02
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidIndexURI(AdminPortalTest.java:612)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 3.39% complete, ETA 00:07:02
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidIndexURI(AdminPortalTest.java:612)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidUuid

# Run progress: 3.46% complete, ETA 00:07:01
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidUuid(AdminPortalTest.java:618)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidUuid_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidUuid_AverageTime(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 3.54% complete, ETA 00:07:00
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidUuid(AdminPortalTest.java:618)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidUuid_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidUuid_AverageTime(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WhenSuccessfulPutMade_ToAdminPortalRootWithValidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_UpdateStubbedRequest_WithEnquotedForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI

# Run progress: 3.61% complete, ETA 00:07:00
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_UpdateStubbedRequest_WithEnquotedForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI(AdminPortalTest.java:636)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithEnquotedForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_UpdateStubbedRequest_WithEnquotedForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithEnquotedForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithEnquotedForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_UpdateStubbedRequest_WithEnquotedForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithEnquotedForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 3.69% complete, ETA 00:06:59
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_UpdateStubbedRequest_WithEnquotedForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI(AdminPortalTest.java:636)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithEnquotedForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_UpdateStubbedRequest_WithEnquotedForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithEnquotedForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithEnquotedForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_UpdateStubbedRequest_WithEnquotedForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithEnquotedForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_UpdateStubbedRequest_WithForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI

# Run progress: 3.77% complete, ETA 00:06:58
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_UpdateStubbedRequest_WithForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI(AdminPortalTest.java:642)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_UpdateStubbedRequest_WithForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_UpdateStubbedRequest_WithForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 3.84% complete, ETA 00:06:58
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_UpdateStubbedRequest_WithForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI(AdminPortalTest.java:642)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_UpdateStubbedRequest_WithForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_UpdateStubbedRequest_WithForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithForwardSlashesEscapedJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidIndexURI

# Run progress: 3.92% complete, ETA 00:06:57
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidIndexURI(AdminPortalTest.java:630)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 3.99% complete, ETA 00:06:56
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidIndexURI(AdminPortalTest.java:630)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidIndexURI_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidIndexURI_AverageTime(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidIndexURI_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidUuid

# Run progress: 4.07% complete, ETA 00:06:55
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidUuid(AdminPortalTest.java:624)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidUuid_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidUuid_AverageTime(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 4.14% complete, ETA 00:06:56
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidUuid(AdminPortalTest.java:624)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidUuid_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidUuid_AverageTime(AdminPortalTest__Benchmark_benchmark_should_UpdateStubbedRequest_WithJsonRequest_ToAdminPortalRootWithValidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.AdminPortalTest._Benchmark.benchmark_should_UpdateStubsData_WhenSuccessfulValidPostMade_ToAdminPortalRoot

# Run progress: 4.22% complete, ETA 00:06:57
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_UpdateStubsData_WhenSuccessfulValidPostMade_ToAdminPortalRoot(AdminPortalTest.java:702)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubsData_WhenSuccessfulValidPostMade_ToAdminPortalRoot_jmhTest.benchmark_should_UpdateStubsData_WhenSuccessfulValidPostMade_ToAdminPortalRoot_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_UpdateStubsData_WhenSuccessfulValidPostMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubsData_WhenSuccessfulValidPostMade_ToAdminPortalRoot_jmhTest.benchmark_should_UpdateStubsData_WhenSuccessfulValidPostMade_ToAdminPortalRoot_AverageTime(AdminPortalTest__Benchmark_benchmark_should_UpdateStubsData_WhenSuccessfulValidPostMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 4.29% complete, ETA 00:06:56
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.AdminPortalTest.beforeClass(AdminPortalTest.java:39)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.beforeClass(AdminPortalTest.java:708)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.AdminPortalTest$_Benchmark.benchmark_should_UpdateStubsData_WhenSuccessfulValidPostMade_ToAdminPortalRoot(AdminPortalTest.java:702)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubsData_WhenSuccessfulValidPostMade_ToAdminPortalRoot_jmhTest.benchmark_should_UpdateStubsData_WhenSuccessfulValidPostMade_ToAdminPortalRoot_avgt_jmhStub(AdminPortalTest__Benchmark_benchmark_should_UpdateStubsData_WhenSuccessfulValidPostMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.AdminPortalTest__Benchmark_benchmark_should_UpdateStubsData_WhenSuccessfulValidPostMade_ToAdminPortalRoot_jmhTest.benchmark_should_UpdateStubsData_WhenSuccessfulValidPostMade_ToAdminPortalRoot_AverageTime(AdminPortalTest__Benchmark_benchmark_should_UpdateStubsData_WhenSuccessfulValidPostMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest._Benchmark.benchmark_should_CreateWholeYAMLConfig_WithJsonRequest

# Run progress: 4.37% complete, ETA 00:06:56
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_CreateWholeYAMLConfig_WithJsonRequest(ProxyConfigWithStubsTest.java:326)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_CreateWholeYAMLConfig_WithJsonRequest_jmhTest.benchmark_should_CreateWholeYAMLConfig_WithJsonRequest_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_CreateWholeYAMLConfig_WithJsonRequest_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_CreateWholeYAMLConfig_WithJsonRequest_jmhTest.benchmark_should_CreateWholeYAMLConfig_WithJsonRequest_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_CreateWholeYAMLConfig_WithJsonRequest_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 4.44% complete, ETA 00:06:55
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_CreateWholeYAMLConfig_WithJsonRequest(ProxyConfigWithStubsTest.java:326)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_CreateWholeYAMLConfig_WithJsonRequest_jmhTest.benchmark_should_CreateWholeYAMLConfig_WithJsonRequest_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_CreateWholeYAMLConfig_WithJsonRequest_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_CreateWholeYAMLConfig_WithJsonRequest_jmhTest.benchmark_should_CreateWholeYAMLConfig_WithJsonRequest_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_CreateWholeYAMLConfig_WithJsonRequest_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest._Benchmark.benchmark_should_DeleteStubbedProxyConfig_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid

# Run progress: 4.52% complete, ETA 00:06:54
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_DeleteStubbedProxyConfig_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid(ProxyConfigWithStubsTest.java:344)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_DeleteStubbedProxyConfig_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_DeleteStubbedProxyConfig_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_DeleteStubbedProxyConfig_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_DeleteStubbedProxyConfig_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_DeleteStubbedProxyConfig_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_DeleteStubbedProxyConfig_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 4.59% complete, ETA 00:06:54
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_DeleteStubbedProxyConfig_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid(ProxyConfigWithStubsTest.java:344)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_DeleteStubbedProxyConfig_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_DeleteStubbedProxyConfig_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_DeleteStubbedProxyConfig_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_DeleteStubbedProxyConfig_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_jmhTest.benchmark_should_DeleteStubbedProxyConfig_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_DeleteStubbedProxyConfig_WhenSuccessfulDeleteMade_ToAdminPortalRootWithValidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest._Benchmark.benchmark_should_Return400_WhenCreatingWholeConfig_WithEmptyPayload

# Run progress: 4.67% complete, ETA 00:06:54
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenCreatingWholeConfig_WithEmptyPayload(ProxyConfigWithStubsTest.java:332)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeConfig_WithEmptyPayload_jmhTest.benchmark_should_Return400_WhenCreatingWholeConfig_WithEmptyPayload_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeConfig_WithEmptyPayload_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeConfig_WithEmptyPayload_jmhTest.benchmark_should_Return400_WhenCreatingWholeConfig_WithEmptyPayload_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeConfig_WithEmptyPayload_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 4.74% complete, ETA 00:06:54
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenCreatingWholeConfig_WithEmptyPayload(ProxyConfigWithStubsTest.java:332)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeConfig_WithEmptyPayload_jmhTest.benchmark_should_Return400_WhenCreatingWholeConfig_WithEmptyPayload_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeConfig_WithEmptyPayload_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeConfig_WithEmptyPayload_jmhTest.benchmark_should_Return400_WhenCreatingWholeConfig_WithEmptyPayload_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeConfig_WithEmptyPayload_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest._Benchmark.benchmark_should_Return400_WhenCreatingWholeProxyConfig_WithDuplicateUUIDs

# Run progress: 4.82% complete, ETA 00:06:54
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenCreatingWholeProxyConfig_WithDuplicateUUIDs(ProxyConfigWithStubsTest.java:338)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeProxyConfig_WithDuplicateUUIDs_jmhTest.benchmark_should_Return400_WhenCreatingWholeProxyConfig_WithDuplicateUUIDs_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeProxyConfig_WithDuplicateUUIDs_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeProxyConfig_WithDuplicateUUIDs_jmhTest.benchmark_should_Return400_WhenCreatingWholeProxyConfig_WithDuplicateUUIDs_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeProxyConfig_WithDuplicateUUIDs_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 4.89% complete, ETA 00:06:53
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenCreatingWholeProxyConfig_WithDuplicateUUIDs(ProxyConfigWithStubsTest.java:338)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeProxyConfig_WithDuplicateUUIDs_jmhTest.benchmark_should_Return400_WhenCreatingWholeProxyConfig_WithDuplicateUUIDs_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeProxyConfig_WithDuplicateUUIDs_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeProxyConfig_WithDuplicateUUIDs_jmhTest.benchmark_should_Return400_WhenCreatingWholeProxyConfig_WithDuplicateUUIDs_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenCreatingWholeProxyConfig_WithDuplicateUUIDs_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest._Benchmark.benchmark_should_Return400_WhenDeletingDefaultProxyConfig

# Run progress: 4.97% complete, ETA 00:06:53
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenDeletingDefaultProxyConfig(ProxyConfigWithStubsTest.java:356)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDeletingDefaultProxyConfig_jmhTest.benchmark_should_Return400_WhenDeletingDefaultProxyConfig_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDeletingDefaultProxyConfig_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDeletingDefaultProxyConfig_jmhTest.benchmark_should_Return400_WhenDeletingDefaultProxyConfig_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDeletingDefaultProxyConfig_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 5.05% complete, ETA 00:06:52
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenDeletingDefaultProxyConfig(ProxyConfigWithStubsTest.java:356)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDeletingDefaultProxyConfig_jmhTest.benchmark_should_Return400_WhenDeletingDefaultProxyConfig_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDeletingDefaultProxyConfig_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDeletingDefaultProxyConfig_jmhTest.benchmark_should_Return400_WhenDeletingDefaultProxyConfig_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDeletingDefaultProxyConfig_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest._Benchmark.benchmark_should_Return400_WhenDeletingProxyConfig_ByInvalidUuid

# Run progress: 5.12% complete, ETA 00:06:52
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenDeletingProxyConfig_ByInvalidUuid(ProxyConfigWithStubsTest.java:350)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDeletingProxyConfig_ByInvalidUuid_jmhTest.benchmark_should_Return400_WhenDeletingProxyConfig_ByInvalidUuid_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDeletingProxyConfig_ByInvalidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDeletingProxyConfig_ByInvalidUuid_jmhTest.benchmark_should_Return400_WhenDeletingProxyConfig_ByInvalidUuid_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDeletingProxyConfig_ByInvalidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 5.20% complete, ETA 00:06:51
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenDeletingProxyConfig_ByInvalidUuid(ProxyConfigWithStubsTest.java:350)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDeletingProxyConfig_ByInvalidUuid_jmhTest.benchmark_should_Return400_WhenDeletingProxyConfig_ByInvalidUuid_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDeletingProxyConfig_ByInvalidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDeletingProxyConfig_ByInvalidUuid_jmhTest.benchmark_should_Return400_WhenDeletingProxyConfig_ByInvalidUuid_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDeletingProxyConfig_ByInvalidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest._Benchmark.benchmark_should_Return400_WhenDisplayingProxyConfig_ByInvalidUuid

# Run progress: 5.27% complete, ETA 00:06:50
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenDisplayingProxyConfig_ByInvalidUuid(ProxyConfigWithStubsTest.java:368)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDisplayingProxyConfig_ByInvalidUuid_jmhTest.benchmark_should_Return400_WhenDisplayingProxyConfig_ByInvalidUuid_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDisplayingProxyConfig_ByInvalidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDisplayingProxyConfig_ByInvalidUuid_jmhTest.benchmark_should_Return400_WhenDisplayingProxyConfig_ByInvalidUuid_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDisplayingProxyConfig_ByInvalidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 5.35% complete, ETA 00:06:50
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenDisplayingProxyConfig_ByInvalidUuid(ProxyConfigWithStubsTest.java:368)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDisplayingProxyConfig_ByInvalidUuid_jmhTest.benchmark_should_Return400_WhenDisplayingProxyConfig_ByInvalidUuid_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDisplayingProxyConfig_ByInvalidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDisplayingProxyConfig_ByInvalidUuid_jmhTest.benchmark_should_Return400_WhenDisplayingProxyConfig_ByInvalidUuid_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenDisplayingProxyConfig_ByInvalidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest._Benchmark.benchmark_should_Return400_WhenRequestingWrongURIPathForDeletingProxyConfig

# Run progress: 5.42% complete, ETA 00:06:50
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenRequestingWrongURIPathForDeletingProxyConfig(ProxyConfigWithStubsTest.java:362)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForDeletingProxyConfig_jmhTest.benchmark_should_Return400_WhenRequestingWrongURIPathForDeletingProxyConfig_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForDeletingProxyConfig_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForDeletingProxyConfig_jmhTest.benchmark_should_Return400_WhenRequestingWrongURIPathForDeletingProxyConfig_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForDeletingProxyConfig_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 5.50% complete, ETA 00:06:49
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenRequestingWrongURIPathForDeletingProxyConfig(ProxyConfigWithStubsTest.java:362)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForDeletingProxyConfig_jmhTest.benchmark_should_Return400_WhenRequestingWrongURIPathForDeletingProxyConfig_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForDeletingProxyConfig_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForDeletingProxyConfig_jmhTest.benchmark_should_Return400_WhenRequestingWrongURIPathForDeletingProxyConfig_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForDeletingProxyConfig_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest._Benchmark.benchmark_should_Return400_WhenRequestingWrongURIPathForDisplayingProxyConfig

# Run progress: 5.57% complete, ETA 00:06:49
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenRequestingWrongURIPathForDisplayingProxyConfig(ProxyConfigWithStubsTest.java:374)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForDisplayingProxyConfig_jmhTest.benchmark_should_Return400_WhenRequestingWrongURIPathForDisplayingProxyConfig_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForDisplayingProxyConfig_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForDisplayingProxyConfig_jmhTest.benchmark_should_Return400_WhenRequestingWrongURIPathForDisplayingProxyConfig_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForDisplayingProxyConfig_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 5.65% complete, ETA 00:06:48
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenRequestingWrongURIPathForDisplayingProxyConfig(ProxyConfigWithStubsTest.java:374)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForDisplayingProxyConfig_jmhTest.benchmark_should_Return400_WhenRequestingWrongURIPathForDisplayingProxyConfig_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForDisplayingProxyConfig_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForDisplayingProxyConfig_jmhTest.benchmark_should_Return400_WhenRequestingWrongURIPathForDisplayingProxyConfig_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForDisplayingProxyConfig_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest._Benchmark.benchmark_should_Return400_WhenRequestingWrongURIPathForUpdatingProxyConfig

# Run progress: 5.72% complete, ETA 00:06:48
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenRequestingWrongURIPathForUpdatingProxyConfig(ProxyConfigWithStubsTest.java:308)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForUpdatingProxyConfig_jmhTest.benchmark_should_Return400_WhenRequestingWrongURIPathForUpdatingProxyConfig_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForUpdatingProxyConfig_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForUpdatingProxyConfig_jmhTest.benchmark_should_Return400_WhenRequestingWrongURIPathForUpdatingProxyConfig_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForUpdatingProxyConfig_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 5.80% complete, ETA 00:06:47
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenRequestingWrongURIPathForUpdatingProxyConfig(ProxyConfigWithStubsTest.java:308)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForUpdatingProxyConfig_jmhTest.benchmark_should_Return400_WhenRequestingWrongURIPathForUpdatingProxyConfig_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForUpdatingProxyConfig_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForUpdatingProxyConfig_jmhTest.benchmark_should_Return400_WhenRequestingWrongURIPathForUpdatingProxyConfig_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenRequestingWrongURIPathForUpdatingProxyConfig_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest._Benchmark.benchmark_should_Return400_WhenUpdatingProxyConfig_ByInvalidUuid

# Run progress: 5.87% complete, ETA 00:06:46
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenUpdatingProxyConfig_ByInvalidUuid(ProxyConfigWithStubsTest.java:314)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenUpdatingProxyConfig_ByInvalidUuid_jmhTest.benchmark_should_Return400_WhenUpdatingProxyConfig_ByInvalidUuid_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenUpdatingProxyConfig_ByInvalidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenUpdatingProxyConfig_ByInvalidUuid_jmhTest.benchmark_should_Return400_WhenUpdatingProxyConfig_ByInvalidUuid_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenUpdatingProxyConfig_ByInvalidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 5.95% complete, ETA 00:06:46
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenUpdatingProxyConfig_ByInvalidUuid(ProxyConfigWithStubsTest.java:314)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenUpdatingProxyConfig_ByInvalidUuid_jmhTest.benchmark_should_Return400_WhenUpdatingProxyConfig_ByInvalidUuid_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenUpdatingProxyConfig_ByInvalidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenUpdatingProxyConfig_ByInvalidUuid_jmhTest.benchmark_should_Return400_WhenUpdatingProxyConfig_ByInvalidUuid_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenUpdatingProxyConfig_ByInvalidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest._Benchmark.benchmark_should_Return400_WhenUpdatingProxyConfig_WithEmptyPayload

# Run progress: 6.02% complete, ETA 00:06:46
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenUpdatingProxyConfig_WithEmptyPayload(ProxyConfigWithStubsTest.java:320)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenUpdatingProxyConfig_WithEmptyPayload_jmhTest.benchmark_should_Return400_WhenUpdatingProxyConfig_WithEmptyPayload_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenUpdatingProxyConfig_WithEmptyPayload_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenUpdatingProxyConfig_WithEmptyPayload_jmhTest.benchmark_should_Return400_WhenUpdatingProxyConfig_WithEmptyPayload_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenUpdatingProxyConfig_WithEmptyPayload_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 6.10% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_Return400_WhenUpdatingProxyConfig_WithEmptyPayload(ProxyConfigWithStubsTest.java:320)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenUpdatingProxyConfig_WithEmptyPayload_jmhTest.benchmark_should_Return400_WhenUpdatingProxyConfig_WithEmptyPayload_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenUpdatingProxyConfig_WithEmptyPayload_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenUpdatingProxyConfig_WithEmptyPayload_jmhTest.benchmark_should_Return400_WhenUpdatingProxyConfig_WithEmptyPayload_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_Return400_WhenUpdatingProxyConfig_WithEmptyPayload_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest._Benchmark.benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot

# Run progress: 6.17% complete, ETA 00:06:45
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot(ProxyConfigWithStubsTest.java:290)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 6.25% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot(ProxyConfigWithStubsTest.java:290)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_jmhTest.benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_ReturnCompleteYAMLConfig_WhenSuccessfulGetMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest._Benchmark.benchmark_should_UpdateStubbedDefaultProxyConfig_WithYamlRequest_ByValidUuid

# Run progress: 6.33% complete, ETA 00:06:44
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_UpdateStubbedDefaultProxyConfig_WithYamlRequest_ByValidUuid(ProxyConfigWithStubsTest.java:302)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_UpdateStubbedDefaultProxyConfig_WithYamlRequest_ByValidUuid_jmhTest.benchmark_should_UpdateStubbedDefaultProxyConfig_WithYamlRequest_ByValidUuid_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_UpdateStubbedDefaultProxyConfig_WithYamlRequest_ByValidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_UpdateStubbedDefaultProxyConfig_WithYamlRequest_ByValidUuid_jmhTest.benchmark_should_UpdateStubbedDefaultProxyConfig_WithYamlRequest_ByValidUuid_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_UpdateStubbedDefaultProxyConfig_WithYamlRequest_ByValidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 6.40% complete, ETA 00:06:44
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_UpdateStubbedDefaultProxyConfig_WithYamlRequest_ByValidUuid(ProxyConfigWithStubsTest.java:302)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_UpdateStubbedDefaultProxyConfig_WithYamlRequest_ByValidUuid_jmhTest.benchmark_should_UpdateStubbedDefaultProxyConfig_WithYamlRequest_ByValidUuid_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_UpdateStubbedDefaultProxyConfig_WithYamlRequest_ByValidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_UpdateStubbedDefaultProxyConfig_WithYamlRequest_ByValidUuid_jmhTest.benchmark_should_UpdateStubbedDefaultProxyConfig_WithYamlRequest_ByValidUuid_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_UpdateStubbedDefaultProxyConfig_WithYamlRequest_ByValidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest._Benchmark.benchmark_should_UpdateStubbedProxyConfig_WithJsonRequest_ByValidUuid

# Run progress: 6.48% complete, ETA 00:06:43
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_UpdateStubbedProxyConfig_WithJsonRequest_ByValidUuid(ProxyConfigWithStubsTest.java:296)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_UpdateStubbedProxyConfig_WithJsonRequest_ByValidUuid_jmhTest.benchmark_should_UpdateStubbedProxyConfig_WithJsonRequest_ByValidUuid_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_UpdateStubbedProxyConfig_WithJsonRequest_ByValidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_UpdateStubbedProxyConfig_WithJsonRequest_ByValidUuid_jmhTest.benchmark_should_UpdateStubbedProxyConfig_WithJsonRequest_ByValidUuid_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_UpdateStubbedProxyConfig_WithJsonRequest_ByValidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 6.55% complete, ETA 00:06:43
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest.beforeClass(ProxyConfigWithStubsTest.java:55)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.beforeClass(ProxyConfigWithStubsTest.java:380)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.ProxyConfigWithStubsTest$_Benchmark.benchmark_should_UpdateStubbedProxyConfig_WithJsonRequest_ByValidUuid(ProxyConfigWithStubsTest.java:296)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_UpdateStubbedProxyConfig_WithJsonRequest_ByValidUuid_jmhTest.benchmark_should_UpdateStubbedProxyConfig_WithJsonRequest_ByValidUuid_avgt_jmhStub(ProxyConfigWithStubsTest__Benchmark_benchmark_should_UpdateStubbedProxyConfig_WithJsonRequest_ByValidUuid_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.ProxyConfigWithStubsTest__Benchmark_benchmark_should_UpdateStubbedProxyConfig_WithJsonRequest_ByValidUuid_jmhTest.benchmark_should_UpdateStubbedProxyConfig_WithJsonRequest_ByValidUuid_AverageTime(ProxyConfigWithStubsTest__Benchmark_benchmark_should_UpdateStubbedProxyConfig_WithJsonRequest_ByValidUuid_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsAdminPortalsTest._Benchmark.benchmark_should_AdjustResourceIdHeaderAccordingly_WhenSuccessfulDeleteMade

# Run progress: 6.63% complete, ETA 00:06:42
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest.beforeClass(StubsAdminPortalsTest.java:46)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.beforeClass(StubsAdminPortalsTest.java:301)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.benchmark_should_AdjustResourceIdHeaderAccordingly_WhenSuccessfulDeleteMade(StubsAdminPortalsTest.java:265)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_AdjustResourceIdHeaderAccordingly_WhenSuccessfulDeleteMade_jmhTest.benchmark_should_AdjustResourceIdHeaderAccordingly_WhenSuccessfulDeleteMade_avgt_jmhStub(StubsAdminPortalsTest__Benchmark_benchmark_should_AdjustResourceIdHeaderAccordingly_WhenSuccessfulDeleteMade_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_AdjustResourceIdHeaderAccordingly_WhenSuccessfulDeleteMade_jmhTest.benchmark_should_AdjustResourceIdHeaderAccordingly_WhenSuccessfulDeleteMade_AverageTime(StubsAdminPortalsTest__Benchmark_benchmark_should_AdjustResourceIdHeaderAccordingly_WhenSuccessfulDeleteMade_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 6.70% complete, ETA 00:06:42
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest.beforeClass(StubsAdminPortalsTest.java:46)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.beforeClass(StubsAdminPortalsTest.java:301)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.benchmark_should_AdjustResourceIdHeaderAccordingly_WhenSuccessfulDeleteMade(StubsAdminPortalsTest.java:265)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_AdjustResourceIdHeaderAccordingly_WhenSuccessfulDeleteMade_jmhTest.benchmark_should_AdjustResourceIdHeaderAccordingly_WhenSuccessfulDeleteMade_avgt_jmhStub(StubsAdminPortalsTest__Benchmark_benchmark_should_AdjustResourceIdHeaderAccordingly_WhenSuccessfulDeleteMade_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_AdjustResourceIdHeaderAccordingly_WhenSuccessfulDeleteMade_jmhTest.benchmark_should_AdjustResourceIdHeaderAccordingly_WhenSuccessfulDeleteMade_AverageTime(StubsAdminPortalsTest__Benchmark_benchmark_should_AdjustResourceIdHeaderAccordingly_WhenSuccessfulDeleteMade_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsAdminPortalsTest._Benchmark.benchmark_should_ReturnAjaxRequestContent_WhenSuccessfulRequestMade

# Run progress: 6.78% complete, ETA 00:06:41
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest.beforeClass(StubsAdminPortalsTest.java:46)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.beforeClass(StubsAdminPortalsTest.java:301)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.benchmark_should_ReturnAjaxRequestContent_WhenSuccessfulRequestMade(StubsAdminPortalsTest.java:271)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxRequestContent_WhenSuccessfulRequestMade_jmhTest.benchmark_should_ReturnAjaxRequestContent_WhenSuccessfulRequestMade_avgt_jmhStub(StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxRequestContent_WhenSuccessfulRequestMade_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxRequestContent_WhenSuccessfulRequestMade_jmhTest.benchmark_should_ReturnAjaxRequestContent_WhenSuccessfulRequestMade_AverageTime(StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxRequestContent_WhenSuccessfulRequestMade_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 6.85% complete, ETA 00:06:41
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest.beforeClass(StubsAdminPortalsTest.java:46)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.beforeClass(StubsAdminPortalsTest.java:301)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.benchmark_should_ReturnAjaxRequestContent_WhenSuccessfulRequestMade(StubsAdminPortalsTest.java:271)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxRequestContent_WhenSuccessfulRequestMade_jmhTest.benchmark_should_ReturnAjaxRequestContent_WhenSuccessfulRequestMade_avgt_jmhStub(StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxRequestContent_WhenSuccessfulRequestMade_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxRequestContent_WhenSuccessfulRequestMade_jmhTest.benchmark_should_ReturnAjaxRequestContent_WhenSuccessfulRequestMade_AverageTime(StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxRequestContent_WhenSuccessfulRequestMade_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsAdminPortalsTest._Benchmark.benchmark_should_ReturnAjaxResponseContent_WhenSuccessfulRequestMade

# Run progress: 6.93% complete, ETA 00:06:41
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest.beforeClass(StubsAdminPortalsTest.java:46)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.beforeClass(StubsAdminPortalsTest.java:301)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.benchmark_should_ReturnAjaxResponseContent_WhenSuccessfulRequestMade(StubsAdminPortalsTest.java:277)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxResponseContent_WhenSuccessfulRequestMade_jmhTest.benchmark_should_ReturnAjaxResponseContent_WhenSuccessfulRequestMade_avgt_jmhStub(StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxResponseContent_WhenSuccessfulRequestMade_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxResponseContent_WhenSuccessfulRequestMade_jmhTest.benchmark_should_ReturnAjaxResponseContent_WhenSuccessfulRequestMade_AverageTime(StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxResponseContent_WhenSuccessfulRequestMade_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 7.00% complete, ETA 00:06:40
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest.beforeClass(StubsAdminPortalsTest.java:46)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.beforeClass(StubsAdminPortalsTest.java:301)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.benchmark_should_ReturnAjaxResponseContent_WhenSuccessfulRequestMade(StubsAdminPortalsTest.java:277)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxResponseContent_WhenSuccessfulRequestMade_jmhTest.benchmark_should_ReturnAjaxResponseContent_WhenSuccessfulRequestMade_avgt_jmhStub(StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxResponseContent_WhenSuccessfulRequestMade_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxResponseContent_WhenSuccessfulRequestMade_jmhTest.benchmark_should_ReturnAjaxResponseContent_WhenSuccessfulRequestMade_AverageTime(StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxResponseContent_WhenSuccessfulRequestMade_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsAdminPortalsTest._Benchmark.benchmark_should_ReturnAjaxSequencedResponseContent_WhenSuccessfulRequestMade

# Run progress: 7.08% complete, ETA 00:06:41
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest.beforeClass(StubsAdminPortalsTest.java:46)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.beforeClass(StubsAdminPortalsTest.java:301)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.benchmark_should_ReturnAjaxSequencedResponseContent_WhenSuccessfulRequestMade(StubsAdminPortalsTest.java:283)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxSequencedResponseContent_WhenSuccessfulRequestMade_jmhTest.benchmark_should_ReturnAjaxSequencedResponseContent_WhenSuccessfulRequestMade_avgt_jmhStub(StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxSequencedResponseContent_WhenSuccessfulRequestMade_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxSequencedResponseContent_WhenSuccessfulRequestMade_jmhTest.benchmark_should_ReturnAjaxSequencedResponseContent_WhenSuccessfulRequestMade_AverageTime(StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxSequencedResponseContent_WhenSuccessfulRequestMade_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 7.15% complete, ETA 00:06:41
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest.beforeClass(StubsAdminPortalsTest.java:46)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.beforeClass(StubsAdminPortalsTest.java:301)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.benchmark_should_ReturnAjaxSequencedResponseContent_WhenSuccessfulRequestMade(StubsAdminPortalsTest.java:283)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxSequencedResponseContent_WhenSuccessfulRequestMade_jmhTest.benchmark_should_ReturnAjaxSequencedResponseContent_WhenSuccessfulRequestMade_avgt_jmhStub(StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxSequencedResponseContent_WhenSuccessfulRequestMade_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxSequencedResponseContent_WhenSuccessfulRequestMade_jmhTest.benchmark_should_ReturnAjaxSequencedResponseContent_WhenSuccessfulRequestMade_AverageTime(StubsAdminPortalsTest__Benchmark_benchmark_should_ReturnAjaxSequencedResponseContent_WhenSuccessfulRequestMade_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsAdminPortalsTest._Benchmark.benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlRegexRemainsUnchanged

# Run progress: 7.23% complete, ETA 00:06:41
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest.beforeClass(StubsAdminPortalsTest.java:46)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.beforeClass(StubsAdminPortalsTest.java:301)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlRegexRemainsUnchanged(StubsAdminPortalsTest.java:295)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlRegexRemainsUnchanged_jmhTest.benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlRegexRemainsUnchanged_avgt_jmhStub(StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlRegexRemainsUnchanged_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlRegexRemainsUnchanged_jmhTest.benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlRegexRemainsUnchanged_AverageTime(StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlRegexRemainsUnchanged_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 7.30% complete, ETA 00:06:41
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest.beforeClass(StubsAdminPortalsTest.java:46)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.beforeClass(StubsAdminPortalsTest.java:301)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlRegexRemainsUnchanged(StubsAdminPortalsTest.java:295)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlRegexRemainsUnchanged_jmhTest.benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlRegexRemainsUnchanged_avgt_jmhStub(StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlRegexRemainsUnchanged_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlRegexRemainsUnchanged_jmhTest.benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlRegexRemainsUnchanged_AverageTime(StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlRegexRemainsUnchanged_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsAdminPortalsTest._Benchmark.benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlStringRemainsUnchanged

# Run progress: 7.38% complete, ETA 00:06:40
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest.beforeClass(StubsAdminPortalsTest.java:46)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.beforeClass(StubsAdminPortalsTest.java:301)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlStringRemainsUnchanged(StubsAdminPortalsTest.java:289)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlStringRemainsUnchanged_jmhTest.benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlStringRemainsUnchanged_avgt_jmhStub(StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlStringRemainsUnchanged_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlStringRemainsUnchanged_jmhTest.benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlStringRemainsUnchanged_AverageTime(StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlStringRemainsUnchanged_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 7.45% complete, ETA 00:06:40
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest.beforeClass(StubsAdminPortalsTest.java:46)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.beforeClass(StubsAdminPortalsTest.java:301)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlStringRemainsUnchanged(StubsAdminPortalsTest.java:289)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlStringRemainsUnchanged_jmhTest.benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlStringRemainsUnchanged_avgt_jmhStub(StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlStringRemainsUnchanged_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlStringRemainsUnchanged_jmhTest.benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlStringRemainsUnchanged_AverageTime(StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubbedResponseBody_WhenRequestUrlStringRemainsUnchanged_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsAdminPortalsTest._Benchmark.benchmark_should_UpdateStubsDataAndGetNewResource_WhenSuccessfulValidPostMade_ToAdminPortalRoot

# Run progress: 7.53% complete, ETA 00:06:39
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest.beforeClass(StubsAdminPortalsTest.java:46)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.beforeClass(StubsAdminPortalsTest.java:301)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.benchmark_should_UpdateStubsDataAndGetNewResource_WhenSuccessfulValidPostMade_ToAdminPortalRoot(StubsAdminPortalsTest.java:259)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubsDataAndGetNewResource_WhenSuccessfulValidPostMade_ToAdminPortalRoot_jmhTest.benchmark_should_UpdateStubsDataAndGetNewResource_WhenSuccessfulValidPostMade_ToAdminPortalRoot_avgt_jmhStub(StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubsDataAndGetNewResource_WhenSuccessfulValidPostMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubsDataAndGetNewResource_WhenSuccessfulValidPostMade_ToAdminPortalRoot_jmhTest.benchmark_should_UpdateStubsDataAndGetNewResource_WhenSuccessfulValidPostMade_ToAdminPortalRoot_AverageTime(StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubsDataAndGetNewResource_WhenSuccessfulValidPostMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 7.61% complete, ETA 00:06:39
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest.beforeClass(StubsAdminPortalsTest.java:46)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.beforeClass(StubsAdminPortalsTest.java:301)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsAdminPortalsTest$_Benchmark.benchmark_should_UpdateStubsDataAndGetNewResource_WhenSuccessfulValidPostMade_ToAdminPortalRoot(StubsAdminPortalsTest.java:259)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubsDataAndGetNewResource_WhenSuccessfulValidPostMade_ToAdminPortalRoot_jmhTest.benchmark_should_UpdateStubsDataAndGetNewResource_WhenSuccessfulValidPostMade_ToAdminPortalRoot_avgt_jmhStub(StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubsDataAndGetNewResource_WhenSuccessfulValidPostMade_ToAdminPortalRoot_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubsDataAndGetNewResource_WhenSuccessfulValidPostMade_ToAdminPortalRoot_jmhTest.benchmark_should_UpdateStubsDataAndGetNewResource_WhenSuccessfulValidPostMade_ToAdminPortalRoot_AverageTime(StubsAdminPortalsTest__Benchmark_benchmark_should_UpdateStubsDataAndGetNewResource_WhenSuccessfulValidPostMade_ToAdminPortalRoot_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests._Benchmark.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithSslVersion_SSLv3

# Run progress: 7.68% complete, ETA 00:06:39
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests.beforeClass(StubsPortalHttp11OverTlsTests.java:59)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11OverTlsTests.java:159)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithSslVersion_SSLv3(StubsPortalHttp11OverTlsTests.java:129)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithSslVersion_SSLv3_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithSslVersion_SSLv3_avgt_jmhStub(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithSslVersion_SSLv3_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithSslVersion_SSLv3_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithSslVersion_SSLv3_AverageTime(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithSslVersion_SSLv3_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 7.76% complete, ETA 00:06:38
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests.beforeClass(StubsPortalHttp11OverTlsTests.java:59)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11OverTlsTests.java:159)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithSslVersion_SSLv3(StubsPortalHttp11OverTlsTests.java:129)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithSslVersion_SSLv3_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithSslVersion_SSLv3_avgt_jmhStub(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithSslVersion_SSLv3_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithSslVersion_SSLv3_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithSslVersion_SSLv3_AverageTime(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithSslVersion_SSLv3_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests._Benchmark.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_0

# Run progress: 7.83% complete, ETA 00:06:38
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests.beforeClass(StubsPortalHttp11OverTlsTests.java:59)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11OverTlsTests.java:159)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_0(StubsPortalHttp11OverTlsTests.java:135)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_0_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_0_avgt_jmhStub(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_0_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_0_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_0_AverageTime(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_0_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 7.91% complete, ETA 00:06:38
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests.beforeClass(StubsPortalHttp11OverTlsTests.java:59)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11OverTlsTests.java:159)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_0(StubsPortalHttp11OverTlsTests.java:135)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_0_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_0_avgt_jmhStub(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_0_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_0_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_0_AverageTime(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_0_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests._Benchmark.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_1

# Run progress: 7.98% complete, ETA 00:06:38
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests.beforeClass(StubsPortalHttp11OverTlsTests.java:59)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11OverTlsTests.java:159)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_1(StubsPortalHttp11OverTlsTests.java:141)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_1_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_1_avgt_jmhStub(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_1_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_1_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_1_AverageTime(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_1_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 8.06% complete, ETA 00:06:37
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests.beforeClass(StubsPortalHttp11OverTlsTests.java:59)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11OverTlsTests.java:159)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_1(StubsPortalHttp11OverTlsTests.java:141)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_1_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_1_avgt_jmhStub(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_1_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_1_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_1_AverageTime(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_1_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests._Benchmark.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_2

# Run progress: 8.13% complete, ETA 00:06:37
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests.beforeClass(StubsPortalHttp11OverTlsTests.java:59)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11OverTlsTests.java:159)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_2(StubsPortalHttp11OverTlsTests.java:147)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_2_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_2_avgt_jmhStub(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_2_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_2_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_2_AverageTime(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_2_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 8.21% complete, ETA 00:06:36
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests.beforeClass(StubsPortalHttp11OverTlsTests.java:59)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11OverTlsTests.java:159)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_2(StubsPortalHttp11OverTlsTests.java:147)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_2_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_2_avgt_jmhStub(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_2_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_2_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_2_AverageTime(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_2_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests._Benchmark.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_3

# Run progress: 8.28% complete, ETA 00:06:36
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests.beforeClass(StubsPortalHttp11OverTlsTests.java:59)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11OverTlsTests.java:159)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_3(StubsPortalHttp11OverTlsTests.java:153)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_3_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_3_avgt_jmhStub(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_3_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_3_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_3_AverageTime(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_3_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 8.36% complete, ETA 00:06:35
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests.beforeClass(StubsPortalHttp11OverTlsTests.java:59)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11OverTlsTests.java:159)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11OverTlsTests$_Benchmark.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_3(StubsPortalHttp11OverTlsTests.java:153)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_3_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_3_avgt_jmhStub(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_3_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_3_jmhTest.benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_3_AverageTime(StubsPortalHttp11OverTlsTests__Benchmark_benchmark_shouldReturnExpectedResponseWhenGetRequestMadeOverSslWithTlsVersion_1_3_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests._Benchmark.benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly

# Run progress: 8.43% complete, ETA 00:06:35
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly(StubsPortalHttp11WebSocketOverTlsTests.java:623)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 8.51% complete, ETA 00:06:34
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly(StubsPortalHttp11WebSocketOverTlsTests.java:623)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests._Benchmark.benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly

# Run progress: 8.58% complete, ETA 00:06:34
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly(StubsPortalHttp11WebSocketOverTlsTests.java:629)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 8.66% complete, ETA 00:06:33
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly(StubsPortalHttp11WebSocketOverTlsTests.java:629)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests._Benchmark.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush

# Run progress: 8.73% complete, ETA 00:06:33
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush(StubsPortalHttp11WebSocketOverTlsTests.java:653)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 8.81% complete, ETA 00:06:32
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush(StubsPortalHttp11WebSocketOverTlsTests.java:653)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests._Benchmark.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames

# Run progress: 8.89% complete, ETA 00:06:32
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames(StubsPortalHttp11WebSocketOverTlsTests.java:665)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 8.96% complete, ETA 00:06:31
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames(StubsPortalHttp11WebSocketOverTlsTests.java:665)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests._Benchmark.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly

# Run progress: 9.04% complete, ETA 00:06:31
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly(StubsPortalHttp11WebSocketOverTlsTests.java:647)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 9.11% complete, ETA 00:06:30
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly(StubsPortalHttp11WebSocketOverTlsTests.java:647)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests._Benchmark.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush

# Run progress: 9.19% complete, ETA 00:06:30
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush(StubsPortalHttp11WebSocketOverTlsTests.java:641)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 9.26% complete, ETA 00:06:29
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush(StubsPortalHttp11WebSocketOverTlsTests.java:641)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests._Benchmark.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly

# Run progress: 9.34% complete, ETA 00:06:29
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly(StubsPortalHttp11WebSocketOverTlsTests.java:635)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 9.41% complete, ETA 00:06:29
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly(StubsPortalHttp11WebSocketOverTlsTests.java:635)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests._Benchmark.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_And_Disconnects

# Run progress: 9.49% complete, ETA 00:06:28
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_And_Disconnects(StubsPortalHttp11WebSocketOverTlsTests.java:659)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_And_Disconnects_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_And_Disconnects_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_And_Disconnects_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_And_Disconnects_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_And_Disconnects_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_And_Disconnects_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 9.56% complete, ETA 00:06:28
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_And_Disconnects(StubsPortalHttp11WebSocketOverTlsTests.java:659)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_And_Disconnects_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_And_Disconnects_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_And_Disconnects_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_And_Disconnects_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_And_Disconnects_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_And_Disconnects_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests._Benchmark.benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing

# Run progress: 9.64% complete, ETA 00:06:27
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing(StubsPortalHttp11WebSocketOverTlsTests.java:617)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_jmhTest.benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_jmhTest.benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 9.71% complete, ETA 00:06:27
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing(StubsPortalHttp11WebSocketOverTlsTests.java:617)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_jmhTest.benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_jmhTest.benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests._Benchmark.benchmark_serverOnOpen_SendsExpected_BinaryMessage

# Run progress: 9.79% complete, ETA 00:06:26
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnOpen_SendsExpected_BinaryMessage(StubsPortalHttp11WebSocketOverTlsTests.java:605)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessage_jmhTest.benchmark_serverOnOpen_SendsExpected_BinaryMessage_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessage_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessage_jmhTest.benchmark_serverOnOpen_SendsExpected_BinaryMessage_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessage_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 9.86% complete, ETA 00:06:26
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnOpen_SendsExpected_BinaryMessage(StubsPortalHttp11WebSocketOverTlsTests.java:605)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessage_jmhTest.benchmark_serverOnOpen_SendsExpected_BinaryMessage_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessage_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessage_jmhTest.benchmark_serverOnOpen_SendsExpected_BinaryMessage_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessage_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests._Benchmark.benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile

# Run progress: 9.94% complete, ETA 00:06:26
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile(StubsPortalHttp11WebSocketOverTlsTests.java:611)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_jmhTest.benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_jmhTest.benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 10.02% complete, ETA 00:06:25
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile(StubsPortalHttp11WebSocketOverTlsTests.java:611)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_jmhTest.benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_jmhTest.benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests._Benchmark.benchmark_serverOnOpen_SendsExpected_TextMessage

# Run progress: 10.09% complete, ETA 00:06:25
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnOpen_SendsExpected_TextMessage(StubsPortalHttp11WebSocketOverTlsTests.java:599)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_TextMessage_jmhTest.benchmark_serverOnOpen_SendsExpected_TextMessage_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_TextMessage_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_TextMessage_jmhTest.benchmark_serverOnOpen_SendsExpected_TextMessage_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_TextMessage_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 10.17% complete, ETA 00:06:24
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverOnOpen_SendsExpected_TextMessage(StubsPortalHttp11WebSocketOverTlsTests.java:599)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_TextMessage_jmhTest.benchmark_serverOnOpen_SendsExpected_TextMessage_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_TextMessage_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_TextMessage_jmhTest.benchmark_serverOnOpen_SendsExpected_TextMessage_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverOnOpen_SendsExpected_TextMessage_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests._Benchmark.benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl

# Run progress: 10.24% complete, ETA 00:06:24
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl(StubsPortalHttp11WebSocketOverTlsTests.java:671)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_jmhTest.benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_jmhTest.benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 10.32% complete, ETA 00:06:24
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl(StubsPortalHttp11WebSocketOverTlsTests.java:671)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_jmhTest.benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_jmhTest.benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests._Benchmark.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol

# Run progress: 10.39% complete, ETA 00:06:23
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol(StubsPortalHttp11WebSocketOverTlsTests.java:683)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_jmhTest.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_jmhTest.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 10.47% complete, ETA 00:06:23
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol(StubsPortalHttp11WebSocketOverTlsTests.java:683)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_jmhTest.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_jmhTest.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests._Benchmark.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol

# Run progress: 10.54% complete, ETA 00:06:22
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol(StubsPortalHttp11WebSocketOverTlsTests.java:677)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_jmhTest.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_jmhTest.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 10.62% complete, ETA 00:06:22
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol(StubsPortalHttp11WebSocketOverTlsTests.java:677)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_jmhTest.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_jmhTest.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests._Benchmark.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage

# Run progress: 10.69% complete, ETA 00:06:21
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage(StubsPortalHttp11WebSocketOverTlsTests.java:689)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 10.77% complete, ETA 00:06:21
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage(StubsPortalHttp11WebSocketOverTlsTests.java:689)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests._Benchmark.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage

# Run progress: 10.84% complete, ETA 00:06:20
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage(StubsPortalHttp11WebSocketOverTlsTests.java:695)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 10.92% complete, ETA 00:06:20
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage(StubsPortalHttp11WebSocketOverTlsTests.java:695)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests._Benchmark.benchmark_webSocketProtocol_jettySanityCheck_jettyShouldDisconnect_WhenClientClosesSocket

# Run progress: 10.99% complete, ETA 00:06:20
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_webSocketProtocol_jettySanityCheck_jettyShouldDisconnect_WhenClientClosesSocket(StubsPortalHttp11WebSocketOverTlsTests.java:701)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyShouldDisconnect_WhenClientClosesSocket_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyShouldDisconnect_WhenClientClosesSocket_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyShouldDisconnect_WhenClientClosesSocket_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyShouldDisconnect_WhenClientClosesSocket_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyShouldDisconnect_WhenClientClosesSocket_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyShouldDisconnect_WhenClientClosesSocket_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 11.07% complete, ETA 00:06:19
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_webSocketProtocol_jettySanityCheck_jettyShouldDisconnect_WhenClientClosesSocket(StubsPortalHttp11WebSocketOverTlsTests.java:701)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyShouldDisconnect_WhenClientClosesSocket_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyShouldDisconnect_WhenClientClosesSocket_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyShouldDisconnect_WhenClientClosesSocket_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyShouldDisconnect_WhenClientClosesSocket_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyShouldDisconnect_WhenClientClosesSocket_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyShouldDisconnect_WhenClientClosesSocket_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests._Benchmark.benchmark_webSocketSessionShouldHaveValidState

# Run progress: 11.14% complete, ETA 00:06:19
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_webSocketSessionShouldHaveValidState(StubsPortalHttp11WebSocketOverTlsTests.java:593)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketSessionShouldHaveValidState_jmhTest.benchmark_webSocketSessionShouldHaveValidState_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketSessionShouldHaveValidState_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketSessionShouldHaveValidState_jmhTest.benchmark_webSocketSessionShouldHaveValidState_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketSessionShouldHaveValidState_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 11.22% complete, ETA 00:06:18
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:96)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketOverTlsTests.java:707)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketOverTlsTests$_Benchmark.benchmark_webSocketSessionShouldHaveValidState(StubsPortalHttp11WebSocketOverTlsTests.java:593)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketSessionShouldHaveValidState_jmhTest.benchmark_webSocketSessionShouldHaveValidState_avgt_jmhStub(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketSessionShouldHaveValidState_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketSessionShouldHaveValidState_jmhTest.benchmark_webSocketSessionShouldHaveValidState_AverageTime(StubsPortalHttp11WebSocketOverTlsTests__Benchmark_benchmark_webSocketSessionShouldHaveValidState_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests._Benchmark.benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly

# Run progress: 11.30% complete, ETA 00:06:18
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly(StubsPortalHttp11WebSocketTests.java:602)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 11.37% complete, ETA 00:06:17
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly(StubsPortalHttp11WebSocketTests.java:602)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_RealBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests._Benchmark.benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly

# Run progress: 11.45% complete, ETA 00:06:17
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly(StubsPortalHttp11WebSocketTests.java:608)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 11.52% complete, ETA 00:06:17
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly(StubsPortalHttp11WebSocketTests.java:608)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_ReactsToClient_TextBinaryMessage_AndRespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests._Benchmark.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush

# Run progress: 11.60% complete, ETA 00:06:16
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush(StubsPortalHttp11WebSocketTests.java:632)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 11.67% complete, ETA 00:06:16
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush(StubsPortalHttp11WebSocketTests.java:632)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_ContinuousPush_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests._Benchmark.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames

# Run progress: 11.75% complete, ETA 00:06:15
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames(StubsPortalHttp11WebSocketTests.java:638)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 11.82% complete, ETA 00:06:15
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames(StubsPortalHttp11WebSocketTests.java:638)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_FragmentedFrames_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests._Benchmark.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly

# Run progress: 11.90% complete, ETA 00:06:15
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly(StubsPortalHttp11WebSocketTests.java:626)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 11.97% complete, ETA 00:06:14
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly(StubsPortalHttp11WebSocketTests.java:626)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_BinaryMessage_OnceOnly_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests._Benchmark.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush

# Run progress: 12.05% complete, ETA 00:06:14
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush(StubsPortalHttp11WebSocketTests.java:620)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 12.12% complete, ETA 00:06:14
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush(StubsPortalHttp11WebSocketTests.java:620)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_ContinuousPush_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests._Benchmark.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly

# Run progress: 12.20% complete, ETA 00:06:13
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly(StubsPortalHttp11WebSocketTests.java:614)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 12.27% complete, ETA 00:06:13
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly(StubsPortalHttp11WebSocketTests.java:614)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_jmhTest.benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnMessage_RespondsWithExpected_TextMessage_OnceOnly_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests._Benchmark.benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing

# Run progress: 12.35% complete, ETA 00:06:13
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing(StubsPortalHttp11WebSocketTests.java:596)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_jmhTest.benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_jmhTest.benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 12.42% complete, ETA 00:06:12
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing(StubsPortalHttp11WebSocketTests.java:596)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_jmhTest.benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_jmhTest.benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_RespondsWithExpected_ContinuousPing_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests._Benchmark.benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile

# Run progress: 12.50% complete, ETA 00:06:13
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile(StubsPortalHttp11WebSocketTests.java:590)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_jmhTest.benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_jmhTest.benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 12.58% complete, ETA 00:06:13
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile(StubsPortalHttp11WebSocketTests.java:590)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_jmhTest.benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_jmhTest.benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_SendsExpected_BinaryMessageFromFile_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests._Benchmark.benchmark_serverOnOpen_SendsExpected_TextMessage

# Run progress: 12.65% complete, ETA 00:06:12
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnOpen_SendsExpected_TextMessage(StubsPortalHttp11WebSocketTests.java:578)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_SendsExpected_TextMessage_jmhTest.benchmark_serverOnOpen_SendsExpected_TextMessage_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_SendsExpected_TextMessage_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_SendsExpected_TextMessage_jmhTest.benchmark_serverOnOpen_SendsExpected_TextMessage_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_SendsExpected_TextMessage_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 12.73% complete, ETA 00:06:12
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverOnOpen_SendsExpected_TextMessage(StubsPortalHttp11WebSocketTests.java:578)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_SendsExpected_TextMessage_jmhTest.benchmark_serverOnOpen_SendsExpected_TextMessage_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_SendsExpected_TextMessage_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_SendsExpected_TextMessage_jmhTest.benchmark_serverOnOpen_SendsExpected_TextMessage_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverOnOpen_SendsExpected_TextMessage_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests._Benchmark.benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl

# Run progress: 12.80% complete, ETA 00:06:12
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl(StubsPortalHttp11WebSocketTests.java:644)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_jmhTest.benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_jmhTest.benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 12.88% complete, ETA 00:06:11
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl(StubsPortalHttp11WebSocketTests.java:644)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_jmhTest.benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_jmhTest.benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverShouldThrow_WhenConnectingClient_RequestedWrongUrl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests._Benchmark.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol

# Run progress: 12.95% complete, ETA 00:06:11
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol(StubsPortalHttp11WebSocketTests.java:656)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_jmhTest.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_jmhTest.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 13.03% complete, ETA 00:06:12
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol(StubsPortalHttp11WebSocketTests.java:656)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_jmhTest.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_jmhTest.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedNoSubProtocol_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests._Benchmark.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol

# Run progress: 13.10% complete, ETA 00:06:11
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol(StubsPortalHttp11WebSocketTests.java:650)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_jmhTest.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_jmhTest.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 13.18% complete, ETA 00:06:11
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol(StubsPortalHttp11WebSocketTests.java:650)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_jmhTest.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_jmhTest.benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_serverWithSubProtocolsShouldThrow_WhenConnectingClient_RequestedWrongSubProtocol_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests._Benchmark.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage

# Run progress: 13.25% complete, ETA 00:06:11
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage(StubsPortalHttp11WebSocketTests.java:662)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 13.33% complete, ETA 00:06:10
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage(StubsPortalHttp11WebSocketTests.java:662)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongMessage_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests._Benchmark.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage

# Run progress: 13.40% complete, ETA 00:06:10
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage(StubsPortalHttp11WebSocketTests.java:668)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 13.48% complete, ETA 00:06:10
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage(StubsPortalHttp11WebSocketTests.java:668)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_jmhTest.benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketProtocol_jettySanityCheck_jettyRespondsWithExpected_PongWithDataMessage_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests._Benchmark.benchmark_webSocketSessionShouldHaveValidState

# Run progress: 13.55% complete, ETA 00:06:09
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_webSocketSessionShouldHaveValidState(StubsPortalHttp11WebSocketTests.java:572)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketSessionShouldHaveValidState_jmhTest.benchmark_webSocketSessionShouldHaveValidState_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketSessionShouldHaveValidState_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketSessionShouldHaveValidState_jmhTest.benchmark_webSocketSessionShouldHaveValidState_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketSessionShouldHaveValidState_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 13.63% complete, ETA 00:06:09
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests.beforeClass(StubsPortalHttp11WebSocketTests.java:93)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.beforeClass(StubsPortalHttp11WebSocketTests.java:674)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalHttp11WebSocketTests$_Benchmark.benchmark_webSocketSessionShouldHaveValidState(StubsPortalHttp11WebSocketTests.java:572)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketSessionShouldHaveValidState_jmhTest.benchmark_webSocketSessionShouldHaveValidState_avgt_jmhStub(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketSessionShouldHaveValidState_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketSessionShouldHaveValidState_jmhTest.benchmark_webSocketSessionShouldHaveValidState_AverageTime(StubsPortalHttp11WebSocketTests__Benchmark_benchmark_webSocketSessionShouldHaveValidState_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests._Benchmark.benchmark_stubby4jIssue170

# Run progress: 13.70% complete, ETA 00:06:08
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue170(StubsPortalRaisedIssueTests.java:442)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue170_jmhTest.benchmark_stubby4jIssue170_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue170_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue170_jmhTest.benchmark_stubby4jIssue170_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue170_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 13.78% complete, ETA 00:06:08
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue170(StubsPortalRaisedIssueTests.java:442)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue170_jmhTest.benchmark_stubby4jIssue170_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue170_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue170_jmhTest.benchmark_stubby4jIssue170_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue170_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests._Benchmark.benchmark_stubby4jIssue171

# Run progress: 13.86% complete, ETA 00:06:09
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue171(StubsPortalRaisedIssueTests.java:430)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue171_jmhTest.benchmark_stubby4jIssue171_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue171_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue171_jmhTest.benchmark_stubby4jIssue171_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue171_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 13.93% complete, ETA 00:06:08
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue171(StubsPortalRaisedIssueTests.java:430)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue171_jmhTest.benchmark_stubby4jIssue171_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue171_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue171_jmhTest.benchmark_stubby4jIssue171_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue171_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests._Benchmark.benchmark_stubby4jIssue171_WithWrongPayload

# Run progress: 14.01% complete, ETA 00:06:08
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue171_WithWrongPayload(StubsPortalRaisedIssueTests.java:436)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue171_WithWrongPayload_jmhTest.benchmark_stubby4jIssue171_WithWrongPayload_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue171_WithWrongPayload_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue171_WithWrongPayload_jmhTest.benchmark_stubby4jIssue171_WithWrongPayload_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue171_WithWrongPayload_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 14.08% complete, ETA 00:06:08
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue171_WithWrongPayload(StubsPortalRaisedIssueTests.java:436)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue171_WithWrongPayload_jmhTest.benchmark_stubby4jIssue171_WithWrongPayload_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue171_WithWrongPayload_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue171_WithWrongPayload_jmhTest.benchmark_stubby4jIssue171_WithWrongPayload_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue171_WithWrongPayload_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests._Benchmark.benchmark_stubby4jIssue29

# Run progress: 14.16% complete, ETA 00:06:07
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue29(StubsPortalRaisedIssueTests.java:388)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_jmhTest.benchmark_stubby4jIssue29_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_jmhTest.benchmark_stubby4jIssue29_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 14.23% complete, ETA 00:06:07
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue29(StubsPortalRaisedIssueTests.java:388)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_jmhTest.benchmark_stubby4jIssue29_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_jmhTest.benchmark_stubby4jIssue29_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests._Benchmark.benchmark_stubby4jIssue29_VanillaComplexRegex

# Run progress: 14.31% complete, ETA 00:06:07
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue29_VanillaComplexRegex(StubsPortalRaisedIssueTests.java:400)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_VanillaComplexRegex_jmhTest.benchmark_stubby4jIssue29_VanillaComplexRegex_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_VanillaComplexRegex_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_VanillaComplexRegex_jmhTest.benchmark_stubby4jIssue29_VanillaComplexRegex_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_VanillaComplexRegex_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 14.38% complete, ETA 00:06:06
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue29_VanillaComplexRegex(StubsPortalRaisedIssueTests.java:400)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_VanillaComplexRegex_jmhTest.benchmark_stubby4jIssue29_VanillaComplexRegex_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_VanillaComplexRegex_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_VanillaComplexRegex_jmhTest.benchmark_stubby4jIssue29_VanillaComplexRegex_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_VanillaComplexRegex_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests._Benchmark.benchmark_stubby4jIssue29_VanillaRegex

# Run progress: 14.46% complete, ETA 00:06:06
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue29_VanillaRegex(StubsPortalRaisedIssueTests.java:394)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_VanillaRegex_jmhTest.benchmark_stubby4jIssue29_VanillaRegex_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_VanillaRegex_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_VanillaRegex_jmhTest.benchmark_stubby4jIssue29_VanillaRegex_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_VanillaRegex_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 14.53% complete, ETA 00:06:06
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue29_VanillaRegex(StubsPortalRaisedIssueTests.java:394)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_VanillaRegex_jmhTest.benchmark_stubby4jIssue29_VanillaRegex_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_VanillaRegex_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_VanillaRegex_jmhTest.benchmark_stubby4jIssue29_VanillaRegex_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue29_VanillaRegex_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests._Benchmark.benchmark_stubby4jIssue399_VanillaRegex

# Run progress: 14.61% complete, ETA 00:06:05
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue399_VanillaRegex(StubsPortalRaisedIssueTests.java:454)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_VanillaRegex_jmhTest.benchmark_stubby4jIssue399_VanillaRegex_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_VanillaRegex_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_VanillaRegex_jmhTest.benchmark_stubby4jIssue399_VanillaRegex_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_VanillaRegex_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 14.68% complete, ETA 00:06:05
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue399_VanillaRegex(StubsPortalRaisedIssueTests.java:454)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_VanillaRegex_jmhTest.benchmark_stubby4jIssue399_VanillaRegex_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_VanillaRegex_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_VanillaRegex_jmhTest.benchmark_stubby4jIssue399_VanillaRegex_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_VanillaRegex_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests._Benchmark.benchmark_stubby4jIssue399_XmlUnit_Matcher

# Run progress: 14.76% complete, ETA 00:06:05
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue399_XmlUnit_Matcher(StubsPortalRaisedIssueTests.java:460)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_XmlUnit_Matcher_jmhTest.benchmark_stubby4jIssue399_XmlUnit_Matcher_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_XmlUnit_Matcher_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_XmlUnit_Matcher_jmhTest.benchmark_stubby4jIssue399_XmlUnit_Matcher_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_XmlUnit_Matcher_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 14.83% complete, ETA 00:06:04
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue399_XmlUnit_Matcher(StubsPortalRaisedIssueTests.java:460)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_XmlUnit_Matcher_jmhTest.benchmark_stubby4jIssue399_XmlUnit_Matcher_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_XmlUnit_Matcher_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_XmlUnit_Matcher_jmhTest.benchmark_stubby4jIssue399_XmlUnit_Matcher_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_XmlUnit_Matcher_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests._Benchmark.benchmark_stubby4jIssue399_XmlUnit_Matcher_WithInlinedPost

# Run progress: 14.91% complete, ETA 00:06:04
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue399_XmlUnit_Matcher_WithInlinedPost(StubsPortalRaisedIssueTests.java:466)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_XmlUnit_Matcher_WithInlinedPost_jmhTest.benchmark_stubby4jIssue399_XmlUnit_Matcher_WithInlinedPost_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_XmlUnit_Matcher_WithInlinedPost_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_XmlUnit_Matcher_WithInlinedPost_jmhTest.benchmark_stubby4jIssue399_XmlUnit_Matcher_WithInlinedPost_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_XmlUnit_Matcher_WithInlinedPost_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 14.98% complete, ETA 00:06:04
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue399_XmlUnit_Matcher_WithInlinedPost(StubsPortalRaisedIssueTests.java:466)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_XmlUnit_Matcher_WithInlinedPost_jmhTest.benchmark_stubby4jIssue399_XmlUnit_Matcher_WithInlinedPost_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_XmlUnit_Matcher_WithInlinedPost_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_XmlUnit_Matcher_WithInlinedPost_jmhTest.benchmark_stubby4jIssue399_XmlUnit_Matcher_WithInlinedPost_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue399_XmlUnit_Matcher_WithInlinedPost_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests._Benchmark.benchmark_stubby4jIssue93_ExtraTest

# Run progress: 15.06% complete, ETA 00:06:03
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue93_ExtraTest(StubsPortalRaisedIssueTests.java:424)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_ExtraTest_jmhTest.benchmark_stubby4jIssue93_ExtraTest_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_ExtraTest_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_ExtraTest_jmhTest.benchmark_stubby4jIssue93_ExtraTest_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_ExtraTest_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 15.14% complete, ETA 00:06:03
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue93_ExtraTest(StubsPortalRaisedIssueTests.java:424)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_ExtraTest_jmhTest.benchmark_stubby4jIssue93_ExtraTest_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_ExtraTest_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_ExtraTest_jmhTest.benchmark_stubby4jIssue93_ExtraTest_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_ExtraTest_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests._Benchmark.benchmark_stubby4jIssue93_WithRequestBodyPayloadWithoutResponseBody

# Run progress: 15.21% complete, ETA 00:06:03
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue93_WithRequestBodyPayloadWithoutResponseBody(StubsPortalRaisedIssueTests.java:412)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithRequestBodyPayloadWithoutResponseBody_jmhTest.benchmark_stubby4jIssue93_WithRequestBodyPayloadWithoutResponseBody_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithRequestBodyPayloadWithoutResponseBody_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithRequestBodyPayloadWithoutResponseBody_jmhTest.benchmark_stubby4jIssue93_WithRequestBodyPayloadWithoutResponseBody_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithRequestBodyPayloadWithoutResponseBody_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 15.29% complete, ETA 00:06:02
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue93_WithRequestBodyPayloadWithoutResponseBody(StubsPortalRaisedIssueTests.java:412)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithRequestBodyPayloadWithoutResponseBody_jmhTest.benchmark_stubby4jIssue93_WithRequestBodyPayloadWithoutResponseBody_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithRequestBodyPayloadWithoutResponseBody_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithRequestBodyPayloadWithoutResponseBody_jmhTest.benchmark_stubby4jIssue93_WithRequestBodyPayloadWithoutResponseBody_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithRequestBodyPayloadWithoutResponseBody_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests._Benchmark.benchmark_stubby4jIssue93_WithRequestFilePayloadWithoutResponseBody

# Run progress: 15.36% complete, ETA 00:06:02
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue93_WithRequestFilePayloadWithoutResponseBody(StubsPortalRaisedIssueTests.java:406)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithRequestFilePayloadWithoutResponseBody_jmhTest.benchmark_stubby4jIssue93_WithRequestFilePayloadWithoutResponseBody_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithRequestFilePayloadWithoutResponseBody_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithRequestFilePayloadWithoutResponseBody_jmhTest.benchmark_stubby4jIssue93_WithRequestFilePayloadWithoutResponseBody_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithRequestFilePayloadWithoutResponseBody_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 15.44% complete, ETA 00:06:01
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue93_WithRequestFilePayloadWithoutResponseBody(StubsPortalRaisedIssueTests.java:406)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithRequestFilePayloadWithoutResponseBody_jmhTest.benchmark_stubby4jIssue93_WithRequestFilePayloadWithoutResponseBody_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithRequestFilePayloadWithoutResponseBody_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithRequestFilePayloadWithoutResponseBody_jmhTest.benchmark_stubby4jIssue93_WithRequestFilePayloadWithoutResponseBody_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithRequestFilePayloadWithoutResponseBody_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests._Benchmark.benchmark_stubby4jIssue93_WithoutRequestPayloadWithResponseBody

# Run progress: 15.51% complete, ETA 00:06:01
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue93_WithoutRequestPayloadWithResponseBody(StubsPortalRaisedIssueTests.java:418)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithoutRequestPayloadWithResponseBody_jmhTest.benchmark_stubby4jIssue93_WithoutRequestPayloadWithResponseBody_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithoutRequestPayloadWithResponseBody_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithoutRequestPayloadWithResponseBody_jmhTest.benchmark_stubby4jIssue93_WithoutRequestPayloadWithResponseBody_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithoutRequestPayloadWithResponseBody_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 15.59% complete, ETA 00:06:01
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jIssue93_WithoutRequestPayloadWithResponseBody(StubsPortalRaisedIssueTests.java:418)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithoutRequestPayloadWithResponseBody_jmhTest.benchmark_stubby4jIssue93_WithoutRequestPayloadWithResponseBody_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithoutRequestPayloadWithResponseBody_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithoutRequestPayloadWithResponseBody_jmhTest.benchmark_stubby4jIssue93_WithoutRequestPayloadWithResponseBody_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jIssue93_WithoutRequestPayloadWithResponseBody_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests._Benchmark.benchmark_stubby4jStackOverFlowQuestion69025268

# Run progress: 15.66% complete, ETA 00:06:00
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jStackOverFlowQuestion69025268(StubsPortalRaisedIssueTests.java:448)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jStackOverFlowQuestion69025268_jmhTest.benchmark_stubby4jStackOverFlowQuestion69025268_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jStackOverFlowQuestion69025268_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jStackOverFlowQuestion69025268_jmhTest.benchmark_stubby4jStackOverFlowQuestion69025268_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jStackOverFlowQuestion69025268_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 15.74% complete, ETA 00:06:00
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jStackOverFlowQuestion69025268(StubsPortalRaisedIssueTests.java:448)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jStackOverFlowQuestion69025268_jmhTest.benchmark_stubby4jStackOverFlowQuestion69025268_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jStackOverFlowQuestion69025268_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jStackOverFlowQuestion69025268_jmhTest.benchmark_stubby4jStackOverFlowQuestion69025268_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jStackOverFlowQuestion69025268_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests._Benchmark.benchmark_stubby4jStackOverFlowQuestion70417269

# Run progress: 15.81% complete, ETA 00:06:00
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jStackOverFlowQuestion70417269(StubsPortalRaisedIssueTests.java:472)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jStackOverFlowQuestion70417269_jmhTest.benchmark_stubby4jStackOverFlowQuestion70417269_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jStackOverFlowQuestion70417269_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jStackOverFlowQuestion70417269_jmhTest.benchmark_stubby4jStackOverFlowQuestion70417269_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jStackOverFlowQuestion70417269_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 15.89% complete, ETA 00:06:00
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests.beforeClass(StubsPortalRaisedIssueTests.java:50)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.beforeClass(StubsPortalRaisedIssueTests.java:478)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalRaisedIssueTests$_Benchmark.benchmark_stubby4jStackOverFlowQuestion70417269(StubsPortalRaisedIssueTests.java:472)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jStackOverFlowQuestion70417269_jmhTest.benchmark_stubby4jStackOverFlowQuestion70417269_avgt_jmhStub(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jStackOverFlowQuestion70417269_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jStackOverFlowQuestion70417269_jmhTest.benchmark_stubby4jStackOverFlowQuestion70417269_AverageTime(StubsPortalRaisedIssueTests__Benchmark_benchmark_stubby4jStackOverFlowQuestion70417269_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_shouldMatchRequest_WhenStubbedUrlRegexBeginsWith_ButGoodAssertionSent

# Run progress: 15.96% complete, ETA 00:05:59
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_shouldMatchRequest_WhenStubbedUrlRegexBeginsWith_ButGoodAssertionSent(StubsPortalTest.java:880)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexBeginsWith_ButGoodAssertionSent_jmhTest.benchmark_shouldMatchRequest_WhenStubbedUrlRegexBeginsWith_ButGoodAssertionSent_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexBeginsWith_ButGoodAssertionSent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexBeginsWith_ButGoodAssertionSent_jmhTest.benchmark_shouldMatchRequest_WhenStubbedUrlRegexBeginsWith_ButGoodAssertionSent_AverageTime(StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexBeginsWith_ButGoodAssertionSent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 16.04% complete, ETA 00:05:59
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_shouldMatchRequest_WhenStubbedUrlRegexBeginsWith_ButGoodAssertionSent(StubsPortalTest.java:880)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexBeginsWith_ButGoodAssertionSent_jmhTest.benchmark_shouldMatchRequest_WhenStubbedUrlRegexBeginsWith_ButGoodAssertionSent_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexBeginsWith_ButGoodAssertionSent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexBeginsWith_ButGoodAssertionSent_jmhTest.benchmark_shouldMatchRequest_WhenStubbedUrlRegexBeginsWith_ButGoodAssertionSent_AverageTime(StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexBeginsWith_ButGoodAssertionSent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_shouldMatchRequest_WhenStubbedUrlRegexifiedAndNoStubbedQueryParams

# Run progress: 16.11% complete, ETA 00:05:59
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_shouldMatchRequest_WhenStubbedUrlRegexifiedAndNoStubbedQueryParams(StubsPortalTest.java:892)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexifiedAndNoStubbedQueryParams_jmhTest.benchmark_shouldMatchRequest_WhenStubbedUrlRegexifiedAndNoStubbedQueryParams_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexifiedAndNoStubbedQueryParams_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexifiedAndNoStubbedQueryParams_jmhTest.benchmark_shouldMatchRequest_WhenStubbedUrlRegexifiedAndNoStubbedQueryParams_AverageTime(StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexifiedAndNoStubbedQueryParams_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 16.19% complete, ETA 00:05:58
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_shouldMatchRequest_WhenStubbedUrlRegexifiedAndNoStubbedQueryParams(StubsPortalTest.java:892)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexifiedAndNoStubbedQueryParams_jmhTest.benchmark_shouldMatchRequest_WhenStubbedUrlRegexifiedAndNoStubbedQueryParams_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexifiedAndNoStubbedQueryParams_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexifiedAndNoStubbedQueryParams_jmhTest.benchmark_shouldMatchRequest_WhenStubbedUrlRegexifiedAndNoStubbedQueryParams_AverageTime(StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexifiedAndNoStubbedQueryParams_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_shouldMatchRequest_WhenStubbedUrlRegexified_ButGoodAssertionSent

# Run progress: 16.27% complete, ETA 00:05:58
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_shouldMatchRequest_WhenStubbedUrlRegexified_ButGoodAssertionSent(StubsPortalTest.java:886)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexified_ButGoodAssertionSent_jmhTest.benchmark_shouldMatchRequest_WhenStubbedUrlRegexified_ButGoodAssertionSent_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexified_ButGoodAssertionSent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexified_ButGoodAssertionSent_jmhTest.benchmark_shouldMatchRequest_WhenStubbedUrlRegexified_ButGoodAssertionSent_AverageTime(StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexified_ButGoodAssertionSent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 16.34% complete, ETA 00:05:58
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_shouldMatchRequest_WhenStubbedUrlRegexified_ButGoodAssertionSent(StubsPortalTest.java:886)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexified_ButGoodAssertionSent_jmhTest.benchmark_shouldMatchRequest_WhenStubbedUrlRegexified_ButGoodAssertionSent_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexified_ButGoodAssertionSent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexified_ButGoodAssertionSent_jmhTest.benchmark_shouldMatchRequest_WhenStubbedUrlRegexified_ButGoodAssertionSent_AverageTime(StubsPortalTest__Benchmark_benchmark_shouldMatchRequest_WhenStubbedUrlRegexified_ButGoodAssertionSent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_shouldNotMatchRequest_WhenStubbedUrlRegexified_ButBadAssertionSent

# Run progress: 16.42% complete, ETA 00:05:58
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_shouldNotMatchRequest_WhenStubbedUrlRegexified_ButBadAssertionSent(StubsPortalTest.java:898)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldNotMatchRequest_WhenStubbedUrlRegexified_ButBadAssertionSent_jmhTest.benchmark_shouldNotMatchRequest_WhenStubbedUrlRegexified_ButBadAssertionSent_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_shouldNotMatchRequest_WhenStubbedUrlRegexified_ButBadAssertionSent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldNotMatchRequest_WhenStubbedUrlRegexified_ButBadAssertionSent_jmhTest.benchmark_shouldNotMatchRequest_WhenStubbedUrlRegexified_ButBadAssertionSent_AverageTime(StubsPortalTest__Benchmark_benchmark_shouldNotMatchRequest_WhenStubbedUrlRegexified_ButBadAssertionSent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 16.49% complete, ETA 00:05:57
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_shouldNotMatchRequest_WhenStubbedUrlRegexified_ButBadAssertionSent(StubsPortalTest.java:898)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldNotMatchRequest_WhenStubbedUrlRegexified_ButBadAssertionSent_jmhTest.benchmark_shouldNotMatchRequest_WhenStubbedUrlRegexified_ButBadAssertionSent_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_shouldNotMatchRequest_WhenStubbedUrlRegexified_ButBadAssertionSent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldNotMatchRequest_WhenStubbedUrlRegexified_ButBadAssertionSent_jmhTest.benchmark_shouldNotMatchRequest_WhenStubbedUrlRegexified_ButBadAssertionSent_AverageTime(StubsPortalTest__Benchmark_benchmark_shouldNotMatchRequest_WhenStubbedUrlRegexified_ButBadAssertionSent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken

# Run progress: 16.57% complete, ETA 00:05:57
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken(StubsPortalTest.java:1174)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_jmhTest.benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_jmhTest.benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_AverageTime(StubsPortalTest__Benchmark_benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 16.64% complete, ETA 00:05:57
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken(StubsPortalTest.java:1174)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_jmhTest.benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_jmhTest.benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_AverageTime(StubsPortalTest__Benchmark_benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_CreateNewProduct_WhenPostRequestMade

# Run progress: 16.72% complete, ETA 00:05:56
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_CreateNewProduct_WhenPostRequestMade(StubsPortalTest.java:1060)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_CreateNewProduct_WhenPostRequestMade_jmhTest.benchmark_should_CreateNewProduct_WhenPostRequestMade_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_CreateNewProduct_WhenPostRequestMade_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_CreateNewProduct_WhenPostRequestMade_jmhTest.benchmark_should_CreateNewProduct_WhenPostRequestMade_AverageTime(StubsPortalTest__Benchmark_benchmark_should_CreateNewProduct_WhenPostRequestMade_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 16.79% complete, ETA 00:05:56
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_CreateNewProduct_WhenPostRequestMade(StubsPortalTest.java:1060)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_CreateNewProduct_WhenPostRequestMade_jmhTest.benchmark_should_CreateNewProduct_WhenPostRequestMade_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_CreateNewProduct_WhenPostRequestMade_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_CreateNewProduct_WhenPostRequestMade_jmhTest.benchmark_should_CreateNewProduct_WhenPostRequestMade_AverageTime(StubsPortalTest__Benchmark_benchmark_should_CreateNewProduct_WhenPostRequestMade_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_CreateNewProduct_WhenPostRequestMadeOverSsl

# Run progress: 16.87% complete, ETA 00:05:56
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_CreateNewProduct_WhenPostRequestMadeOverSsl(StubsPortalTest.java:1066)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_CreateNewProduct_WhenPostRequestMadeOverSsl_jmhTest.benchmark_should_CreateNewProduct_WhenPostRequestMadeOverSsl_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_CreateNewProduct_WhenPostRequestMadeOverSsl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_CreateNewProduct_WhenPostRequestMadeOverSsl_jmhTest.benchmark_should_CreateNewProduct_WhenPostRequestMadeOverSsl_AverageTime(StubsPortalTest__Benchmark_benchmark_should_CreateNewProduct_WhenPostRequestMadeOverSsl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 16.94% complete, ETA 00:05:55
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_CreateNewProduct_WhenPostRequestMadeOverSsl(StubsPortalTest.java:1066)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_CreateNewProduct_WhenPostRequestMadeOverSsl_jmhTest.benchmark_should_CreateNewProduct_WhenPostRequestMadeOverSsl_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_CreateNewProduct_WhenPostRequestMadeOverSsl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_CreateNewProduct_WhenPostRequestMadeOverSsl_jmhTest.benchmark_should_CreateNewProduct_WhenPostRequestMadeOverSsl_AverageTime(StubsPortalTest__Benchmark_benchmark_should_CreateNewProduct_WhenPostRequestMadeOverSsl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_FailRequest_WhenUrlMatchingButFilePathDoesNotExist

# Run progress: 17.02% complete, ETA 00:05:55
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_FailRequest_WhenUrlMatchingButFilePathDoesNotExist(StubsPortalTest.java:958)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailRequest_WhenUrlMatchingButFilePathDoesNotExist_jmhTest.benchmark_should_FailRequest_WhenUrlMatchingButFilePathDoesNotExist_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_FailRequest_WhenUrlMatchingButFilePathDoesNotExist_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailRequest_WhenUrlMatchingButFilePathDoesNotExist_jmhTest.benchmark_should_FailRequest_WhenUrlMatchingButFilePathDoesNotExist_AverageTime(StubsPortalTest__Benchmark_benchmark_should_FailRequest_WhenUrlMatchingButFilePathDoesNotExist_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 17.09% complete, ETA 00:05:55
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_FailRequest_WhenUrlMatchingButFilePathDoesNotExist(StubsPortalTest.java:958)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailRequest_WhenUrlMatchingButFilePathDoesNotExist_jmhTest.benchmark_should_FailRequest_WhenUrlMatchingButFilePathDoesNotExist_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_FailRequest_WhenUrlMatchingButFilePathDoesNotExist_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailRequest_WhenUrlMatchingButFilePathDoesNotExist_jmhTest.benchmark_should_FailRequest_WhenUrlMatchingButFilePathDoesNotExist_AverageTime(StubsPortalTest__Benchmark_benchmark_should_FailRequest_WhenUrlMatchingButFilePathDoesNotExist_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryString

# Run progress: 17.17% complete, ETA 00:05:54
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryString(StubsPortalTest.java:1018)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryString_jmhTest.benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryString_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryString_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryString_jmhTest.benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryString_AverageTime(StubsPortalTest__Benchmark_benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryString_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 17.24% complete, ETA 00:05:54
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryString(StubsPortalTest.java:1018)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryString_jmhTest.benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryString_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryString_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryString_jmhTest.benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryString_AverageTime(StubsPortalTest__Benchmark_benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryString_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryStringOverSsl

# Run progress: 17.32% complete, ETA 00:05:53
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryStringOverSsl(StubsPortalTest.java:1030)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryStringOverSsl_jmhTest.benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryStringOverSsl_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryStringOverSsl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryStringOverSsl_jmhTest.benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryStringOverSsl_AverageTime(StubsPortalTest__Benchmark_benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryStringOverSsl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 17.39% complete, ETA 00:05:53
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryStringOverSsl(StubsPortalTest.java:1030)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryStringOverSsl_jmhTest.benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryStringOverSsl_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryStringOverSsl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryStringOverSsl_jmhTest.benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryStringOverSsl_AverageTime(StubsPortalTest__Benchmark_benchmark_should_FailToReturnAllProducts_WhenGetRequestMadeWithoutRequiredQueryStringOverSsl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSet

# Run progress: 17.47% complete, ETA 00:05:53
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSet(StubsPortalTest.java:1072)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSet_jmhTest.benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSet_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSet_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSet_jmhTest.benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSet_AverageTime(StubsPortalTest__Benchmark_benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSet_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 17.55% complete, ETA 00:05:53
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSet(StubsPortalTest.java:1072)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSet_jmhTest.benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSet_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSet_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSet_jmhTest.benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSet_AverageTime(StubsPortalTest__Benchmark_benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSet_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSetOverSsl

# Run progress: 17.62% complete, ETA 00:05:52
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSetOverSsl(StubsPortalTest.java:1078)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSetOverSsl_jmhTest.benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSetOverSsl_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSetOverSsl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSetOverSsl_jmhTest.benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSetOverSsl_AverageTime(StubsPortalTest__Benchmark_benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSetOverSsl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 17.70% complete, ETA 00:05:52
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSetOverSsl(StubsPortalTest.java:1078)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSetOverSsl_jmhTest.benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSetOverSsl_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSetOverSsl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSetOverSsl_jmhTest.benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSetOverSsl_AverageTime(StubsPortalTest__Benchmark_benchmark_should_FailedToCreateNewProduct_WhenPostRequestMadeWhenWrongHeaderSetOverSsl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_FindPostContentsEqual_WhenJsonContentOrderIrrelevant

# Run progress: 17.77% complete, ETA 00:05:52
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_FindPostContentsEqual_WhenJsonContentOrderIrrelevant(StubsPortalTest.java:988)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FindPostContentsEqual_WhenJsonContentOrderIrrelevant_jmhTest.benchmark_should_FindPostContentsEqual_WhenJsonContentOrderIrrelevant_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_FindPostContentsEqual_WhenJsonContentOrderIrrelevant_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FindPostContentsEqual_WhenJsonContentOrderIrrelevant_jmhTest.benchmark_should_FindPostContentsEqual_WhenJsonContentOrderIrrelevant_AverageTime(StubsPortalTest__Benchmark_benchmark_should_FindPostContentsEqual_WhenJsonContentOrderIrrelevant_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 17.85% complete, ETA 00:05:51
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_FindPostContentsEqual_WhenJsonContentOrderIrrelevant(StubsPortalTest.java:988)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FindPostContentsEqual_WhenJsonContentOrderIrrelevant_jmhTest.benchmark_should_FindPostContentsEqual_WhenJsonContentOrderIrrelevant_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_FindPostContentsEqual_WhenJsonContentOrderIrrelevant_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FindPostContentsEqual_WhenJsonContentOrderIrrelevant_jmhTest.benchmark_should_FindPostContentsEqual_WhenJsonContentOrderIrrelevant_AverageTime(StubsPortalTest__Benchmark_benchmark_should_FindPostContentsEqual_WhenJsonContentOrderIrrelevant_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_FindPostContentsEqual_WhenXmlContentOrderIrrelevant

# Run progress: 17.92% complete, ETA 00:05:51
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_FindPostContentsEqual_WhenXmlContentOrderIrrelevant(StubsPortalTest.java:1000)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FindPostContentsEqual_WhenXmlContentOrderIrrelevant_jmhTest.benchmark_should_FindPostContentsEqual_WhenXmlContentOrderIrrelevant_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_FindPostContentsEqual_WhenXmlContentOrderIrrelevant_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FindPostContentsEqual_WhenXmlContentOrderIrrelevant_jmhTest.benchmark_should_FindPostContentsEqual_WhenXmlContentOrderIrrelevant_AverageTime(StubsPortalTest__Benchmark_benchmark_should_FindPostContentsEqual_WhenXmlContentOrderIrrelevant_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 18.00% complete, ETA 00:05:51
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_FindPostContentsEqual_WhenXmlContentOrderIrrelevant(StubsPortalTest.java:1000)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FindPostContentsEqual_WhenXmlContentOrderIrrelevant_jmhTest.benchmark_should_FindPostContentsEqual_WhenXmlContentOrderIrrelevant_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_FindPostContentsEqual_WhenXmlContentOrderIrrelevant_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FindPostContentsEqual_WhenXmlContentOrderIrrelevant_jmhTest.benchmark_should_FindPostContentsEqual_WhenXmlContentOrderIrrelevant_AverageTime(StubsPortalTest__Benchmark_benchmark_should_FindPostContentsEqual_WhenXmlContentOrderIrrelevant_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_FindPostContentsNotEqual_WhenJsonParseExceptionThrown

# Run progress: 18.07% complete, ETA 00:05:50
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_FindPostContentsNotEqual_WhenJsonParseExceptionThrown(StubsPortalTest.java:994)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FindPostContentsNotEqual_WhenJsonParseExceptionThrown_jmhTest.benchmark_should_FindPostContentsNotEqual_WhenJsonParseExceptionThrown_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_FindPostContentsNotEqual_WhenJsonParseExceptionThrown_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FindPostContentsNotEqual_WhenJsonParseExceptionThrown_jmhTest.benchmark_should_FindPostContentsNotEqual_WhenJsonParseExceptionThrown_AverageTime(StubsPortalTest__Benchmark_benchmark_should_FindPostContentsNotEqual_WhenJsonParseExceptionThrown_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 18.15% complete, ETA 00:05:50
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_FindPostContentsNotEqual_WhenJsonParseExceptionThrown(StubsPortalTest.java:994)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FindPostContentsNotEqual_WhenJsonParseExceptionThrown_jmhTest.benchmark_should_FindPostContentsNotEqual_WhenJsonParseExceptionThrown_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_FindPostContentsNotEqual_WhenJsonParseExceptionThrown_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_FindPostContentsNotEqual_WhenJsonParseExceptionThrown_jmhTest.benchmark_should_FindPostContentsNotEqual_WhenJsonParseExceptionThrown_AverageTime(StubsPortalTest__Benchmark_benchmark_should_FindPostContentsNotEqual_WhenJsonParseExceptionThrown_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRedirectRequest_WhenLocationHeaderAndStatusSet

# Run progress: 18.22% complete, ETA 00:05:50
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRedirectRequest_WhenLocationHeaderAndStatusSet(StubsPortalTest.java:1180)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRedirectRequest_WhenLocationHeaderAndStatusSet_jmhTest.benchmark_should_MakeSuccessfulRedirectRequest_WhenLocationHeaderAndStatusSet_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRedirectRequest_WhenLocationHeaderAndStatusSet_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRedirectRequest_WhenLocationHeaderAndStatusSet_jmhTest.benchmark_should_MakeSuccessfulRedirectRequest_WhenLocationHeaderAndStatusSet_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRedirectRequest_WhenLocationHeaderAndStatusSet_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 18.30% complete, ETA 00:05:49
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRedirectRequest_WhenLocationHeaderAndStatusSet(StubsPortalTest.java:1180)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRedirectRequest_WhenLocationHeaderAndStatusSet_jmhTest.benchmark_should_MakeSuccessfulRedirectRequest_WhenLocationHeaderAndStatusSet_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRedirectRequest_WhenLocationHeaderAndStatusSet_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRedirectRequest_WhenLocationHeaderAndStatusSet_jmhTest.benchmark_should_MakeSuccessfulRedirectRequest_WhenLocationHeaderAndStatusSet_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRedirectRequest_WhenLocationHeaderAndStatusSet_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses

# Run progress: 18.37% complete, ETA 00:05:49
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses(StubsPortalTest.java:1090)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_jmhTest.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_jmhTest.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 18.45% complete, ETA 00:05:48
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses(StubsPortalTest.java:1090)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_jmhTest.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_jmhTest.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile

# Run progress: 18.52% complete, ETA 00:05:48
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile(StubsPortalTest.java:1096)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_jmhTest.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_jmhTest.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 18.60% complete, ETA 00:05:48
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile(StubsPortalTest.java:1096)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_jmhTest.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_jmhTest.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_WithBadUrls

# Run progress: 18.67% complete, ETA 00:05:48
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_WithBadUrls(StubsPortalTest.java:1102)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_WithBadUrls_jmhTest.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_WithBadUrls_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_WithBadUrls_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_WithBadUrls_jmhTest.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_WithBadUrls_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_WithBadUrls_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 18.75% complete, ETA 00:05:47
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_WithBadUrls(StubsPortalTest.java:1102)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_WithBadUrls_jmhTest.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_WithBadUrls_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_WithBadUrls_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_WithBadUrls_jmhTest.benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_WithBadUrls_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnMultipleSequencedResponses_FromFile_WithBadUrls_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_AndReturnSingleSequencedResponse

# Run progress: 18.83% complete, ETA 00:05:47
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_AndReturnSingleSequencedResponse(StubsPortalTest.java:1084)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnSingleSequencedResponse_jmhTest.benchmark_should_MakeSuccessfulRequest_AndReturnSingleSequencedResponse_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnSingleSequencedResponse_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnSingleSequencedResponse_jmhTest.benchmark_should_MakeSuccessfulRequest_AndReturnSingleSequencedResponse_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnSingleSequencedResponse_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 18.90% complete, ETA 00:05:47
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_AndReturnSingleSequencedResponse(StubsPortalTest.java:1084)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnSingleSequencedResponse_jmhTest.benchmark_should_MakeSuccessfulRequest_AndReturnSingleSequencedResponse_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnSingleSequencedResponse_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnSingleSequencedResponse_jmhTest.benchmark_should_MakeSuccessfulRequest_AndReturnSingleSequencedResponse_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_AndReturnSingleSequencedResponse_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_When404NotFoundResponseStubbedWithBody

# Run progress: 18.98% complete, ETA 00:05:46
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_When404NotFoundResponseStubbedWithBody(StubsPortalTest.java:1192)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_When404NotFoundResponseStubbedWithBody_jmhTest.benchmark_should_MakeSuccessfulRequest_When404NotFoundResponseStubbedWithBody_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_When404NotFoundResponseStubbedWithBody_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_When404NotFoundResponseStubbedWithBody_jmhTest.benchmark_should_MakeSuccessfulRequest_When404NotFoundResponseStubbedWithBody_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_When404NotFoundResponseStubbedWithBody_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 19.05% complete, ETA 00:05:46
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_When404NotFoundResponseStubbedWithBody(StubsPortalTest.java:1192)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_When404NotFoundResponseStubbedWithBody_jmhTest.benchmark_should_MakeSuccessfulRequest_When404NotFoundResponseStubbedWithBody_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_When404NotFoundResponseStubbedWithBody_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_When404NotFoundResponseStubbedWithBody_jmhTest.benchmark_should_MakeSuccessfulRequest_When404NotFoundResponseStubbedWithBody_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_When404NotFoundResponseStubbedWithBody_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInQueryStringParam

# Run progress: 19.13% complete, ETA 00:05:45
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInQueryStringParam(StubsPortalTest.java:1198)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInQueryStringParam_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInQueryStringParam_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInQueryStringParam_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInQueryStringParam_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInQueryStringParam_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInQueryStringParam_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 19.20% complete, ETA 00:05:45
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInQueryStringParam(StubsPortalTest.java:1198)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInQueryStringParam_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInQueryStringParam_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInQueryStringParam_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInQueryStringParam_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInQueryStringParam_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInQueryStringParam_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInSingleQueryStringParam

# Run progress: 19.28% complete, ETA 00:05:45
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInSingleQueryStringParam(StubsPortalTest.java:1204)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInSingleQueryStringParam_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInSingleQueryStringParam_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInSingleQueryStringParam_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInSingleQueryStringParam_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInSingleQueryStringParam_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInSingleQueryStringParam_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 19.35% complete, ETA 00:05:45
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInSingleQueryStringParam(StubsPortalTest.java:1204)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInSingleQueryStringParam_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInSingleQueryStringParam_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInSingleQueryStringParam_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInSingleQueryStringParam_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInSingleQueryStringParam_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoEqualSignInSingleQueryStringParam_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoQueryStringParamValue

# Run progress: 19.43% complete, ETA 00:05:44
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoQueryStringParamValue(StubsPortalTest.java:1210)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoQueryStringParamValue_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoQueryStringParamValue_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoQueryStringParamValue_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoQueryStringParamValue_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoQueryStringParamValue_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoQueryStringParamValue_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 19.50% complete, ETA 00:05:44
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoQueryStringParamValue(StubsPortalTest.java:1210)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoQueryStringParamValue_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoQueryStringParamValue_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoQueryStringParamValue_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoQueryStringParamValue_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoQueryStringParamValue_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenGetRequestMadeWithNoQueryStringParamValue_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesComplexJsonPost

# Run progress: 19.58% complete, ETA 00:05:44
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesComplexJsonPost(StubsPortalTest.java:1120)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesComplexJsonPost_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesComplexJsonPost_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesComplexJsonPost_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesComplexJsonPost_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesComplexJsonPost_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesComplexJsonPost_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 19.65% complete, ETA 00:05:43
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesComplexJsonPost(StubsPortalTest.java:1120)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesComplexJsonPost_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesComplexJsonPost_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesComplexJsonPost_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesComplexJsonPost_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesComplexJsonPost_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesComplexJsonPost_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesPostJson

# Run progress: 19.73% complete, ETA 00:05:43
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesPostJson(StubsPortalTest.java:1114)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesPostJson_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesPostJson_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesPostJson_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesPostJson_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesPostJson_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesPostJson_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 19.80% complete, ETA 00:05:43
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesPostJson(StubsPortalTest.java:1114)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesPostJson_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesPostJson_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesPostJson_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesPostJson_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesPostJson_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenJsonRegexMatchesPostJson_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_WhenPostRegexMatchingPostWithLineChars

# Run progress: 19.88% complete, ETA 00:05:42
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenPostRegexMatchingPostWithLineChars(StubsPortalTest.java:1108)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenPostRegexMatchingPostWithLineChars_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenPostRegexMatchingPostWithLineChars_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenPostRegexMatchingPostWithLineChars_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenPostRegexMatchingPostWithLineChars_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenPostRegexMatchingPostWithLineChars_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenPostRegexMatchingPostWithLineChars_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 19.95% complete, ETA 00:05:42
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenPostRegexMatchingPostWithLineChars(StubsPortalTest.java:1108)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenPostRegexMatchingPostWithLineChars_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenPostRegexMatchingPostWithLineChars_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenPostRegexMatchingPostWithLineChars_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenPostRegexMatchingPostWithLineChars_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenPostRegexMatchingPostWithLineChars_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenPostRegexMatchingPostWithLineChars_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEmptySpacesWithEscapedSingleQuoteElements

# Run progress: 20.03% complete, ETA 00:05:42
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEmptySpacesWithEscapedSingleQuoteElements(StubsPortalTest.java:928)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEmptySpacesWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEmptySpacesWithEscapedSingleQuoteElements_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEmptySpacesWithEscapedSingleQuoteElements_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEmptySpacesWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEmptySpacesWithEscapedSingleQuoteElements_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEmptySpacesWithEscapedSingleQuoteElements_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 20.11% complete, ETA 00:05:41
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEmptySpacesWithEscapedSingleQuoteElements(StubsPortalTest.java:928)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEmptySpacesWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEmptySpacesWithEscapedSingleQuoteElements_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEmptySpacesWithEscapedSingleQuoteElements_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEmptySpacesWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEmptySpacesWithEscapedSingleQuoteElements_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEmptySpacesWithEscapedSingleQuoteElements_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlus

# Run progress: 20.18% complete, ETA 00:05:41
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlus(StubsPortalTest.java:910)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlus_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlus_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlus_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlus_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlus_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlus_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 20.26% complete, ETA 00:05:41
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlus(StubsPortalTest.java:910)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlus_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlus_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlus_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlus_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlus_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlus_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlusWithEscapedSingleQuoteElements

# Run progress: 20.33% complete, ETA 00:05:40
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlusWithEscapedSingleQuoteElements(StubsPortalTest.java:916)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlusWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlusWithEscapedSingleQuoteElements_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlusWithEscapedSingleQuoteElements_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlusWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlusWithEscapedSingleQuoteElements_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlusWithEscapedSingleQuoteElements_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 20.41% complete, ETA 00:05:40
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlusWithEscapedSingleQuoteElements(StubsPortalTest.java:916)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlusWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlusWithEscapedSingleQuoteElements_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlusWithEscapedSingleQuoteElements_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlusWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlusWithEscapedSingleQuoteElements_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedPlusWithEscapedSingleQuoteElements_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedSpacesWithEscapedSingleQuoteElements

# Run progress: 20.48% complete, ETA 00:05:40
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedSpacesWithEscapedSingleQuoteElements(StubsPortalTest.java:934)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedSpacesWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedSpacesWithEscapedSingleQuoteElements_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedSpacesWithEscapedSingleQuoteElements_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedSpacesWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedSpacesWithEscapedSingleQuoteElements_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedSpacesWithEscapedSingleQuoteElements_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 20.56% complete, ETA 00:05:39
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedSpacesWithEscapedSingleQuoteElements(StubsPortalTest.java:934)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedSpacesWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedSpacesWithEscapedSingleQuoteElements_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedSpacesWithEscapedSingleQuoteElements_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedSpacesWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedSpacesWithEscapedSingleQuoteElements_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithEscapedSpacesWithEscapedSingleQuoteElements_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithRawPlusWithEscapedSingleQuoteElements

# Run progress: 20.63% complete, ETA 00:05:39
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithRawPlusWithEscapedSingleQuoteElements(StubsPortalTest.java:922)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithRawPlusWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithRawPlusWithEscapedSingleQuoteElements_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithRawPlusWithEscapedSingleQuoteElements_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithRawPlusWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithRawPlusWithEscapedSingleQuoteElements_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithRawPlusWithEscapedSingleQuoteElements_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 20.71% complete, ETA 00:05:39
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithRawPlusWithEscapedSingleQuoteElements(StubsPortalTest.java:922)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithRawPlusWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithRawPlusWithEscapedSingleQuoteElements_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithRawPlusWithEscapedSingleQuoteElements_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithRawPlusWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithRawPlusWithEscapedSingleQuoteElements_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamValueWithRawPlusWithEscapedSingleQuoteElements_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArray

# Run progress: 20.78% complete, ETA 00:05:38
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArray(StubsPortalTest.java:970)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArray_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArray_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArray_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArray_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArray_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArray_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 20.86% complete, ETA 00:05:38
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArray(StubsPortalTest.java:970)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArray_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArray_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArray_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArray_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArray_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArray_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedQuotedElements

# Run progress: 20.93% complete, ETA 00:05:38
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedQuotedElements(StubsPortalTest.java:964)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedQuotedElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedQuotedElements_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedQuotedElements_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedQuotedElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedQuotedElements_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedQuotedElements_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 21.01% complete, ETA 00:05:37
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedQuotedElements(StubsPortalTest.java:964)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedQuotedElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedQuotedElements_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedQuotedElements_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedQuotedElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedQuotedElements_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedQuotedElements_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedSingleQuoteElements

# Run progress: 21.08% complete, ETA 00:05:37
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedSingleQuoteElements(StubsPortalTest.java:904)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedSingleQuoteElements_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedSingleQuoteElements_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedSingleQuoteElements_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedSingleQuoteElements_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 21.16% complete, ETA 00:05:37
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedSingleQuoteElements(StubsPortalTest.java:904)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedSingleQuoteElements_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedSingleQuoteElements_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedSingleQuoteElements_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedSingleQuoteElements_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenQueryParamsAreAnArrayWithEscapedSingleQuoteElements_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_WhenStubbedJsonRegexMatchesComplexValidJsonPost

# Run progress: 21.23% complete, ETA 00:05:36
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenStubbedJsonRegexMatchesComplexValidJsonPost(StubsPortalTest.java:1132)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenStubbedJsonRegexMatchesComplexValidJsonPost_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenStubbedJsonRegexMatchesComplexValidJsonPost_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenStubbedJsonRegexMatchesComplexValidJsonPost_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenStubbedJsonRegexMatchesComplexValidJsonPost_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenStubbedJsonRegexMatchesComplexValidJsonPost_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenStubbedJsonRegexMatchesComplexValidJsonPost_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 21.31% complete, ETA 00:05:36
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenStubbedJsonRegexMatchesComplexValidJsonPost(StubsPortalTest.java:1132)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenStubbedJsonRegexMatchesComplexValidJsonPost_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenStubbedJsonRegexMatchesComplexValidJsonPost_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenStubbedJsonRegexMatchesComplexValidJsonPost_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenStubbedJsonRegexMatchesComplexValidJsonPost_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenStubbedJsonRegexMatchesComplexValidJsonPost_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenStubbedJsonRegexMatchesComplexValidJsonPost_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_WhenStubbedValidJsonMatchesComplexValidJsonPost

# Run progress: 21.39% complete, ETA 00:05:36
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenStubbedValidJsonMatchesComplexValidJsonPost(StubsPortalTest.java:1126)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenStubbedValidJsonMatchesComplexValidJsonPost_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenStubbedValidJsonMatchesComplexValidJsonPost_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenStubbedValidJsonMatchesComplexValidJsonPost_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenStubbedValidJsonMatchesComplexValidJsonPost_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenStubbedValidJsonMatchesComplexValidJsonPost_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenStubbedValidJsonMatchesComplexValidJsonPost_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 21.46% complete, ETA 00:05:35
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenStubbedValidJsonMatchesComplexValidJsonPost(StubsPortalTest.java:1126)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenStubbedValidJsonMatchesComplexValidJsonPost_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenStubbedValidJsonMatchesComplexValidJsonPost_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenStubbedValidJsonMatchesComplexValidJsonPost_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenStubbedValidJsonMatchesComplexValidJsonPost_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenStubbedValidJsonMatchesComplexValidJsonPost_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenStubbedValidJsonMatchesComplexValidJsonPost_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_WhenUrlAndQueryParamsAreRegexified

# Run progress: 21.54% complete, ETA 00:05:35
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenUrlAndQueryParamsAreRegexified(StubsPortalTest.java:940)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenUrlAndQueryParamsAreRegexified_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenUrlAndQueryParamsAreRegexified_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenUrlAndQueryParamsAreRegexified_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenUrlAndQueryParamsAreRegexified_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenUrlAndQueryParamsAreRegexified_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenUrlAndQueryParamsAreRegexified_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 21.61% complete, ETA 00:05:35
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenUrlAndQueryParamsAreRegexified(StubsPortalTest.java:940)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenUrlAndQueryParamsAreRegexified_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenUrlAndQueryParamsAreRegexified_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenUrlAndQueryParamsAreRegexified_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenUrlAndQueryParamsAreRegexified_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenUrlAndQueryParamsAreRegexified_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenUrlAndQueryParamsAreRegexified_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_MakeSuccessfulRequest_WhenUrlMatchingAndFilePathIsRegexified

# Run progress: 21.69% complete, ETA 00:05:34
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenUrlMatchingAndFilePathIsRegexified(StubsPortalTest.java:946)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenUrlMatchingAndFilePathIsRegexified_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenUrlMatchingAndFilePathIsRegexified_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenUrlMatchingAndFilePathIsRegexified_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenUrlMatchingAndFilePathIsRegexified_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenUrlMatchingAndFilePathIsRegexified_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenUrlMatchingAndFilePathIsRegexified_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 21.76% complete, ETA 00:05:34
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_MakeSuccessfulRequest_WhenUrlMatchingAndFilePathIsRegexified(StubsPortalTest.java:946)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenUrlMatchingAndFilePathIsRegexified_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenUrlMatchingAndFilePathIsRegexified_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenUrlMatchingAndFilePathIsRegexified_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenUrlMatchingAndFilePathIsRegexified_jmhTest.benchmark_should_MakeSuccessfulRequest_WhenUrlMatchingAndFilePathIsRegexified_AverageTime(StubsPortalTest__Benchmark_benchmark_should_MakeSuccessfulRequest_WhenUrlMatchingAndFilePathIsRegexified_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_NotMakeRedirectRequest_WhenLocationHeaderButStatusNot30x

# Run progress: 21.84% complete, ETA 00:05:34
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_NotMakeRedirectRequest_WhenLocationHeaderButStatusNot30x(StubsPortalTest.java:1186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_NotMakeRedirectRequest_WhenLocationHeaderButStatusNot30x_jmhTest.benchmark_should_NotMakeRedirectRequest_WhenLocationHeaderButStatusNot30x_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_NotMakeRedirectRequest_WhenLocationHeaderButStatusNot30x_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_NotMakeRedirectRequest_WhenLocationHeaderButStatusNot30x_jmhTest.benchmark_should_NotMakeRedirectRequest_WhenLocationHeaderButStatusNot30x_AverageTime(StubsPortalTest__Benchmark_benchmark_should_NotMakeRedirectRequest_WhenLocationHeaderButStatusNot30x_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 21.91% complete, ETA 00:05:33
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_NotMakeRedirectRequest_WhenLocationHeaderButStatusNot30x(StubsPortalTest.java:1186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_NotMakeRedirectRequest_WhenLocationHeaderButStatusNot30x_jmhTest.benchmark_should_NotMakeRedirectRequest_WhenLocationHeaderButStatusNot30x_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_NotMakeRedirectRequest_WhenLocationHeaderButStatusNot30x_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_NotMakeRedirectRequest_WhenLocationHeaderButStatusNot30x_jmhTest.benchmark_should_NotMakeRedirectRequest_WhenLocationHeaderButStatusNot30x_AverageTime(StubsPortalTest__Benchmark_benchmark_should_NotMakeRedirectRequest_WhenLocationHeaderButStatusNot30x_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_NotMatchRequest_WhenUrlNotMatchingAndFilePathIsRegexified

# Run progress: 21.99% complete, ETA 00:05:33
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_NotMatchRequest_WhenUrlNotMatchingAndFilePathIsRegexified(StubsPortalTest.java:952)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_NotMatchRequest_WhenUrlNotMatchingAndFilePathIsRegexified_jmhTest.benchmark_should_NotMatchRequest_WhenUrlNotMatchingAndFilePathIsRegexified_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_NotMatchRequest_WhenUrlNotMatchingAndFilePathIsRegexified_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_NotMatchRequest_WhenUrlNotMatchingAndFilePathIsRegexified_jmhTest.benchmark_should_NotMatchRequest_WhenUrlNotMatchingAndFilePathIsRegexified_AverageTime(StubsPortalTest__Benchmark_benchmark_should_NotMatchRequest_WhenUrlNotMatchingAndFilePathIsRegexified_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 22.06% complete, ETA 00:05:33
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_NotMatchRequest_WhenUrlNotMatchingAndFilePathIsRegexified(StubsPortalTest.java:952)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_NotMatchRequest_WhenUrlNotMatchingAndFilePathIsRegexified_jmhTest.benchmark_should_NotMatchRequest_WhenUrlNotMatchingAndFilePathIsRegexified_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_NotMatchRequest_WhenUrlNotMatchingAndFilePathIsRegexified_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_NotMatchRequest_WhenUrlNotMatchingAndFilePathIsRegexified_jmhTest.benchmark_should_NotMatchRequest_WhenUrlNotMatchingAndFilePathIsRegexified_AverageTime(StubsPortalTest__Benchmark_benchmark_should_NotMatchRequest_WhenUrlNotMatchingAndFilePathIsRegexified_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_NotReturnExpectedRecordedResponse_FromValidUrl_WhenQueryValueIncorrect

# Run progress: 22.14% complete, ETA 00:05:32
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_NotReturnExpectedRecordedResponse_FromValidUrl_WhenQueryValueIncorrect(StubsPortalTest.java:1228)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_NotReturnExpectedRecordedResponse_FromValidUrl_WhenQueryValueIncorrect_jmhTest.benchmark_should_NotReturnExpectedRecordedResponse_FromValidUrl_WhenQueryValueIncorrect_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_NotReturnExpectedRecordedResponse_FromValidUrl_WhenQueryValueIncorrect_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_NotReturnExpectedRecordedResponse_FromValidUrl_WhenQueryValueIncorrect_jmhTest.benchmark_should_NotReturnExpectedRecordedResponse_FromValidUrl_WhenQueryValueIncorrect_AverageTime(StubsPortalTest__Benchmark_benchmark_should_NotReturnExpectedRecordedResponse_FromValidUrl_WhenQueryValueIncorrect_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 22.21% complete, ETA 00:05:32
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_NotReturnExpectedRecordedResponse_FromValidUrl_WhenQueryValueIncorrect(StubsPortalTest.java:1228)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_NotReturnExpectedRecordedResponse_FromValidUrl_WhenQueryValueIncorrect_jmhTest.benchmark_should_NotReturnExpectedRecordedResponse_FromValidUrl_WhenQueryValueIncorrect_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_NotReturnExpectedRecordedResponse_FromValidUrl_WhenQueryValueIncorrect_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_NotReturnExpectedRecordedResponse_FromValidUrl_WhenQueryValueIncorrect_jmhTest.benchmark_should_NotReturnExpectedRecordedResponse_FromValidUrl_WhenQueryValueIncorrect_AverageTime(StubsPortalTest__Benchmark_benchmark_should_NotReturnExpectedRecordedResponse_FromValidUrl_WhenQueryValueIncorrect_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_ReactToPostRequest_WithoutPost_AndPostNotSupplied

# Run progress: 22.29% complete, ETA 00:05:32
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReactToPostRequest_WithoutPost_AndPostNotSupplied(StubsPortalTest.java:976)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReactToPostRequest_WithoutPost_AndPostNotSupplied_jmhTest.benchmark_should_ReactToPostRequest_WithoutPost_AndPostNotSupplied_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReactToPostRequest_WithoutPost_AndPostNotSupplied_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReactToPostRequest_WithoutPost_AndPostNotSupplied_jmhTest.benchmark_should_ReactToPostRequest_WithoutPost_AndPostNotSupplied_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReactToPostRequest_WithoutPost_AndPostNotSupplied_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 22.36% complete, ETA 00:05:32
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReactToPostRequest_WithoutPost_AndPostNotSupplied(StubsPortalTest.java:976)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReactToPostRequest_WithoutPost_AndPostNotSupplied_jmhTest.benchmark_should_ReactToPostRequest_WithoutPost_AndPostNotSupplied_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReactToPostRequest_WithoutPost_AndPostNotSupplied_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReactToPostRequest_WithoutPost_AndPostNotSupplied_jmhTest.benchmark_should_ReactToPostRequest_WithoutPost_AndPostNotSupplied_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReactToPostRequest_WithoutPost_AndPostNotSupplied_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_ReactToPostRequest_WithoutPost_AndPostSupplied

# Run progress: 22.44% complete, ETA 00:05:31
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReactToPostRequest_WithoutPost_AndPostSupplied(StubsPortalTest.java:982)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReactToPostRequest_WithoutPost_AndPostSupplied_jmhTest.benchmark_should_ReactToPostRequest_WithoutPost_AndPostSupplied_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReactToPostRequest_WithoutPost_AndPostSupplied_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReactToPostRequest_WithoutPost_AndPostSupplied_jmhTest.benchmark_should_ReactToPostRequest_WithoutPost_AndPostSupplied_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReactToPostRequest_WithoutPost_AndPostSupplied_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 22.52% complete, ETA 00:05:31
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReactToPostRequest_WithoutPost_AndPostSupplied(StubsPortalTest.java:982)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReactToPostRequest_WithoutPost_AndPostSupplied_jmhTest.benchmark_should_ReactToPostRequest_WithoutPost_AndPostSupplied_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReactToPostRequest_WithoutPost_AndPostSupplied_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReactToPostRequest_WithoutPost_AndPostSupplied_jmhTest.benchmark_should_ReactToPostRequest_WithoutPost_AndPostSupplied_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReactToPostRequest_WithoutPost_AndPostSupplied_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_ReturnAllProducts_WhenGetRequestMade

# Run progress: 22.59% complete, ETA 00:05:30
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnAllProducts_WhenGetRequestMade(StubsPortalTest.java:1012)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnAllProducts_WhenGetRequestMade_jmhTest.benchmark_should_ReturnAllProducts_WhenGetRequestMade_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnAllProducts_WhenGetRequestMade_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnAllProducts_WhenGetRequestMade_jmhTest.benchmark_should_ReturnAllProducts_WhenGetRequestMade_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnAllProducts_WhenGetRequestMade_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 22.67% complete, ETA 00:05:30
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnAllProducts_WhenGetRequestMade(StubsPortalTest.java:1012)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnAllProducts_WhenGetRequestMade_jmhTest.benchmark_should_ReturnAllProducts_WhenGetRequestMade_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnAllProducts_WhenGetRequestMade_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnAllProducts_WhenGetRequestMade_jmhTest.benchmark_should_ReturnAllProducts_WhenGetRequestMade_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnAllProducts_WhenGetRequestMade_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_ReturnAllProducts_WhenGetRequestMadeOverSsl

# Run progress: 22.74% complete, ETA 00:05:30
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnAllProducts_WhenGetRequestMadeOverSsl(StubsPortalTest.java:1024)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnAllProducts_WhenGetRequestMadeOverSsl_jmhTest.benchmark_should_ReturnAllProducts_WhenGetRequestMadeOverSsl_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnAllProducts_WhenGetRequestMadeOverSsl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnAllProducts_WhenGetRequestMadeOverSsl_jmhTest.benchmark_should_ReturnAllProducts_WhenGetRequestMadeOverSsl_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnAllProducts_WhenGetRequestMadeOverSsl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 22.82% complete, ETA 00:05:29
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnAllProducts_WhenGetRequestMadeOverSsl(StubsPortalTest.java:1024)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnAllProducts_WhenGetRequestMadeOverSsl_jmhTest.benchmark_should_ReturnAllProducts_WhenGetRequestMadeOverSsl_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnAllProducts_WhenGetRequestMadeOverSsl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnAllProducts_WhenGetRequestMadeOverSsl_jmhTest.benchmark_should_ReturnAllProducts_WhenGetRequestMadeOverSsl_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnAllProducts_WhenGetRequestMadeOverSsl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_ReturnExpectedRecordedResponseUsingActualQuery_FromAnotherValidUrl

# Run progress: 22.89% complete, ETA 00:05:29
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnExpectedRecordedResponseUsingActualQuery_FromAnotherValidUrl(StubsPortalTest.java:1222)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponseUsingActualQuery_FromAnotherValidUrl_jmhTest.benchmark_should_ReturnExpectedRecordedResponseUsingActualQuery_FromAnotherValidUrl_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponseUsingActualQuery_FromAnotherValidUrl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponseUsingActualQuery_FromAnotherValidUrl_jmhTest.benchmark_should_ReturnExpectedRecordedResponseUsingActualQuery_FromAnotherValidUrl_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponseUsingActualQuery_FromAnotherValidUrl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 22.97% complete, ETA 00:05:29
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnExpectedRecordedResponseUsingActualQuery_FromAnotherValidUrl(StubsPortalTest.java:1222)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponseUsingActualQuery_FromAnotherValidUrl_jmhTest.benchmark_should_ReturnExpectedRecordedResponseUsingActualQuery_FromAnotherValidUrl_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponseUsingActualQuery_FromAnotherValidUrl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponseUsingActualQuery_FromAnotherValidUrl_jmhTest.benchmark_should_ReturnExpectedRecordedResponseUsingActualQuery_FromAnotherValidUrl_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponseUsingActualQuery_FromAnotherValidUrl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_ReturnExpectedRecordedResponse_FromAnotherValidUrl

# Run progress: 23.04% complete, ETA 00:05:28
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnExpectedRecordedResponse_FromAnotherValidUrl(StubsPortalTest.java:1216)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponse_FromAnotherValidUrl_jmhTest.benchmark_should_ReturnExpectedRecordedResponse_FromAnotherValidUrl_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponse_FromAnotherValidUrl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponse_FromAnotherValidUrl_jmhTest.benchmark_should_ReturnExpectedRecordedResponse_FromAnotherValidUrl_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponse_FromAnotherValidUrl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 23.12% complete, ETA 00:05:28
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnExpectedRecordedResponse_FromAnotherValidUrl(StubsPortalTest.java:1216)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponse_FromAnotherValidUrl_jmhTest.benchmark_should_ReturnExpectedRecordedResponse_FromAnotherValidUrl_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponse_FromAnotherValidUrl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponse_FromAnotherValidUrl_jmhTest.benchmark_should_ReturnExpectedRecordedResponse_FromAnotherValidUrl_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponse_FromAnotherValidUrl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_ReturnExpectedRecordedResponse_OnSubsequentCallToValidUrl

# Run progress: 23.19% complete, ETA 00:05:28
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnExpectedRecordedResponse_OnSubsequentCallToValidUrl(StubsPortalTest.java:1234)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponse_OnSubsequentCallToValidUrl_jmhTest.benchmark_should_ReturnExpectedRecordedResponse_OnSubsequentCallToValidUrl_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponse_OnSubsequentCallToValidUrl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponse_OnSubsequentCallToValidUrl_jmhTest.benchmark_should_ReturnExpectedRecordedResponse_OnSubsequentCallToValidUrl_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponse_OnSubsequentCallToValidUrl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 23.27% complete, ETA 00:05:27
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnExpectedRecordedResponse_OnSubsequentCallToValidUrl(StubsPortalTest.java:1234)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponse_OnSubsequentCallToValidUrl_jmhTest.benchmark_should_ReturnExpectedRecordedResponse_OnSubsequentCallToValidUrl_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponse_OnSubsequentCallToValidUrl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponse_OnSubsequentCallToValidUrl_jmhTest.benchmark_should_ReturnExpectedRecordedResponse_OnSubsequentCallToValidUrl_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedRecordedResponse_OnSubsequentCallToValidUrl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_ReturnExpectedResourceIdHeader_WhenSuccessfulRequestMade

# Run progress: 23.34% complete, ETA 00:05:27
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnExpectedResourceIdHeader_WhenSuccessfulRequestMade(StubsPortalTest.java:1138)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedResourceIdHeader_WhenSuccessfulRequestMade_jmhTest.benchmark_should_ReturnExpectedResourceIdHeader_WhenSuccessfulRequestMade_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedResourceIdHeader_WhenSuccessfulRequestMade_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedResourceIdHeader_WhenSuccessfulRequestMade_jmhTest.benchmark_should_ReturnExpectedResourceIdHeader_WhenSuccessfulRequestMade_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedResourceIdHeader_WhenSuccessfulRequestMade_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 23.42% complete, ETA 00:05:27
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnExpectedResourceIdHeader_WhenSuccessfulRequestMade(StubsPortalTest.java:1138)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedResourceIdHeader_WhenSuccessfulRequestMade_jmhTest.benchmark_should_ReturnExpectedResourceIdHeader_WhenSuccessfulRequestMade_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedResourceIdHeader_WhenSuccessfulRequestMade_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedResourceIdHeader_WhenSuccessfulRequestMade_jmhTest.benchmark_should_ReturnExpectedResourceIdHeader_WhenSuccessfulRequestMade_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnExpectedResourceIdHeader_WhenSuccessfulRequestMade_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_ReturnPDF_WhenGetRequestMade

# Run progress: 23.49% complete, ETA 00:05:27
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnPDF_WhenGetRequestMade(StubsPortalTest.java:1006)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnPDF_WhenGetRequestMade_jmhTest.benchmark_should_ReturnPDF_WhenGetRequestMade_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnPDF_WhenGetRequestMade_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnPDF_WhenGetRequestMade_jmhTest.benchmark_should_ReturnPDF_WhenGetRequestMade_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnPDF_WhenGetRequestMade_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 23.57% complete, ETA 00:05:26
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnPDF_WhenGetRequestMade(StubsPortalTest.java:1006)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnPDF_WhenGetRequestMade_jmhTest.benchmark_should_ReturnPDF_WhenGetRequestMade_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnPDF_WhenGetRequestMade_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnPDF_WhenGetRequestMade_jmhTest.benchmark_should_ReturnPDF_WhenGetRequestMade_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnPDF_WhenGetRequestMade_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupHasSubgroups

# Run progress: 23.64% complete, ETA 00:05:26
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupHasSubgroups(StubsPortalTest.java:1168)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupHasSubgroups_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupHasSubgroups_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupHasSubgroups_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupHasSubgroups_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupHasSubgroups_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupHasSubgroups_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 23.72% complete, ETA 00:05:25
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupHasSubgroups(StubsPortalTest.java:1168)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupHasSubgroups_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupHasSubgroups_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupHasSubgroups_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupHasSubgroups_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupHasSubgroups_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupHasSubgroups_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsEqualToNumberOfTokens

# Run progress: 23.80% complete, ETA 00:05:25
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsEqualToNumberOfTokens(StubsPortalTest.java:1144)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsEqualToNumberOfTokens_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsEqualToNumberOfTokens_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsEqualToNumberOfTokens_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsEqualToNumberOfTokens_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsEqualToNumberOfTokens_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsEqualToNumberOfTokens_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 23.87% complete, ETA 00:05:25
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsEqualToNumberOfTokens(StubsPortalTest.java:1144)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsEqualToNumberOfTokens_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsEqualToNumberOfTokens_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsEqualToNumberOfTokens_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsEqualToNumberOfTokens_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsEqualToNumberOfTokens_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsEqualToNumberOfTokens_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsNotEqualsToNumberOfTokens

# Run progress: 23.95% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsNotEqualsToNumberOfTokens(StubsPortalTest.java:1156)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsNotEqualsToNumberOfTokens_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsNotEqualsToNumberOfTokens_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsNotEqualsToNumberOfTokens_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsNotEqualsToNumberOfTokens_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsNotEqualsToNumberOfTokens_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsNotEqualsToNumberOfTokens_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 24.02% complete, ETA 00:05:24
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsNotEqualsToNumberOfTokens(StubsPortalTest.java:1156)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsNotEqualsToNumberOfTokens_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsNotEqualsToNumberOfTokens_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsNotEqualsToNumberOfTokens_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsNotEqualsToNumberOfTokens_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsNotEqualsToNumberOfTokens_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenCapturingGroupsNotEqualsToNumberOfTokens_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_ReturnReplacedTokenizedResponse_WhenFullMatchCapturingGroupsAreUsed

# Run progress: 24.10% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnReplacedTokenizedResponse_WhenFullMatchCapturingGroupsAreUsed(StubsPortalTest.java:1162)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenFullMatchCapturingGroupsAreUsed_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenFullMatchCapturingGroupsAreUsed_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenFullMatchCapturingGroupsAreUsed_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenFullMatchCapturingGroupsAreUsed_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenFullMatchCapturingGroupsAreUsed_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenFullMatchCapturingGroupsAreUsed_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 24.17% complete, ETA 00:05:24
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnReplacedTokenizedResponse_WhenFullMatchCapturingGroupsAreUsed(StubsPortalTest.java:1162)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenFullMatchCapturingGroupsAreUsed_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenFullMatchCapturingGroupsAreUsed_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenFullMatchCapturingGroupsAreUsed_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenFullMatchCapturingGroupsAreUsed_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenFullMatchCapturingGroupsAreUsed_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenFullMatchCapturingGroupsAreUsed_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_ReturnReplacedTokenizedResponse_WhenUsingExternalFile

# Run progress: 24.25% complete, ETA 00:05:23
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnReplacedTokenizedResponse_WhenUsingExternalFile(StubsPortalTest.java:1150)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenUsingExternalFile_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenUsingExternalFile_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenUsingExternalFile_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenUsingExternalFile_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenUsingExternalFile_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenUsingExternalFile_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 24.32% complete, ETA 00:05:23
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_ReturnReplacedTokenizedResponse_WhenUsingExternalFile(StubsPortalTest.java:1150)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenUsingExternalFile_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenUsingExternalFile_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenUsingExternalFile_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenUsingExternalFile_jmhTest.benchmark_should_ReturnReplacedTokenizedResponse_WhenUsingExternalFile_AverageTime(StubsPortalTest__Benchmark_benchmark_should_ReturnReplacedTokenizedResponse_WhenUsingExternalFile_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_UpdateProduct_WhenPutRequestMade

# Run progress: 24.40% complete, ETA 00:05:23
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_UpdateProduct_WhenPutRequestMade(StubsPortalTest.java:1036)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMade_jmhTest.benchmark_should_UpdateProduct_WhenPutRequestMade_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMade_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMade_jmhTest.benchmark_should_UpdateProduct_WhenPutRequestMade_AverageTime(StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMade_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 24.47% complete, ETA 00:05:22
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_UpdateProduct_WhenPutRequestMade(StubsPortalTest.java:1036)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMade_jmhTest.benchmark_should_UpdateProduct_WhenPutRequestMade_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMade_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMade_jmhTest.benchmark_should_UpdateProduct_WhenPutRequestMade_AverageTime(StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMade_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_UpdateProduct_WhenPutRequestMadeOverSsl

# Run progress: 24.55% complete, ETA 00:05:22
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_UpdateProduct_WhenPutRequestMadeOverSsl(StubsPortalTest.java:1042)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeOverSsl_jmhTest.benchmark_should_UpdateProduct_WhenPutRequestMadeOverSsl_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeOverSsl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeOverSsl_jmhTest.benchmark_should_UpdateProduct_WhenPutRequestMadeOverSsl_AverageTime(StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeOverSsl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 24.62% complete, ETA 00:05:22
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_UpdateProduct_WhenPutRequestMadeOverSsl(StubsPortalTest.java:1042)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeOverSsl_jmhTest.benchmark_should_UpdateProduct_WhenPutRequestMadeOverSsl_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeOverSsl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeOverSsl_jmhTest.benchmark_should_UpdateProduct_WhenPutRequestMadeOverSsl_AverageTime(StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeOverSsl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPost

# Run progress: 24.70% complete, ETA 00:05:21
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPost(StubsPortalTest.java:1048)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPost_jmhTest.benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPost_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPost_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPost_jmhTest.benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPost_AverageTime(StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPost_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 24.77% complete, ETA 00:05:21
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPost(StubsPortalTest.java:1048)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPost_jmhTest.benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPost_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPost_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPost_jmhTest.benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPost_AverageTime(StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPost_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.StubsPortalTest._Benchmark.benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPostOverSsl

# Run progress: 24.85% complete, ETA 00:05:21
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPostOverSsl(StubsPortalTest.java:1054)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPostOverSsl_jmhTest.benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPostOverSsl_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPostOverSsl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPostOverSsl_jmhTest.benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPostOverSsl_AverageTime(StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPostOverSsl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 24.92% complete, ETA 00:05:20
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.openStream()" because "url" is null
	at io.github.azagniotov.stubby4j.StubsPortalTest.beforeClass(StubsPortalTest.java:62)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.beforeClass(StubsPortalTest.java:1240)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.StubsPortalTest$_Benchmark.benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPostOverSsl(StubsPortalTest.java:1054)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPostOverSsl_jmhTest.benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPostOverSsl_avgt_jmhStub(StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPostOverSsl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.jmh_generated.StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPostOverSsl_jmhTest.benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPostOverSsl_AverageTime(StubsPortalTest__Benchmark_benchmark_should_UpdateProduct_WhenPutRequestMadeWithWrongPostOverSsl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.caching.CacheTest._Benchmark.benchmark_shouldBuildDefaultCache

# Run progress: 25.00% complete, ETA 00:05:20
# Fork: 1 of 2
# Warmup Iteration   1: 4835793.251 ns/op
# Warmup Iteration   2: 2199796.778 ns/op
# Warmup Iteration   3: 1720461.203 ns/op
# Warmup Iteration   4: 1298130.039 ns/op
# Warmup Iteration   5: 1350171.656 ns/op
# Warmup Iteration   6: 1061947.462 ns/op
# Warmup Iteration   7: 881497.786 ns/op
# Warmup Iteration   8: 966833.588 ns/op
# Warmup Iteration   9: 798851.800 ns/op
# Warmup Iteration  10: 919700.313 ns/op
Iteration   1: 822413.119 ns/op
Iteration   2: 837801.384 ns/op
Iteration   3: 754098.215 ns/op
Iteration   4: 793923.418 ns/op
Iteration   5: 740996.637 ns/op
Iteration   6: 701818.520 ns/op
Iteration   7: 698955.430 ns/op
Iteration   8: 759533.254 ns/op
Iteration   9: 781421.773 ns/op
Iteration  10: 665991.358 ns/op
Iteration  11: 654675.291 ns/op
Iteration  12: 643379.085 ns/op
Iteration  13: 649516.062 ns/op
Iteration  14: 650733.830 ns/op
Iteration  15: 648745.981 ns/op
Iteration  16: 663314.252 ns/op
Iteration  17: 660908.906 ns/op
Iteration  18: 652246.316 ns/op
Iteration  19: 649258.099 ns/op
Iteration  20: 656313.479 ns/op

# Run progress: 25.08% complete, ETA 00:06:50
# Fork: 2 of 2
# Warmup Iteration   1: 4795156.593 ns/op
# Warmup Iteration   2: 1955399.790 ns/op
# Warmup Iteration   3: 1540483.598 ns/op
# Warmup Iteration   4: 1431413.482 ns/op
# Warmup Iteration   5: 1279107.761 ns/op
# Warmup Iteration   6: 1147605.120 ns/op
# Warmup Iteration   7: 885807.618 ns/op
# Warmup Iteration   8: 906352.991 ns/op
# Warmup Iteration   9: 894759.239 ns/op
# Warmup Iteration  10: 856223.629 ns/op
Iteration   1: 800924.047 ns/op
Iteration   2: 728264.939 ns/op
Iteration   3: 833882.888 ns/op
Iteration   4: 723971.314 ns/op
Iteration   5: 716117.247 ns/op
Iteration   6: 675360.785 ns/op
Iteration   7: 744141.857 ns/op
Iteration   8: 656200.415 ns/op
Iteration   9: 884669.905 ns/op
Iteration  10: 625931.163 ns/op
Iteration  11: 635969.359 ns/op
Iteration  12: 644530.644 ns/op
Iteration  13: 629160.150 ns/op
Iteration  14: 632347.091 ns/op
Iteration  15: 625949.671 ns/op
Iteration  16: 634224.221 ns/op
Iteration  17: 623050.412 ns/op
Iteration  18: 641728.648 ns/op
Iteration  19: 630967.750 ns/op
Iteration  20: 643166.284 ns/op


Result "io.github.azagniotov.stubby4j.caching.CacheTest._Benchmark.benchmark_shouldBuildDefaultCache":
  695415.080 ±(99.9%) 40095.808 ns/op [Average]
  (min, avg, max) = (623050.412, 695415.080, 884669.905), stdev = 71270.263
  CI (99.9%): [655319.272, 735510.888] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.caching.CacheTest._Benchmark.benchmark_shouldBuildNoOpCache

# Run progress: 25.15% complete, ETA 00:08:18
# Fork: 1 of 2
# Warmup Iteration   1: 569.995 ns/op
# Warmup Iteration   2: 323.335 ns/op
# Warmup Iteration   3: 304.222 ns/op
# Warmup Iteration   4: 302.591 ns/op
# Warmup Iteration   5: 302.658 ns/op
# Warmup Iteration   6: 303.328 ns/op
# Warmup Iteration   7: 304.879 ns/op
# Warmup Iteration   8: 304.617 ns/op
# Warmup Iteration   9: 301.370 ns/op
# Warmup Iteration  10: 302.454 ns/op
Iteration   1: 304.214 ns/op
Iteration   2: 302.897 ns/op
Iteration   3: 303.670 ns/op
Iteration   4: 303.052 ns/op
Iteration   5: 303.705 ns/op
Iteration   6: 302.835 ns/op
Iteration   7: 303.181 ns/op
Iteration   8: 304.418 ns/op
Iteration   9: 303.550 ns/op
Iteration  10: 302.950 ns/op
Iteration  11: 302.969 ns/op
Iteration  12: 303.534 ns/op
Iteration  13: 302.404 ns/op
Iteration  14: 304.339 ns/op
Iteration  15: 304.032 ns/op
Iteration  16: 302.501 ns/op
Iteration  17: 301.987 ns/op
Iteration  18: 303.494 ns/op
Iteration  19: 303.972 ns/op
Iteration  20: 302.504 ns/op

# Run progress: 25.23% complete, ETA 00:09:46
# Fork: 2 of 2
# Warmup Iteration   1: 603.608 ns/op
# Warmup Iteration   2: 329.727 ns/op
# Warmup Iteration   3: 302.147 ns/op
# Warmup Iteration   4: 303.774 ns/op
# Warmup Iteration   5: 304.349 ns/op
# Warmup Iteration   6: 302.146 ns/op
# Warmup Iteration   7: 302.495 ns/op
# Warmup Iteration   8: 300.028 ns/op
# Warmup Iteration   9: 302.048 ns/op
# Warmup Iteration  10: 301.042 ns/op
Iteration   1: 301.952 ns/op
Iteration   2: 302.258 ns/op
Iteration   3: 300.693 ns/op
Iteration   4: 300.399 ns/op
Iteration   5: 305.363 ns/op
Iteration   6: 302.342 ns/op
Iteration   7: 300.989 ns/op
Iteration   8: 299.982 ns/op
Iteration   9: 301.440 ns/op
Iteration  10: 301.090 ns/op
Iteration  11: 303.075 ns/op
Iteration  12: 300.922 ns/op
Iteration  13: 300.568 ns/op
Iteration  14: 302.273 ns/op
Iteration  15: 301.748 ns/op
Iteration  16: 300.551 ns/op
Iteration  17: 302.379 ns/op
Iteration  18: 301.561 ns/op
Iteration  19: 301.057 ns/op
Iteration  20: 302.335 ns/op


Result "io.github.azagniotov.stubby4j.caching.CacheTest._Benchmark.benchmark_shouldBuildNoOpCache":
  302.480 ±(99.9%) 0.722 ns/op [Average]
  (min, avg, max) = (299.982, 302.480, 305.363), stdev = 1.283
  CI (99.9%): [301.758, 303.201] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.caching.CacheTest._Benchmark.benchmark_shouldClearCacheByKey

# Run progress: 25.30% complete, ETA 00:11:14
# Fork: 1 of 2
# Warmup Iteration   1: 5114923.214 ns/op
# Warmup Iteration   2: 2722979.851 ns/op
# Warmup Iteration   3: 1753370.653 ns/op
# Warmup Iteration   4: 1423607.723 ns/op
# Warmup Iteration   5: 1416710.975 ns/op
# Warmup Iteration   6: 1129322.038 ns/op
# Warmup Iteration   7: 940294.081 ns/op
# Warmup Iteration   8: 949605.854 ns/op
# Warmup Iteration   9: 962590.828 ns/op
# Warmup Iteration  10: 830346.978 ns/op
Iteration   1: 927030.670 ns/op
Iteration   2: 820034.588 ns/op
Iteration   3: 890895.181 ns/op
Iteration   4: 763601.567 ns/op
Iteration   5: 753645.158 ns/op
Iteration   6: 748056.997 ns/op
Iteration   7: 765495.286 ns/op
Iteration   8: 773859.412 ns/op
Iteration   9: 722461.824 ns/op
Iteration  10: 682135.078 ns/op
Iteration  11: 686725.388 ns/op
Iteration  12: 682708.522 ns/op
Iteration  13: 684913.559 ns/op
Iteration  14: 675187.671 ns/op
Iteration  15: 680043.184 ns/op
Iteration  16: 679630.209 ns/op
Iteration  17: 698375.458 ns/op
Iteration  18: 675557.882 ns/op
Iteration  19: 679716.082 ns/op
Iteration  20: 671985.429 ns/op

# Run progress: 25.38% complete, ETA 00:12:40
# Fork: 2 of 2
# Warmup Iteration   1: 5965610.631 ns/op
# Warmup Iteration   2: 1946820.237 ns/op
# Warmup Iteration   3: 1670575.649 ns/op
# Warmup Iteration   4: 1312611.182 ns/op
# Warmup Iteration   5: 1281694.111 ns/op
# Warmup Iteration   6: 970310.450 ns/op
# Warmup Iteration   7: 831822.751 ns/op
# Warmup Iteration   8: 1077127.306 ns/op
# Warmup Iteration   9: 876126.116 ns/op
# Warmup Iteration  10: 853070.215 ns/op
Iteration   1: 945352.497 ns/op
Iteration   2: 771850.944 ns/op
Iteration   3: 735670.425 ns/op
Iteration   4: 776586.423 ns/op
Iteration   5: 752602.282 ns/op
Iteration   6: 794704.940 ns/op
Iteration   7: 726355.868 ns/op
Iteration   8: 743411.429 ns/op
Iteration   9: 704442.607 ns/op
Iteration  10: 812870.223 ns/op
Iteration  11: 680823.012 ns/op
Iteration  12: 670045.164 ns/op
Iteration  13: 677845.211 ns/op
Iteration  14: 671835.359 ns/op
Iteration  15: 672053.571 ns/op
Iteration  16: 660908.036 ns/op
Iteration  17: 681990.170 ns/op
Iteration  18: 666083.637 ns/op
Iteration  19: 675213.467 ns/op
Iteration  20: 671632.807 ns/op


Result "io.github.azagniotov.stubby4j.caching.CacheTest._Benchmark.benchmark_shouldClearCacheByKey":
  728858.430 ±(99.9%) 40301.245 ns/op [Average]
  (min, avg, max) = (660908.036, 728858.430, 945352.497), stdev = 71635.427
  CI (99.9%): [688557.186, 769159.675] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.caching.CacheTest._Benchmark.benchmark_shouldNotClearCacheByKey

# Run progress: 25.45% complete, ETA 00:14:06
# Fork: 1 of 2
# Warmup Iteration   1: 6509226.558 ns/op
# Warmup Iteration   2: 2788268.550 ns/op
# Warmup Iteration   3: 1575002.465 ns/op
# Warmup Iteration   4: 1456077.387 ns/op
# Warmup Iteration   5: 1454808.485 ns/op
# Warmup Iteration   6: 1279394.680 ns/op
# Warmup Iteration   7: 1144599.252 ns/op
# Warmup Iteration   8: 877101.224 ns/op
# Warmup Iteration   9: 1118296.892 ns/op
# Warmup Iteration  10: 855041.144 ns/op
Iteration   1: 819714.215 ns/op
Iteration   2: 757302.011 ns/op
Iteration   3: 774920.477 ns/op
Iteration   4: 780479.090 ns/op
Iteration   5: 688404.626 ns/op
Iteration   6: 711650.720 ns/op
Iteration   7: 769974.993 ns/op
Iteration   8: 682478.184 ns/op
Iteration   9: 690843.709 ns/op
Iteration  10: 753130.148 ns/op
Iteration  11: 698184.724 ns/op
Iteration  12: 637046.310 ns/op
Iteration  13: 642207.507 ns/op
Iteration  14: 642820.013 ns/op
Iteration  15: 630348.836 ns/op
Iteration  16: 628963.293 ns/op
Iteration  17: 675878.824 ns/op
Iteration  18: 633839.682 ns/op
Iteration  19: 650759.314 ns/op
Iteration  20: 666543.257 ns/op

# Run progress: 25.53% complete, ETA 00:15:32
# Fork: 2 of 2
# Warmup Iteration   1: 6715660.557 ns/op
# Warmup Iteration   2: 2269302.124 ns/op
# Warmup Iteration   3: 1626360.188 ns/op
# Warmup Iteration   4: 1328196.874 ns/op
# Warmup Iteration   5: 1229438.486 ns/op
# Warmup Iteration   6: 1008919.765 ns/op
# Warmup Iteration   7: 847062.784 ns/op
# Warmup Iteration   8: 995573.591 ns/op
# Warmup Iteration   9: 827263.772 ns/op
# Warmup Iteration  10: 1025890.254 ns/op
Iteration   1: 833646.256 ns/op
Iteration   2: 759814.622 ns/op
Iteration   3: 719424.061 ns/op
Iteration   4: 731408.262 ns/op
Iteration   5: 742212.264 ns/op
Iteration   6: 717641.601 ns/op
Iteration   7: 684465.142 ns/op
Iteration   8: 695275.348 ns/op
Iteration   9: 795534.129 ns/op
Iteration  10: 641418.576 ns/op
Iteration  11: 644551.152 ns/op
Iteration  12: 629856.972 ns/op
Iteration  13: 640098.724 ns/op
Iteration  14: 636903.475 ns/op
Iteration  15: 630324.078 ns/op
Iteration  16: 636860.560 ns/op
Iteration  17: 633301.550 ns/op
Iteration  18: 640858.666 ns/op
Iteration  19: 638617.578 ns/op
Iteration  20: 643667.310 ns/op


Result "io.github.azagniotov.stubby4j.caching.CacheTest._Benchmark.benchmark_shouldNotClearCacheByKey":
  690784.257 ±(99.9%) 33788.412 ns/op [Average]
  (min, avg, max) = (628963.293, 690784.257, 833646.256), stdev = 60058.873
  CI (99.9%): [656995.845, 724572.668] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.caching.NoOpStubHttpLifecycleCacheTest._Benchmark.benchmark_cache

# Run progress: 25.60% complete, ETA 00:16:56
# Fork: 1 of 2
# Warmup Iteration   1: 2519.976 ns/op
# Warmup Iteration   2: 1801.284 ns/op
# Warmup Iteration   3: 1769.589 ns/op
# Warmup Iteration   4: 1752.118 ns/op
# Warmup Iteration   5: 1752.443 ns/op
# Warmup Iteration   6: 1751.322 ns/op
# Warmup Iteration   7: 1762.058 ns/op
# Warmup Iteration   8: 1750.662 ns/op
# Warmup Iteration   9: 1770.223 ns/op
# Warmup Iteration  10: 1756.633 ns/op
Iteration   1: 1765.014 ns/op
Iteration   2: 1754.753 ns/op
Iteration   3: 1754.493 ns/op
Iteration   4: 1749.744 ns/op
Iteration   5: 1750.179 ns/op
Iteration   6: 1753.967 ns/op
Iteration   7: 1684.453 ns/op
Iteration   8: 1694.210 ns/op
Iteration   9: 1689.368 ns/op
Iteration  10: 1698.436 ns/op
Iteration  11: 1696.042 ns/op
Iteration  12: 1695.586 ns/op
Iteration  13: 1693.530 ns/op
Iteration  14: 1687.263 ns/op
Iteration  15: 1691.017 ns/op
Iteration  16: 1695.156 ns/op
Iteration  17: 1700.939 ns/op
Iteration  18: 1690.340 ns/op
Iteration  19: 1703.733 ns/op
Iteration  20: 1693.364 ns/op

# Run progress: 25.68% complete, ETA 00:18:20
# Fork: 2 of 2
# Warmup Iteration   1: 2494.707 ns/op
# Warmup Iteration   2: 1771.517 ns/op
# Warmup Iteration   3: 1724.902 ns/op
# Warmup Iteration   4: 1716.099 ns/op
# Warmup Iteration   5: 1714.945 ns/op
# Warmup Iteration   6: 1720.101 ns/op
# Warmup Iteration   7: 1712.727 ns/op
# Warmup Iteration   8: 1717.600 ns/op
# Warmup Iteration   9: 1719.420 ns/op
# Warmup Iteration  10: 1710.913 ns/op
Iteration   1: 1720.657 ns/op
Iteration   2: 1709.735 ns/op
Iteration   3: 1717.184 ns/op
Iteration   4: 1711.430 ns/op
Iteration   5: 1721.868 ns/op
Iteration   6: 1716.037 ns/op
Iteration   7: 1658.294 ns/op
Iteration   8: 1658.780 ns/op
Iteration   9: 1662.434 ns/op
Iteration  10: 1656.927 ns/op
Iteration  11: 1658.962 ns/op
Iteration  12: 1656.802 ns/op
Iteration  13: 1655.269 ns/op
Iteration  14: 1661.050 ns/op
Iteration  15: 1655.353 ns/op
Iteration  16: 1660.416 ns/op
Iteration  17: 1646.846 ns/op
Iteration  18: 1651.148 ns/op
Iteration  19: 1665.391 ns/op
Iteration  20: 1651.477 ns/op


Result "io.github.azagniotov.stubby4j.caching.NoOpStubHttpLifecycleCacheTest._Benchmark.benchmark_cache":
  1693.441 ±(99.9%) 19.120 ns/op [Average]
  (min, avg, max) = (1646.846, 1693.441, 1765.014), stdev = 33.985
  CI (99.9%): [1674.321, 1712.561] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.caching.NoOpStubHttpLifecycleCacheTest._Benchmark.benchmark_clearByKey

# Run progress: 25.75% complete, ETA 00:19:43
# Fork: 1 of 2
# Warmup Iteration   1: 1542.687 ns/op
# Warmup Iteration   2: 512.180 ns/op
# Warmup Iteration   3: 478.546 ns/op
# Warmup Iteration   4: 480.106 ns/op
# Warmup Iteration   5: 473.362 ns/op
# Warmup Iteration   6: 476.445 ns/op
# Warmup Iteration   7: 479.291 ns/op
# Warmup Iteration   8: 473.945 ns/op
# Warmup Iteration   9: 473.104 ns/op
# Warmup Iteration  10: 474.804 ns/op
Iteration   1: 478.356 ns/op
Iteration   2: 476.162 ns/op
Iteration   3: 477.786 ns/op
Iteration   4: 477.449 ns/op
Iteration   5: 478.883 ns/op
Iteration   6: 477.639 ns/op
Iteration   7: 479.021 ns/op
Iteration   8: 477.695 ns/op
Iteration   9: 478.750 ns/op
Iteration  10: 476.204 ns/op
Iteration  11: 478.053 ns/op
Iteration  12: 475.197 ns/op
Iteration  13: 477.267 ns/op
Iteration  14: 475.424 ns/op
Iteration  15: 477.757 ns/op
Iteration  16: 475.354 ns/op
Iteration  17: 472.356 ns/op
Iteration  18: 477.881 ns/op
Iteration  19: 475.446 ns/op
Iteration  20: 479.009 ns/op

# Run progress: 25.83% complete, ETA 00:21:06
# Fork: 2 of 2
# Warmup Iteration   1: 1867.475 ns/op
# Warmup Iteration   2: 540.638 ns/op
# Warmup Iteration   3: 487.332 ns/op
# Warmup Iteration   4: 484.125 ns/op
# Warmup Iteration   5: 487.856 ns/op
# Warmup Iteration   6: 487.865 ns/op
# Warmup Iteration   7: 486.074 ns/op
# Warmup Iteration   8: 486.981 ns/op
# Warmup Iteration   9: 486.140 ns/op
# Warmup Iteration  10: 485.019 ns/op
Iteration   1: 486.053 ns/op
Iteration   2: 486.704 ns/op
Iteration   3: 489.303 ns/op
Iteration   4: 487.997 ns/op
Iteration   5: 487.740 ns/op
Iteration   6: 481.922 ns/op
Iteration   7: 484.747 ns/op
Iteration   8: 488.663 ns/op
Iteration   9: 484.491 ns/op
Iteration  10: 487.875 ns/op
Iteration  11: 484.721 ns/op
Iteration  12: 487.637 ns/op
Iteration  13: 490.598 ns/op
Iteration  14: 488.418 ns/op
Iteration  15: 486.144 ns/op
Iteration  16: 487.988 ns/op
Iteration  17: 484.510 ns/op
Iteration  18: 490.238 ns/op
Iteration  19: 489.462 ns/op
Iteration  20: 487.730 ns/op


Result "io.github.azagniotov.stubby4j.caching.NoOpStubHttpLifecycleCacheTest._Benchmark.benchmark_clearByKey":
  482.116 ±(99.9%) 3.069 ns/op [Average]
  (min, avg, max) = (472.356, 482.116, 490.598), stdev = 5.455
  CI (99.9%): [479.047, 485.185] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.caching.NoOpStubHttpLifecycleCacheTest._Benchmark.benchmark_putIfAbsentAndGet

# Run progress: 25.90% complete, ETA 00:22:28
# Fork: 1 of 2
# Warmup Iteration   1: 1915.074 ns/op
# Warmup Iteration   2: 556.841 ns/op
# Warmup Iteration   3: 499.567 ns/op
# Warmup Iteration   4: 498.781 ns/op
# Warmup Iteration   5: 501.064 ns/op
# Warmup Iteration   6: 496.445 ns/op
# Warmup Iteration   7: 499.107 ns/op
# Warmup Iteration   8: 497.360 ns/op
# Warmup Iteration   9: 497.426 ns/op
# Warmup Iteration  10: 498.408 ns/op
Iteration   1: 496.928 ns/op
Iteration   2: 499.909 ns/op
Iteration   3: 495.992 ns/op
Iteration   4: 496.977 ns/op
Iteration   5: 495.027 ns/op
Iteration   6: 495.921 ns/op
Iteration   7: 499.864 ns/op
Iteration   8: 494.774 ns/op
Iteration   9: 497.515 ns/op
Iteration  10: 495.873 ns/op
Iteration  11: 496.331 ns/op
Iteration  12: 495.938 ns/op
Iteration  13: 499.182 ns/op
Iteration  14: 499.463 ns/op
Iteration  15: 497.663 ns/op
Iteration  16: 497.618 ns/op
Iteration  17: 499.654 ns/op
Iteration  18: 497.741 ns/op
Iteration  19: 496.842 ns/op
Iteration  20: 498.244 ns/op

# Run progress: 25.98% complete, ETA 00:23:49
# Fork: 2 of 2
# Warmup Iteration   1: 1838.516 ns/op
# Warmup Iteration   2: 565.586 ns/op
# Warmup Iteration   3: 506.751 ns/op
# Warmup Iteration   4: 502.813 ns/op
# Warmup Iteration   5: 517.454 ns/op
# Warmup Iteration   6: 505.945 ns/op
# Warmup Iteration   7: 499.111 ns/op
# Warmup Iteration   8: 502.037 ns/op
# Warmup Iteration   9: 500.230 ns/op
# Warmup Iteration  10: 502.974 ns/op
Iteration   1: 502.690 ns/op
Iteration   2: 505.905 ns/op
Iteration   3: 504.719 ns/op
Iteration   4: 502.498 ns/op
Iteration   5: 503.310 ns/op
Iteration   6: 502.811 ns/op
Iteration   7: 502.278 ns/op
Iteration   8: 502.153 ns/op
Iteration   9: 500.372 ns/op
Iteration  10: 505.107 ns/op
Iteration  11: 501.325 ns/op
Iteration  12: 504.652 ns/op
Iteration  13: 503.554 ns/op
Iteration  14: 498.674 ns/op
Iteration  15: 500.916 ns/op
Iteration  16: 501.429 ns/op
Iteration  17: 500.121 ns/op
Iteration  18: 500.220 ns/op
Iteration  19: 499.909 ns/op
Iteration  20: 501.617 ns/op


Result "io.github.azagniotov.stubby4j.caching.NoOpStubHttpLifecycleCacheTest._Benchmark.benchmark_putIfAbsentAndGet":
  499.793 ±(99.9%) 1.695 ns/op [Average]
  (min, avg, max) = (494.774, 499.793, 505.905), stdev = 3.013
  CI (99.9%): [498.098, 501.488] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_enabledTlsWithAlpnHttp2WhenLongOptionGiven

# Run progress: 26.05% complete, ETA 00:25:10
# Fork: 1 of 2
# Warmup Iteration   1: 99990.846 ns/op
# Warmup Iteration   2: 235023.215 ns/op
# Warmup Iteration   3: 327574.271 ns/op
# Warmup Iteration   4: 415819.295 ns/op
# Warmup Iteration   5: 467630.594 ns/op
# Warmup Iteration   6: 521441.094 ns/op
# Warmup Iteration   7: 600885.254 ns/op
# Warmup Iteration   8: 640311.355 ns/op
# Warmup Iteration   9: 683717.887 ns/op
# Warmup Iteration  10: 742420.352 ns/op
Iteration   1: 784894.180 ns/op
Iteration   2: 815109.496 ns/op
Iteration   3: 848867.711 ns/op
Iteration   4: 888847.111 ns/op
Iteration   5: 903268.629 ns/op
Iteration   6: 963397.015 ns/op
Iteration   7: 995649.223 ns/op
Iteration   8: 1024622.765 ns/op
Iteration   9: 1036552.218 ns/op
Iteration  10: 1049224.298 ns/op
Iteration  11: 1121029.495 ns/op
Iteration  12: 364448.432 ns/op
Iteration  13: 347819.717 ns/op
Iteration  14: 421311.497 ns/op
Iteration  15: 491236.781 ns/op
Iteration  16: 549482.149 ns/op
Iteration  17: 597903.150 ns/op
Iteration  18: 665437.081 ns/op
Iteration  19: 718568.152 ns/op
Iteration  20: 750579.642 ns/op

# Run progress: 26.13% complete, ETA 00:26:30
# Fork: 2 of 2
# Warmup Iteration   1: 100850.861 ns/op
# Warmup Iteration   2: 229080.214 ns/op
# Warmup Iteration   3: 333203.941 ns/op
# Warmup Iteration   4: 407364.070 ns/op
# Warmup Iteration   5: 481335.329 ns/op
# Warmup Iteration   6: 535860.946 ns/op
# Warmup Iteration   7: 587978.046 ns/op
# Warmup Iteration   8: 642963.222 ns/op
# Warmup Iteration   9: 678905.199 ns/op
# Warmup Iteration  10: 719694.235 ns/op
Iteration   1: 785450.060 ns/op
Iteration   2: 810959.733 ns/op
Iteration   3: 829489.028 ns/op
Iteration   4: 876831.328 ns/op
Iteration   5: 904022.519 ns/op
Iteration   6: 943676.999 ns/op
Iteration   7: 1014953.263 ns/op
Iteration   8: 1016700.618 ns/op
Iteration   9: 1043250.546 ns/op
Iteration  10: 1094353.631 ns/op
Iteration  11: 1130078.363 ns/op
Iteration  12: 348127.006 ns/op
Iteration  13: 352893.969 ns/op
Iteration  14: 429675.186 ns/op
Iteration  15: 495456.298 ns/op
Iteration  16: 548343.500 ns/op
Iteration  17: 605306.673 ns/op
Iteration  18: 652611.037 ns/op
Iteration  19: 698647.959 ns/op
Iteration  20: 733279.817 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_enabledTlsWithAlpnHttp2WhenLongOptionGiven":
  766308.907 ±(99.9%) 134660.631 ns/op [Average]
  (min, avg, max) = (347819.717, 766308.907, 1130078.363), stdev = 239359.154
  CI (99.9%): [631648.276, 900969.538] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_enabledTlsWithAlpnHttp2WhenShortOptionGiven

# Run progress: 26.20% complete, ETA 00:27:49
# Fork: 1 of 2
# Warmup Iteration   1: 99608.900 ns/op
# Warmup Iteration   2: 227289.073 ns/op
# Warmup Iteration   3: 337404.330 ns/op
# Warmup Iteration   4: 431842.382 ns/op
# Warmup Iteration   5: 484372.901 ns/op
# Warmup Iteration   6: 535772.363 ns/op
# Warmup Iteration   7: 597812.341 ns/op
# Warmup Iteration   8: 650747.938 ns/op
# Warmup Iteration   9: 700041.980 ns/op
# Warmup Iteration  10: 733945.134 ns/op
Iteration   1: 753274.475 ns/op
Iteration   2: 823861.502 ns/op
Iteration   3: 825787.188 ns/op
Iteration   4: 867599.125 ns/op
Iteration   5: 913759.541 ns/op
Iteration   6: 985791.616 ns/op
Iteration   7: 992326.508 ns/op
Iteration   8: 1011962.620 ns/op
Iteration   9: 1034328.153 ns/op
Iteration  10: 1086997.666 ns/op
Iteration  11: 1153773.187 ns/op
Iteration  12: 1162897.218 ns/op
Iteration  13: 290513.687 ns/op
Iteration  14: 387830.986 ns/op
Iteration  15: 457187.427 ns/op
Iteration  16: 526912.230 ns/op
Iteration  17: 584944.675 ns/op
Iteration  18: 627538.678 ns/op
Iteration  19: 663877.807 ns/op
Iteration  20: 706338.519 ns/op

# Run progress: 26.28% complete, ETA 00:29:08
# Fork: 2 of 2
# Warmup Iteration   1: 102061.761 ns/op
# Warmup Iteration   2: 221246.415 ns/op
# Warmup Iteration   3: 331324.016 ns/op
# Warmup Iteration   4: 409273.021 ns/op
# Warmup Iteration   5: 473472.978 ns/op
# Warmup Iteration   6: 537415.305 ns/op
# Warmup Iteration   7: 599901.839 ns/op
# Warmup Iteration   8: 644960.611 ns/op
# Warmup Iteration   9: 687699.792 ns/op
# Warmup Iteration  10: 728278.654 ns/op
Iteration   1: 781402.253 ns/op
Iteration   2: 821752.209 ns/op
Iteration   3: 858524.977 ns/op
Iteration   4: 920954.942 ns/op
Iteration   5: 939938.146 ns/op
Iteration   6: 951783.010 ns/op
Iteration   7: 1006481.896 ns/op
Iteration   8: 1049818.075 ns/op
Iteration   9: 1096706.461 ns/op
Iteration  10: 1101374.925 ns/op
Iteration  11: 1133157.574 ns/op
Iteration  12: 1165335.633 ns/op
Iteration  13: 318092.704 ns/op
Iteration  14: 375486.101 ns/op
Iteration  15: 447658.492 ns/op
Iteration  16: 508100.523 ns/op
Iteration  17: 560692.167 ns/op
Iteration  18: 615451.783 ns/op
Iteration  19: 662110.882 ns/op
Iteration  20: 704009.574 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_enabledTlsWithAlpnHttp2WhenShortOptionGiven":
  796908.378 ±(99.9%) 144900.938 ns/op [Average]
  (min, avg, max) = (290513.687, 796908.378, 1165335.633), stdev = 257561.291
  CI (99.9%): [652007.440, 941809.317] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldBeFalseThatYamlIsNotProvided

# Run progress: 26.36% complete, ETA 00:30:26
# Fork: 1 of 2
# Warmup Iteration   1: 1064.066 ns/op
# Warmup Iteration   2: 476.137 ns/op
# Warmup Iteration   3: 438.968 ns/op
# Warmup Iteration   4: 440.932 ns/op
# Warmup Iteration   5: 442.675 ns/op
# Warmup Iteration   6: 442.009 ns/op
# Warmup Iteration   7: 441.147 ns/op
# Warmup Iteration   8: 438.817 ns/op
# Warmup Iteration   9: 441.051 ns/op
# Warmup Iteration  10: 441.987 ns/op
Iteration   1: 439.401 ns/op
Iteration   2: 443.926 ns/op
Iteration   3: 438.925 ns/op
Iteration   4: 443.247 ns/op
Iteration   5: 440.253 ns/op
Iteration   6: 439.368 ns/op
Iteration   7: 440.289 ns/op
Iteration   8: 440.244 ns/op
Iteration   9: 439.032 ns/op
Iteration  10: 442.137 ns/op
Iteration  11: 440.707 ns/op
Iteration  12: 440.287 ns/op
Iteration  13: 439.464 ns/op
Iteration  14: 439.489 ns/op
Iteration  15: 437.592 ns/op
Iteration  16: 441.240 ns/op
Iteration  17: 439.470 ns/op
Iteration  18: 441.629 ns/op
Iteration  19: 440.623 ns/op
Iteration  20: 437.958 ns/op

# Run progress: 26.43% complete, ETA 00:31:43
# Fork: 2 of 2
# Warmup Iteration   1: 1018.430 ns/op
# Warmup Iteration   2: 475.741 ns/op
# Warmup Iteration   3: 442.167 ns/op
# Warmup Iteration   4: 442.324 ns/op
# Warmup Iteration   5: 444.077 ns/op
# Warmup Iteration   6: 441.732 ns/op
# Warmup Iteration   7: 441.874 ns/op
# Warmup Iteration   8: 443.069 ns/op
# Warmup Iteration   9: 441.134 ns/op
# Warmup Iteration  10: 443.192 ns/op
Iteration   1: 442.302 ns/op
Iteration   2: 444.966 ns/op
Iteration   3: 441.611 ns/op
Iteration   4: 441.708 ns/op
Iteration   5: 443.841 ns/op
Iteration   6: 440.823 ns/op
Iteration   7: 440.400 ns/op
Iteration   8: 440.571 ns/op
Iteration   9: 441.123 ns/op
Iteration  10: 441.844 ns/op
Iteration  11: 444.578 ns/op
Iteration  12: 440.240 ns/op
Iteration  13: 439.330 ns/op
Iteration  14: 441.133 ns/op
Iteration  15: 440.985 ns/op
Iteration  16: 473.473 ns/op
Iteration  17: 440.021 ns/op
Iteration  18: 443.327 ns/op
Iteration  19: 443.242 ns/op
Iteration  20: 441.244 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldBeFalseThatYamlIsNotProvided":
  441.801 ±(99.9%) 3.046 ns/op [Average]
  (min, avg, max) = (437.592, 441.801, 473.473), stdev = 5.414
  CI (99.9%): [438.755, 444.847] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldFailOnInvalidCommandlineLongOptionString

# Run progress: 26.51% complete, ETA 00:33:00
# Fork: 1 of 2
# Warmup Iteration   1: 5977.095 ns/op
# Warmup Iteration   2: 2789.236 ns/op
# Warmup Iteration   3: 2702.232 ns/op
# Warmup Iteration   4: 2696.167 ns/op
# Warmup Iteration   5: 2660.772 ns/op
# Warmup Iteration   6: 2664.826 ns/op
# Warmup Iteration   7: 2871.636 ns/op
# Warmup Iteration   8: 2682.131 ns/op
# Warmup Iteration   9: 2676.388 ns/op
# Warmup Iteration  10: 2682.141 ns/op
Iteration   1: 2681.096 ns/op
Iteration   2: 2721.017 ns/op
Iteration   3: 2688.895 ns/op
Iteration   4: 2652.433 ns/op
Iteration   5: 2667.726 ns/op
Iteration   6: 2681.338 ns/op
Iteration   7: 2632.110 ns/op
Iteration   8: 2638.721 ns/op
Iteration   9: 2630.156 ns/op
Iteration  10: 2624.992 ns/op
Iteration  11: 2617.891 ns/op
Iteration  12: 2624.697 ns/op
Iteration  13: 2616.847 ns/op
Iteration  14: 2622.951 ns/op
Iteration  15: 2621.548 ns/op
Iteration  16: 2616.312 ns/op
Iteration  17: 2613.992 ns/op
Iteration  18: 2638.740 ns/op
Iteration  19: 2613.583 ns/op
Iteration  20: 2627.320 ns/op

# Run progress: 26.58% complete, ETA 00:34:16
# Fork: 2 of 2
# Warmup Iteration   1: 6176.202 ns/op
# Warmup Iteration   2: 2984.739 ns/op
# Warmup Iteration   3: 2808.968 ns/op
# Warmup Iteration   4: 2795.281 ns/op
# Warmup Iteration   5: 2809.408 ns/op
# Warmup Iteration   6: 2798.619 ns/op
# Warmup Iteration   7: 2799.430 ns/op
# Warmup Iteration   8: 2807.639 ns/op
# Warmup Iteration   9: 3084.733 ns/op
# Warmup Iteration  10: 2818.022 ns/op
Iteration   1: 2796.831 ns/op
Iteration   2: 2798.898 ns/op
Iteration   3: 2796.676 ns/op
Iteration   4: 2803.491 ns/op
Iteration   5: 2798.382 ns/op
Iteration   6: 2806.954 ns/op
Iteration   7: 2745.598 ns/op
Iteration   8: 2739.786 ns/op
Iteration   9: 2736.223 ns/op
Iteration  10: 2741.941 ns/op
Iteration  11: 2746.407 ns/op
Iteration  12: 2729.194 ns/op
Iteration  13: 2745.577 ns/op
Iteration  14: 2934.795 ns/op
Iteration  15: 2752.887 ns/op
Iteration  16: 2752.776 ns/op
Iteration  17: 2747.732 ns/op
Iteration  18: 2738.576 ns/op
Iteration  19: 2743.465 ns/op
Iteration  20: 2743.169 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldFailOnInvalidCommandlineLongOptionString":
  2705.793 ±(99.9%) 42.713 ns/op [Average]
  (min, avg, max) = (2613.583, 2705.793, 2934.795), stdev = 75.922
  CI (99.9%): [2663.080, 2748.506] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldFailOnInvalidCommandlineShortOptionString

# Run progress: 26.66% complete, ETA 00:35:32
# Fork: 1 of 2
# Warmup Iteration   1: 5960.444 ns/op
# Warmup Iteration   2: 3052.679 ns/op
# Warmup Iteration   3: 2930.651 ns/op
# Warmup Iteration   4: 2941.514 ns/op
# Warmup Iteration   5: 2937.884 ns/op
# Warmup Iteration   6: 2937.506 ns/op
# Warmup Iteration   7: 2974.028 ns/op
# Warmup Iteration   8: 2952.957 ns/op
# Warmup Iteration   9: 2954.370 ns/op
# Warmup Iteration  10: 2921.563 ns/op
Iteration   1: 2957.898 ns/op
Iteration   2: 2924.519 ns/op
Iteration   3: 2932.860 ns/op
Iteration   4: 2930.641 ns/op
Iteration   5: 2921.225 ns/op
Iteration   6: 2948.431 ns/op
Iteration   7: 2902.713 ns/op
Iteration   8: 2904.993 ns/op
Iteration   9: 2932.483 ns/op
Iteration  10: 2907.513 ns/op
Iteration  11: 2915.637 ns/op
Iteration  12: 2902.658 ns/op
Iteration  13: 2926.619 ns/op
Iteration  14: 2921.968 ns/op
Iteration  15: 2934.621 ns/op
Iteration  16: 2915.048 ns/op
Iteration  17: 2898.311 ns/op
Iteration  18: 2905.688 ns/op
Iteration  19: 2925.251 ns/op
Iteration  20: 2923.038 ns/op

# Run progress: 26.73% complete, ETA 00:36:47
# Fork: 2 of 2
# Warmup Iteration   1: 6439.242 ns/op
# Warmup Iteration   2: 3156.686 ns/op
# Warmup Iteration   3: 3047.187 ns/op
# Warmup Iteration   4: 3046.616 ns/op
# Warmup Iteration   5: 3033.011 ns/op
# Warmup Iteration   6: 3048.278 ns/op
# Warmup Iteration   7: 3029.310 ns/op
# Warmup Iteration   8: 3027.367 ns/op
# Warmup Iteration   9: 3041.215 ns/op
# Warmup Iteration  10: 3056.604 ns/op
Iteration   1: 3066.500 ns/op
Iteration   2: 3039.052 ns/op
Iteration   3: 3032.420 ns/op
Iteration   4: 3038.124 ns/op
Iteration   5: 3016.653 ns/op
Iteration   6: 3035.421 ns/op
Iteration   7: 2947.601 ns/op
Iteration   8: 2934.581 ns/op
Iteration   9: 2936.200 ns/op
Iteration  10: 2918.217 ns/op
Iteration  11: 2931.257 ns/op
Iteration  12: 2949.942 ns/op
Iteration  13: 2948.206 ns/op
Iteration  14: 2946.830 ns/op
Iteration  15: 2946.843 ns/op
Iteration  16: 2966.773 ns/op
Iteration  17: 2949.953 ns/op
Iteration  18: 2942.105 ns/op
Iteration  19: 3047.584 ns/op
Iteration  20: 2942.423 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldFailOnInvalidCommandlineShortOptionString":
  2949.220 ±(99.9%) 25.526 ns/op [Average]
  (min, avg, max) = (2898.311, 2949.220, 3066.500), stdev = 45.373
  CI (99.9%): [2923.694, 2974.746] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldFailOnMissingArgumentForExistingLongOption

# Run progress: 26.81% complete, ETA 00:38:01
# Fork: 1 of 2
# Warmup Iteration   1: 8495.449 ns/op
# Warmup Iteration   2: 3426.922 ns/op
# Warmup Iteration   3: 2896.085 ns/op
# Warmup Iteration   4: 2893.893 ns/op
# Warmup Iteration   5: 2892.198 ns/op
# Warmup Iteration   6: 2891.638 ns/op
# Warmup Iteration   7: 2891.928 ns/op
# Warmup Iteration   8: 2892.787 ns/op
# Warmup Iteration   9: 2913.956 ns/op
# Warmup Iteration  10: 2892.695 ns/op
Iteration   1: 2889.912 ns/op
Iteration   2: 2897.693 ns/op
Iteration   3: 2902.399 ns/op
Iteration   4: 2897.799 ns/op
Iteration   5: 2885.678 ns/op
Iteration   6: 2889.177 ns/op
Iteration   7: 2831.577 ns/op
Iteration   8: 2841.769 ns/op
Iteration   9: 2871.425 ns/op
Iteration  10: 2827.223 ns/op
Iteration  11: 2858.688 ns/op
Iteration  12: 2850.255 ns/op
Iteration  13: 2840.119 ns/op
Iteration  14: 2830.116 ns/op
Iteration  15: 2828.638 ns/op
Iteration  16: 2855.116 ns/op
Iteration  17: 2839.431 ns/op
Iteration  18: 2842.510 ns/op
Iteration  19: 2851.396 ns/op
Iteration  20: 2858.537 ns/op

# Run progress: 26.88% complete, ETA 00:39:15
# Fork: 2 of 2
# Warmup Iteration   1: 9052.512 ns/op
# Warmup Iteration   2: 3506.599 ns/op
# Warmup Iteration   3: 3017.381 ns/op
# Warmup Iteration   4: 3000.779 ns/op
# Warmup Iteration   5: 3009.878 ns/op
# Warmup Iteration   6: 2988.717 ns/op
# Warmup Iteration   7: 2993.407 ns/op
# Warmup Iteration   8: 2990.667 ns/op
# Warmup Iteration   9: 2990.614 ns/op
# Warmup Iteration  10: 2991.531 ns/op
Iteration   1: 2992.578 ns/op
Iteration   2: 3008.491 ns/op
Iteration   3: 3006.149 ns/op
Iteration   4: 3010.613 ns/op
Iteration   5: 3009.591 ns/op
Iteration   6: 2987.773 ns/op
Iteration   7: 2941.316 ns/op
Iteration   8: 2941.513 ns/op
Iteration   9: 2923.581 ns/op
Iteration  10: 2939.444 ns/op
Iteration  11: 2934.066 ns/op
Iteration  12: 2927.773 ns/op
Iteration  13: 2944.181 ns/op
Iteration  14: 2913.766 ns/op
Iteration  15: 2919.955 ns/op
Iteration  16: 2922.570 ns/op
Iteration  17: 2935.199 ns/op
Iteration  18: 2928.499 ns/op
Iteration  19: 2938.898 ns/op
Iteration  20: 2937.978 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldFailOnMissingArgumentForExistingLongOption":
  2906.335 ±(99.9%) 31.584 ns/op [Average]
  (min, avg, max) = (2827.223, 2906.335, 3010.613), stdev = 56.141
  CI (99.9%): [2874.750, 2937.919] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldFailOnMissingArgumentForExistingShortOption

# Run progress: 26.96% complete, ETA 00:40:28
# Fork: 1 of 2
# Warmup Iteration   1: 7164.972 ns/op
# Warmup Iteration   2: 3103.938 ns/op
# Warmup Iteration   3: 2936.430 ns/op
# Warmup Iteration   4: 2915.582 ns/op
# Warmup Iteration   5: 2905.863 ns/op
# Warmup Iteration   6: 2917.839 ns/op
# Warmup Iteration   7: 2921.169 ns/op
# Warmup Iteration   8: 2920.018 ns/op
# Warmup Iteration   9: 2928.227 ns/op
# Warmup Iteration  10: 2905.558 ns/op
Iteration   1: 2918.146 ns/op
Iteration   2: 2909.642 ns/op
Iteration   3: 2912.924 ns/op
Iteration   4: 2901.503 ns/op
Iteration   5: 2932.863 ns/op
Iteration   6: 2915.175 ns/op
Iteration   7: 2837.558 ns/op
Iteration   8: 2845.571 ns/op
Iteration   9: 2861.554 ns/op
Iteration  10: 2859.059 ns/op
Iteration  11: 2878.606 ns/op
Iteration  12: 2879.408 ns/op
Iteration  13: 2861.681 ns/op
Iteration  14: 2861.153 ns/op
Iteration  15: 2860.603 ns/op
Iteration  16: 2868.717 ns/op
Iteration  17: 2873.804 ns/op
Iteration  18: 2854.250 ns/op
Iteration  19: 2847.946 ns/op
Iteration  20: 2847.927 ns/op

# Run progress: 27.03% complete, ETA 00:41:41
# Fork: 2 of 2
# Warmup Iteration   1: 7906.909 ns/op
# Warmup Iteration   2: 3161.123 ns/op
# Warmup Iteration   3: 2935.239 ns/op
# Warmup Iteration   4: 2951.661 ns/op
# Warmup Iteration   5: 2953.597 ns/op
# Warmup Iteration   6: 2955.302 ns/op
# Warmup Iteration   7: 2972.311 ns/op
# Warmup Iteration   8: 2947.129 ns/op
# Warmup Iteration   9: 2981.538 ns/op
# Warmup Iteration  10: 2944.923 ns/op
Iteration   1: 2949.767 ns/op
Iteration   2: 2958.160 ns/op
Iteration   3: 2942.345 ns/op
Iteration   4: 2951.858 ns/op
Iteration   5: 2939.873 ns/op
Iteration   6: 2974.234 ns/op
Iteration   7: 2879.711 ns/op
Iteration   8: 2874.349 ns/op
Iteration   9: 2862.028 ns/op
Iteration  10: 2872.002 ns/op
Iteration  11: 2864.928 ns/op
Iteration  12: 2871.424 ns/op
Iteration  13: 2861.194 ns/op
Iteration  14: 2863.386 ns/op
Iteration  15: 2852.566 ns/op
Iteration  16: 2902.269 ns/op
Iteration  17: 2866.528 ns/op
Iteration  18: 2857.318 ns/op
Iteration  19: 2859.178 ns/op
Iteration  20: 2870.996 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldFailOnMissingArgumentForExistingShortOption":
  2885.055 ±(99.9%) 20.326 ns/op [Average]
  (min, avg, max) = (2837.558, 2885.055, 2974.234), stdev = 36.130
  CI (99.9%): [2864.729, 2905.381] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldRemoveOptionTlsWithAlpnHttp2WhenDisableSslGiven

# Run progress: 27.11% complete, ETA 00:42:53
# Fork: 1 of 2
# Warmup Iteration   1: 208904.105 ns/op
# Warmup Iteration   2: 344402.904 ns/op
# Warmup Iteration   3: 614928.091 ns/op
# Warmup Iteration   4: 776592.102 ns/op
# Warmup Iteration   5: 919337.027 ns/op
# Warmup Iteration   6: 1037748.608 ns/op
# Warmup Iteration   7: 1147167.932 ns/op
# Warmup Iteration   8: 1243492.990 ns/op
# Warmup Iteration   9: 1332029.341 ns/op
# Warmup Iteration  10: 1408384.758 ns/op
Iteration   1: 1471536.613 ns/op
Iteration   2: 1593420.500 ns/op
Iteration   3: 1641277.989 ns/op
Iteration   4: 1731177.557 ns/op
Iteration   5: 1769901.606 ns/op
Iteration   6: 1854219.969 ns/op
Iteration   7: 1965338.676 ns/op
Iteration   8: 2036258.228 ns/op
Iteration   9: 2044406.253 ns/op
Iteration  10: 2143629.672 ns/op
Iteration  11: 2195689.390 ns/op
Iteration  12: 2359161.849 ns/op
Iteration  13: 2357736.478 ns/op
Iteration  14: 2351526.810 ns/op
Iteration  15: 2389791.348 ns/op
Iteration  16: 2515092.837 ns/op
Iteration  17: 2627812.042 ns/op
Iteration  18: 2643887.182 ns/op
Iteration  19: 2705645.008 ns/op
Iteration  20: 2698335.185 ns/op

# Run progress: 27.18% complete, ETA 00:44:05
# Fork: 2 of 2
# Warmup Iteration   1: 205608.093 ns/op
# Warmup Iteration   2: 339986.419 ns/op
# Warmup Iteration   3: 613036.115 ns/op
# Warmup Iteration   4: 773085.202 ns/op
# Warmup Iteration   5: 891128.194 ns/op
# Warmup Iteration   6: 1002462.664 ns/op
# Warmup Iteration   7: 1116998.206 ns/op
# Warmup Iteration   8: 1222298.398 ns/op
# Warmup Iteration   9: 1317486.734 ns/op
# Warmup Iteration  10: 1435351.367 ns/op
Iteration   1: 1551938.847 ns/op
Iteration   2: 1589996.554 ns/op
Iteration   3: 1647893.039 ns/op
Iteration   4: 1740190.009 ns/op
Iteration   5: 1765590.131 ns/op
Iteration   6: 1889614.560 ns/op
Iteration   7: 1969232.035 ns/op
Iteration   8: 1993123.317 ns/op
Iteration   9: 2078373.502 ns/op
Iteration  10: 2128661.953 ns/op
Iteration  11: 2185416.737 ns/op
Iteration  12: 2295728.647 ns/op
Iteration  13: 2320061.023 ns/op
Iteration  14: 2377055.637 ns/op
Iteration  15: 2405365.791 ns/op
Iteration  16: 2542631.124 ns/op
Iteration  17: 2708153.281 ns/op
Iteration  18: 2854850.211 ns/op
Iteration  19: 2841324.949 ns/op
Iteration  20: 2853760.245 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldRemoveOptionTlsWithAlpnHttp2WhenDisableSslGiven":
  2170870.170 ±(99.9%) 227059.836 ns/op [Average]
  (min, avg, max) = (1471536.613, 2170870.170, 2854850.211), stdev = 403598.660
  CI (99.9%): [1943810.333, 2397930.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldReturnCommandlineParams

# Run progress: 27.26% complete, ETA 00:45:16
# Fork: 1 of 2
# Warmup Iteration   1: 166518.354 ns/op
# Warmup Iteration   2: 278478.573 ns/op
# Warmup Iteration   3: 435930.836 ns/op
# Warmup Iteration   4: 547716.108 ns/op
# Warmup Iteration   5: 662848.657 ns/op
# Warmup Iteration   6: 775229.034 ns/op
# Warmup Iteration   7: 853255.819 ns/op
# Warmup Iteration   8: 905780.034 ns/op
# Warmup Iteration   9: 1045259.137 ns/op
# Warmup Iteration  10: 1107850.130 ns/op
Iteration   1: 1181409.112 ns/op
Iteration   2: 1256609.143 ns/op
Iteration   3: 1379260.313 ns/op
Iteration   4: 1400786.688 ns/op
Iteration   5: 1516596.271 ns/op
Iteration   6: 1645404.836 ns/op
Iteration   7: 1585210.946 ns/op
Iteration   8: 537217.310 ns/op
Iteration   9: 528481.223 ns/op
Iteration  10: 654145.438 ns/op
Iteration  11: 756554.602 ns/op
Iteration  12: 903011.968 ns/op
Iteration  13: 959173.935 ns/op
Iteration  14: 1020653.282 ns/op
Iteration  15: 1102427.818 ns/op
Iteration  16: 1280936.044 ns/op
Iteration  17: 1353448.961 ns/op
Iteration  18: 1369056.398 ns/op
Iteration  19: 1435161.281 ns/op
Iteration  20: 1528506.869 ns/op

# Run progress: 27.33% complete, ETA 00:46:26
# Fork: 2 of 2
# Warmup Iteration   1: 168409.062 ns/op
# Warmup Iteration   2: 269585.428 ns/op
# Warmup Iteration   3: 447160.571 ns/op
# Warmup Iteration   4: 595358.839 ns/op
# Warmup Iteration   5: 685546.060 ns/op
# Warmup Iteration   6: 754925.956 ns/op
# Warmup Iteration   7: 843377.580 ns/op
# Warmup Iteration   8: 952941.385 ns/op
# Warmup Iteration   9: 1022168.629 ns/op
# Warmup Iteration  10: 1095561.407 ns/op
Iteration   1: 1148191.734 ns/op
Iteration   2: 1295531.841 ns/op
Iteration   3: 1442616.922 ns/op
Iteration   4: 1472335.150 ns/op
Iteration   5: 1595784.174 ns/op
Iteration   6: 1761460.587 ns/op
Iteration   7: 2017204.310 ns/op
Iteration   8: 1947465.733 ns/op
Iteration   9: 517735.115 ns/op
Iteration  10: 553655.815 ns/op
Iteration  11: 670887.595 ns/op
Iteration  12: 786938.314 ns/op
Iteration  13: 871367.642 ns/op
Iteration  14: 1044298.892 ns/op
Iteration  15: 1148285.084 ns/op
Iteration  16: 1169467.269 ns/op
Iteration  17: 1268735.108 ns/op
Iteration  18: 1289346.028 ns/op
Iteration  19: 1413029.197 ns/op
Iteration  20: 1438733.324 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldReturnCommandlineParams":
  1206178.057 ±(99.9%) 215908.017 ns/op [Average]
  (min, avg, max) = (517735.115, 1206178.057, 2017204.310), stdev = 383776.311
  CI (99.9%): [990270.039, 1422086.074] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldReturnEmptyCommandlineParams

# Run progress: 27.41% complete, ETA 00:47:36
# Fork: 1 of 2
# Warmup Iteration   1: 2624.909 ns/op
# Warmup Iteration   2: 509.559 ns/op
# Warmup Iteration   3: 442.206 ns/op
# Warmup Iteration   4: 442.948 ns/op
# Warmup Iteration   5: 441.408 ns/op
# Warmup Iteration   6: 441.519 ns/op
# Warmup Iteration   7: 444.223 ns/op
# Warmup Iteration   8: 438.612 ns/op
# Warmup Iteration   9: 441.430 ns/op
# Warmup Iteration  10: 441.838 ns/op
Iteration   1: 441.704 ns/op
Iteration   2: 440.509 ns/op
Iteration   3: 441.276 ns/op
Iteration   4: 441.498 ns/op
Iteration   5: 442.039 ns/op
Iteration   6: 442.081 ns/op
Iteration   7: 441.799 ns/op
Iteration   8: 441.652 ns/op
Iteration   9: 439.717 ns/op
Iteration  10: 442.151 ns/op
Iteration  11: 442.347 ns/op
Iteration  12: 441.688 ns/op
Iteration  13: 440.587 ns/op
Iteration  14: 438.629 ns/op
Iteration  15: 442.667 ns/op
Iteration  16: 441.777 ns/op
Iteration  17: 439.693 ns/op
Iteration  18: 439.403 ns/op
Iteration  19: 441.569 ns/op
Iteration  20: 441.901 ns/op

# Run progress: 27.48% complete, ETA 00:48:46
# Fork: 2 of 2
# Warmup Iteration   1: 1147.496 ns/op
# Warmup Iteration   2: 454.948 ns/op
# Warmup Iteration   3: 437.716 ns/op
# Warmup Iteration   4: 438.982 ns/op
# Warmup Iteration   5: 438.112 ns/op
# Warmup Iteration   6: 436.765 ns/op
# Warmup Iteration   7: 440.071 ns/op
# Warmup Iteration   8: 436.519 ns/op
# Warmup Iteration   9: 444.194 ns/op
# Warmup Iteration  10: 437.945 ns/op
Iteration   1: 437.715 ns/op
Iteration   2: 438.698 ns/op
Iteration   3: 435.949 ns/op
Iteration   4: 435.582 ns/op
Iteration   5: 434.802 ns/op
Iteration   6: 434.820 ns/op
Iteration   7: 436.560 ns/op
Iteration   8: 434.985 ns/op
Iteration   9: 437.596 ns/op
Iteration  10: 435.676 ns/op
Iteration  11: 438.149 ns/op
Iteration  12: 436.936 ns/op
Iteration  13: 435.444 ns/op
Iteration  14: 436.866 ns/op
Iteration  15: 438.348 ns/op
Iteration  16: 435.172 ns/op
Iteration  17: 436.648 ns/op
Iteration  18: 438.508 ns/op
Iteration  19: 436.479 ns/op
Iteration  20: 437.728 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldReturnEmptyCommandlineParams":
  438.934 ±(99.9%) 1.471 ns/op [Average]
  (min, avg, max) = (434.802, 438.934, 442.667), stdev = 2.615
  CI (99.9%): [437.463, 440.405] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldReturnOneCommandlineParamWhenHelpArgPresent

# Run progress: 27.56% complete, ETA 00:49:54
# Fork: 1 of 2
# Warmup Iteration   1: 96167.712 ns/op
# Warmup Iteration   2: 232989.330 ns/op
# Warmup Iteration   3: 336875.356 ns/op
# Warmup Iteration   4: 427717.622 ns/op
# Warmup Iteration   5: 495567.002 ns/op
# Warmup Iteration   6: 546131.610 ns/op
# Warmup Iteration   7: 604902.236 ns/op
# Warmup Iteration   8: 656933.963 ns/op
# Warmup Iteration   9: 701503.266 ns/op
# Warmup Iteration  10: 735449.701 ns/op
Iteration   1: 776837.111 ns/op
Iteration   2: 813242.028 ns/op
Iteration   3: 872328.590 ns/op
Iteration   4: 915038.673 ns/op
Iteration   5: 947699.102 ns/op
Iteration   6: 976923.758 ns/op
Iteration   7: 1029387.664 ns/op
Iteration   8: 1053141.777 ns/op
Iteration   9: 1069849.693 ns/op
Iteration  10: 1118802.471 ns/op
Iteration  11: 854286.366 ns/op
Iteration  12: 270541.390 ns/op
Iteration  13: 378389.460 ns/op
Iteration  14: 447621.633 ns/op
Iteration  15: 511701.557 ns/op
Iteration  16: 571660.405 ns/op
Iteration  17: 611524.523 ns/op
Iteration  18: 651936.541 ns/op
Iteration  19: 721532.260 ns/op
Iteration  20: 756744.340 ns/op

# Run progress: 27.64% complete, ETA 00:51:03
# Fork: 2 of 2
# Warmup Iteration   1: 92114.925 ns/op
# Warmup Iteration   2: 247754.114 ns/op
# Warmup Iteration   3: 347658.912 ns/op
# Warmup Iteration   4: 433638.277 ns/op
# Warmup Iteration   5: 489829.619 ns/op
# Warmup Iteration   6: 568973.064 ns/op
# Warmup Iteration   7: 598617.443 ns/op
# Warmup Iteration   8: 661030.602 ns/op
# Warmup Iteration   9: 713959.014 ns/op
# Warmup Iteration  10: 725098.491 ns/op
Iteration   1: 776212.963 ns/op
Iteration   2: 835834.723 ns/op
Iteration   3: 851824.763 ns/op
Iteration   4: 906058.670 ns/op
Iteration   5: 943939.202 ns/op
Iteration   6: 954960.324 ns/op
Iteration   7: 1009122.450 ns/op
Iteration   8: 1041781.599 ns/op
Iteration   9: 1069632.225 ns/op
Iteration  10: 1075065.024 ns/op
Iteration  11: 1133436.849 ns/op
Iteration  12: 279837.076 ns/op
Iteration  13: 365826.946 ns/op
Iteration  14: 443149.089 ns/op
Iteration  15: 513400.971 ns/op
Iteration  16: 566778.161 ns/op
Iteration  17: 618203.218 ns/op
Iteration  18: 646946.541 ns/op
Iteration  19: 690541.463 ns/op
Iteration  20: 767329.672 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldReturnOneCommandlineParamWhenHelpArgPresent":
  770976.782 ±(99.9%) 137522.551 ns/op [Average]
  (min, avg, max) = (270541.390, 770976.782, 1133436.849), stdev = 244446.213
  CI (99.9%): [633454.231, 908499.333] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasAdminPortWhenLongOptionGiven

# Run progress: 27.71% complete, ETA 00:52:10
# Fork: 1 of 2
# Warmup Iteration   1: 100320.803 ns/op
# Warmup Iteration   2: 227382.749 ns/op
# Warmup Iteration   3: 332660.909 ns/op
# Warmup Iteration   4: 413230.921 ns/op
# Warmup Iteration   5: 480928.956 ns/op
# Warmup Iteration   6: 530972.113 ns/op
# Warmup Iteration   7: 583914.923 ns/op
# Warmup Iteration   8: 641552.754 ns/op
# Warmup Iteration   9: 678081.934 ns/op
# Warmup Iteration  10: 732775.706 ns/op
Iteration   1: 752047.121 ns/op
Iteration   2: 799207.049 ns/op
Iteration   3: 853550.438 ns/op
Iteration   4: 881675.255 ns/op
Iteration   5: 913091.272 ns/op
Iteration   6: 934679.010 ns/op
Iteration   7: 975909.586 ns/op
Iteration   8: 1025441.194 ns/op
Iteration   9: 1034264.628 ns/op
Iteration  10: 1119896.151 ns/op
Iteration  11: 1108206.674 ns/op
Iteration  12: 1326074.935 ns/op
Iteration  13: 363725.599 ns/op
Iteration  14: 345614.225 ns/op
Iteration  15: 423052.632 ns/op
Iteration  16: 488442.335 ns/op
Iteration  17: 542705.923 ns/op
Iteration  18: 597233.633 ns/op
Iteration  19: 651035.153 ns/op
Iteration  20: 702165.874 ns/op

# Run progress: 27.79% complete, ETA 00:53:18
# Fork: 2 of 2
# Warmup Iteration   1: 102084.504 ns/op
# Warmup Iteration   2: 226168.665 ns/op
# Warmup Iteration   3: 331081.720 ns/op
# Warmup Iteration   4: 416098.810 ns/op
# Warmup Iteration   5: 471270.287 ns/op
# Warmup Iteration   6: 518491.137 ns/op
# Warmup Iteration   7: 598233.034 ns/op
# Warmup Iteration   8: 635493.039 ns/op
# Warmup Iteration   9: 685614.202 ns/op
# Warmup Iteration  10: 725215.328 ns/op
Iteration   1: 770470.216 ns/op
Iteration   2: 813243.649 ns/op
Iteration   3: 866057.418 ns/op
Iteration   4: 876522.746 ns/op
Iteration   5: 893114.833 ns/op
Iteration   6: 936580.102 ns/op
Iteration   7: 989081.184 ns/op
Iteration   8: 998483.281 ns/op
Iteration   9: 1044048.929 ns/op
Iteration  10: 1075594.173 ns/op
Iteration  11: 1095575.537 ns/op
Iteration  12: 1157006.074 ns/op
Iteration  13: 306221.518 ns/op
Iteration  14: 365829.138 ns/op
Iteration  15: 436757.163 ns/op
Iteration  16: 498113.471 ns/op
Iteration  17: 559474.519 ns/op
Iteration  18: 607111.621 ns/op
Iteration  19: 658761.035 ns/op
Iteration  20: 699198.807 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasAdminPortWhenLongOptionGiven":
  787131.603 ±(99.9%) 147106.806 ns/op [Average]
  (min, avg, max) = (306221.518, 787131.603, 1326074.935), stdev = 261482.219
  CI (99.9%): [640024.796, 934238.409] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasKeystoreLocationWhenLongOptionGiven

# Run progress: 27.86% complete, ETA 00:54:24
# Fork: 1 of 2
# Warmup Iteration   1: 102882.316 ns/op
# Warmup Iteration   2: 236122.628 ns/op
# Warmup Iteration   3: 340965.262 ns/op
# Warmup Iteration   4: 424744.084 ns/op
# Warmup Iteration   5: 493139.389 ns/op
# Warmup Iteration   6: 558919.192 ns/op
# Warmup Iteration   7: 588061.830 ns/op
# Warmup Iteration   8: 637866.161 ns/op
# Warmup Iteration   9: 685000.003 ns/op
# Warmup Iteration  10: 739434.404 ns/op
Iteration   1: 757353.303 ns/op
Iteration   2: 806077.913 ns/op
Iteration   3: 870494.975 ns/op
Iteration   4: 945370.885 ns/op
Iteration   5: 975768.848 ns/op
Iteration   6: 979645.571 ns/op
Iteration   7: 1011518.343 ns/op
Iteration   8: 1074044.513 ns/op
Iteration   9: 1125655.613 ns/op
Iteration  10: 1098502.263 ns/op
Iteration  11: 1141936.372 ns/op
Iteration  12: 463745.304 ns/op
Iteration  13: 320943.405 ns/op
Iteration  14: 423391.368 ns/op
Iteration  15: 486529.114 ns/op
Iteration  16: 540465.404 ns/op
Iteration  17: 621286.966 ns/op
Iteration  18: 641941.115 ns/op
Iteration  19: 724683.456 ns/op
Iteration  20: 751998.670 ns/op

# Run progress: 27.94% complete, ETA 00:55:30
# Fork: 2 of 2
# Warmup Iteration   1: 100756.866 ns/op
# Warmup Iteration   2: 232733.944 ns/op
# Warmup Iteration   3: 329629.967 ns/op
# Warmup Iteration   4: 421856.416 ns/op
# Warmup Iteration   5: 488219.296 ns/op
# Warmup Iteration   6: 547810.804 ns/op
# Warmup Iteration   7: 597221.565 ns/op
# Warmup Iteration   8: 643652.992 ns/op
# Warmup Iteration   9: 690992.031 ns/op
# Warmup Iteration  10: 741193.746 ns/op
Iteration   1: 783391.730 ns/op
Iteration   2: 835527.240 ns/op
Iteration   3: 885215.590 ns/op
Iteration   4: 890618.041 ns/op
Iteration   5: 909932.545 ns/op
Iteration   6: 990944.828 ns/op
Iteration   7: 1019087.613 ns/op
Iteration   8: 1036485.118 ns/op
Iteration   9: 1050831.979 ns/op
Iteration  10: 1089550.936 ns/op
Iteration  11: 1159739.412 ns/op
Iteration  12: 283626.971 ns/op
Iteration  13: 366835.150 ns/op
Iteration  14: 439194.951 ns/op
Iteration  15: 507336.392 ns/op
Iteration  16: 558206.377 ns/op
Iteration  17: 621378.361 ns/op
Iteration  18: 682202.672 ns/op
Iteration  19: 712994.230 ns/op
Iteration  20: 766800.135 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasKeystoreLocationWhenLongOptionGiven":
  783781.342 ±(99.9%) 141182.911 ns/op [Average]
  (min, avg, max) = (283626.971, 783781.342, 1159739.412), stdev = 250952.500
  CI (99.9%): [642598.431, 924964.253] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasLocationWhenLongOptionGiven

# Run progress: 28.01% complete, ETA 00:56:36
# Fork: 1 of 2
# Warmup Iteration   1: 100982.280 ns/op
# Warmup Iteration   2: 221692.254 ns/op
# Warmup Iteration   3: 324497.844 ns/op
# Warmup Iteration   4: 409360.259 ns/op
# Warmup Iteration   5: 474165.568 ns/op
# Warmup Iteration   6: 545615.532 ns/op
# Warmup Iteration   7: 588518.256 ns/op
# Warmup Iteration   8: 653201.693 ns/op
# Warmup Iteration   9: 682298.872 ns/op
# Warmup Iteration  10: 717719.307 ns/op
Iteration   1: 748016.895 ns/op
Iteration   2: 788836.861 ns/op
Iteration   3: 857625.254 ns/op
Iteration   4: 908465.896 ns/op
Iteration   5: 930539.639 ns/op
Iteration   6: 981778.055 ns/op
Iteration   7: 1001186.478 ns/op
Iteration   8: 1034880.616 ns/op
Iteration   9: 1036328.444 ns/op
Iteration  10: 1064268.871 ns/op
Iteration  11: 1136605.172 ns/op
Iteration  12: 1177655.311 ns/op
Iteration  13: 293568.716 ns/op
Iteration  14: 367827.562 ns/op
Iteration  15: 438499.277 ns/op
Iteration  16: 502404.210 ns/op
Iteration  17: 560778.396 ns/op
Iteration  18: 611748.498 ns/op
Iteration  19: 665441.764 ns/op
Iteration  20: 728629.903 ns/op

# Run progress: 28.09% complete, ETA 00:57:41
# Fork: 2 of 2
# Warmup Iteration   1: 101314.055 ns/op
# Warmup Iteration   2: 223182.900 ns/op
# Warmup Iteration   3: 333184.690 ns/op
# Warmup Iteration   4: 417270.047 ns/op
# Warmup Iteration   5: 477832.534 ns/op
# Warmup Iteration   6: 546189.314 ns/op
# Warmup Iteration   7: 592880.871 ns/op
# Warmup Iteration   8: 635259.555 ns/op
# Warmup Iteration   9: 685007.520 ns/op
# Warmup Iteration  10: 724757.800 ns/op
Iteration   1: 775246.423 ns/op
Iteration   2: 815779.047 ns/op
Iteration   3: 849410.564 ns/op
Iteration   4: 904396.699 ns/op
Iteration   5: 917688.864 ns/op
Iteration   6: 941804.912 ns/op
Iteration   7: 976779.327 ns/op
Iteration   8: 1124805.252 ns/op
Iteration   9: 1110854.079 ns/op
Iteration  10: 1113039.704 ns/op
Iteration  11: 1144563.262 ns/op
Iteration  12: 1170683.084 ns/op
Iteration  13: 455528.309 ns/op
Iteration  14: 324642.623 ns/op
Iteration  15: 421744.497 ns/op
Iteration  16: 478742.942 ns/op
Iteration  17: 545230.437 ns/op
Iteration  18: 599588.457 ns/op
Iteration  19: 644124.078 ns/op
Iteration  20: 681457.265 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasLocationWhenLongOptionGiven":
  795779.891 ±(99.9%) 147831.891 ns/op [Average]
  (min, avg, max) = (293568.716, 795779.891, 1177655.311), stdev = 262771.057
  CI (99.9%): [647948.000, 943611.782] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasPasswordWhenLongOptionGiven

# Run progress: 28.16% complete, ETA 00:58:46
# Fork: 1 of 2
# Warmup Iteration   1: 103100.408 ns/op
# Warmup Iteration   2: 232868.743 ns/op
# Warmup Iteration   3: 333359.901 ns/op
# Warmup Iteration   4: 418419.946 ns/op
# Warmup Iteration   5: 474315.582 ns/op
# Warmup Iteration   6: 535714.836 ns/op
# Warmup Iteration   7: 587389.083 ns/op
# Warmup Iteration   8: 637343.180 ns/op
# Warmup Iteration   9: 683882.586 ns/op
# Warmup Iteration  10: 722210.686 ns/op
Iteration   1: 760127.707 ns/op
Iteration   2: 808440.019 ns/op
Iteration   3: 840867.961 ns/op
Iteration   4: 866733.244 ns/op
Iteration   5: 939154.170 ns/op
Iteration   6: 1001195.361 ns/op
Iteration   7: 1018025.258 ns/op
Iteration   8: 1008450.355 ns/op
Iteration   9: 1145441.934 ns/op
Iteration  10: 1092163.913 ns/op
Iteration  11: 1123258.224 ns/op
Iteration  12: 1166368.503 ns/op
Iteration  13: 372941.661 ns/op
Iteration  14: 357599.658 ns/op
Iteration  15: 431667.640 ns/op
Iteration  16: 505790.580 ns/op
Iteration  17: 565508.489 ns/op
Iteration  18: 610238.560 ns/op
Iteration  19: 657750.134 ns/op
Iteration  20: 696987.818 ns/op

# Run progress: 28.24% complete, ETA 00:59:50
# Fork: 2 of 2
# Warmup Iteration   1: 102101.408 ns/op
# Warmup Iteration   2: 229961.238 ns/op
# Warmup Iteration   3: 341532.044 ns/op
# Warmup Iteration   4: 406661.985 ns/op
# Warmup Iteration   5: 484312.641 ns/op
# Warmup Iteration   6: 550861.095 ns/op
# Warmup Iteration   7: 593873.757 ns/op
# Warmup Iteration   8: 648543.084 ns/op
# Warmup Iteration   9: 694595.243 ns/op
# Warmup Iteration  10: 746409.460 ns/op
Iteration   1: 784265.657 ns/op
Iteration   2: 796376.569 ns/op
Iteration   3: 867408.107 ns/op
Iteration   4: 884234.343 ns/op
Iteration   5: 925188.506 ns/op
Iteration   6: 977260.807 ns/op
Iteration   7: 1014354.459 ns/op
Iteration   8: 1038261.366 ns/op
Iteration   9: 1071489.349 ns/op
Iteration  10: 1101046.549 ns/op
Iteration  11: 1183100.188 ns/op
Iteration  12: 1218848.741 ns/op
Iteration  13: 479604.036 ns/op
Iteration  14: 324292.177 ns/op
Iteration  15: 416259.461 ns/op
Iteration  16: 483514.363 ns/op
Iteration  17: 548518.245 ns/op
Iteration  18: 593012.919 ns/op
Iteration  19: 652729.772 ns/op
Iteration  20: 708378.765 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasPasswordWhenLongOptionGiven":
  800921.389 ±(99.9%) 147613.494 ns/op [Average]
  (min, avg, max) = (324292.177, 800921.389, 1218848.741), stdev = 262382.857
  CI (99.9%): [653307.895, 948534.884] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasPasswordWhenShortOptionGiven

# Run progress: 28.31% complete, ETA 01:00:53
# Fork: 1 of 2
# Warmup Iteration   1: 102080.346 ns/op
# Warmup Iteration   2: 229311.726 ns/op
# Warmup Iteration   3: 338300.794 ns/op
# Warmup Iteration   4: 420313.034 ns/op
# Warmup Iteration   5: 486936.883 ns/op
# Warmup Iteration   6: 547427.664 ns/op
# Warmup Iteration   7: 602884.172 ns/op
# Warmup Iteration   8: 647454.472 ns/op
# Warmup Iteration   9: 694521.075 ns/op
# Warmup Iteration  10: 728950.526 ns/op
Iteration   1: 798870.315 ns/op
Iteration   2: 814985.614 ns/op
Iteration   3: 838267.593 ns/op
Iteration   4: 865103.268 ns/op
Iteration   5: 934905.730 ns/op
Iteration   6: 971987.250 ns/op
Iteration   7: 993895.264 ns/op
Iteration   8: 1016259.690 ns/op
Iteration   9: 1028663.264 ns/op
Iteration  10: 1123975.616 ns/op
Iteration  11: 1095702.620 ns/op
Iteration  12: 1159730.278 ns/op
Iteration  13: 369364.945 ns/op
Iteration  14: 341131.219 ns/op
Iteration  15: 424313.430 ns/op
Iteration  16: 506823.035 ns/op
Iteration  17: 561795.030 ns/op
Iteration  18: 608799.564 ns/op
Iteration  19: 656930.690 ns/op
Iteration  20: 696115.471 ns/op

# Run progress: 28.39% complete, ETA 01:01:56
# Fork: 2 of 2
# Warmup Iteration   1: 102246.717 ns/op
# Warmup Iteration   2: 226204.922 ns/op
# Warmup Iteration   3: 328454.171 ns/op
# Warmup Iteration   4: 412437.304 ns/op
# Warmup Iteration   5: 480222.949 ns/op
# Warmup Iteration   6: 538028.923 ns/op
# Warmup Iteration   7: 602489.495 ns/op
# Warmup Iteration   8: 627930.508 ns/op
# Warmup Iteration   9: 686803.279 ns/op
# Warmup Iteration  10: 723488.517 ns/op
Iteration   1: 785615.817 ns/op
Iteration   2: 821236.571 ns/op
Iteration   3: 856816.202 ns/op
Iteration   4: 899014.893 ns/op
Iteration   5: 926672.462 ns/op
Iteration   6: 978135.735 ns/op
Iteration   7: 1011333.590 ns/op
Iteration   8: 1027525.361 ns/op
Iteration   9: 1063917.302 ns/op
Iteration  10: 1110712.165 ns/op
Iteration  11: 1110182.866 ns/op
Iteration  12: 1215856.827 ns/op
Iteration  13: 317926.867 ns/op
Iteration  14: 366141.648 ns/op
Iteration  15: 435172.270 ns/op
Iteration  16: 500862.308 ns/op
Iteration  17: 560808.362 ns/op
Iteration  18: 603802.485 ns/op
Iteration  19: 651809.559 ns/op
Iteration  20: 723004.593 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasPasswordWhenShortOptionGiven":
  794354.194 ±(99.9%) 145778.226 ns/op [Average]
  (min, avg, max) = (317926.867, 794354.194, 1215856.827), stdev = 259120.669
  CI (99.9%): [648575.968, 940132.421] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasSslPortWhenLongOptionGiven

# Run progress: 28.46% complete, ETA 01:02:59
# Fork: 1 of 2
# Warmup Iteration   1: 101223.547 ns/op
# Warmup Iteration   2: 232919.041 ns/op
# Warmup Iteration   3: 338421.003 ns/op
# Warmup Iteration   4: 439818.927 ns/op
# Warmup Iteration   5: 487504.496 ns/op
# Warmup Iteration   6: 538785.741 ns/op
# Warmup Iteration   7: 585099.061 ns/op
# Warmup Iteration   8: 656593.353 ns/op
# Warmup Iteration   9: 702897.875 ns/op
# Warmup Iteration  10: 746458.457 ns/op
Iteration   1: 774285.648 ns/op
Iteration   2: 806584.252 ns/op
Iteration   3: 848373.682 ns/op
Iteration   4: 903253.424 ns/op
Iteration   5: 935877.247 ns/op
Iteration   6: 975444.675 ns/op
Iteration   7: 998419.092 ns/op
Iteration   8: 1034426.040 ns/op
Iteration   9: 1071277.897 ns/op
Iteration  10: 1152500.532 ns/op
Iteration  11: 1148879.730 ns/op
Iteration  12: 571609.426 ns/op
Iteration  13: 302417.054 ns/op
Iteration  14: 405149.880 ns/op
Iteration  15: 475960.201 ns/op
Iteration  16: 538913.179 ns/op
Iteration  17: 599712.543 ns/op
Iteration  18: 656494.384 ns/op
Iteration  19: 692889.382 ns/op
Iteration  20: 732536.344 ns/op

# Run progress: 28.54% complete, ETA 01:04:01
# Fork: 2 of 2
# Warmup Iteration   1: 100171.324 ns/op
# Warmup Iteration   2: 230808.994 ns/op
# Warmup Iteration   3: 338484.327 ns/op
# Warmup Iteration   4: 425553.984 ns/op
# Warmup Iteration   5: 493264.023 ns/op
# Warmup Iteration   6: 531401.673 ns/op
# Warmup Iteration   7: 599941.899 ns/op
# Warmup Iteration   8: 638108.936 ns/op
# Warmup Iteration   9: 716326.417 ns/op
# Warmup Iteration  10: 747087.498 ns/op
Iteration   1: 772152.637 ns/op
Iteration   2: 823176.420 ns/op
Iteration   3: 879863.167 ns/op
Iteration   4: 911366.292 ns/op
Iteration   5: 925435.773 ns/op
Iteration   6: 955508.178 ns/op
Iteration   7: 994538.060 ns/op
Iteration   8: 1024928.449 ns/op
Iteration   9: 1083697.618 ns/op
Iteration  10: 1128252.117 ns/op
Iteration  11: 1161824.608 ns/op
Iteration  12: 387292.742 ns/op
Iteration  13: 328381.663 ns/op
Iteration  14: 412707.085 ns/op
Iteration  15: 481323.344 ns/op
Iteration  16: 541413.769 ns/op
Iteration  17: 604977.268 ns/op
Iteration  18: 635436.513 ns/op
Iteration  19: 676965.478 ns/op
Iteration  20: 723112.358 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasSslPortWhenLongOptionGiven":
  776933.954 ±(99.9%) 140316.290 ns/op [Average]
  (min, avg, max) = (302417.054, 776933.954, 1161824.608), stdev = 249412.082
  CI (99.9%): [636617.664, 917250.244] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasSslPortWhenShortOptionGiven

# Run progress: 28.61% complete, ETA 01:05:03
# Fork: 1 of 2
# Warmup Iteration   1: 99107.494 ns/op
# Warmup Iteration   2: 218725.488 ns/op
# Warmup Iteration   3: 333866.126 ns/op
# Warmup Iteration   4: 420546.489 ns/op
# Warmup Iteration   5: 488441.182 ns/op
# Warmup Iteration   6: 543297.369 ns/op
# Warmup Iteration   7: 597650.421 ns/op
# Warmup Iteration   8: 630445.611 ns/op
# Warmup Iteration   9: 687776.764 ns/op
# Warmup Iteration  10: 721293.001 ns/op
Iteration   1: 754670.980 ns/op
Iteration   2: 813629.728 ns/op
Iteration   3: 849344.941 ns/op
Iteration   4: 886937.584 ns/op
Iteration   5: 925778.110 ns/op
Iteration   6: 929875.864 ns/op
Iteration   7: 961372.043 ns/op
Iteration   8: 1024059.913 ns/op
Iteration   9: 1070920.552 ns/op
Iteration  10: 1078293.417 ns/op
Iteration  11: 1125136.131 ns/op
Iteration  12: 1156187.274 ns/op
Iteration  13: 464350.380 ns/op
Iteration  14: 321757.050 ns/op
Iteration  15: 409597.507 ns/op
Iteration  16: 482730.593 ns/op
Iteration  17: 536780.175 ns/op
Iteration  18: 591608.303 ns/op
Iteration  19: 644055.770 ns/op
Iteration  20: 687312.093 ns/op

# Run progress: 28.69% complete, ETA 01:06:04
# Fork: 2 of 2
# Warmup Iteration   1: 100557.190 ns/op
# Warmup Iteration   2: 226645.906 ns/op
# Warmup Iteration   3: 332691.524 ns/op
# Warmup Iteration   4: 417517.814 ns/op
# Warmup Iteration   5: 478729.623 ns/op
# Warmup Iteration   6: 531104.015 ns/op
# Warmup Iteration   7: 596025.188 ns/op
# Warmup Iteration   8: 643980.607 ns/op
# Warmup Iteration   9: 669959.956 ns/op
# Warmup Iteration  10: 722562.021 ns/op
Iteration   1: 738141.337 ns/op
Iteration   2: 805200.969 ns/op
Iteration   3: 854455.559 ns/op
Iteration   4: 858297.024 ns/op
Iteration   5: 886802.888 ns/op
Iteration   6: 929300.578 ns/op
Iteration   7: 1009824.547 ns/op
Iteration   8: 1026609.528 ns/op
Iteration   9: 1151598.222 ns/op
Iteration  10: 1180277.735 ns/op
Iteration  11: 1154659.802 ns/op
Iteration  12: 1223471.703 ns/op
Iteration  13: 1250638.225 ns/op
Iteration  14: 285314.220 ns/op
Iteration  15: 375580.951 ns/op
Iteration  16: 448779.147 ns/op
Iteration  17: 521678.356 ns/op
Iteration  18: 561481.719 ns/op
Iteration  19: 618712.981 ns/op
Iteration  20: 675253.340 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasSslPortWhenShortOptionGiven":
  806761.931 ±(99.9%) 153527.147 ns/op [Average]
  (min, avg, max) = (285314.220, 806761.931, 1250638.225), stdev = 272894.370
  CI (99.9%): [653234.784, 960289.078] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsAdminPortalDisabledWhenLongOptionGiven

# Run progress: 28.77% complete, ETA 01:07:05
# Fork: 1 of 2
# Warmup Iteration   1: 101695.340 ns/op
# Warmup Iteration   2: 233934.935 ns/op
# Warmup Iteration   3: 336106.369 ns/op
# Warmup Iteration   4: 409288.406 ns/op
# Warmup Iteration   5: 475745.321 ns/op
# Warmup Iteration   6: 545919.503 ns/op
# Warmup Iteration   7: 594962.788 ns/op
# Warmup Iteration   8: 633326.916 ns/op
# Warmup Iteration   9: 687303.772 ns/op
# Warmup Iteration  10: 729383.340 ns/op
Iteration   1: 769030.502 ns/op
Iteration   2: 818535.782 ns/op
Iteration   3: 860508.916 ns/op
Iteration   4: 904717.171 ns/op
Iteration   5: 938240.487 ns/op
Iteration   6: 962066.875 ns/op
Iteration   7: 1004840.260 ns/op
Iteration   8: 1039619.848 ns/op
Iteration   9: 1078613.369 ns/op
Iteration  10: 1061231.970 ns/op
Iteration  11: 1142431.102 ns/op
Iteration  12: 791547.022 ns/op
Iteration  13: 286444.629 ns/op
Iteration  14: 390036.411 ns/op
Iteration  15: 475621.305 ns/op
Iteration  16: 530033.511 ns/op
Iteration  17: 589321.456 ns/op
Iteration  18: 630601.367 ns/op
Iteration  19: 677239.857 ns/op
Iteration  20: 714598.835 ns/op

# Run progress: 28.84% complete, ETA 01:08:05
# Fork: 2 of 2
# Warmup Iteration   1: 101855.516 ns/op
# Warmup Iteration   2: 223553.797 ns/op
# Warmup Iteration   3: 336392.446 ns/op
# Warmup Iteration   4: 424202.277 ns/op
# Warmup Iteration   5: 471644.435 ns/op
# Warmup Iteration   6: 522966.634 ns/op
# Warmup Iteration   7: 566631.400 ns/op
# Warmup Iteration   8: 644389.182 ns/op
# Warmup Iteration   9: 679464.066 ns/op
# Warmup Iteration  10: 726893.959 ns/op
Iteration   1: 796696.840 ns/op
Iteration   2: 823877.431 ns/op
Iteration   3: 857612.162 ns/op
Iteration   4: 895367.816 ns/op
Iteration   5: 966628.241 ns/op
Iteration   6: 947145.576 ns/op
Iteration   7: 1011384.434 ns/op
Iteration   8: 1068828.326 ns/op
Iteration   9: 1145979.490 ns/op
Iteration  10: 1167910.222 ns/op
Iteration  11: 1192609.523 ns/op
Iteration  12: 633512.457 ns/op
Iteration  13: 305516.067 ns/op
Iteration  14: 393850.019 ns/op
Iteration  15: 461120.445 ns/op
Iteration  16: 528027.185 ns/op
Iteration  17: 589165.788 ns/op
Iteration  18: 641839.915 ns/op
Iteration  19: 669266.827 ns/op
Iteration  20: 747980.102 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsAdminPortalDisabledWhenLongOptionGiven":
  787739.989 ±(99.9%) 140345.348 ns/op [Average]
  (min, avg, max) = (286444.629, 787739.989, 1192609.523), stdev = 249463.733
  CI (99.9%): [647394.641, 928085.336] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsAdminPortalDisabledWhenShortOptionGiven

# Run progress: 28.92% complete, ETA 01:09:05
# Fork: 1 of 2
# Warmup Iteration   1: 102443.189 ns/op
# Warmup Iteration   2: 223071.732 ns/op
# Warmup Iteration   3: 331799.203 ns/op
# Warmup Iteration   4: 413135.932 ns/op
# Warmup Iteration   5: 470540.808 ns/op
# Warmup Iteration   6: 551319.330 ns/op
# Warmup Iteration   7: 586976.753 ns/op
# Warmup Iteration   8: 621777.073 ns/op
# Warmup Iteration   9: 690063.002 ns/op
# Warmup Iteration  10: 729780.028 ns/op
Iteration   1: 795252.286 ns/op
Iteration   2: 828416.171 ns/op
Iteration   3: 852684.598 ns/op
Iteration   4: 895702.286 ns/op
Iteration   5: 913512.745 ns/op
Iteration   6: 963327.087 ns/op
Iteration   7: 1010767.654 ns/op
Iteration   8: 1042107.499 ns/op
Iteration   9: 1090894.788 ns/op
Iteration  10: 1096103.932 ns/op
Iteration  11: 1131415.718 ns/op
Iteration  12: 1186808.715 ns/op
Iteration  13: 289217.231 ns/op
Iteration  14: 368919.435 ns/op
Iteration  15: 443866.431 ns/op
Iteration  16: 510844.724 ns/op
Iteration  17: 565988.045 ns/op
Iteration  18: 614609.920 ns/op
Iteration  19: 661100.745 ns/op
Iteration  20: 726766.644 ns/op

# Run progress: 28.99% complete, ETA 01:10:04
# Fork: 2 of 2
# Warmup Iteration   1: 100488.698 ns/op
# Warmup Iteration   2: 231900.154 ns/op
# Warmup Iteration   3: 331624.605 ns/op
# Warmup Iteration   4: 402648.014 ns/op
# Warmup Iteration   5: 482899.917 ns/op
# Warmup Iteration   6: 531506.921 ns/op
# Warmup Iteration   7: 592527.345 ns/op
# Warmup Iteration   8: 653019.261 ns/op
# Warmup Iteration   9: 697953.310 ns/op
# Warmup Iteration  10: 743199.437 ns/op
Iteration   1: 761512.060 ns/op
Iteration   2: 805280.579 ns/op
Iteration   3: 855171.365 ns/op
Iteration   4: 887765.032 ns/op
Iteration   5: 935189.284 ns/op
Iteration   6: 949507.898 ns/op
Iteration   7: 976681.415 ns/op
Iteration   8: 1061864.552 ns/op
Iteration   9: 1099898.095 ns/op
Iteration  10: 1094293.501 ns/op
Iteration  11: 1109505.508 ns/op
Iteration  12: 1205388.718 ns/op
Iteration  13: 300269.489 ns/op
Iteration  14: 371466.506 ns/op
Iteration  15: 452071.861 ns/op
Iteration  16: 512278.752 ns/op
Iteration  17: 572560.929 ns/op
Iteration  18: 617572.164 ns/op
Iteration  19: 665474.432 ns/op
Iteration  20: 704889.165 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsAdminPortalDisabledWhenShortOptionGiven":
  798173.699 ±(99.9%) 147935.163 ns/op [Average]
  (min, avg, max) = (289217.231, 798173.699, 1205388.718), stdev = 262954.622
  CI (99.9%): [650238.536, 946108.862] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsCacheDisabledWhenLongOptionGiven

# Run progress: 29.07% complete, ETA 01:11:03
# Fork: 1 of 2
# Warmup Iteration   1: 100125.955 ns/op
# Warmup Iteration   2: 227947.319 ns/op
# Warmup Iteration   3: 342543.502 ns/op
# Warmup Iteration   4: 411377.776 ns/op
# Warmup Iteration   5: 475667.485 ns/op
# Warmup Iteration   6: 523416.510 ns/op
# Warmup Iteration   7: 607269.223 ns/op
# Warmup Iteration   8: 669943.245 ns/op
# Warmup Iteration   9: 710861.257 ns/op
# Warmup Iteration  10: 744495.425 ns/op
Iteration   1: 768636.773 ns/op
Iteration   2: 807161.879 ns/op
Iteration   3: 839357.294 ns/op
Iteration   4: 889338.680 ns/op
Iteration   5: 914725.101 ns/op
Iteration   6: 972207.293 ns/op
Iteration   7: 989890.635 ns/op
Iteration   8: 1039338.852 ns/op
Iteration   9: 1071214.287 ns/op
Iteration  10: 1061502.814 ns/op
Iteration  11: 1132295.932 ns/op
Iteration  12: 1139807.566 ns/op
Iteration  13: 601468.472 ns/op
Iteration  14: 305878.486 ns/op
Iteration  15: 389773.140 ns/op
Iteration  16: 466098.691 ns/op
Iteration  17: 526203.970 ns/op
Iteration  18: 581867.764 ns/op
Iteration  19: 631107.362 ns/op
Iteration  20: 661935.936 ns/op

# Run progress: 29.14% complete, ETA 01:12:01
# Fork: 2 of 2
# Warmup Iteration   1: 99736.049 ns/op
# Warmup Iteration   2: 231040.053 ns/op
# Warmup Iteration   3: 335294.260 ns/op
# Warmup Iteration   4: 404525.313 ns/op
# Warmup Iteration   5: 474229.913 ns/op
# Warmup Iteration   6: 551193.026 ns/op
# Warmup Iteration   7: 595540.902 ns/op
# Warmup Iteration   8: 636403.854 ns/op
# Warmup Iteration   9: 676563.761 ns/op
# Warmup Iteration  10: 726992.025 ns/op
Iteration   1: 771759.392 ns/op
Iteration   2: 819770.952 ns/op
Iteration   3: 861097.795 ns/op
Iteration   4: 903027.001 ns/op
Iteration   5: 926415.543 ns/op
Iteration   6: 943995.506 ns/op
Iteration   7: 971266.989 ns/op
Iteration   8: 1013866.390 ns/op
Iteration   9: 1089207.271 ns/op
Iteration  10: 1081244.139 ns/op
Iteration  11: 1125153.867 ns/op
Iteration  12: 1126389.881 ns/op
Iteration  13: 428448.822 ns/op
Iteration  14: 329083.168 ns/op
Iteration  15: 408262.889 ns/op
Iteration  16: 476273.611 ns/op
Iteration  17: 545081.163 ns/op
Iteration  18: 599392.096 ns/op
Iteration  19: 642830.960 ns/op
Iteration  20: 690112.577 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsCacheDisabledWhenLongOptionGiven":
  788562.273 ±(99.9%) 142586.650 ns/op [Average]
  (min, avg, max) = (305878.486, 788562.273, 1139807.566), stdev = 253447.646
  CI (99.9%): [645975.623, 931148.924] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsCacheDisabledWhenShortOptionGiven

# Run progress: 29.22% complete, ETA 01:12:59
# Fork: 1 of 2
# Warmup Iteration   1: 96422.794 ns/op
# Warmup Iteration   2: 229009.086 ns/op
# Warmup Iteration   3: 340334.110 ns/op
# Warmup Iteration   4: 415991.630 ns/op
# Warmup Iteration   5: 477413.980 ns/op
# Warmup Iteration   6: 548258.576 ns/op
# Warmup Iteration   7: 603698.995 ns/op
# Warmup Iteration   8: 644837.127 ns/op
# Warmup Iteration   9: 691149.521 ns/op
# Warmup Iteration  10: 749828.885 ns/op
Iteration   1: 778842.672 ns/op
Iteration   2: 822907.403 ns/op
Iteration   3: 857618.832 ns/op
Iteration   4: 893138.946 ns/op
Iteration   5: 934654.962 ns/op
Iteration   6: 957614.902 ns/op
Iteration   7: 1003699.264 ns/op
Iteration   8: 1035770.756 ns/op
Iteration   9: 1070562.798 ns/op
Iteration  10: 1075203.735 ns/op
Iteration  11: 1117011.214 ns/op
Iteration  12: 1114934.543 ns/op
Iteration  13: 1208897.304 ns/op
Iteration  14: 384125.909 ns/op
Iteration  15: 348514.210 ns/op
Iteration  16: 431711.302 ns/op
Iteration  17: 505492.152 ns/op
Iteration  18: 557243.687 ns/op
Iteration  19: 609245.712 ns/op
Iteration  20: 658918.523 ns/op

# Run progress: 29.29% complete, ETA 01:13:56
# Fork: 2 of 2
# Warmup Iteration   1: 100723.152 ns/op
# Warmup Iteration   2: 223071.314 ns/op
# Warmup Iteration   3: 326658.425 ns/op
# Warmup Iteration   4: 412288.113 ns/op
# Warmup Iteration   5: 480254.536 ns/op
# Warmup Iteration   6: 553401.443 ns/op
# Warmup Iteration   7: 579828.735 ns/op
# Warmup Iteration   8: 632527.956 ns/op
# Warmup Iteration   9: 689991.975 ns/op
# Warmup Iteration  10: 724651.099 ns/op
Iteration   1: 763675.298 ns/op
Iteration   2: 802649.500 ns/op
Iteration   3: 837211.896 ns/op
Iteration   4: 879234.815 ns/op
Iteration   5: 891803.005 ns/op
Iteration   6: 994385.979 ns/op
Iteration   7: 979107.757 ns/op
Iteration   8: 1067420.251 ns/op
Iteration   9: 1082547.783 ns/op
Iteration  10: 1117802.342 ns/op
Iteration  11: 1147301.867 ns/op
Iteration  12: 1213671.118 ns/op
Iteration  13: 1270681.105 ns/op
Iteration  14: 338164.404 ns/op
Iteration  15: 353262.309 ns/op
Iteration  16: 427592.804 ns/op
Iteration  17: 495416.093 ns/op
Iteration  18: 570845.714 ns/op
Iteration  19: 593393.064 ns/op
Iteration  20: 671412.632 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsCacheDisabledWhenShortOptionGiven":
  821592.214 ±(99.9%) 155344.383 ns/op [Average]
  (min, avg, max) = (338164.404, 821592.214, 1270681.105), stdev = 276124.504
  CI (99.9%): [666247.831, 976936.597] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsDebugWhenLongOptionGiven

# Run progress: 29.37% complete, ETA 01:14:53
# Fork: 1 of 2
# Warmup Iteration   1: 2453.873 ns/op
# Warmup Iteration   2: 671.103 ns/op
# Warmup Iteration   3: 526.376 ns/op
# Warmup Iteration   4: 523.254 ns/op
# Warmup Iteration   5: 525.644 ns/op
# Warmup Iteration   6: 523.164 ns/op
# Warmup Iteration   7: 524.847 ns/op
# Warmup Iteration   8: 524.280 ns/op
# Warmup Iteration   9: 524.412 ns/op
# Warmup Iteration  10: 526.490 ns/op
Iteration   1: 528.030 ns/op
Iteration   2: 526.326 ns/op
Iteration   3: 525.973 ns/op
Iteration   4: 523.546 ns/op
Iteration   5: 526.134 ns/op
Iteration   6: 524.277 ns/op
Iteration   7: 527.134 ns/op
Iteration   8: 525.367 ns/op
Iteration   9: 525.159 ns/op
Iteration  10: 523.529 ns/op
Iteration  11: 526.266 ns/op
Iteration  12: 526.581 ns/op
Iteration  13: 524.466 ns/op
Iteration  14: 527.131 ns/op
Iteration  15: 524.666 ns/op
Iteration  16: 528.473 ns/op
Iteration  17: 524.847 ns/op
Iteration  18: 523.468 ns/op
Iteration  19: 523.566 ns/op
Iteration  20: 529.931 ns/op

# Run progress: 29.44% complete, ETA 01:15:50
# Fork: 2 of 2
# Warmup Iteration   1: 2407.252 ns/op
# Warmup Iteration   2: 652.141 ns/op
# Warmup Iteration   3: 528.918 ns/op
# Warmup Iteration   4: 525.053 ns/op
# Warmup Iteration   5: 524.863 ns/op
# Warmup Iteration   6: 525.496 ns/op
# Warmup Iteration   7: 522.502 ns/op
# Warmup Iteration   8: 524.156 ns/op
# Warmup Iteration   9: 522.762 ns/op
# Warmup Iteration  10: 521.484 ns/op
Iteration   1: 523.107 ns/op
Iteration   2: 523.867 ns/op
Iteration   3: 525.985 ns/op
Iteration   4: 524.291 ns/op
Iteration   5: 523.943 ns/op
Iteration   6: 524.215 ns/op
Iteration   7: 527.111 ns/op
Iteration   8: 525.744 ns/op
Iteration   9: 528.799 ns/op
Iteration  10: 525.217 ns/op
Iteration  11: 523.028 ns/op
Iteration  12: 524.673 ns/op
Iteration  13: 524.215 ns/op
Iteration  14: 523.338 ns/op
Iteration  15: 526.567 ns/op
Iteration  16: 526.866 ns/op
Iteration  17: 524.306 ns/op
Iteration  18: 523.260 ns/op
Iteration  19: 523.162 ns/op
Iteration  20: 521.257 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsDebugWhenLongOptionGiven":
  525.196 ±(99.9%) 1.038 ns/op [Average]
  (min, avg, max) = (521.257, 525.196, 529.931), stdev = 1.845
  CI (99.9%): [524.157, 526.234] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsDebugWhenShortgOptionGiven

# Run progress: 29.52% complete, ETA 01:16:46
# Fork: 1 of 2
# Warmup Iteration   1: 1810.897 ns/op
# Warmup Iteration   2: 585.435 ns/op
# Warmup Iteration   3: 525.474 ns/op
# Warmup Iteration   4: 524.207 ns/op
# Warmup Iteration   5: 526.280 ns/op
# Warmup Iteration   6: 523.351 ns/op
# Warmup Iteration   7: 526.228 ns/op
# Warmup Iteration   8: 522.423 ns/op
# Warmup Iteration   9: 522.773 ns/op
# Warmup Iteration  10: 525.195 ns/op
Iteration   1: 524.457 ns/op
Iteration   2: 522.548 ns/op
Iteration   3: 521.182 ns/op
Iteration   4: 521.377 ns/op
Iteration   5: 524.140 ns/op
Iteration   6: 524.785 ns/op
Iteration   7: 525.716 ns/op
Iteration   8: 524.893 ns/op
Iteration   9: 523.435 ns/op
Iteration  10: 524.503 ns/op
Iteration  11: 526.482 ns/op
Iteration  12: 521.595 ns/op
Iteration  13: 523.506 ns/op
Iteration  14: 524.438 ns/op
Iteration  15: 523.748 ns/op
Iteration  16: 524.323 ns/op
Iteration  17: 524.617 ns/op
Iteration  18: 521.171 ns/op
Iteration  19: 525.224 ns/op
Iteration  20: 524.300 ns/op

# Run progress: 29.59% complete, ETA 01:17:41
# Fork: 2 of 2
# Warmup Iteration   1: 1704.155 ns/op
# Warmup Iteration   2: 580.690 ns/op
# Warmup Iteration   3: 524.587 ns/op
# Warmup Iteration   4: 523.823 ns/op
# Warmup Iteration   5: 524.055 ns/op
# Warmup Iteration   6: 525.290 ns/op
# Warmup Iteration   7: 523.600 ns/op
# Warmup Iteration   8: 522.508 ns/op
# Warmup Iteration   9: 525.950 ns/op
# Warmup Iteration  10: 527.237 ns/op
Iteration   1: 527.860 ns/op
Iteration   2: 524.746 ns/op
Iteration   3: 523.773 ns/op
Iteration   4: 527.600 ns/op
Iteration   5: 526.022 ns/op
Iteration   6: 525.451 ns/op
Iteration   7: 523.853 ns/op
Iteration   8: 524.489 ns/op
Iteration   9: 524.904 ns/op
Iteration  10: 525.994 ns/op
Iteration  11: 527.747 ns/op
Iteration  12: 526.109 ns/op
Iteration  13: 527.946 ns/op
Iteration  14: 528.481 ns/op
Iteration  15: 524.289 ns/op
Iteration  16: 525.445 ns/op
Iteration  17: 526.498 ns/op
Iteration  18: 527.485 ns/op
Iteration  19: 525.434 ns/op
Iteration  20: 524.779 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsDebugWhenShortgOptionGiven":
  524.884 ±(99.9%) 1.029 ns/op [Average]
  (min, avg, max) = (521.171, 524.884, 528.481), stdev = 1.829
  CI (99.9%): [523.855, 525.913] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsHelpWhenLongOptionGiven

# Run progress: 29.67% complete, ETA 01:18:36
# Fork: 1 of 2
# Warmup Iteration   1: 2429.602 ns/op
# Warmup Iteration   2: 642.772 ns/op
# Warmup Iteration   3: 524.464 ns/op
# Warmup Iteration   4: 525.475 ns/op
# Warmup Iteration   5: 525.724 ns/op
# Warmup Iteration   6: 525.005 ns/op
# Warmup Iteration   7: 523.633 ns/op
# Warmup Iteration   8: 522.074 ns/op
# Warmup Iteration   9: 523.513 ns/op
# Warmup Iteration  10: 524.784 ns/op
Iteration   1: 526.472 ns/op
Iteration   2: 527.788 ns/op
Iteration   3: 527.318 ns/op
Iteration   4: 526.484 ns/op
Iteration   5: 523.901 ns/op
Iteration   6: 526.488 ns/op
Iteration   7: 527.115 ns/op
Iteration   8: 523.713 ns/op
Iteration   9: 523.030 ns/op
Iteration  10: 528.388 ns/op
Iteration  11: 525.821 ns/op
Iteration  12: 523.282 ns/op
Iteration  13: 529.925 ns/op
Iteration  14: 524.402 ns/op
Iteration  15: 525.040 ns/op
Iteration  16: 525.412 ns/op
Iteration  17: 528.901 ns/op
Iteration  18: 527.426 ns/op
Iteration  19: 527.053 ns/op
Iteration  20: 523.740 ns/op

# Run progress: 29.74% complete, ETA 01:19:31
# Fork: 2 of 2
# Warmup Iteration   1: 2686.570 ns/op
# Warmup Iteration   2: 641.187 ns/op
# Warmup Iteration   3: 532.220 ns/op
# Warmup Iteration   4: 532.390 ns/op
# Warmup Iteration   5: 531.540 ns/op
# Warmup Iteration   6: 531.965 ns/op
# Warmup Iteration   7: 530.133 ns/op
# Warmup Iteration   8: 529.471 ns/op
# Warmup Iteration   9: 530.513 ns/op
# Warmup Iteration  10: 529.917 ns/op
Iteration   1: 529.808 ns/op
Iteration   2: 532.390 ns/op
Iteration   3: 531.039 ns/op
Iteration   4: 529.844 ns/op
Iteration   5: 528.239 ns/op
Iteration   6: 528.532 ns/op
Iteration   7: 532.187 ns/op
Iteration   8: 530.557 ns/op
Iteration   9: 529.010 ns/op
Iteration  10: 535.266 ns/op
Iteration  11: 530.028 ns/op
Iteration  12: 528.447 ns/op
Iteration  13: 532.610 ns/op
Iteration  14: 529.164 ns/op
Iteration  15: 530.928 ns/op
Iteration  16: 529.661 ns/op
Iteration  17: 528.164 ns/op
Iteration  18: 530.949 ns/op
Iteration  19: 528.253 ns/op
Iteration  20: 526.988 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsHelpWhenLongOptionGiven":
  528.094 ±(99.9%) 1.583 ns/op [Average]
  (min, avg, max) = (523.030, 528.094, 535.266), stdev = 2.813
  CI (99.9%): [526.511, 529.677] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsHelpWhenShortOptionGiven

# Run progress: 29.82% complete, ETA 01:20:26
# Fork: 1 of 2
# Warmup Iteration   1: 1686.736 ns/op
# Warmup Iteration   2: 552.582 ns/op
# Warmup Iteration   3: 526.525 ns/op
# Warmup Iteration   4: 530.684 ns/op
# Warmup Iteration   5: 523.459 ns/op
# Warmup Iteration   6: 525.008 ns/op
# Warmup Iteration   7: 522.159 ns/op
# Warmup Iteration   8: 526.004 ns/op
# Warmup Iteration   9: 525.803 ns/op
# Warmup Iteration  10: 523.305 ns/op
Iteration   1: 523.676 ns/op
Iteration   2: 524.037 ns/op
Iteration   3: 529.129 ns/op
Iteration   4: 523.379 ns/op
Iteration   5: 525.336 ns/op
Iteration   6: 526.764 ns/op
Iteration   7: 527.832 ns/op
Iteration   8: 524.168 ns/op
Iteration   9: 522.454 ns/op
Iteration  10: 518.383 ns/op
Iteration  11: 525.351 ns/op
Iteration  12: 526.714 ns/op
Iteration  13: 525.501 ns/op
Iteration  14: 531.417 ns/op
Iteration  15: 521.761 ns/op
Iteration  16: 525.719 ns/op
Iteration  17: 523.562 ns/op
Iteration  18: 522.983 ns/op
Iteration  19: 523.652 ns/op
Iteration  20: 521.044 ns/op

# Run progress: 29.89% complete, ETA 01:21:19
# Fork: 2 of 2
# Warmup Iteration   1: 1668.144 ns/op
# Warmup Iteration   2: 573.517 ns/op
# Warmup Iteration   3: 538.660 ns/op
# Warmup Iteration   4: 535.717 ns/op
# Warmup Iteration   5: 539.047 ns/op
# Warmup Iteration   6: 537.412 ns/op
# Warmup Iteration   7: 537.699 ns/op
# Warmup Iteration   8: 540.255 ns/op
# Warmup Iteration   9: 539.502 ns/op
# Warmup Iteration  10: 540.621 ns/op
Iteration   1: 538.204 ns/op
Iteration   2: 535.449 ns/op
Iteration   3: 539.965 ns/op
Iteration   4: 538.756 ns/op
Iteration   5: 538.786 ns/op
Iteration   6: 536.084 ns/op
Iteration   7: 537.838 ns/op
Iteration   8: 538.611 ns/op
Iteration   9: 536.763 ns/op
Iteration  10: 535.369 ns/op
Iteration  11: 535.519 ns/op
Iteration  12: 534.608 ns/op
Iteration  13: 537.199 ns/op
Iteration  14: 535.634 ns/op
Iteration  15: 541.657 ns/op
Iteration  16: 533.654 ns/op
Iteration  17: 537.208 ns/op
Iteration  18: 534.804 ns/op
Iteration  19: 536.921 ns/op
Iteration  20: 537.618 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsHelpWhenShortOptionGiven":
  530.838 ±(99.9%) 3.790 ns/op [Average]
  (min, avg, max) = (518.383, 530.838, 541.657), stdev = 6.736
  CI (99.9%): [527.048, 534.628] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsMuteWhenLongOptionGiven

# Run progress: 29.97% complete, ETA 01:22:13
# Fork: 1 of 2
# Warmup Iteration   1: 2622.785 ns/op
# Warmup Iteration   2: 642.524 ns/op
# Warmup Iteration   3: 523.470 ns/op
# Warmup Iteration   4: 524.063 ns/op
# Warmup Iteration   5: 522.517 ns/op
# Warmup Iteration   6: 522.100 ns/op
# Warmup Iteration   7: 522.028 ns/op
# Warmup Iteration   8: 520.374 ns/op
# Warmup Iteration   9: 524.537 ns/op
# Warmup Iteration  10: 521.771 ns/op
Iteration   1: 523.410 ns/op
Iteration   2: 520.677 ns/op
Iteration   3: 520.191 ns/op
Iteration   4: 522.840 ns/op
Iteration   5: 523.310 ns/op
Iteration   6: 522.208 ns/op
Iteration   7: 524.478 ns/op
Iteration   8: 522.003 ns/op
Iteration   9: 521.131 ns/op
Iteration  10: 520.991 ns/op
Iteration  11: 520.901 ns/op
Iteration  12: 525.532 ns/op
Iteration  13: 521.999 ns/op
Iteration  14: 524.312 ns/op
Iteration  15: 521.659 ns/op
Iteration  16: 521.550 ns/op
Iteration  17: 523.123 ns/op
Iteration  18: 525.133 ns/op
Iteration  19: 523.772 ns/op
Iteration  20: 521.048 ns/op

# Run progress: 30.05% complete, ETA 01:23:06
# Fork: 2 of 2
# Warmup Iteration   1: 2453.432 ns/op
# Warmup Iteration   2: 594.220 ns/op
# Warmup Iteration   3: 527.015 ns/op
# Warmup Iteration   4: 525.023 ns/op
# Warmup Iteration   5: 530.260 ns/op
# Warmup Iteration   6: 531.477 ns/op
# Warmup Iteration   7: 524.539 ns/op
# Warmup Iteration   8: 525.551 ns/op
# Warmup Iteration   9: 526.609 ns/op
# Warmup Iteration  10: 524.879 ns/op
Iteration   1: 527.456 ns/op
Iteration   2: 526.155 ns/op
Iteration   3: 526.111 ns/op
Iteration   4: 529.708 ns/op
Iteration   5: 528.228 ns/op
Iteration   6: 528.650 ns/op
Iteration   7: 525.054 ns/op
Iteration   8: 526.746 ns/op
Iteration   9: 530.636 ns/op
Iteration  10: 525.629 ns/op
Iteration  11: 526.004 ns/op
Iteration  12: 524.943 ns/op
Iteration  13: 526.657 ns/op
Iteration  14: 526.229 ns/op
Iteration  15: 527.545 ns/op
Iteration  16: 527.503 ns/op
Iteration  17: 525.849 ns/op
Iteration  18: 530.058 ns/op
Iteration  19: 529.922 ns/op
Iteration  20: 525.687 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsMuteWhenLongOptionGiven":
  524.876 ±(99.9%) 1.632 ns/op [Average]
  (min, avg, max) = (520.191, 524.876, 530.636), stdev = 2.902
  CI (99.9%): [523.243, 526.508] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsMuteWhenShortOptionGiven

# Run progress: 30.12% complete, ETA 01:23:59
# Fork: 1 of 2
# Warmup Iteration   1: 1620.745 ns/op
# Warmup Iteration   2: 581.907 ns/op
# Warmup Iteration   3: 526.827 ns/op
# Warmup Iteration   4: 523.623 ns/op
# Warmup Iteration   5: 527.046 ns/op
# Warmup Iteration   6: 524.172 ns/op
# Warmup Iteration   7: 525.238 ns/op
# Warmup Iteration   8: 527.857 ns/op
# Warmup Iteration   9: 526.022 ns/op
# Warmup Iteration  10: 523.653 ns/op
Iteration   1: 523.867 ns/op
Iteration   2: 527.124 ns/op
Iteration   3: 526.504 ns/op
Iteration   4: 524.922 ns/op
Iteration   5: 522.289 ns/op
Iteration   6: 523.867 ns/op
Iteration   7: 524.591 ns/op
Iteration   8: 526.254 ns/op
Iteration   9: 522.884 ns/op
Iteration  10: 524.659 ns/op
Iteration  11: 522.862 ns/op
Iteration  12: 525.147 ns/op
Iteration  13: 522.540 ns/op
Iteration  14: 521.161 ns/op
Iteration  15: 524.970 ns/op
Iteration  16: 524.488 ns/op
Iteration  17: 524.186 ns/op
Iteration  18: 525.666 ns/op
Iteration  19: 527.114 ns/op
Iteration  20: 525.981 ns/op

# Run progress: 30.20% complete, ETA 01:24:51
# Fork: 2 of 2
# Warmup Iteration   1: 1628.095 ns/op
# Warmup Iteration   2: 574.810 ns/op
# Warmup Iteration   3: 523.972 ns/op
# Warmup Iteration   4: 532.553 ns/op
# Warmup Iteration   5: 522.472 ns/op
# Warmup Iteration   6: 524.996 ns/op
# Warmup Iteration   7: 524.884 ns/op
# Warmup Iteration   8: 524.060 ns/op
# Warmup Iteration   9: 525.761 ns/op
# Warmup Iteration  10: 524.868 ns/op
Iteration   1: 525.186 ns/op
Iteration   2: 527.306 ns/op
Iteration   3: 526.851 ns/op
Iteration   4: 527.011 ns/op
Iteration   5: 527.183 ns/op
Iteration   6: 525.226 ns/op
Iteration   7: 525.023 ns/op
Iteration   8: 526.236 ns/op
Iteration   9: 526.243 ns/op
Iteration  10: 527.881 ns/op
Iteration  11: 524.242 ns/op
Iteration  12: 527.824 ns/op
Iteration  13: 527.805 ns/op
Iteration  14: 523.062 ns/op
Iteration  15: 526.129 ns/op
Iteration  16: 527.733 ns/op
Iteration  17: 525.474 ns/op
Iteration  18: 525.873 ns/op
Iteration  19: 525.347 ns/op
Iteration  20: 526.560 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsMuteWhenShortOptionGiven":
  525.382 ±(99.9%) 0.948 ns/op [Average]
  (min, avg, max) = (521.161, 525.382, 527.881), stdev = 1.686
  CI (99.9%): [524.433, 526.330] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsSslDisabledWhenLongOptionGiven

# Run progress: 30.27% complete, ETA 01:25:43
# Fork: 1 of 2
# Warmup Iteration   1: 94536.355 ns/op
# Warmup Iteration   2: 231208.221 ns/op
# Warmup Iteration   3: 336307.986 ns/op
# Warmup Iteration   4: 402069.937 ns/op
# Warmup Iteration   5: 467948.845 ns/op
# Warmup Iteration   6: 522894.269 ns/op
# Warmup Iteration   7: 573606.482 ns/op
# Warmup Iteration   8: 648425.184 ns/op
# Warmup Iteration   9: 686909.943 ns/op
# Warmup Iteration  10: 696540.011 ns/op
Iteration   1: 757900.950 ns/op
Iteration   2: 784745.059 ns/op
Iteration   3: 839613.737 ns/op
Iteration   4: 861381.395 ns/op
Iteration   5: 920410.549 ns/op
Iteration   6: 945484.509 ns/op
Iteration   7: 973242.901 ns/op
Iteration   8: 1015910.741 ns/op
Iteration   9: 1007521.460 ns/op
Iteration  10: 1046518.507 ns/op
Iteration  11: 1135670.586 ns/op
Iteration  12: 456749.219 ns/op
Iteration  13: 289290.689 ns/op
Iteration  14: 361590.247 ns/op
Iteration  15: 432357.869 ns/op
Iteration  16: 507712.801 ns/op
Iteration  17: 560578.764 ns/op
Iteration  18: 608911.098 ns/op
Iteration  19: 661626.038 ns/op
Iteration  20: 718292.682 ns/op

# Run progress: 30.35% complete, ETA 01:26:34
# Fork: 2 of 2
# Warmup Iteration   1: 99282.480 ns/op
# Warmup Iteration   2: 223416.207 ns/op
# Warmup Iteration   3: 318424.560 ns/op
# Warmup Iteration   4: 404695.594 ns/op
# Warmup Iteration   5: 476764.226 ns/op
# Warmup Iteration   6: 532881.032 ns/op
# Warmup Iteration   7: 580126.867 ns/op
# Warmup Iteration   8: 650488.664 ns/op
# Warmup Iteration   9: 682284.585 ns/op
# Warmup Iteration  10: 722350.547 ns/op
Iteration   1: 779813.426 ns/op
Iteration   2: 795793.640 ns/op
Iteration   3: 831854.893 ns/op
Iteration   4: 871676.307 ns/op
Iteration   5: 891064.832 ns/op
Iteration   6: 922910.190 ns/op
Iteration   7: 943184.228 ns/op
Iteration   8: 1010211.223 ns/op
Iteration   9: 1022305.320 ns/op
Iteration  10: 1045028.239 ns/op
Iteration  11: 1079376.379 ns/op
Iteration  12: 441083.742 ns/op
Iteration  13: 275856.780 ns/op
Iteration  14: 370287.333 ns/op
Iteration  15: 435931.040 ns/op
Iteration  16: 507856.777 ns/op
Iteration  17: 551121.220 ns/op
Iteration  18: 606718.610 ns/op
Iteration  19: 646159.484 ns/op
Iteration  20: 694517.240 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsSslDisabledWhenLongOptionGiven":
  740206.518 ±(99.9%) 137410.334 ns/op [Average]
  (min, avg, max) = (275856.780, 740206.518, 1135670.586), stdev = 244246.748
  CI (99.9%): [602796.184, 877616.851] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsSslDisabledWhenShortOptionGiven

# Run progress: 30.42% complete, ETA 01:27:25
# Fork: 1 of 2
# Warmup Iteration   1: 96887.259 ns/op
# Warmup Iteration   2: 219580.452 ns/op
# Warmup Iteration   3: 320523.186 ns/op
# Warmup Iteration   4: 402839.958 ns/op
# Warmup Iteration   5: 470234.200 ns/op
# Warmup Iteration   6: 528638.152 ns/op
# Warmup Iteration   7: 575015.643 ns/op
# Warmup Iteration   8: 627098.753 ns/op
# Warmup Iteration   9: 670415.337 ns/op
# Warmup Iteration  10: 711506.302 ns/op
Iteration   1: 752353.664 ns/op
Iteration   2: 787340.588 ns/op
Iteration   3: 839441.138 ns/op
Iteration   4: 863887.019 ns/op
Iteration   5: 909814.278 ns/op
Iteration   6: 948705.097 ns/op
Iteration   7: 962672.709 ns/op
Iteration   8: 986071.974 ns/op
Iteration   9: 1024393.396 ns/op
Iteration  10: 1061150.710 ns/op
Iteration  11: 1094785.376 ns/op
Iteration  12: 1118762.571 ns/op
Iteration  13: 261252.625 ns/op
Iteration  14: 339884.478 ns/op
Iteration  15: 410453.127 ns/op
Iteration  16: 477012.566 ns/op
Iteration  17: 561619.724 ns/op
Iteration  18: 590519.129 ns/op
Iteration  19: 623206.065 ns/op
Iteration  20: 682708.552 ns/op

# Run progress: 30.50% complete, ETA 01:28:16
# Fork: 2 of 2
# Warmup Iteration   1: 101709.204 ns/op
# Warmup Iteration   2: 202500.363 ns/op
# Warmup Iteration   3: 325660.941 ns/op
# Warmup Iteration   4: 404499.498 ns/op
# Warmup Iteration   5: 469548.182 ns/op
# Warmup Iteration   6: 522624.052 ns/op
# Warmup Iteration   7: 582960.529 ns/op
# Warmup Iteration   8: 634077.217 ns/op
# Warmup Iteration   9: 649173.657 ns/op
# Warmup Iteration  10: 715302.482 ns/op
Iteration   1: 758471.177 ns/op
Iteration   2: 783464.561 ns/op
Iteration   3: 836829.207 ns/op
Iteration   4: 876811.278 ns/op
Iteration   5: 901681.911 ns/op
Iteration   6: 970081.032 ns/op
Iteration   7: 967809.557 ns/op
Iteration   8: 1021551.013 ns/op
Iteration   9: 1048331.585 ns/op
Iteration  10: 1056785.965 ns/op
Iteration  11: 1107595.309 ns/op
Iteration  12: 1116065.405 ns/op
Iteration  13: 990462.037 ns/op
Iteration  14: 243210.524 ns/op
Iteration  15: 361291.011 ns/op
Iteration  16: 429102.894 ns/op
Iteration  17: 505994.047 ns/op
Iteration  18: 583103.304 ns/op
Iteration  19: 603976.437 ns/op
Iteration  20: 658937.804 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsSslDisabledWhenShortOptionGiven":
  777939.771 ±(99.9%) 145557.581 ns/op [Average]
  (min, avg, max) = (243210.524, 777939.771, 1118762.571), stdev = 258728.472
  CI (99.9%): [632382.190, 923497.352] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsVersionWhenLongOptionGiven

# Run progress: 30.57% complete, ETA 01:29:06
# Fork: 1 of 2
# Warmup Iteration   1: 2375.629 ns/op
# Warmup Iteration   2: 635.058 ns/op
# Warmup Iteration   3: 537.011 ns/op
# Warmup Iteration   4: 539.654 ns/op
# Warmup Iteration   5: 537.724 ns/op
# Warmup Iteration   6: 534.173 ns/op
# Warmup Iteration   7: 536.332 ns/op
# Warmup Iteration   8: 535.839 ns/op
# Warmup Iteration   9: 538.418 ns/op
# Warmup Iteration  10: 540.294 ns/op
Iteration   1: 536.125 ns/op
Iteration   2: 537.207 ns/op
Iteration   3: 539.040 ns/op
Iteration   4: 535.721 ns/op
Iteration   5: 537.018 ns/op
Iteration   6: 534.606 ns/op
Iteration   7: 534.660 ns/op
Iteration   8: 536.185 ns/op
Iteration   9: 536.121 ns/op
Iteration  10: 538.596 ns/op
Iteration  11: 539.600 ns/op
Iteration  12: 536.018 ns/op
Iteration  13: 536.251 ns/op
Iteration  14: 538.829 ns/op
Iteration  15: 537.998 ns/op
Iteration  16: 537.356 ns/op
Iteration  17: 536.703 ns/op
Iteration  18: 537.343 ns/op
Iteration  19: 533.723 ns/op
Iteration  20: 536.095 ns/op

# Run progress: 30.65% complete, ETA 01:29:56
# Fork: 2 of 2
# Warmup Iteration   1: 2444.429 ns/op
# Warmup Iteration   2: 659.317 ns/op
# Warmup Iteration   3: 538.768 ns/op
# Warmup Iteration   4: 538.056 ns/op
# Warmup Iteration   5: 540.109 ns/op
# Warmup Iteration   6: 540.470 ns/op
# Warmup Iteration   7: 537.188 ns/op
# Warmup Iteration   8: 540.197 ns/op
# Warmup Iteration   9: 540.086 ns/op
# Warmup Iteration  10: 538.657 ns/op
Iteration   1: 541.268 ns/op
Iteration   2: 537.522 ns/op
Iteration   3: 539.563 ns/op
Iteration   4: 539.400 ns/op
Iteration   5: 539.074 ns/op
Iteration   6: 538.623 ns/op
Iteration   7: 538.420 ns/op
Iteration   8: 538.251 ns/op
Iteration   9: 539.999 ns/op
Iteration  10: 539.818 ns/op
Iteration  11: 540.493 ns/op
Iteration  12: 538.497 ns/op
Iteration  13: 539.647 ns/op
Iteration  14: 536.310 ns/op
Iteration  15: 537.893 ns/op
Iteration  16: 541.035 ns/op
Iteration  17: 537.799 ns/op
Iteration  18: 538.468 ns/op
Iteration  19: 538.328 ns/op
Iteration  20: 541.177 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsVersionWhenLongOptionGiven":
  537.920 ±(99.9%) 1.034 ns/op [Average]
  (min, avg, max) = (533.723, 537.920, 541.268), stdev = 1.838
  CI (99.9%): [536.885, 538.954] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsVersionWhenShortOptionGiven

# Run progress: 30.72% complete, ETA 01:30:45
# Fork: 1 of 2
# Warmup Iteration   1: 1706.516 ns/op
# Warmup Iteration   2: 588.702 ns/op
# Warmup Iteration   3: 528.543 ns/op
# Warmup Iteration   4: 527.389 ns/op
# Warmup Iteration   5: 529.329 ns/op
# Warmup Iteration   6: 528.343 ns/op
# Warmup Iteration   7: 529.107 ns/op
# Warmup Iteration   8: 528.805 ns/op
# Warmup Iteration   9: 529.666 ns/op
# Warmup Iteration  10: 528.691 ns/op
Iteration   1: 528.073 ns/op
Iteration   2: 529.136 ns/op
Iteration   3: 528.294 ns/op
Iteration   4: 531.607 ns/op
Iteration   5: 529.733 ns/op
Iteration   6: 527.972 ns/op
Iteration   7: 527.629 ns/op
Iteration   8: 529.847 ns/op
Iteration   9: 529.036 ns/op
Iteration  10: 527.803 ns/op
Iteration  11: 527.729 ns/op
Iteration  12: 527.899 ns/op
Iteration  13: 527.051 ns/op
Iteration  14: 531.618 ns/op
Iteration  15: 527.715 ns/op
Iteration  16: 527.319 ns/op
Iteration  17: 527.972 ns/op
Iteration  18: 525.715 ns/op
Iteration  19: 529.002 ns/op
Iteration  20: 527.072 ns/op

# Run progress: 30.80% complete, ETA 01:31:34
# Fork: 2 of 2
# Warmup Iteration   1: 1624.081 ns/op
# Warmup Iteration   2: 569.153 ns/op
# Warmup Iteration   3: 523.791 ns/op
# Warmup Iteration   4: 524.244 ns/op
# Warmup Iteration   5: 523.632 ns/op
# Warmup Iteration   6: 521.082 ns/op
# Warmup Iteration   7: 521.882 ns/op
# Warmup Iteration   8: 523.440 ns/op
# Warmup Iteration   9: 523.646 ns/op
# Warmup Iteration  10: 525.497 ns/op
Iteration   1: 523.266 ns/op
Iteration   2: 525.675 ns/op
Iteration   3: 524.670 ns/op
Iteration   4: 524.835 ns/op
Iteration   5: 526.472 ns/op
Iteration   6: 525.481 ns/op
Iteration   7: 524.760 ns/op
Iteration   8: 525.657 ns/op
Iteration   9: 524.626 ns/op
Iteration  10: 528.761 ns/op
Iteration  11: 528.303 ns/op
Iteration  12: 524.548 ns/op
Iteration  13: 526.672 ns/op
Iteration  14: 526.150 ns/op
Iteration  15: 525.425 ns/op
Iteration  16: 524.705 ns/op
Iteration  17: 523.064 ns/op
Iteration  18: 526.819 ns/op
Iteration  19: 528.332 ns/op
Iteration  20: 528.372 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsVersionWhenShortOptionGiven":
  527.120 ±(99.9%) 1.136 ns/op [Average]
  (min, avg, max) = (523.064, 527.120, 531.618), stdev = 2.019
  CI (99.9%): [525.984, 528.256] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsWatchWhenLongOptionGiven

# Run progress: 30.87% complete, ETA 01:32:23
# Fork: 1 of 2
# Warmup Iteration   1: 98402.629 ns/op
# Warmup Iteration   2: 214299.752 ns/op
# Warmup Iteration   3: 328991.060 ns/op
# Warmup Iteration   4: 420527.890 ns/op
# Warmup Iteration   5: 491297.927 ns/op
# Warmup Iteration   6: 532572.412 ns/op
# Warmup Iteration   7: 583160.499 ns/op
# Warmup Iteration   8: 648761.390 ns/op
# Warmup Iteration   9: 707577.225 ns/op
# Warmup Iteration  10: 739852.942 ns/op
Iteration   1: 787488.716 ns/op
Iteration   2: 835617.417 ns/op
Iteration   3: 848910.099 ns/op
Iteration   4: 883859.948 ns/op
Iteration   5: 934791.015 ns/op
Iteration   6: 958805.112 ns/op
Iteration   7: 956245.561 ns/op
Iteration   8: 1018271.351 ns/op
Iteration   9: 1050138.070 ns/op
Iteration  10: 1088986.836 ns/op
Iteration  11: 1093438.584 ns/op
Iteration  12: 1150053.414 ns/op
Iteration  13: 408347.889 ns/op
Iteration  14: 322098.274 ns/op
Iteration  15: 406498.466 ns/op
Iteration  16: 484135.727 ns/op
Iteration  17: 537006.184 ns/op
Iteration  18: 589782.659 ns/op
Iteration  19: 625820.129 ns/op
Iteration  20: 671288.103 ns/op

# Run progress: 30.95% complete, ETA 01:33:11
# Fork: 2 of 2
# Warmup Iteration   1: 97866.090 ns/op
# Warmup Iteration   2: 229042.872 ns/op
# Warmup Iteration   3: 346095.119 ns/op
# Warmup Iteration   4: 417489.121 ns/op
# Warmup Iteration   5: 484205.718 ns/op
# Warmup Iteration   6: 551635.841 ns/op
# Warmup Iteration   7: 593508.050 ns/op
# Warmup Iteration   8: 649330.384 ns/op
# Warmup Iteration   9: 689000.255 ns/op
# Warmup Iteration  10: 732018.157 ns/op
Iteration   1: 769067.572 ns/op
Iteration   2: 827422.044 ns/op
Iteration   3: 858886.326 ns/op
Iteration   4: 873657.987 ns/op
Iteration   5: 936081.557 ns/op
Iteration   6: 965738.718 ns/op
Iteration   7: 977151.228 ns/op
Iteration   8: 1031373.621 ns/op
Iteration   9: 1078657.124 ns/op
Iteration  10: 1061156.374 ns/op
Iteration  11: 1098919.594 ns/op
Iteration  12: 1148414.444 ns/op
Iteration  13: 430936.561 ns/op
Iteration  14: 314762.093 ns/op
Iteration  15: 402235.487 ns/op
Iteration  16: 479875.573 ns/op
Iteration  17: 538858.169 ns/op
Iteration  18: 587380.304 ns/op
Iteration  19: 633826.593 ns/op
Iteration  20: 688041.662 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsWatchWhenLongOptionGiven":
  783850.665 ±(99.9%) 143891.622 ns/op [Average]
  (min, avg, max) = (314762.093, 783850.665, 1150053.414), stdev = 255767.233
  CI (99.9%): [639959.042, 927742.287] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsYamlProvidedWhenLongOptionGiven

# Run progress: 31.02% complete, ETA 01:33:59
# Fork: 1 of 2
# Warmup Iteration   1: 2130.718 ns/op
# Warmup Iteration   2: 635.159 ns/op
# Warmup Iteration   3: 568.034 ns/op
# Warmup Iteration   4: 566.511 ns/op
# Warmup Iteration   5: 566.542 ns/op
# Warmup Iteration   6: 566.236 ns/op
# Warmup Iteration   7: 564.925 ns/op
# Warmup Iteration   8: 563.761 ns/op
# Warmup Iteration   9: 565.208 ns/op
# Warmup Iteration  10: 565.840 ns/op
Iteration   1: 565.804 ns/op
Iteration   2: 565.750 ns/op
Iteration   3: 564.226 ns/op
Iteration   4: 564.274 ns/op
Iteration   5: 564.315 ns/op
Iteration   6: 565.188 ns/op
Iteration   7: 564.448 ns/op
Iteration   8: 564.422 ns/op
Iteration   9: 564.531 ns/op
Iteration  10: 564.457 ns/op
Iteration  11: 564.950 ns/op
Iteration  12: 564.807 ns/op
Iteration  13: 564.025 ns/op
Iteration  14: 563.662 ns/op
Iteration  15: 565.468 ns/op
Iteration  16: 563.656 ns/op
Iteration  17: 563.667 ns/op
Iteration  18: 562.513 ns/op
Iteration  19: 565.359 ns/op
Iteration  20: 563.100 ns/op

# Run progress: 31.10% complete, ETA 01:34:46
# Fork: 2 of 2
# Warmup Iteration   1: 2142.379 ns/op
# Warmup Iteration   2: 611.155 ns/op
# Warmup Iteration   3: 566.665 ns/op
# Warmup Iteration   4: 570.007 ns/op
# Warmup Iteration   5: 561.914 ns/op
# Warmup Iteration   6: 561.563 ns/op
# Warmup Iteration   7: 565.338 ns/op
# Warmup Iteration   8: 563.356 ns/op
# Warmup Iteration   9: 564.186 ns/op
# Warmup Iteration  10: 568.271 ns/op
Iteration   1: 564.336 ns/op
Iteration   2: 562.270 ns/op
Iteration   3: 561.616 ns/op
Iteration   4: 564.744 ns/op
Iteration   5: 562.897 ns/op
Iteration   6: 562.112 ns/op
Iteration   7: 562.945 ns/op
Iteration   8: 561.257 ns/op
Iteration   9: 564.856 ns/op
Iteration  10: 565.767 ns/op
Iteration  11: 564.693 ns/op
Iteration  12: 564.443 ns/op
Iteration  13: 564.338 ns/op
Iteration  14: 560.060 ns/op
Iteration  15: 563.216 ns/op
Iteration  16: 562.874 ns/op
Iteration  17: 565.392 ns/op
Iteration  18: 567.419 ns/op
Iteration  19: 562.566 ns/op
Iteration  20: 563.763 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsYamlProvidedWhenLongOptionGiven":
  564.005 ±(99.9%) 0.797 ns/op [Average]
  (min, avg, max) = (560.060, 564.005, 567.419), stdev = 1.417
  CI (99.9%): [563.208, 564.802] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsYamlProvidedWhenShortOptionGiven

# Run progress: 31.17% complete, ETA 01:35:33
# Fork: 1 of 2
# Warmup Iteration   1: 1890.655 ns/op
# Warmup Iteration   2: 623.884 ns/op
# Warmup Iteration   3: 558.624 ns/op
# Warmup Iteration   4: 558.267 ns/op
# Warmup Iteration   5: 558.541 ns/op
# Warmup Iteration   6: 558.671 ns/op
# Warmup Iteration   7: 558.735 ns/op
# Warmup Iteration   8: 556.934 ns/op
# Warmup Iteration   9: 559.745 ns/op
# Warmup Iteration  10: 561.374 ns/op
Iteration   1: 556.405 ns/op
Iteration   2: 557.404 ns/op
Iteration   3: 558.882 ns/op
Iteration   4: 558.247 ns/op
Iteration   5: 558.616 ns/op
Iteration   6: 557.424 ns/op
Iteration   7: 562.362 ns/op
Iteration   8: 560.305 ns/op
Iteration   9: 557.861 ns/op
Iteration  10: 557.150 ns/op
Iteration  11: 558.226 ns/op
Iteration  12: 557.835 ns/op
Iteration  13: 557.306 ns/op
Iteration  14: 557.096 ns/op
Iteration  15: 556.357 ns/op
Iteration  16: 555.315 ns/op
Iteration  17: 559.524 ns/op
Iteration  18: 557.205 ns/op
Iteration  19: 556.084 ns/op
Iteration  20: 556.167 ns/op

# Run progress: 31.25% complete, ETA 01:36:20
# Fork: 2 of 2
# Warmup Iteration   1: 1838.991 ns/op
# Warmup Iteration   2: 620.014 ns/op
# Warmup Iteration   3: 561.021 ns/op
# Warmup Iteration   4: 560.901 ns/op
# Warmup Iteration   5: 562.898 ns/op
# Warmup Iteration   6: 560.739 ns/op
# Warmup Iteration   7: 562.374 ns/op
# Warmup Iteration   8: 563.168 ns/op
# Warmup Iteration   9: 560.523 ns/op
# Warmup Iteration  10: 560.521 ns/op
Iteration   1: 561.162 ns/op
Iteration   2: 562.486 ns/op
Iteration   3: 560.345 ns/op
Iteration   4: 560.797 ns/op
Iteration   5: 559.909 ns/op
Iteration   6: 560.134 ns/op
Iteration   7: 562.188 ns/op
Iteration   8: 558.359 ns/op
Iteration   9: 559.017 ns/op
Iteration  10: 559.187 ns/op
Iteration  11: 557.698 ns/op
Iteration  12: 557.191 ns/op
Iteration  13: 557.303 ns/op
Iteration  14: 559.516 ns/op
Iteration  15: 557.848 ns/op
Iteration  16: 563.536 ns/op
Iteration  17: 560.609 ns/op
Iteration  18: 562.534 ns/op
Iteration  19: 559.246 ns/op
Iteration  20: 560.576 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsYamlProvidedWhenShortOptionGiven":
  558.885 ±(99.9%) 1.143 ns/op [Average]
  (min, avg, max) = (555.315, 558.885, 563.536), stdev = 2.032
  CI (99.9%): [557.742, 560.028] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testtHasAdminPortWhenShortOptionGiven

# Run progress: 31.33% complete, ETA 01:37:06
# Fork: 1 of 2
# Warmup Iteration   1: 101081.015 ns/op
# Warmup Iteration   2: 226587.849 ns/op
# Warmup Iteration   3: 332472.787 ns/op
# Warmup Iteration   4: 415136.588 ns/op
# Warmup Iteration   5: 479119.432 ns/op
# Warmup Iteration   6: 547236.296 ns/op
# Warmup Iteration   7: 594672.345 ns/op
# Warmup Iteration   8: 644240.455 ns/op
# Warmup Iteration   9: 672681.836 ns/op
# Warmup Iteration  10: 752662.087 ns/op
Iteration   1: 773271.191 ns/op
Iteration   2: 795492.097 ns/op
Iteration   3: 857965.256 ns/op
Iteration   4: 875657.810 ns/op
Iteration   5: 918238.696 ns/op
Iteration   6: 963163.995 ns/op
Iteration   7: 1008593.805 ns/op
Iteration   8: 1040277.284 ns/op
Iteration   9: 1030609.007 ns/op
Iteration  10: 1076379.420 ns/op
Iteration  11: 1116748.033 ns/op
Iteration  12: 1132036.621 ns/op
Iteration  13: 325417.793 ns/op
Iteration  14: 360400.159 ns/op
Iteration  15: 435576.703 ns/op
Iteration  16: 502245.610 ns/op
Iteration  17: 551123.148 ns/op
Iteration  18: 603321.400 ns/op
Iteration  19: 662060.115 ns/op
Iteration  20: 699979.473 ns/op

# Run progress: 31.40% complete, ETA 01:37:52
# Fork: 2 of 2
# Warmup Iteration   1: 100327.598 ns/op
# Warmup Iteration   2: 228552.130 ns/op
# Warmup Iteration   3: 335142.658 ns/op
# Warmup Iteration   4: 425282.485 ns/op
# Warmup Iteration   5: 481204.895 ns/op
# Warmup Iteration   6: 531269.139 ns/op
# Warmup Iteration   7: 596471.593 ns/op
# Warmup Iteration   8: 646444.168 ns/op
# Warmup Iteration   9: 697601.405 ns/op
# Warmup Iteration  10: 715336.303 ns/op
Iteration   1: 774192.464 ns/op
Iteration   2: 809377.811 ns/op
Iteration   3: 847868.934 ns/op
Iteration   4: 887820.654 ns/op
Iteration   5: 937506.536 ns/op
Iteration   6: 943270.200 ns/op
Iteration   7: 978741.248 ns/op
Iteration   8: 1012697.157 ns/op
Iteration   9: 1048752.740 ns/op
Iteration  10: 1096832.198 ns/op
Iteration  11: 1118657.913 ns/op
Iteration  12: 1129479.949 ns/op
Iteration  13: 329829.048 ns/op
Iteration  14: 353997.816 ns/op
Iteration  15: 431159.310 ns/op
Iteration  16: 495579.660 ns/op
Iteration  17: 545731.576 ns/op
Iteration  18: 600187.445 ns/op
Iteration  19: 651197.861 ns/op
Iteration  20: 700116.629 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testtHasAdminPortWhenShortOptionGiven":
  785538.869 ±(99.9%) 143174.593 ns/op [Average]
  (min, avg, max) = (325417.793, 785538.869, 1132036.621), stdev = 254492.713
  CI (99.9%): [642364.277, 928713.462] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testtHasKeystoreLocationWhenShortOptionGiven

# Run progress: 31.48% complete, ETA 01:38:38
# Fork: 1 of 2
# Warmup Iteration   1: 104963.454 ns/op
# Warmup Iteration   2: 221912.133 ns/op
# Warmup Iteration   3: 335384.621 ns/op
# Warmup Iteration   4: 426613.470 ns/op
# Warmup Iteration   5: 493211.990 ns/op
# Warmup Iteration   6: 551578.649 ns/op
# Warmup Iteration   7: 600374.637 ns/op
# Warmup Iteration   8: 648319.738 ns/op
# Warmup Iteration   9: 693329.895 ns/op
# Warmup Iteration  10: 743079.549 ns/op
Iteration   1: 792567.865 ns/op
Iteration   2: 823502.988 ns/op
Iteration   3: 870461.956 ns/op
Iteration   4: 914022.727 ns/op
Iteration   5: 929227.798 ns/op
Iteration   6: 973363.401 ns/op
Iteration   7: 996119.628 ns/op
Iteration   8: 1025911.750 ns/op
Iteration   9: 1053470.415 ns/op
Iteration  10: 1092997.960 ns/op
Iteration  11: 1152029.438 ns/op
Iteration  12: 317817.628 ns/op
Iteration  13: 370998.084 ns/op
Iteration  14: 446336.228 ns/op
Iteration  15: 511101.083 ns/op
Iteration  16: 563253.984 ns/op
Iteration  17: 623185.254 ns/op
Iteration  18: 654162.065 ns/op
Iteration  19: 712162.588 ns/op
Iteration  20: 769480.233 ns/op

# Run progress: 31.55% complete, ETA 01:39:23
# Fork: 2 of 2
# Warmup Iteration   1: 105142.274 ns/op
# Warmup Iteration   2: 224154.358 ns/op
# Warmup Iteration   3: 339865.678 ns/op
# Warmup Iteration   4: 413703.762 ns/op
# Warmup Iteration   5: 482777.850 ns/op
# Warmup Iteration   6: 540759.685 ns/op
# Warmup Iteration   7: 583362.060 ns/op
# Warmup Iteration   8: 656592.510 ns/op
# Warmup Iteration   9: 689444.530 ns/op
# Warmup Iteration  10: 733846.544 ns/op
Iteration   1: 780228.745 ns/op
Iteration   2: 811798.477 ns/op
Iteration   3: 845451.361 ns/op
Iteration   4: 877913.454 ns/op
Iteration   5: 953644.368 ns/op
Iteration   6: 923842.931 ns/op
Iteration   7: 971172.405 ns/op
Iteration   8: 1035573.028 ns/op
Iteration   9: 1077477.469 ns/op
Iteration  10: 1082983.804 ns/op
Iteration  11: 760461.977 ns/op
Iteration  12: 283981.828 ns/op
Iteration  13: 392510.104 ns/op
Iteration  14: 483123.357 ns/op
Iteration  15: 548039.033 ns/op
Iteration  16: 563993.252 ns/op
Iteration  17: 627519.456 ns/op
Iteration  18: 668768.599 ns/op
Iteration  19: 718055.388 ns/op
Iteration  20: 774460.409 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testtHasKeystoreLocationWhenShortOptionGiven":
  769329.313 ±(99.9%) 131502.026 ns/op [Average]
  (min, avg, max) = (283981.828, 769329.313, 1152029.438), stdev = 233744.736
  CI (99.9%): [637827.287, 900831.339] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testtHasLocationWhenShortOptionGiven

# Run progress: 31.63% complete, ETA 01:40:08
# Fork: 1 of 2
# Warmup Iteration   1: 100673.081 ns/op
# Warmup Iteration   2: 225735.146 ns/op
# Warmup Iteration   3: 337887.903 ns/op
# Warmup Iteration   4: 416481.393 ns/op
# Warmup Iteration   5: 499224.024 ns/op
# Warmup Iteration   6: 538544.783 ns/op
# Warmup Iteration   7: 589642.494 ns/op
# Warmup Iteration   8: 642143.085 ns/op
# Warmup Iteration   9: 685165.454 ns/op
# Warmup Iteration  10: 720237.862 ns/op
Iteration   1: 765938.874 ns/op
Iteration   2: 807794.635 ns/op
Iteration   3: 833805.096 ns/op
Iteration   4: 883020.207 ns/op
Iteration   5: 905040.822 ns/op
Iteration   6: 947048.030 ns/op
Iteration   7: 982913.122 ns/op
Iteration   8: 1009187.966 ns/op
Iteration   9: 1032502.136 ns/op
Iteration  10: 1084201.272 ns/op
Iteration  11: 1122088.926 ns/op
Iteration  12: 1116057.098 ns/op
Iteration  13: 324645.678 ns/op
Iteration  14: 361273.961 ns/op
Iteration  15: 444330.830 ns/op
Iteration  16: 508477.087 ns/op
Iteration  17: 565107.434 ns/op
Iteration  18: 610082.605 ns/op
Iteration  19: 655046.507 ns/op
Iteration  20: 706315.968 ns/op

# Run progress: 31.70% complete, ETA 01:40:53
# Fork: 2 of 2
# Warmup Iteration   1: 102686.722 ns/op
# Warmup Iteration   2: 224259.384 ns/op
# Warmup Iteration   3: 331546.847 ns/op
# Warmup Iteration   4: 421501.081 ns/op
# Warmup Iteration   5: 474574.419 ns/op
# Warmup Iteration   6: 546763.429 ns/op
# Warmup Iteration   7: 600235.488 ns/op
# Warmup Iteration   8: 649176.032 ns/op
# Warmup Iteration   9: 680252.659 ns/op
# Warmup Iteration  10: 743009.868 ns/op
Iteration   1: 787690.691 ns/op
Iteration   2: 794078.271 ns/op
Iteration   3: 837274.060 ns/op
Iteration   4: 884886.550 ns/op
Iteration   5: 909416.819 ns/op
Iteration   6: 956415.500 ns/op
Iteration   7: 992995.002 ns/op
Iteration   8: 1039445.081 ns/op
Iteration   9: 1087436.775 ns/op
Iteration  10: 1089823.291 ns/op
Iteration  11: 1121559.882 ns/op
Iteration  12: 1137881.703 ns/op
Iteration  13: 342459.484 ns/op
Iteration  14: 365047.340 ns/op
Iteration  15: 443604.145 ns/op
Iteration  16: 496444.501 ns/op
Iteration  17: 550059.870 ns/op
Iteration  18: 612861.155 ns/op
Iteration  19: 659474.925 ns/op
Iteration  20: 698430.573 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testtHasLocationWhenShortOptionGiven":
  786804.097 ±(99.9%) 141604.903 ns/op [Average]
  (min, avg, max) = (324645.678, 786804.097, 1137881.703), stdev = 251702.591
  CI (99.9%): [645199.194, 928409.000] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testtHasStubsPortWhenLongOptionGiven

# Run progress: 31.78% complete, ETA 01:41:37
# Fork: 1 of 2
# Warmup Iteration   1: 99364.984 ns/op
# Warmup Iteration   2: 228336.400 ns/op
# Warmup Iteration   3: 331462.923 ns/op
# Warmup Iteration   4: 415897.825 ns/op
# Warmup Iteration   5: 500317.463 ns/op
# Warmup Iteration   6: 551712.687 ns/op
# Warmup Iteration   7: 591398.105 ns/op
# Warmup Iteration   8: 644509.773 ns/op
# Warmup Iteration   9: 689039.979 ns/op
# Warmup Iteration  10: 717898.103 ns/op
Iteration   1: 788565.997 ns/op
Iteration   2: 817652.965 ns/op
Iteration   3: 859601.328 ns/op
Iteration   4: 896291.541 ns/op
Iteration   5: 922040.465 ns/op
Iteration   6: 978224.667 ns/op
Iteration   7: 967309.012 ns/op
Iteration   8: 987518.417 ns/op
Iteration   9: 1030531.949 ns/op
Iteration  10: 1064278.456 ns/op
Iteration  11: 1133807.617 ns/op
Iteration  12: 1160747.429 ns/op
Iteration  13: 290560.490 ns/op
Iteration  14: 357891.549 ns/op
Iteration  15: 435223.814 ns/op
Iteration  16: 504749.994 ns/op
Iteration  17: 557328.934 ns/op
Iteration  18: 594785.898 ns/op
Iteration  19: 644817.785 ns/op
Iteration  20: 711934.651 ns/op

# Run progress: 31.85% complete, ETA 01:42:21
# Fork: 2 of 2
# Warmup Iteration   1: 100396.411 ns/op
# Warmup Iteration   2: 229807.837 ns/op
# Warmup Iteration   3: 337988.700 ns/op
# Warmup Iteration   4: 415949.271 ns/op
# Warmup Iteration   5: 483062.051 ns/op
# Warmup Iteration   6: 544410.106 ns/op
# Warmup Iteration   7: 587604.170 ns/op
# Warmup Iteration   8: 633645.724 ns/op
# Warmup Iteration   9: 676345.450 ns/op
# Warmup Iteration  10: 746142.940 ns/op
Iteration   1: 791437.987 ns/op
Iteration   2: 809932.825 ns/op
Iteration   3: 838953.630 ns/op
Iteration   4: 867743.606 ns/op
Iteration   5: 901794.161 ns/op
Iteration   6: 931616.834 ns/op
Iteration   7: 972405.480 ns/op
Iteration   8: 1004053.647 ns/op
Iteration   9: 1048224.751 ns/op
Iteration  10: 1085640.944 ns/op
Iteration  11: 1136260.593 ns/op
Iteration  12: 1148148.243 ns/op
Iteration  13: 285913.182 ns/op
Iteration  14: 378617.594 ns/op
Iteration  15: 444536.358 ns/op
Iteration  16: 504477.214 ns/op
Iteration  17: 562868.097 ns/op
Iteration  18: 621327.695 ns/op
Iteration  19: 664330.481 ns/op
Iteration  20: 713266.450 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testtHasStubsPortWhenLongOptionGiven":
  785385.318 ±(99.9%) 143562.010 ns/op [Average]
  (min, avg, max) = (285913.182, 785385.318, 1160747.429), stdev = 255181.346
  CI (99.9%): [641823.309, 928947.328] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testtHasStubsPortWhenShortOptionGiven

# Run progress: 31.93% complete, ETA 01:43:04
# Fork: 1 of 2
# Warmup Iteration   1: 102059.585 ns/op
# Warmup Iteration   2: 229724.864 ns/op
# Warmup Iteration   3: 340635.243 ns/op
# Warmup Iteration   4: 408502.344 ns/op
# Warmup Iteration   5: 488917.425 ns/op
# Warmup Iteration   6: 540400.324 ns/op
# Warmup Iteration   7: 610499.747 ns/op
# Warmup Iteration   8: 645340.924 ns/op
# Warmup Iteration   9: 691664.907 ns/op
# Warmup Iteration  10: 732784.323 ns/op
Iteration   1: 793712.314 ns/op
Iteration   2: 810874.699 ns/op
Iteration   3: 833298.983 ns/op
Iteration   4: 886971.025 ns/op
Iteration   5: 909297.375 ns/op
Iteration   6: 933630.859 ns/op
Iteration   7: 971566.143 ns/op
Iteration   8: 1023148.237 ns/op
Iteration   9: 1049056.591 ns/op
Iteration  10: 1064753.050 ns/op
Iteration  11: 1112084.703 ns/op
Iteration  12: 1164574.516 ns/op
Iteration  13: 440077.874 ns/op
Iteration  14: 324467.023 ns/op
Iteration  15: 415251.049 ns/op
Iteration  16: 477146.387 ns/op
Iteration  17: 545751.908 ns/op
Iteration  18: 575861.052 ns/op
Iteration  19: 639944.223 ns/op
Iteration  20: 699774.085 ns/op

# Run progress: 32.00% complete, ETA 01:43:47
# Fork: 2 of 2
# Warmup Iteration   1: 106989.917 ns/op
# Warmup Iteration   2: 199374.800 ns/op
# Warmup Iteration   3: 332954.755 ns/op
# Warmup Iteration   4: 410024.152 ns/op
# Warmup Iteration   5: 479674.772 ns/op
# Warmup Iteration   6: 535993.972 ns/op
# Warmup Iteration   7: 583899.940 ns/op
# Warmup Iteration   8: 635667.152 ns/op
# Warmup Iteration   9: 689996.156 ns/op
# Warmup Iteration  10: 744134.626 ns/op
Iteration   1: 791347.408 ns/op
Iteration   2: 813603.825 ns/op
Iteration   3: 858483.048 ns/op
Iteration   4: 884806.905 ns/op
Iteration   5: 928037.353 ns/op
Iteration   6: 970305.537 ns/op
Iteration   7: 984846.299 ns/op
Iteration   8: 1011123.751 ns/op
Iteration   9: 1049778.241 ns/op
Iteration  10: 1082226.997 ns/op
Iteration  11: 1141170.152 ns/op
Iteration  12: 1150934.033 ns/op
Iteration  13: 1014038.406 ns/op
Iteration  14: 276073.984 ns/op
Iteration  15: 381867.869 ns/op
Iteration  16: 449678.531 ns/op
Iteration  17: 508682.332 ns/op
Iteration  18: 566864.546 ns/op
Iteration  19: 629581.388 ns/op
Iteration  20: 688159.440 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testtHasStubsPortWhenShortOptionGiven":
  796321.304 ±(99.9%) 143954.441 ns/op [Average]
  (min, avg, max) = (276073.984, 796321.304, 1164574.516), stdev = 255878.892
  CI (99.9%): [652366.863, 940275.744] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testtIsWatchWhenShortOptionGiven

# Run progress: 32.08% complete, ETA 01:44:30
# Fork: 1 of 2
# Warmup Iteration   1: 98318.105 ns/op
# Warmup Iteration   2: 225265.364 ns/op
# Warmup Iteration   3: 345856.212 ns/op
# Warmup Iteration   4: 420361.408 ns/op
# Warmup Iteration   5: 482827.519 ns/op
# Warmup Iteration   6: 545377.981 ns/op
# Warmup Iteration   7: 602848.377 ns/op
# Warmup Iteration   8: 655858.691 ns/op
# Warmup Iteration   9: 700356.238 ns/op
# Warmup Iteration  10: 728042.194 ns/op
Iteration   1: 768579.067 ns/op
Iteration   2: 814488.143 ns/op
Iteration   3: 846975.373 ns/op
Iteration   4: 874328.517 ns/op
Iteration   5: 930964.619 ns/op
Iteration   6: 984869.063 ns/op
Iteration   7: 994132.914 ns/op
Iteration   8: 1017867.277 ns/op
Iteration   9: 1013368.555 ns/op
Iteration  10: 1078279.784 ns/op
Iteration  11: 1108989.073 ns/op
Iteration  12: 1151723.869 ns/op
Iteration  13: 640750.004 ns/op
Iteration  14: 295467.965 ns/op
Iteration  15: 398800.566 ns/op
Iteration  16: 471772.286 ns/op
Iteration  17: 532049.436 ns/op
Iteration  18: 573806.972 ns/op
Iteration  19: 622866.938 ns/op
Iteration  20: 679286.740 ns/op

# Run progress: 32.15% complete, ETA 01:45:13
# Fork: 2 of 2
# Warmup Iteration   1: 97000.721 ns/op
# Warmup Iteration   2: 228854.516 ns/op
# Warmup Iteration   3: 334869.154 ns/op
# Warmup Iteration   4: 428376.517 ns/op
# Warmup Iteration   5: 478474.804 ns/op
# Warmup Iteration   6: 546971.709 ns/op
# Warmup Iteration   7: 595766.300 ns/op
# Warmup Iteration   8: 646664.285 ns/op
# Warmup Iteration   9: 710235.011 ns/op
# Warmup Iteration  10: 735972.506 ns/op
Iteration   1: 776131.276 ns/op
Iteration   2: 813150.666 ns/op
Iteration   3: 855995.437 ns/op
Iteration   4: 876420.549 ns/op
Iteration   5: 889115.980 ns/op
Iteration   6: 956230.894 ns/op
Iteration   7: 975840.066 ns/op
Iteration   8: 1009112.914 ns/op
Iteration   9: 1054725.331 ns/op
Iteration  10: 1104835.528 ns/op
Iteration  11: 1114758.080 ns/op
Iteration  12: 1127587.823 ns/op
Iteration  13: 334407.245 ns/op
Iteration  14: 342089.561 ns/op
Iteration  15: 424586.601 ns/op
Iteration  16: 492337.875 ns/op
Iteration  17: 549256.887 ns/op
Iteration  18: 588355.497 ns/op
Iteration  19: 652489.070 ns/op
Iteration  20: 688649.348 ns/op


Result "io.github.azagniotov.stubby4j.cli.CommandLineInterpreterTest._Benchmark.benchmark_testtIsWatchWhenShortOptionGiven":
  785636.095 ±(99.9%) 141913.926 ns/op [Average]
  (min, avg, max) = (295467.965, 785636.095, 1151723.869), stdev = 252251.880
  CI (99.9%): [643722.168, 927550.021] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doDeleteOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided

# Run progress: 32.23% complete, ETA 01:45:55
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doDeleteOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:687)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doDeleteOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doDeleteOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doDeleteOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doDeleteOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doDeleteOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doDeleteOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 32.30% complete, ETA 01:45:34
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doDeleteOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:687)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doDeleteOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doDeleteOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doDeleteOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doDeleteOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doDeleteOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doDeleteOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doDelete_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided

# Run progress: 32.38% complete, ETA 01:45:12
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doDelete_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:681)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doDelete_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doDelete_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doDelete_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doDelete_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doDelete_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doDelete_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 32.45% complete, ETA 01:44:51
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doDelete_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:681)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doDelete_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doDelete_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doDelete_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doDelete_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doDelete_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doDelete_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGetOverSsl_ShouldMakeSuccessfulGet

# Run progress: 32.53% complete, ETA 01:44:31
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGetOverSsl_ShouldMakeSuccessfulGet(StubbyClientTest.java:447)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGet_jmhTest.benchmark_doGetOverSsl_ShouldMakeSuccessfulGet_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGet_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGet_jmhTest.benchmark_doGetOverSsl_ShouldMakeSuccessfulGet_AverageTime(StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGet_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 32.61% complete, ETA 01:44:10
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGetOverSsl_ShouldMakeSuccessfulGet(StubbyClientTest.java:447)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGet_jmhTest.benchmark_doGetOverSsl_ShouldMakeSuccessfulGet_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGet_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGet_jmhTest.benchmark_doGetOverSsl_ShouldMakeSuccessfulGet_AverageTime(StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGet_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided

# Run progress: 32.68% complete, ETA 01:43:49
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:495)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 32.76% complete, ETA 01:43:28
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:495)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided

# Run progress: 32.83% complete, ETA 01:43:08
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:501)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 32.91% complete, ETA 01:42:48
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:501)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided

# Run progress: 32.98% complete, ETA 01:42:27
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:507)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 33.06% complete, ETA 01:42:07
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:507)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGetOverSsl_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGet

# Run progress: 33.13% complete, ETA 01:41:47
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGet(StubbyClientTest.java:471)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGet_jmhTest.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGet_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGet_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGet_jmhTest.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGet_AverageTime(StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGet_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 33.21% complete, ETA 01:41:27
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGet(StubbyClientTest.java:471)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGet_jmhTest.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGet_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGet_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGet_jmhTest.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGet_AverageTime(StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGet_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided

# Run progress: 33.28% complete, ETA 01:41:07
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:513)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 33.36% complete, ETA 01:40:47
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:513)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided

# Run progress: 33.43% complete, ETA 01:40:27
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:519)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 33.51% complete, ETA 01:40:07
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:519)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided

# Run progress: 33.58% complete, ETA 01:39:48
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:525)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 33.66% complete, ETA 01:39:28
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:525)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGetUsingDefaultStubbyPortAndHost_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGet_ShouldMakeSuccessfulGet

# Run progress: 33.73% complete, ETA 01:39:09
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGet(StubbyClientTest.java:465)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGet_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGet_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 33.81% complete, ETA 01:38:49
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGet(StubbyClientTest.java:465)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGet_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGet_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided

# Run progress: 33.89% complete, ETA 01:38:30
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:477)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 33.96% complete, ETA 01:38:11
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:477)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenNoAuthCredentialsIsProvided

# Run progress: 34.04% complete, ETA 01:37:52
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenNoAuthCredentialsIsProvided(StubbyClientTest.java:549)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenNoAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenNoAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenNoAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenNoAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenNoAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenNoAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 34.11% complete, ETA 01:37:33
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenNoAuthCredentialsIsProvided(StubbyClientTest.java:549)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenNoAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenNoAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenNoAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenNoAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenNoAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenNoAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenWrongAuthCredentialsIsProvided

# Run progress: 34.19% complete, ETA 01:37:14
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenWrongAuthCredentialsIsProvided(StubbyClientTest.java:531)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenWrongAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenWrongAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 34.26% complete, ETA 01:36:55
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenWrongAuthCredentialsIsProvided(StubbyClientTest.java:531)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenWrongAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenWrongAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBasicAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided

# Run progress: 34.34% complete, ETA 01:36:36
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:483)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 34.41% complete, ETA 01:36:17
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:483)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenNoAuthCredentialsIsProvided

# Run progress: 34.49% complete, ETA 01:35:59
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenNoAuthCredentialsIsProvided(StubbyClientTest.java:555)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenNoAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenNoAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenNoAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenNoAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenNoAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenNoAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 34.56% complete, ETA 01:35:40
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenNoAuthCredentialsIsProvided(StubbyClientTest.java:555)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenNoAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenNoAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenNoAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenNoAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenNoAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenNoAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenWrongAuthCredentialsIsProvided

# Run progress: 34.64% complete, ETA 01:35:22
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenWrongAuthCredentialsIsProvided(StubbyClientTest.java:537)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenWrongAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenWrongAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 34.71% complete, ETA 01:35:03
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenWrongAuthCredentialsIsProvided(StubbyClientTest.java:537)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenWrongAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenWrongAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithBearerAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided

# Run progress: 34.79% complete, ETA 01:34:45
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:489)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 34.86% complete, ETA 01:34:27
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:489)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenNoAuthCredentialsIsProvided

# Run progress: 34.94% complete, ETA 01:34:08
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenNoAuthCredentialsIsProvided(StubbyClientTest.java:561)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenNoAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenNoAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenNoAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenNoAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenNoAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenNoAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 35.02% complete, ETA 01:33:50
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenNoAuthCredentialsIsProvided(StubbyClientTest.java:561)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenNoAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenNoAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenNoAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenNoAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenNoAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenNoAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenWrongAuthCredentialsIsProvided

# Run progress: 35.09% complete, ETA 01:33:32
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenWrongAuthCredentialsIsProvided(StubbyClientTest.java:543)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenWrongAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenWrongAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 35.17% complete, ETA 01:33:14
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenWrongAuthCredentialsIsProvided(StubbyClientTest.java:543)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenWrongAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenWrongAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGetWithCustomAuth_WhenWrongAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGet_ShouldMakeSuccessfulGet_AndReturnSequencedResponse

# Run progress: 35.24% complete, ETA 01:32:57
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGet_AndReturnSequencedResponse(StubbyClientTest.java:663)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_AndReturnSequencedResponse_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGet_AndReturnSequencedResponse_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_AndReturnSequencedResponse_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_AndReturnSequencedResponse_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGet_AndReturnSequencedResponse_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_AndReturnSequencedResponse_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 35.32% complete, ETA 01:32:39
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGet_AndReturnSequencedResponse(StubbyClientTest.java:663)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_AndReturnSequencedResponse_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGet_AndReturnSequencedResponse_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_AndReturnSequencedResponse_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_AndReturnSequencedResponse_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGet_AndReturnSequencedResponse_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_AndReturnSequencedResponse_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doGet_ShouldMakeSuccessfulGet_WhenGivenEmptyUri

# Run progress: 35.39% complete, ETA 01:32:21
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGet_WhenGivenEmptyUri(StubbyClientTest.java:567)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_WhenGivenEmptyUri_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGet_WhenGivenEmptyUri_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_WhenGivenEmptyUri_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_WhenGivenEmptyUri_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGet_WhenGivenEmptyUri_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_WhenGivenEmptyUri_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 35.47% complete, ETA 01:32:03
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doGet_ShouldMakeSuccessfulGet_WhenGivenEmptyUri(StubbyClientTest.java:567)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_WhenGivenEmptyUri_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGet_WhenGivenEmptyUri_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_WhenGivenEmptyUri_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_WhenGivenEmptyUri_jmhTest.benchmark_doGet_ShouldMakeSuccessfulGet_WhenGivenEmptyUri_AverageTime(StubbyClientTest__Benchmark_benchmark_doGet_ShouldMakeSuccessfulGet_WhenGivenEmptyUri_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost

# Run progress: 35.54% complete, ETA 01:31:46
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost(StubbyClientTest.java:591)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_jmhTest.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_jmhTest.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_AverageTime(StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 35.62% complete, ETA 01:31:28
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost(StubbyClientTest.java:591)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_jmhTest.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_jmhTest.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_AverageTime(StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided

# Run progress: 35.69% complete, ETA 01:31:11
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:585)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 35.77% complete, ETA 01:30:54
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:585)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_WhenEmptyPostGiven

# Run progress: 35.84% complete, ETA 01:30:36
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_WhenEmptyPostGiven(StubbyClientTest.java:633)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_jmhTest.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_jmhTest.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_AverageTime(StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 35.92% complete, ETA 01:30:19
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_WhenEmptyPostGiven(StubbyClientTest.java:633)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_jmhTest.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_jmhTest.benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_AverageTime(StubbyClientTest__Benchmark_benchmark_doPostUsingDefaults_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost

# Run progress: 35.99% complete, ETA 01:30:02
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost(StubbyClientTest.java:573)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 36.07% complete, ETA 01:29:45
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost(StubbyClientTest.java:573)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doPost_ShouldMakeSuccessfulPostToCreateStubData

# Run progress: 36.14% complete, ETA 01:29:28
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPostToCreateStubData(StubbyClientTest.java:639)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPostToCreateStubData_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPostToCreateStubData_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPostToCreateStubData_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPostToCreateStubData_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPostToCreateStubData_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPostToCreateStubData_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 36.22% complete, ETA 01:29:11
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPostToCreateStubData(StubbyClientTest.java:639)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPostToCreateStubData_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPostToCreateStubData_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPostToCreateStubData_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPostToCreateStubData_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPostToCreateStubData_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPostToCreateStubData_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doPost_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided

# Run progress: 36.30% complete, ETA 01:28:54
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:579)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 36.37% complete, ETA 01:28:38
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided(StubbyClientTest.java:579)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPostWithBasicAuth_WhenAuthCredentialsIsProvided_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenEmptyPostGiven

# Run progress: 36.45% complete, ETA 01:28:21
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenEmptyPostGiven(StubbyClientTest.java:627)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 36.52% complete, ETA 01:28:04
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenEmptyPostGiven(StubbyClientTest.java:627)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenEmptyPostGiven_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyPostData

# Run progress: 36.60% complete, ETA 01:27:48
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyPostData(StubbyClientTest.java:615)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyPostData_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyPostData_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyPostData_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyPostData_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyPostData_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyPostData_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 36.67% complete, ETA 01:27:31
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyPostData(StubbyClientTest.java:615)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyPostData_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyPostData_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyPostData_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyPostData_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyPostData_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyPostData_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyUri

# Run progress: 36.75% complete, ETA 01:27:15
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyUri(StubbyClientTest.java:597)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyUri_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyUri_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyUri_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyUri_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyUri_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyUri_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 36.82% complete, ETA 01:26:58
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyUri(StubbyClientTest.java:597)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyUri_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyUri_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyUri_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyUri_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyUri_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenEmptyUri_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenNullUri

# Run progress: 36.90% complete, ETA 01:26:42
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenNullUri(StubbyClientTest.java:603)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenNullUri_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenNullUri_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenNullUri_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenNullUri_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenNullUri_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenNullUri_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 36.97% complete, ETA 01:26:26
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenNullUri(StubbyClientTest.java:603)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenNullUri_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenNullUri_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenNullUri_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenNullUri_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenNullUri_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenNullUri_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenWrongPostData

# Run progress: 37.05% complete, ETA 01:26:09
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenWrongPostData(StubbyClientTest.java:609)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenWrongPostData_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenWrongPostData_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenWrongPostData_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenWrongPostData_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenWrongPostData_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenWrongPostData_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 37.12% complete, ETA 01:25:53
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenWrongPostData(StubbyClientTest.java:609)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenWrongPostData_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenWrongPostData_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenWrongPostData_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenWrongPostData_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenWrongPostData_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenGivenWrongPostData_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenNullPostGiven

# Run progress: 37.20% complete, ETA 01:25:37
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenNullPostGiven(StubbyClientTest.java:621)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenNullPostGiven_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenNullPostGiven_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenNullPostGiven_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenNullPostGiven_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenNullPostGiven_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenNullPostGiven_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 37.27% complete, ETA 01:25:21
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenNullPostGiven(StubbyClientTest.java:621)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenNullPostGiven_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenNullPostGiven_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenNullPostGiven_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenNullPostGiven_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenNullPostGiven_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenNullPostGiven_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsEmpty

# Run progress: 37.35% complete, ETA 01:25:05
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsEmpty(StubbyClientTest.java:651)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsEmpty_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsEmpty_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsEmpty_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsEmpty_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsEmpty_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsEmpty_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 37.42% complete, ETA 01:24:49
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsEmpty(StubbyClientTest.java:651)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsEmpty_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsEmpty_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsEmpty_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsEmpty_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsEmpty_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsEmpty_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsNull

# Run progress: 37.50% complete, ETA 01:24:34
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsNull(StubbyClientTest.java:657)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsNull_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsNull_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsNull_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsNull_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsNull_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsNull_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 37.58% complete, ETA 01:24:18
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsNull(StubbyClientTest.java:657)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsNull_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsNull_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsNull_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsNull_jmhTest.benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsNull_AverageTime(StubbyClientTest__Benchmark_benchmark_doPost_ShouldMakeSuccessfulPost_WhenPostStubDataIsNull_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doPutOverSsl_ShouldMakeSuccessfulPut

# Run progress: 37.65% complete, ETA 01:24:02
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPutOverSsl_ShouldMakeSuccessfulPut(StubbyClientTest.java:675)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPutOverSsl_ShouldMakeSuccessfulPut_jmhTest.benchmark_doPutOverSsl_ShouldMakeSuccessfulPut_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPutOverSsl_ShouldMakeSuccessfulPut_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPutOverSsl_ShouldMakeSuccessfulPut_jmhTest.benchmark_doPutOverSsl_ShouldMakeSuccessfulPut_AverageTime(StubbyClientTest__Benchmark_benchmark_doPutOverSsl_ShouldMakeSuccessfulPut_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 37.73% complete, ETA 01:23:46
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPutOverSsl_ShouldMakeSuccessfulPut(StubbyClientTest.java:675)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPutOverSsl_ShouldMakeSuccessfulPut_jmhTest.benchmark_doPutOverSsl_ShouldMakeSuccessfulPut_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPutOverSsl_ShouldMakeSuccessfulPut_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPutOverSsl_ShouldMakeSuccessfulPut_jmhTest.benchmark_doPutOverSsl_ShouldMakeSuccessfulPut_AverageTime(StubbyClientTest__Benchmark_benchmark_doPutOverSsl_ShouldMakeSuccessfulPut_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_doPut_ShouldMakeSuccessfulPut

# Run progress: 37.80% complete, ETA 01:23:31
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPut_ShouldMakeSuccessfulPut(StubbyClientTest.java:669)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPut_ShouldMakeSuccessfulPut_jmhTest.benchmark_doPut_ShouldMakeSuccessfulPut_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPut_ShouldMakeSuccessfulPut_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPut_ShouldMakeSuccessfulPut_jmhTest.benchmark_doPut_ShouldMakeSuccessfulPut_AverageTime(StubbyClientTest__Benchmark_benchmark_doPut_ShouldMakeSuccessfulPut_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 37.88% complete, ETA 01:23:15
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_doPut_ShouldMakeSuccessfulPut(StubbyClientTest.java:669)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPut_ShouldMakeSuccessfulPut_jmhTest.benchmark_doPut_ShouldMakeSuccessfulPut_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_doPut_ShouldMakeSuccessfulPut_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_doPut_ShouldMakeSuccessfulPut_jmhTest.benchmark_doPut_ShouldMakeSuccessfulPut_AverageTime(StubbyClientTest__Benchmark_benchmark_doPut_ShouldMakeSuccessfulPut_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_makeRequest_ShouldFailToMakeRequest_WhenUnsupportedMethodGiven

# Run progress: 37.95% complete, ETA 01:23:00
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_makeRequest_ShouldFailToMakeRequest_WhenUnsupportedMethodGiven(StubbyClientTest.java:459)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_makeRequest_ShouldFailToMakeRequest_WhenUnsupportedMethodGiven_jmhTest.benchmark_makeRequest_ShouldFailToMakeRequest_WhenUnsupportedMethodGiven_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_makeRequest_ShouldFailToMakeRequest_WhenUnsupportedMethodGiven_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_makeRequest_ShouldFailToMakeRequest_WhenUnsupportedMethodGiven_jmhTest.benchmark_makeRequest_ShouldFailToMakeRequest_WhenUnsupportedMethodGiven_AverageTime(StubbyClientTest__Benchmark_benchmark_makeRequest_ShouldFailToMakeRequest_WhenUnsupportedMethodGiven_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 38.03% complete, ETA 01:22:45
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_makeRequest_ShouldFailToMakeRequest_WhenUnsupportedMethodGiven(StubbyClientTest.java:459)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_makeRequest_ShouldFailToMakeRequest_WhenUnsupportedMethodGiven_jmhTest.benchmark_makeRequest_ShouldFailToMakeRequest_WhenUnsupportedMethodGiven_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_makeRequest_ShouldFailToMakeRequest_WhenUnsupportedMethodGiven_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_makeRequest_ShouldFailToMakeRequest_WhenUnsupportedMethodGiven_jmhTest.benchmark_makeRequest_ShouldFailToMakeRequest_WhenUnsupportedMethodGiven_AverageTime(StubbyClientTest__Benchmark_benchmark_makeRequest_ShouldFailToMakeRequest_WhenUnsupportedMethodGiven_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_makeRequest_ShouldMakeSuccessfulGetOverSsl

# Run progress: 38.10% complete, ETA 01:22:29
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_makeRequest_ShouldMakeSuccessfulGetOverSsl(StubbyClientTest.java:453)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_makeRequest_ShouldMakeSuccessfulGetOverSsl_jmhTest.benchmark_makeRequest_ShouldMakeSuccessfulGetOverSsl_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_makeRequest_ShouldMakeSuccessfulGetOverSsl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_makeRequest_ShouldMakeSuccessfulGetOverSsl_jmhTest.benchmark_makeRequest_ShouldMakeSuccessfulGetOverSsl_AverageTime(StubbyClientTest__Benchmark_benchmark_makeRequest_ShouldMakeSuccessfulGetOverSsl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 38.18% complete, ETA 01:22:14
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_makeRequest_ShouldMakeSuccessfulGetOverSsl(StubbyClientTest.java:453)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_makeRequest_ShouldMakeSuccessfulGetOverSsl_jmhTest.benchmark_makeRequest_ShouldMakeSuccessfulGetOverSsl_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_makeRequest_ShouldMakeSuccessfulGetOverSsl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_makeRequest_ShouldMakeSuccessfulGetOverSsl_jmhTest.benchmark_makeRequest_ShouldMakeSuccessfulGetOverSsl_AverageTime(StubbyClientTest__Benchmark_benchmark_makeRequest_ShouldMakeSuccessfulGetOverSsl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientTest._Benchmark.benchmark_updateStubbedData_ShouldMakeSuccessfulPostToCreateStubData

# Run progress: 38.25% complete, ETA 01:21:59
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_updateStubbedData_ShouldMakeSuccessfulPostToCreateStubData(StubbyClientTest.java:645)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_updateStubbedData_ShouldMakeSuccessfulPostToCreateStubData_jmhTest.benchmark_updateStubbedData_ShouldMakeSuccessfulPostToCreateStubData_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_updateStubbedData_ShouldMakeSuccessfulPostToCreateStubData_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_updateStubbedData_ShouldMakeSuccessfulPostToCreateStubData_jmhTest.benchmark_updateStubbedData_ShouldMakeSuccessfulPostToCreateStubData_AverageTime(StubbyClientTest__Benchmark_benchmark_updateStubbedData_ShouldMakeSuccessfulPostToCreateStubData_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 38.33% complete, ETA 01:21:44
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "java.net.URL.getFile()" because "url" is null
	at io.github.azagniotov.stubby4j.client.StubbyClientTest.beforeClass(StubbyClientTest.java:39)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.beforeClass(StubbyClientTest.java:693)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.client.StubbyClientTest$_Benchmark.benchmark_updateStubbedData_ShouldMakeSuccessfulPostToCreateStubData(StubbyClientTest.java:645)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_updateStubbedData_ShouldMakeSuccessfulPostToCreateStubData_jmhTest.benchmark_updateStubbedData_ShouldMakeSuccessfulPostToCreateStubData_avgt_jmhStub(StubbyClientTest__Benchmark_benchmark_updateStubbedData_ShouldMakeSuccessfulPostToCreateStubData_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.client.jmh_generated.StubbyClientTest__Benchmark_benchmark_updateStubbedData_ShouldMakeSuccessfulPostToCreateStubData_jmhTest.benchmark_updateStubbedData_ShouldMakeSuccessfulPostToCreateStubData_AverageTime(StubbyClientTest__Benchmark_benchmark_updateStubbedData_ShouldMakeSuccessfulPostToCreateStubData_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.client.StubbyClientYamlessTest._Benchmark.benchmark_shouldStartStubby4jUsingStubbyClientByCallingYamlessAPI

# Run progress: 38.40% complete, ETA 01:21:29
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

expected: This is working!
but was : Not Found
	at io.github.azagniotov.stubby4j.client.StubbyClientYamlessTest.shouldStartStubby4jUsingStubbyClientByCallingYamlessAPI(StubbyClientYamlessTest.java:42)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[pool-2-thread-1,5,main]
  at java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
  at java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
  at java.base@17.0.10/java.lang.Thread.run(Thread.java:840)

Thread[DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[pool-2-thread-1,5,main]
  at java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
  at java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
  at java.base@17.0.10/java.lang.Thread.run(Thread.java:840)

Thread[DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[pool-2-thread-1,5,main]
  at java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
  at java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
  at java.base@17.0.10/java.lang.Thread.run(Thread.java:840)

Thread[DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[pool-2-thread-1,5,main]
  at java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
  at java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
  at java.base@17.0.10/java.lang.Thread.run(Thread.java:840)

Thread[DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[pool-2-thread-1,5,main]
  at java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
  at java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
  at java.base@17.0.10/java.lang.Thread.run(Thread.java:840)

Thread[DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[pool-2-thread-1,5,main]
  at java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
  at java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
  at java.base@17.0.10/java.lang.Thread.run(Thread.java:840)

Thread[DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 38.48% complete, ETA 01:22:04
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

expected: This is working!
but was : Not Found
	at io.github.azagniotov.stubby4j.client.StubbyClientYamlessTest.shouldStartStubby4jUsingStubbyClientByCallingYamlessAPI(StubbyClientYamlessTest.java:42)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[pool-2-thread-1,5,main]
  at java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
  at java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
  at java.base@17.0.10/java.lang.Thread.run(Thread.java:840)

Thread[DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[pool-2-thread-1,5,main]
  at java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
  at java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
  at java.base@17.0.10/java.lang.Thread.run(Thread.java:840)

Thread[DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[pool-2-thread-1,5,main]
  at java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
  at java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
  at java.base@17.0.10/java.lang.Thread.run(Thread.java:840)

Thread[DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[pool-2-thread-1,5,main]
  at java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
  at java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
  at java.base@17.0.10/java.lang.Thread.run(Thread.java:840)

Thread[DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[pool-2-thread-1,5,main]
  at java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
  at java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
  at java.base@17.0.10/java.lang.Thread.run(Thread.java:840)

Thread[DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[pool-2-thread-1,5,main]
  at java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
  at java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
  at java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
  at java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
  at java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
  at java.base@17.0.10/java.lang.Thread.run(Thread.java:840)

Thread[DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.AbstractHandlerExtensionTest._Benchmark.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled

# Run progress: 38.55% complete, ETA 01:22:39
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.server.Request.isHandled()" because "this.mockBaseRequest" is null
	at io.github.azagniotov.stubby4j.handlers.AbstractHandlerExtensionTest.shouldDetermineRequestAsHandledWhenBaseRequestHandled(AbstractHandlerExtensionTest.java:38)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AbstractHandlerExtensionTest$_Benchmark.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled(AbstractHandlerExtensionTest.java:67)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_avgt_jmhStub(AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_AverageTime(AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 38.63% complete, ETA 01:22:24
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.server.Request.isHandled()" because "this.mockBaseRequest" is null
	at io.github.azagniotov.stubby4j.handlers.AbstractHandlerExtensionTest.shouldDetermineRequestAsHandledWhenBaseRequestHandled(AbstractHandlerExtensionTest.java:38)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AbstractHandlerExtensionTest$_Benchmark.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled(AbstractHandlerExtensionTest.java:67)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_avgt_jmhStub(AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_AverageTime(AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.AbstractHandlerExtensionTest._Benchmark.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted

# Run progress: 38.70% complete, ETA 01:22:09
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.server.Request.isHandled()" because "this.mockBaseRequest" is null
	at io.github.azagniotov.stubby4j.handlers.AbstractHandlerExtensionTest.shouldDetermineRequestAsHandledWhenResponseCommitted(AbstractHandlerExtensionTest.java:52)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AbstractHandlerExtensionTest$_Benchmark.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted(AbstractHandlerExtensionTest.java:73)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_avgt_jmhStub(AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_AverageTime(AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 38.78% complete, ETA 01:21:54
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.server.Request.isHandled()" because "this.mockBaseRequest" is null
	at io.github.azagniotov.stubby4j.handlers.AbstractHandlerExtensionTest.shouldDetermineRequestAsHandledWhenResponseCommitted(AbstractHandlerExtensionTest.java:52)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AbstractHandlerExtensionTest$_Benchmark.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted(AbstractHandlerExtensionTest.java:73)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_avgt_jmhStub(AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_AverageTime(AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.AbstractHandlerExtensionTest._Benchmark.benchmark_shouldDetermineRequestAsNotHandled

# Run progress: 38.86% complete, ETA 01:21:39
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.server.Request.isHandled()" because "this.mockBaseRequest" is null
	at io.github.azagniotov.stubby4j.handlers.AbstractHandlerExtensionTest.shouldDetermineRequestAsNotHandled(AbstractHandlerExtensionTest.java:67)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AbstractHandlerExtensionTest$_Benchmark.benchmark_shouldDetermineRequestAsNotHandled(AbstractHandlerExtensionTest.java:79)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsNotHandled_jmhTest.benchmark_shouldDetermineRequestAsNotHandled_avgt_jmhStub(AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsNotHandled_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsNotHandled_jmhTest.benchmark_shouldDetermineRequestAsNotHandled_AverageTime(AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsNotHandled_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 38.93% complete, ETA 01:21:24
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.server.Request.isHandled()" because "this.mockBaseRequest" is null
	at io.github.azagniotov.stubby4j.handlers.AbstractHandlerExtensionTest.shouldDetermineRequestAsNotHandled(AbstractHandlerExtensionTest.java:67)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AbstractHandlerExtensionTest$_Benchmark.benchmark_shouldDetermineRequestAsNotHandled(AbstractHandlerExtensionTest.java:79)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsNotHandled_jmhTest.benchmark_shouldDetermineRequestAsNotHandled_avgt_jmhStub(AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsNotHandled_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsNotHandled_jmhTest.benchmark_shouldDetermineRequestAsNotHandled_AverageTime(AbstractHandlerExtensionTest__Benchmark_benchmark_shouldDetermineRequestAsNotHandled_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest._Benchmark.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled

# Run progress: 39.01% complete, ETA 01:21:09
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled(AjaxResourceContentHandlerTest.java:225)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 39.08% complete, ETA 01:20:54
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled(AjaxResourceContentHandlerTest.java:225)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest._Benchmark.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted

# Run progress: 39.16% complete, ETA 01:20:39
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted(AjaxResourceContentHandlerTest.java:231)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 39.23% complete, ETA 01:20:25
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted(AjaxResourceContentHandlerTest.java:231)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest._Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchContentForWrongStubType

# Run progress: 39.31% complete, ETA 01:20:10
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchContentForWrongStubType(AjaxResourceContentHandlerTest.java:261)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchContentForWrongStubType_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchContentForWrongStubType_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchContentForWrongStubType_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchContentForWrongStubType_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchContentForWrongStubType_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchContentForWrongStubType_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 39.38% complete, ETA 01:19:55
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchContentForWrongStubType(AjaxResourceContentHandlerTest.java:261)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchContentForWrongStubType_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchContentForWrongStubType_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchContentForWrongStubType_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchContentForWrongStubType_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchContentForWrongStubType_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchContentForWrongStubType_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest._Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentProxyConfigContent

# Run progress: 39.46% complete, ETA 01:19:41
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentProxyConfigContent(AjaxResourceContentHandlerTest.java:273)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentProxyConfigContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentProxyConfigContent_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentProxyConfigContent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentProxyConfigContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentProxyConfigContent_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentProxyConfigContent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 39.53% complete, ETA 01:19:26
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentProxyConfigContent(AjaxResourceContentHandlerTest.java:273)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentProxyConfigContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentProxyConfigContent_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentProxyConfigContent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentProxyConfigContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentProxyConfigContent_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentProxyConfigContent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest._Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentStubbedSequencedResponseContent

# Run progress: 39.61% complete, ETA 01:19:12
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentStubbedSequencedResponseContent(AjaxResourceContentHandlerTest.java:255)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentStubbedSequencedResponseContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentStubbedSequencedResponseContent_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentStubbedSequencedResponseContent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentStubbedSequencedResponseContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentStubbedSequencedResponseContent_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentStubbedSequencedResponseContent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 39.68% complete, ETA 01:18:58
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentStubbedSequencedResponseContent(AjaxResourceContentHandlerTest.java:255)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentStubbedSequencedResponseContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentStubbedSequencedResponseContent_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentStubbedSequencedResponseContent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentStubbedSequencedResponseContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentStubbedSequencedResponseContent_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchNonExistentStubbedSequencedResponseContent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest._Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedProxyConfigContent

# Run progress: 39.76% complete, ETA 01:18:43
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedProxyConfigContent(AjaxResourceContentHandlerTest.java:267)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedProxyConfigContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedProxyConfigContent_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedProxyConfigContent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedProxyConfigContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedProxyConfigContent_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedProxyConfigContent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 39.83% complete, ETA 01:18:29
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedProxyConfigContent(AjaxResourceContentHandlerTest.java:267)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedProxyConfigContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedProxyConfigContent_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedProxyConfigContent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedProxyConfigContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedProxyConfigContent_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedProxyConfigContent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest._Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedRequestContent

# Run progress: 39.91% complete, ETA 01:18:15
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedRequestContent(AjaxResourceContentHandlerTest.java:237)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedRequestContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedRequestContent_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedRequestContent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedRequestContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedRequestContent_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedRequestContent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 39.98% complete, ETA 01:18:01
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedRequestContent(AjaxResourceContentHandlerTest.java:237)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedRequestContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedRequestContent_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedRequestContent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedRequestContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedRequestContent_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedRequestContent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest._Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedResponseContent

# Run progress: 40.06% complete, ETA 01:17:47
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedResponseContent(AjaxResourceContentHandlerTest.java:243)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedResponseContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedResponseContent_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedResponseContent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedResponseContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedResponseContent_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedResponseContent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 40.14% complete, ETA 01:17:33
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedResponseContent(AjaxResourceContentHandlerTest.java:243)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedResponseContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedResponseContent_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedResponseContent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedResponseContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedResponseContent_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedResponseContent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest._Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedSequencedResponseContent

# Run progress: 40.21% complete, ETA 01:17:19
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedSequencedResponseContent(AjaxResourceContentHandlerTest.java:249)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedSequencedResponseContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedSequencedResponseContent_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedSequencedResponseContent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedSequencedResponseContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedSequencedResponseContent_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedSequencedResponseContent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 40.29% complete, ETA 01:17:05
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedSequencedResponseContent(AjaxResourceContentHandlerTest.java:249)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedSequencedResponseContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedSequencedResponseContent_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedSequencedResponseContent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedSequencedResponseContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedSequencedResponseContent_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchStubbedSequencedResponseContent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest._Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchWrongProxyConfigContent

# Run progress: 40.36% complete, ETA 01:16:51
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchWrongProxyConfigContent(AjaxResourceContentHandlerTest.java:279)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchWrongProxyConfigContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchWrongProxyConfigContent_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchWrongProxyConfigContent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchWrongProxyConfigContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchWrongProxyConfigContent_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchWrongProxyConfigContent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 40.44% complete, ETA 01:16:37
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getWriter()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest.beforeEach(AjaxResourceContentHandlerTest.java:86)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.before(AjaxResourceContentHandlerTest.java:291)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.AjaxResourceContentHandlerTest$_Benchmark.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchWrongProxyConfigContent(AjaxResourceContentHandlerTest.java:279)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchWrongProxyConfigContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchWrongProxyConfigContent_avgt_jmhStub(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchWrongProxyConfigContent_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchWrongProxyConfigContent_jmhTest.benchmark_verifyBehaviourWhenAjaxSubmittedToFetchWrongProxyConfigContent_AverageTime(AjaxResourceContentHandlerTest__Benchmark_benchmark_verifyBehaviourWhenAjaxSubmittedToFetchWrongProxyConfigContent_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest._Benchmark.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled

# Run progress: 40.51% complete, ETA 01:16:23
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.server.Request.isHandled()" because "this.mockBaseRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.shouldDetermineRequestAsHandledWhenBaseRequestHandled(StubsPortalHandlerTest.java:87)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled(StubsPortalHandlerTest.java:279)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 40.59% complete, ETA 01:16:09
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.server.Request.isHandled()" because "this.mockBaseRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.shouldDetermineRequestAsHandledWhenBaseRequestHandled(StubsPortalHandlerTest.java:87)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled(StubsPortalHandlerTest.java:279)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenBaseRequestHandled_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest._Benchmark.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted

# Run progress: 40.66% complete, ETA 01:15:56
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.server.Request.isHandled()" because "this.mockBaseRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.shouldDetermineRequestAsHandledWhenResponseCommitted(StubsPortalHandlerTest.java:98)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted(StubsPortalHandlerTest.java:285)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 40.74% complete, ETA 01:15:42
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.server.Request.isHandled()" because "this.mockBaseRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.shouldDetermineRequestAsHandledWhenResponseCommitted(StubsPortalHandlerTest.java:98)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted(StubsPortalHandlerTest.java:285)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_shouldDetermineRequestAsHandledWhenResponseCommitted_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest._Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBasicAuthorizationHeaderSet

# Run progress: 40.81% complete, ETA 01:15:28
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandleGetRequestWithEmptyBasicAuthorizationHeaderSet(StubsPortalHandlerTest.java:213)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBasicAuthorizationHeaderSet(StubsPortalHandlerTest.java:327)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBasicAuthorizationHeaderSet_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBasicAuthorizationHeaderSet_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBasicAuthorizationHeaderSet_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBasicAuthorizationHeaderSet_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBasicAuthorizationHeaderSet_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBasicAuthorizationHeaderSet_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 40.89% complete, ETA 01:15:15
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandleGetRequestWithEmptyBasicAuthorizationHeaderSet(StubsPortalHandlerTest.java:213)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBasicAuthorizationHeaderSet(StubsPortalHandlerTest.java:327)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBasicAuthorizationHeaderSet_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBasicAuthorizationHeaderSet_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBasicAuthorizationHeaderSet_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBasicAuthorizationHeaderSet_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBasicAuthorizationHeaderSet_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBasicAuthorizationHeaderSet_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest._Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBearerAuthorizationHeaderSet

# Run progress: 40.96% complete, ETA 01:15:01
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandleGetRequestWithEmptyBearerAuthorizationHeaderSet(StubsPortalHandlerTest.java:229)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBearerAuthorizationHeaderSet(StubsPortalHandlerTest.java:333)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBearerAuthorizationHeaderSet_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBearerAuthorizationHeaderSet_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBearerAuthorizationHeaderSet_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBearerAuthorizationHeaderSet_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBearerAuthorizationHeaderSet_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBearerAuthorizationHeaderSet_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 41.04% complete, ETA 01:14:48
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandleGetRequestWithEmptyBearerAuthorizationHeaderSet(StubsPortalHandlerTest.java:229)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBearerAuthorizationHeaderSet(StubsPortalHandlerTest.java:333)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBearerAuthorizationHeaderSet_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBearerAuthorizationHeaderSet_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBearerAuthorizationHeaderSet_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBearerAuthorizationHeaderSet_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBearerAuthorizationHeaderSet_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithEmptyBearerAuthorizationHeaderSet_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest._Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithInvalidLatency

# Run progress: 41.11% complete, ETA 01:14:34
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandleGetRequestWithInvalidLatency(StubsPortalHandlerTest.java:280)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithInvalidLatency(StubsPortalHandlerTest.java:351)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithInvalidLatency_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithInvalidLatency_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithInvalidLatency_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithInvalidLatency_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithInvalidLatency_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithInvalidLatency_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 41.19% complete, ETA 01:14:21
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandleGetRequestWithInvalidLatency(StubsPortalHandlerTest.java:280)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithInvalidLatency(StubsPortalHandlerTest.java:351)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithInvalidLatency_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithInvalidLatency_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithInvalidLatency_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithInvalidLatency_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithInvalidLatency_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithInvalidLatency_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest._Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithLatency

# Run progress: 41.27% complete, ETA 01:14:07
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandleGetRequestWithLatency(StubsPortalHandlerTest.java:262)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithLatency(StubsPortalHandlerTest.java:345)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithLatency_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithLatency_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithLatency_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithLatency_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithLatency_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithLatency_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 41.34% complete, ETA 01:13:54
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandleGetRequestWithLatency(StubsPortalHandlerTest.java:262)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithLatency(StubsPortalHandlerTest.java:345)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithLatency_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithLatency_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithLatency_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithLatency_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithLatency_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithLatency_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest._Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithNoAuthorizationHeaderSet

# Run progress: 41.42% complete, ETA 01:13:41
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandleGetRequestWithNoAuthorizationHeaderSet(StubsPortalHandlerTest.java:197)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithNoAuthorizationHeaderSet(StubsPortalHandlerTest.java:321)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithNoAuthorizationHeaderSet_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithNoAuthorizationHeaderSet_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithNoAuthorizationHeaderSet_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithNoAuthorizationHeaderSet_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithNoAuthorizationHeaderSet_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithNoAuthorizationHeaderSet_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 41.49% complete, ETA 01:13:28
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandleGetRequestWithNoAuthorizationHeaderSet(StubsPortalHandlerTest.java:197)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithNoAuthorizationHeaderSet(StubsPortalHandlerTest.java:321)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithNoAuthorizationHeaderSet_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithNoAuthorizationHeaderSet_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithNoAuthorizationHeaderSet_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithNoAuthorizationHeaderSet_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithNoAuthorizationHeaderSet_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithNoAuthorizationHeaderSet_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest._Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithNoResults

# Run progress: 41.57% complete, ETA 01:13:14
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandleGetRequestWithNoResults(StubsPortalHandlerTest.java:113)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithNoResults(StubsPortalHandlerTest.java:291)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithNoResults_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithNoResults_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithNoResults_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithNoResults_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithNoResults_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithNoResults_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 41.64% complete, ETA 01:13:01
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandleGetRequestWithNoResults(StubsPortalHandlerTest.java:113)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithNoResults(StubsPortalHandlerTest.java:291)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithNoResults_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithNoResults_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithNoResults_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithNoResults_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithNoResults_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithNoResults_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest._Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithSomeResults

# Run progress: 41.72% complete, ETA 01:12:48
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandleGetRequestWithSomeResults(StubsPortalHandlerTest.java:182)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithSomeResults(StubsPortalHandlerTest.java:315)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithSomeResults_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithSomeResults_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithSomeResults_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithSomeResults_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithSomeResults_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithSomeResults_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 41.79% complete, ETA 01:12:35
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandleGetRequestWithSomeResults(StubsPortalHandlerTest.java:182)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandleGetRequestWithSomeResults(StubsPortalHandlerTest.java:315)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithSomeResults_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithSomeResults_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithSomeResults_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithSomeResults_jmhTest.benchmark_verifyBehaviourDuringHandleGetRequestWithSomeResults_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandleGetRequestWithSomeResults_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest._Benchmark.benchmark_verifyBehaviourDuringHandlePostRequestWithEmptyPostData

# Run progress: 41.87% complete, ETA 01:12:22
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandlePostRequestWithEmptyPostData(StubsPortalHandlerTest.java:164)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandlePostRequestWithEmptyPostData(StubsPortalHandlerTest.java:309)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithEmptyPostData_jmhTest.benchmark_verifyBehaviourDuringHandlePostRequestWithEmptyPostData_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithEmptyPostData_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithEmptyPostData_jmhTest.benchmark_verifyBehaviourDuringHandlePostRequestWithEmptyPostData_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithEmptyPostData_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 41.94% complete, ETA 01:12:09
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandlePostRequestWithEmptyPostData(StubsPortalHandlerTest.java:164)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandlePostRequestWithEmptyPostData(StubsPortalHandlerTest.java:309)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithEmptyPostData_jmhTest.benchmark_verifyBehaviourDuringHandlePostRequestWithEmptyPostData_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithEmptyPostData_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithEmptyPostData_jmhTest.benchmark_verifyBehaviourDuringHandlePostRequestWithEmptyPostData_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithEmptyPostData_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest._Benchmark.benchmark_verifyBehaviourDuringHandlePostRequestWithMatch

# Run progress: 42.02% complete, ETA 01:11:56
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandlePostRequestWithMatch(StubsPortalHandlerTest.java:245)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandlePostRequestWithMatch(StubsPortalHandlerTest.java:339)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithMatch_jmhTest.benchmark_verifyBehaviourDuringHandlePostRequestWithMatch_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithMatch_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithMatch_jmhTest.benchmark_verifyBehaviourDuringHandlePostRequestWithMatch_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithMatch_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 42.09% complete, ETA 01:11:43
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandlePostRequestWithMatch(StubsPortalHandlerTest.java:245)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandlePostRequestWithMatch(StubsPortalHandlerTest.java:339)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithMatch_jmhTest.benchmark_verifyBehaviourDuringHandlePostRequestWithMatch_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithMatch_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithMatch_jmhTest.benchmark_verifyBehaviourDuringHandlePostRequestWithMatch_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithMatch_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest._Benchmark.benchmark_verifyBehaviourDuringHandlePostRequestWithMissingPostData

# Run progress: 42.17% complete, ETA 01:11:30
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandlePostRequestWithMissingPostData(StubsPortalHandlerTest.java:149)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandlePostRequestWithMissingPostData(StubsPortalHandlerTest.java:303)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithMissingPostData_jmhTest.benchmark_verifyBehaviourDuringHandlePostRequestWithMissingPostData_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithMissingPostData_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithMissingPostData_jmhTest.benchmark_verifyBehaviourDuringHandlePostRequestWithMissingPostData_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithMissingPostData_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 42.24% complete, ETA 01:11:18
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandlePostRequestWithMissingPostData(StubsPortalHandlerTest.java:149)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandlePostRequestWithMissingPostData(StubsPortalHandlerTest.java:303)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithMissingPostData_jmhTest.benchmark_verifyBehaviourDuringHandlePostRequestWithMissingPostData_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithMissingPostData_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithMissingPostData_jmhTest.benchmark_verifyBehaviourDuringHandlePostRequestWithMissingPostData_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithMissingPostData_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest._Benchmark.benchmark_verifyBehaviourDuringHandlePostRequestWithNoResults

# Run progress: 42.32% complete, ETA 01:11:05
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandlePostRequestWithNoResults(StubsPortalHandlerTest.java:130)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandlePostRequestWithNoResults(StubsPortalHandlerTest.java:297)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithNoResults_jmhTest.benchmark_verifyBehaviourDuringHandlePostRequestWithNoResults_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithNoResults_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithNoResults_jmhTest.benchmark_verifyBehaviourDuringHandlePostRequestWithNoResults_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithNoResults_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 42.39% complete, ETA 01:10:52
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getMethod()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest.verifyBehaviourDuringHandlePostRequestWithNoResults(StubsPortalHandlerTest.java:130)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.StubsPortalHandlerTest$_Benchmark.benchmark_verifyBehaviourDuringHandlePostRequestWithNoResults(StubsPortalHandlerTest.java:297)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithNoResults_jmhTest.benchmark_verifyBehaviourDuringHandlePostRequestWithNoResults_avgt_jmhStub(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithNoResults_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.jmh_generated.StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithNoResults_jmhTest.benchmark_verifyBehaviourDuringHandlePostRequestWithNoResults_AverageTime(StubsPortalHandlerTest__Benchmark_benchmark_verifyBehaviourDuringHandlePostRequestWithNoResults_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest._Benchmark.benchmark_shouldCheckLatencyDelayWhenHandlingDefaultResponseWithLatency

# Run progress: 42.47% complete, ETA 01:10:40
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.stubs.StubResponse.getHttpStatusCode()" because "this.mockStubResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest.shouldCheckLatencyDelayWhenHandlingDefaultResponseWithLatency(DefaultResponseHandlingStrategyTest.java:96)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest$_Benchmark.benchmark_shouldCheckLatencyDelayWhenHandlingDefaultResponseWithLatency(DefaultResponseHandlingStrategyTest.java:150)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldCheckLatencyDelayWhenHandlingDefaultResponseWithLatency_jmhTest.benchmark_shouldCheckLatencyDelayWhenHandlingDefaultResponseWithLatency_avgt_jmhStub(DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldCheckLatencyDelayWhenHandlingDefaultResponseWithLatency_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldCheckLatencyDelayWhenHandlingDefaultResponseWithLatency_jmhTest.benchmark_shouldCheckLatencyDelayWhenHandlingDefaultResponseWithLatency_AverageTime(DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldCheckLatencyDelayWhenHandlingDefaultResponseWithLatency_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 42.55% complete, ETA 01:10:27
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.stubs.StubResponse.getHttpStatusCode()" because "this.mockStubResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest.shouldCheckLatencyDelayWhenHandlingDefaultResponseWithLatency(DefaultResponseHandlingStrategyTest.java:96)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest$_Benchmark.benchmark_shouldCheckLatencyDelayWhenHandlingDefaultResponseWithLatency(DefaultResponseHandlingStrategyTest.java:150)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldCheckLatencyDelayWhenHandlingDefaultResponseWithLatency_jmhTest.benchmark_shouldCheckLatencyDelayWhenHandlingDefaultResponseWithLatency_avgt_jmhStub(DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldCheckLatencyDelayWhenHandlingDefaultResponseWithLatency_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldCheckLatencyDelayWhenHandlingDefaultResponseWithLatency_jmhTest.benchmark_shouldCheckLatencyDelayWhenHandlingDefaultResponseWithLatency_AverageTime(DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldCheckLatencyDelayWhenHandlingDefaultResponseWithLatency_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest._Benchmark.benchmark_shouldReturnReplacedValueInResponseHeaderWhenRequestBodyHasDynamicToken

# Run progress: 42.62% complete, ETA 01:10:15
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getOutputStream()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest.shouldReturnReplacedValueInResponseHeaderWhenRequestBodyHasDynamicToken(DefaultResponseHandlingStrategyTest.java:115)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest$_Benchmark.benchmark_shouldReturnReplacedValueInResponseHeaderWhenRequestBodyHasDynamicToken(DefaultResponseHandlingStrategyTest.java:156)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldReturnReplacedValueInResponseHeaderWhenRequestBodyHasDynamicToken_jmhTest.benchmark_shouldReturnReplacedValueInResponseHeaderWhenRequestBodyHasDynamicToken_avgt_jmhStub(DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldReturnReplacedValueInResponseHeaderWhenRequestBodyHasDynamicToken_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldReturnReplacedValueInResponseHeaderWhenRequestBodyHasDynamicToken_jmhTest.benchmark_shouldReturnReplacedValueInResponseHeaderWhenRequestBodyHasDynamicToken_AverageTime(DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldReturnReplacedValueInResponseHeaderWhenRequestBodyHasDynamicToken_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 42.70% complete, ETA 01:10:02
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletResponse.getOutputStream()" because "this.mockHttpServletResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest.shouldReturnReplacedValueInResponseHeaderWhenRequestBodyHasDynamicToken(DefaultResponseHandlingStrategyTest.java:115)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest$_Benchmark.benchmark_shouldReturnReplacedValueInResponseHeaderWhenRequestBodyHasDynamicToken(DefaultResponseHandlingStrategyTest.java:156)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldReturnReplacedValueInResponseHeaderWhenRequestBodyHasDynamicToken_jmhTest.benchmark_shouldReturnReplacedValueInResponseHeaderWhenRequestBodyHasDynamicToken_avgt_jmhStub(DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldReturnReplacedValueInResponseHeaderWhenRequestBodyHasDynamicToken_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldReturnReplacedValueInResponseHeaderWhenRequestBodyHasDynamicToken_jmhTest.benchmark_shouldReturnReplacedValueInResponseHeaderWhenRequestBodyHasDynamicToken_AverageTime(DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldReturnReplacedValueInResponseHeaderWhenRequestBodyHasDynamicToken_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest._Benchmark.benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithLatency

# Run progress: 42.77% complete, ETA 01:09:50
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.stubs.StubResponse.getHttpStatusCode()" because "this.mockStubResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest.shouldVerifyBehaviourWhenHandlingDefaultResponseWithLatency(DefaultResponseHandlingStrategyTest.java:83)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest$_Benchmark.benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithLatency(DefaultResponseHandlingStrategyTest.java:144)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithLatency_avgt_jmhStub(DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithLatency_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithLatency_AverageTime(DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithLatency_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 42.85% complete, ETA 01:09:37
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.stubs.StubResponse.getHttpStatusCode()" because "this.mockStubResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest.shouldVerifyBehaviourWhenHandlingDefaultResponseWithLatency(DefaultResponseHandlingStrategyTest.java:83)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest$_Benchmark.benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithLatency(DefaultResponseHandlingStrategyTest.java:144)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithLatency_avgt_jmhStub(DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithLatency_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithLatency_AverageTime(DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithLatency_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest._Benchmark.benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithoutLatency

# Run progress: 42.92% complete, ETA 01:09:25
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.stubs.StubResponse.getHttpStatusCode()" because "this.mockStubResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest.shouldVerifyBehaviourWhenHandlingDefaultResponseWithoutLatency(DefaultResponseHandlingStrategyTest.java:71)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest$_Benchmark.benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithoutLatency(DefaultResponseHandlingStrategyTest.java:138)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithoutLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithoutLatency_avgt_jmhStub(DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithoutLatency_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithoutLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithoutLatency_AverageTime(DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithoutLatency_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 43.00% complete, ETA 01:09:12
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.stubs.StubResponse.getHttpStatusCode()" because "this.mockStubResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest.shouldVerifyBehaviourWhenHandlingDefaultResponseWithoutLatency(DefaultResponseHandlingStrategyTest.java:71)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.DefaultResponseHandlingStrategyTest$_Benchmark.benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithoutLatency(DefaultResponseHandlingStrategyTest.java:138)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithoutLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithoutLatency_avgt_jmhStub(DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithoutLatency_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithoutLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithoutLatency_AverageTime(DefaultResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingDefaultResponseWithoutLatency_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForNotFoundResponse

# Run progress: 43.07% complete, ETA 01:09:00
# Fork: 1 of 2
# Warmup Iteration   1: 1873.065 ns/op
# Warmup Iteration   2: 460.950 ns/op
# Warmup Iteration   3: 393.097 ns/op
# Warmup Iteration   4: 392.726 ns/op
# Warmup Iteration   5: 393.874 ns/op
# Warmup Iteration   6: 393.185 ns/op
# Warmup Iteration   7: 393.778 ns/op
# Warmup Iteration   8: 395.536 ns/op
# Warmup Iteration   9: 394.221 ns/op
# Warmup Iteration  10: 393.776 ns/op
Iteration   1: 392.415 ns/op
Iteration   2: 395.086 ns/op
Iteration   3: 394.743 ns/op
Iteration   4: 395.525 ns/op
Iteration   5: 395.167 ns/op
Iteration   6: 392.646 ns/op
Iteration   7: 394.233 ns/op
Iteration   8: 394.316 ns/op
Iteration   9: 394.159 ns/op
Iteration  10: 393.442 ns/op
Iteration  11: 398.080 ns/op
Iteration  12: 393.017 ns/op
Iteration  13: 393.826 ns/op
Iteration  14: 396.037 ns/op
Iteration  15: 394.184 ns/op
Iteration  16: 394.412 ns/op
Iteration  17: 395.530 ns/op
Iteration  18: 393.494 ns/op
Iteration  19: 394.238 ns/op
Iteration  20: 394.962 ns/op

# Run progress: 43.15% complete, ETA 01:09:27
# Fork: 2 of 2
# Warmup Iteration   1: 1649.139 ns/op
# Warmup Iteration   2: 439.302 ns/op
# Warmup Iteration   3: 399.313 ns/op
# Warmup Iteration   4: 396.994 ns/op
# Warmup Iteration   5: 398.069 ns/op
# Warmup Iteration   6: 396.077 ns/op
# Warmup Iteration   7: 398.114 ns/op
# Warmup Iteration   8: 396.855 ns/op
# Warmup Iteration   9: 397.349 ns/op
# Warmup Iteration  10: 397.736 ns/op
Iteration   1: 398.008 ns/op
Iteration   2: 394.704 ns/op
Iteration   3: 395.318 ns/op
Iteration   4: 397.261 ns/op
Iteration   5: 396.713 ns/op
Iteration   6: 396.396 ns/op
Iteration   7: 396.274 ns/op
Iteration   8: 396.559 ns/op
Iteration   9: 395.722 ns/op
Iteration  10: 398.178 ns/op
Iteration  11: 399.208 ns/op
Iteration  12: 395.860 ns/op
Iteration  13: 395.592 ns/op
Iteration  14: 396.240 ns/op
Iteration  15: 399.701 ns/op
Iteration  16: 395.208 ns/op
Iteration  17: 394.507 ns/op
Iteration  18: 396.203 ns/op
Iteration  19: 399.065 ns/op
Iteration  20: 397.442 ns/op


Result "io.github.azagniotov.stubby4j.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForNotFoundResponse":
  395.592 ±(99.9%) 1.001 ns/op [Average]
  (min, avg, max) = (392.415, 395.592, 399.701), stdev = 1.779
  CI (99.9%): [394.591, 396.592] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForRedirectResponseWithStubResponseCode301

# Run progress: 43.22% complete, ETA 01:09:55
# Fork: 1 of 2
# Warmup Iteration   1: 1668.948 ns/op
# Warmup Iteration   2: 459.974 ns/op
# Warmup Iteration   3: 421.301 ns/op
# Warmup Iteration   4: 424.475 ns/op
# Warmup Iteration   5: 421.818 ns/op
# Warmup Iteration   6: 423.973 ns/op
# Warmup Iteration   7: 420.587 ns/op
# Warmup Iteration   8: 419.684 ns/op
# Warmup Iteration   9: 421.138 ns/op
# Warmup Iteration  10: 423.573 ns/op
Iteration   1: 422.449 ns/op
Iteration   2: 422.192 ns/op
Iteration   3: 420.222 ns/op
Iteration   4: 420.646 ns/op
Iteration   5: 418.325 ns/op
Iteration   6: 420.512 ns/op
Iteration   7: 420.320 ns/op
Iteration   8: 422.650 ns/op
Iteration   9: 420.507 ns/op
Iteration  10: 422.466 ns/op
Iteration  11: 421.401 ns/op
Iteration  12: 420.725 ns/op
Iteration  13: 418.972 ns/op
Iteration  14: 420.137 ns/op
Iteration  15: 420.350 ns/op
Iteration  16: 419.435 ns/op
Iteration  17: 418.016 ns/op
Iteration  18: 419.494 ns/op
Iteration  19: 420.751 ns/op
Iteration  20: 422.230 ns/op

# Run progress: 43.30% complete, ETA 01:10:21
# Fork: 2 of 2
# Warmup Iteration   1: 1664.364 ns/op
# Warmup Iteration   2: 469.830 ns/op
# Warmup Iteration   3: 421.261 ns/op
# Warmup Iteration   4: 421.639 ns/op
# Warmup Iteration   5: 423.507 ns/op
# Warmup Iteration   6: 422.467 ns/op
# Warmup Iteration   7: 422.201 ns/op
# Warmup Iteration   8: 420.678 ns/op
# Warmup Iteration   9: 421.523 ns/op
# Warmup Iteration  10: 424.825 ns/op
Iteration   1: 423.424 ns/op
Iteration   2: 422.995 ns/op
Iteration   3: 420.657 ns/op
Iteration   4: 420.266 ns/op
Iteration   5: 420.581 ns/op
Iteration   6: 421.034 ns/op
Iteration   7: 420.683 ns/op
Iteration   8: 422.781 ns/op
Iteration   9: 421.247 ns/op
Iteration  10: 425.426 ns/op
Iteration  11: 422.366 ns/op
Iteration  12: 420.058 ns/op
Iteration  13: 423.162 ns/op
Iteration  14: 422.050 ns/op
Iteration  15: 423.539 ns/op
Iteration  16: 424.693 ns/op
Iteration  17: 421.851 ns/op
Iteration  18: 421.742 ns/op
Iteration  19: 422.604 ns/op
Iteration  20: 425.910 ns/op


Result "io.github.azagniotov.stubby4j.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForRedirectResponseWithStubResponseCode301":
  421.472 ±(99.9%) 0.984 ns/op [Average]
  (min, avg, max) = (418.016, 421.472, 425.910), stdev = 1.748
  CI (99.9%): [420.488, 422.455] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForRedirectResponseWithStubResponseCode302

# Run progress: 43.37% complete, ETA 01:10:48
# Fork: 1 of 2
# Warmup Iteration   1: 1712.371 ns/op
# Warmup Iteration   2: 468.367 ns/op
# Warmup Iteration   3: 423.209 ns/op
# Warmup Iteration   4: 422.263 ns/op
# Warmup Iteration   5: 421.372 ns/op
# Warmup Iteration   6: 423.144 ns/op
# Warmup Iteration   7: 422.506 ns/op
# Warmup Iteration   8: 423.777 ns/op
# Warmup Iteration   9: 423.545 ns/op
# Warmup Iteration  10: 423.079 ns/op
Iteration   1: 421.216 ns/op
Iteration   2: 423.019 ns/op
Iteration   3: 422.324 ns/op
Iteration   4: 422.948 ns/op
Iteration   5: 423.826 ns/op
Iteration   6: 423.675 ns/op
Iteration   7: 424.954 ns/op
Iteration   8: 422.579 ns/op
Iteration   9: 424.605 ns/op
Iteration  10: 424.309 ns/op
Iteration  11: 423.304 ns/op
Iteration  12: 421.259 ns/op
Iteration  13: 423.546 ns/op
Iteration  14: 421.826 ns/op
Iteration  15: 424.829 ns/op
Iteration  16: 423.955 ns/op
Iteration  17: 422.169 ns/op
Iteration  18: 424.993 ns/op
Iteration  19: 424.463 ns/op
Iteration  20: 426.425 ns/op

# Run progress: 43.45% complete, ETA 01:11:15
# Fork: 2 of 2
# Warmup Iteration   1: 1680.275 ns/op
# Warmup Iteration   2: 456.616 ns/op
# Warmup Iteration   3: 415.947 ns/op
# Warmup Iteration   4: 412.966 ns/op
# Warmup Iteration   5: 416.662 ns/op
# Warmup Iteration   6: 416.016 ns/op
# Warmup Iteration   7: 417.220 ns/op
# Warmup Iteration   8: 412.864 ns/op
# Warmup Iteration   9: 417.152 ns/op
# Warmup Iteration  10: 424.974 ns/op
Iteration   1: 416.709 ns/op
Iteration   2: 416.120 ns/op
Iteration   3: 417.433 ns/op
Iteration   4: 416.578 ns/op
Iteration   5: 417.503 ns/op
Iteration   6: 417.637 ns/op
Iteration   7: 416.750 ns/op
Iteration   8: 416.580 ns/op
Iteration   9: 418.604 ns/op
Iteration  10: 415.078 ns/op
Iteration  11: 418.635 ns/op
Iteration  12: 414.447 ns/op
Iteration  13: 414.734 ns/op
Iteration  14: 418.185 ns/op
Iteration  15: 415.657 ns/op
Iteration  16: 418.692 ns/op
Iteration  17: 416.638 ns/op
Iteration  18: 416.241 ns/op
Iteration  19: 416.242 ns/op
Iteration  20: 419.018 ns/op


Result "io.github.azagniotov.stubby4j.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForRedirectResponseWithStubResponseCode302":
  420.193 ±(99.9%) 2.034 ns/op [Average]
  (min, avg, max) = (414.447, 420.193, 426.425), stdev = 3.615
  CI (99.9%): [418.159, 422.227] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForRedirectResponseWithStubResponseCode302_Found

# Run progress: 43.52% complete, ETA 01:11:41
# Fork: 1 of 2
# Warmup Iteration   1: 1591.649 ns/op
# Warmup Iteration   2: 419.435 ns/op
# Warmup Iteration   3: 381.841 ns/op
# Warmup Iteration   4: 380.664 ns/op
# Warmup Iteration   5: 381.125 ns/op
# Warmup Iteration   6: 379.691 ns/op
# Warmup Iteration   7: 381.573 ns/op
# Warmup Iteration   8: 378.946 ns/op
# Warmup Iteration   9: 379.781 ns/op
# Warmup Iteration  10: 378.514 ns/op
Iteration   1: 379.844 ns/op
Iteration   2: 382.103 ns/op
Iteration   3: 379.367 ns/op
Iteration   4: 380.527 ns/op
Iteration   5: 380.908 ns/op
Iteration   6: 380.551 ns/op
Iteration   7: 379.211 ns/op
Iteration   8: 380.965 ns/op
Iteration   9: 381.650 ns/op
Iteration  10: 381.351 ns/op
Iteration  11: 381.000 ns/op
Iteration  12: 379.914 ns/op
Iteration  13: 379.728 ns/op
Iteration  14: 380.798 ns/op
Iteration  15: 377.512 ns/op
Iteration  16: 379.402 ns/op
Iteration  17: 379.375 ns/op
Iteration  18: 379.477 ns/op
Iteration  19: 380.486 ns/op
Iteration  20: 379.728 ns/op

# Run progress: 43.60% complete, ETA 01:12:07
# Fork: 2 of 2
# Warmup Iteration   1: 1450.694 ns/op
# Warmup Iteration   2: 422.325 ns/op
# Warmup Iteration   3: 381.849 ns/op
# Warmup Iteration   4: 381.309 ns/op
# Warmup Iteration   5: 382.938 ns/op
# Warmup Iteration   6: 381.184 ns/op
# Warmup Iteration   7: 380.482 ns/op
# Warmup Iteration   8: 379.764 ns/op
# Warmup Iteration   9: 382.233 ns/op
# Warmup Iteration  10: 383.861 ns/op
Iteration   1: 383.132 ns/op
Iteration   2: 381.992 ns/op
Iteration   3: 380.123 ns/op
Iteration   4: 380.620 ns/op
Iteration   5: 381.882 ns/op
Iteration   6: 381.187 ns/op
Iteration   7: 381.307 ns/op
Iteration   8: 379.855 ns/op
Iteration   9: 381.955 ns/op
Iteration  10: 381.384 ns/op
Iteration  11: 380.489 ns/op
Iteration  12: 380.067 ns/op
Iteration  13: 381.489 ns/op
Iteration  14: 380.354 ns/op
Iteration  15: 381.088 ns/op
Iteration  16: 380.416 ns/op
Iteration  17: 383.953 ns/op
Iteration  18: 382.230 ns/op
Iteration  19: 380.773 ns/op
Iteration  20: 381.814 ns/op


Result "io.github.azagniotov.stubby4j.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForRedirectResponseWithStubResponseCode302_Found":
  380.750 ±(99.9%) 0.663 ns/op [Average]
  (min, avg, max) = (377.512, 380.750, 383.953), stdev = 1.178
  CI (99.9%): [380.088, 381.413] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForRedirectResponseWithStubResponseCode303

# Run progress: 43.67% complete, ETA 01:12:33
# Fork: 1 of 2
# Warmup Iteration   1: 1626.726 ns/op
# Warmup Iteration   2: 511.334 ns/op
# Warmup Iteration   3: 449.262 ns/op
# Warmup Iteration   4: 464.759 ns/op
# Warmup Iteration   5: 450.834 ns/op
# Warmup Iteration   6: 449.946 ns/op
# Warmup Iteration   7: 451.309 ns/op
# Warmup Iteration   8: 463.531 ns/op
# Warmup Iteration   9: 452.824 ns/op
# Warmup Iteration  10: 462.443 ns/op
Iteration   1: 458.219 ns/op
Iteration   2: 450.035 ns/op
Iteration   3: 446.742 ns/op
Iteration   4: 461.590 ns/op
Iteration   5: 463.589 ns/op
Iteration   6: 448.604 ns/op
Iteration   7: 456.315 ns/op
Iteration   8: 457.079 ns/op
Iteration   9: 454.982 ns/op
Iteration  10: 454.879 ns/op
Iteration  11: 449.761 ns/op
Iteration  12: 461.359 ns/op
Iteration  13: 448.349 ns/op
Iteration  14: 458.559 ns/op
Iteration  15: 446.801 ns/op
Iteration  16: 447.180 ns/op
Iteration  17: 455.844 ns/op
Iteration  18: 448.400 ns/op
Iteration  19: 456.911 ns/op
Iteration  20: 448.344 ns/op

# Run progress: 43.75% complete, ETA 01:12:59
# Fork: 2 of 2
# Warmup Iteration   1: 1653.218 ns/op
# Warmup Iteration   2: 476.947 ns/op
# Warmup Iteration   3: 417.267 ns/op
# Warmup Iteration   4: 418.499 ns/op
# Warmup Iteration   5: 415.362 ns/op
# Warmup Iteration   6: 419.136 ns/op
# Warmup Iteration   7: 418.652 ns/op
# Warmup Iteration   8: 423.823 ns/op
# Warmup Iteration   9: 420.357 ns/op
# Warmup Iteration  10: 419.354 ns/op
Iteration   1: 420.004 ns/op
Iteration   2: 420.863 ns/op
Iteration   3: 418.442 ns/op
Iteration   4: 417.265 ns/op
Iteration   5: 420.765 ns/op
Iteration   6: 419.955 ns/op
Iteration   7: 419.066 ns/op
Iteration   8: 419.375 ns/op
Iteration   9: 416.368 ns/op
Iteration  10: 418.629 ns/op
Iteration  11: 420.484 ns/op
Iteration  12: 419.892 ns/op
Iteration  13: 417.191 ns/op
Iteration  14: 419.865 ns/op
Iteration  15: 417.957 ns/op
Iteration  16: 421.052 ns/op
Iteration  17: 418.689 ns/op
Iteration  18: 419.339 ns/op
Iteration  19: 419.181 ns/op
Iteration  20: 417.686 ns/op


Result "io.github.azagniotov.stubby4j.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForRedirectResponseWithStubResponseCode303":
  436.390 ±(99.9%) 10.098 ns/op [Average]
  (min, avg, max) = (416.368, 436.390, 463.589), stdev = 17.949
  CI (99.9%): [426.293, 446.488] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForRedirectResponseWithStubResponseCode307

# Run progress: 43.83% complete, ETA 01:13:24
# Fork: 1 of 2
# Warmup Iteration   1: 1688.920 ns/op
# Warmup Iteration   2: 470.529 ns/op
# Warmup Iteration   3: 428.369 ns/op
# Warmup Iteration   4: 426.552 ns/op
# Warmup Iteration   5: 426.881 ns/op
# Warmup Iteration   6: 424.146 ns/op
# Warmup Iteration   7: 424.514 ns/op
# Warmup Iteration   8: 425.857 ns/op
# Warmup Iteration   9: 424.419 ns/op
# Warmup Iteration  10: 423.133 ns/op
Iteration   1: 423.118 ns/op
Iteration   2: 423.871 ns/op
Iteration   3: 422.081 ns/op
Iteration   4: 422.692 ns/op
Iteration   5: 424.368 ns/op
Iteration   6: 424.352 ns/op
Iteration   7: 419.228 ns/op
Iteration   8: 421.411 ns/op
Iteration   9: 421.432 ns/op
Iteration  10: 420.975 ns/op
Iteration  11: 421.596 ns/op
Iteration  12: 419.783 ns/op
Iteration  13: 420.545 ns/op
Iteration  14: 419.008 ns/op
Iteration  15: 420.451 ns/op
Iteration  16: 421.819 ns/op
Iteration  17: 419.722 ns/op
Iteration  18: 421.015 ns/op
Iteration  19: 421.785 ns/op
Iteration  20: 419.844 ns/op

# Run progress: 43.90% complete, ETA 01:13:50
# Fork: 2 of 2
# Warmup Iteration   1: 1898.328 ns/op
# Warmup Iteration   2: 478.470 ns/op
# Warmup Iteration   3: 423.581 ns/op
# Warmup Iteration   4: 425.524 ns/op
# Warmup Iteration   5: 418.946 ns/op
# Warmup Iteration   6: 422.936 ns/op
# Warmup Iteration   7: 420.283 ns/op
# Warmup Iteration   8: 420.432 ns/op
# Warmup Iteration   9: 422.132 ns/op
# Warmup Iteration  10: 422.130 ns/op
Iteration   1: 418.934 ns/op
Iteration   2: 424.618 ns/op
Iteration   3: 422.182 ns/op
Iteration   4: 426.729 ns/op
Iteration   5: 417.696 ns/op
Iteration   6: 422.421 ns/op
Iteration   7: 418.566 ns/op
Iteration   8: 418.636 ns/op
Iteration   9: 425.711 ns/op
Iteration  10: 418.474 ns/op
Iteration  11: 417.623 ns/op
Iteration  12: 423.573 ns/op
Iteration  13: 419.970 ns/op
Iteration  14: 425.011 ns/op
Iteration  15: 417.930 ns/op
Iteration  16: 417.239 ns/op
Iteration  17: 423.924 ns/op
Iteration  18: 422.751 ns/op
Iteration  19: 427.500 ns/op
Iteration  20: 418.239 ns/op


Result "io.github.azagniotov.stubby4j.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForRedirectResponseWithStubResponseCode307":
  421.421 ±(99.9%) 1.483 ns/op [Average]
  (min, avg, max) = (417.239, 421.421, 427.500), stdev = 2.637
  CI (99.9%): [419.937, 422.904] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForRedirectResponseWithStubResponseCode308

# Run progress: 43.98% complete, ETA 01:14:15
# Fork: 1 of 2
# Warmup Iteration   1: 1710.851 ns/op
# Warmup Iteration   2: 464.107 ns/op
# Warmup Iteration   3: 424.864 ns/op
# Warmup Iteration   4: 421.649 ns/op
# Warmup Iteration   5: 421.464 ns/op
# Warmup Iteration   6: 420.476 ns/op
# Warmup Iteration   7: 423.663 ns/op
# Warmup Iteration   8: 419.649 ns/op
# Warmup Iteration   9: 421.662 ns/op
# Warmup Iteration  10: 422.385 ns/op
Iteration   1: 420.194 ns/op
Iteration   2: 423.858 ns/op
Iteration   3: 419.990 ns/op
Iteration   4: 421.110 ns/op
Iteration   5: 426.183 ns/op
Iteration   6: 422.217 ns/op
Iteration   7: 426.543 ns/op
Iteration   8: 420.348 ns/op
Iteration   9: 422.149 ns/op
Iteration  10: 419.930 ns/op
Iteration  11: 422.508 ns/op
Iteration  12: 421.223 ns/op
Iteration  13: 423.471 ns/op
Iteration  14: 421.714 ns/op
Iteration  15: 422.328 ns/op
Iteration  16: 422.761 ns/op
Iteration  17: 424.457 ns/op
Iteration  18: 424.612 ns/op
Iteration  19: 422.345 ns/op
Iteration  20: 419.699 ns/op

# Run progress: 44.05% complete, ETA 01:14:40
# Fork: 2 of 2
# Warmup Iteration   1: 1542.687 ns/op
# Warmup Iteration   2: 466.405 ns/op
# Warmup Iteration   3: 422.293 ns/op
# Warmup Iteration   4: 422.292 ns/op
# Warmup Iteration   5: 423.901 ns/op
# Warmup Iteration   6: 423.050 ns/op
# Warmup Iteration   7: 429.837 ns/op
# Warmup Iteration   8: 429.804 ns/op
# Warmup Iteration   9: 423.096 ns/op
# Warmup Iteration  10: 425.455 ns/op
Iteration   1: 425.599 ns/op
Iteration   2: 424.542 ns/op
Iteration   3: 423.142 ns/op
Iteration   4: 425.094 ns/op
Iteration   5: 425.428 ns/op
Iteration   6: 426.248 ns/op
Iteration   7: 424.790 ns/op
Iteration   8: 422.621 ns/op
Iteration   9: 425.683 ns/op
Iteration  10: 423.634 ns/op
Iteration  11: 425.217 ns/op
Iteration  12: 424.068 ns/op
Iteration  13: 423.074 ns/op
Iteration  14: 424.294 ns/op
Iteration  15: 424.153 ns/op
Iteration  16: 426.796 ns/op
Iteration  17: 424.664 ns/op
Iteration  18: 427.345 ns/op
Iteration  19: 426.822 ns/op
Iteration  20: 423.082 ns/op


Result "io.github.azagniotov.stubby4j.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForRedirectResponseWithStubResponseCode308":
  423.598 ±(99.9%) 1.174 ns/op [Average]
  (min, avg, max) = (419.699, 423.598, 427.345), stdev = 2.087
  CI (99.9%): [422.424, 424.773] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForUnauthorizedResponse

# Run progress: 44.13% complete, ETA 01:15:04
# Fork: 1 of 2
# Warmup Iteration   1: 1695.917 ns/op
# Warmup Iteration   2: 440.289 ns/op
# Warmup Iteration   3: 394.402 ns/op
# Warmup Iteration   4: 392.607 ns/op
# Warmup Iteration   5: 395.005 ns/op
# Warmup Iteration   6: 393.709 ns/op
# Warmup Iteration   7: 394.784 ns/op
# Warmup Iteration   8: 392.749 ns/op
# Warmup Iteration   9: 394.637 ns/op
# Warmup Iteration  10: 394.074 ns/op
Iteration   1: 393.199 ns/op
Iteration   2: 396.584 ns/op
Iteration   3: 392.693 ns/op
Iteration   4: 392.180 ns/op
Iteration   5: 394.896 ns/op
Iteration   6: 393.685 ns/op
Iteration   7: 393.754 ns/op
Iteration   8: 391.624 ns/op
Iteration   9: 391.645 ns/op
Iteration  10: 391.986 ns/op
Iteration  11: 395.111 ns/op
Iteration  12: 394.028 ns/op
Iteration  13: 394.422 ns/op
Iteration  14: 392.275 ns/op
Iteration  15: 395.105 ns/op
Iteration  16: 396.072 ns/op
Iteration  17: 393.594 ns/op
Iteration  18: 394.333 ns/op
Iteration  19: 395.239 ns/op
Iteration  20: 393.977 ns/op

# Run progress: 44.20% complete, ETA 01:15:29
# Fork: 2 of 2
# Warmup Iteration   1: 1656.969 ns/op
# Warmup Iteration   2: 441.502 ns/op
# Warmup Iteration   3: 393.774 ns/op
# Warmup Iteration   4: 392.683 ns/op
# Warmup Iteration   5: 394.783 ns/op
# Warmup Iteration   6: 397.012 ns/op
# Warmup Iteration   7: 395.589 ns/op
# Warmup Iteration   8: 392.423 ns/op
# Warmup Iteration   9: 396.692 ns/op
# Warmup Iteration  10: 393.630 ns/op
Iteration   1: 394.649 ns/op
Iteration   2: 393.580 ns/op
Iteration   3: 393.262 ns/op
Iteration   4: 393.572 ns/op
Iteration   5: 395.001 ns/op
Iteration   6: 395.812 ns/op
Iteration   7: 392.571 ns/op
Iteration   8: 393.021 ns/op
Iteration   9: 394.644 ns/op
Iteration  10: 394.223 ns/op
Iteration  11: 393.246 ns/op
Iteration  12: 393.329 ns/op
Iteration  13: 394.603 ns/op
Iteration  14: 393.140 ns/op
Iteration  15: 396.157 ns/op
Iteration  16: 395.158 ns/op
Iteration  17: 393.736 ns/op
Iteration  18: 393.162 ns/op
Iteration  19: 395.152 ns/op
Iteration  20: 394.727 ns/op


Result "io.github.azagniotov.stubby4j.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForUnauthorizedResponse":
  393.979 ±(99.9%) 0.698 ns/op [Average]
  (min, avg, max) = (391.624, 393.979, 396.584), stdev = 1.241
  CI (99.9%): [393.281, 394.677] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest._Benchmark.benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken

# Run progress: 44.28% complete, ETA 01:15:53
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.stubs.StubResponse.getHeaders()" because "this.mockStubResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest.setUp(RedirectResponseHandlingStrategyTest.java:46)
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest$_Benchmark.before(RedirectResponseHandlingStrategyTest.java:144)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest$_Benchmark.benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken(RedirectResponseHandlingStrategyTest.java:138)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_jmhTest.benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_avgt_jmhStub(RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_jmhTest.benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_AverageTime(RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 44.35% complete, ETA 01:15:40
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.stubs.StubResponse.getHeaders()" because "this.mockStubResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest.setUp(RedirectResponseHandlingStrategyTest.java:46)
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest$_Benchmark.before(RedirectResponseHandlingStrategyTest.java:144)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest$_Benchmark.benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken(RedirectResponseHandlingStrategyTest.java:138)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_jmhTest.benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_avgt_jmhStub(RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_jmhTest.benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_AverageTime(RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldReturnReplacedValueInLocationHeaderWhenQueryParamHasDynamicToken_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest._Benchmark.benchmark_shouldVerifyBehaviourWhenHandlingPermanentRedirectResponseWithoutLatency

# Run progress: 44.43% complete, ETA 01:15:27
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.stubs.StubResponse.getHeaders()" because "this.mockStubResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest.setUp(RedirectResponseHandlingStrategyTest.java:46)
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest$_Benchmark.before(RedirectResponseHandlingStrategyTest.java:144)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest$_Benchmark.benchmark_shouldVerifyBehaviourWhenHandlingPermanentRedirectResponseWithoutLatency(RedirectResponseHandlingStrategyTest.java:126)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingPermanentRedirectResponseWithoutLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingPermanentRedirectResponseWithoutLatency_avgt_jmhStub(RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingPermanentRedirectResponseWithoutLatency_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingPermanentRedirectResponseWithoutLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingPermanentRedirectResponseWithoutLatency_AverageTime(RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingPermanentRedirectResponseWithoutLatency_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 44.50% complete, ETA 01:15:13
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.stubs.StubResponse.getHeaders()" because "this.mockStubResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest.setUp(RedirectResponseHandlingStrategyTest.java:46)
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest$_Benchmark.before(RedirectResponseHandlingStrategyTest.java:144)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest$_Benchmark.benchmark_shouldVerifyBehaviourWhenHandlingPermanentRedirectResponseWithoutLatency(RedirectResponseHandlingStrategyTest.java:126)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingPermanentRedirectResponseWithoutLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingPermanentRedirectResponseWithoutLatency_avgt_jmhStub(RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingPermanentRedirectResponseWithoutLatency_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingPermanentRedirectResponseWithoutLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingPermanentRedirectResponseWithoutLatency_AverageTime(RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingPermanentRedirectResponseWithoutLatency_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest._Benchmark.benchmark_shouldVerifyBehaviourWhenHandlingRedirectResponseWithLatency

# Run progress: 44.58% complete, ETA 01:15:00
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.stubs.StubResponse.getHeaders()" because "this.mockStubResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest.setUp(RedirectResponseHandlingStrategyTest.java:46)
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest$_Benchmark.before(RedirectResponseHandlingStrategyTest.java:144)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest$_Benchmark.benchmark_shouldVerifyBehaviourWhenHandlingRedirectResponseWithLatency(RedirectResponseHandlingStrategyTest.java:132)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingRedirectResponseWithLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingRedirectResponseWithLatency_avgt_jmhStub(RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingRedirectResponseWithLatency_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingRedirectResponseWithLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingRedirectResponseWithLatency_AverageTime(RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingRedirectResponseWithLatency_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 44.65% complete, ETA 01:14:47
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.stubs.StubResponse.getHeaders()" because "this.mockStubResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest.setUp(RedirectResponseHandlingStrategyTest.java:46)
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest$_Benchmark.before(RedirectResponseHandlingStrategyTest.java:144)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest$_Benchmark.benchmark_shouldVerifyBehaviourWhenHandlingRedirectResponseWithLatency(RedirectResponseHandlingStrategyTest.java:132)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingRedirectResponseWithLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingRedirectResponseWithLatency_avgt_jmhStub(RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingRedirectResponseWithLatency_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingRedirectResponseWithLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingRedirectResponseWithLatency_AverageTime(RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingRedirectResponseWithLatency_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest._Benchmark.benchmark_shouldVerifyBehaviourWhenHandlingTemporaryRedirectResponseWithoutLatency

# Run progress: 44.73% complete, ETA 01:14:33
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.stubs.StubResponse.getHeaders()" because "this.mockStubResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest.setUp(RedirectResponseHandlingStrategyTest.java:46)
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest$_Benchmark.before(RedirectResponseHandlingStrategyTest.java:144)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest$_Benchmark.benchmark_shouldVerifyBehaviourWhenHandlingTemporaryRedirectResponseWithoutLatency(RedirectResponseHandlingStrategyTest.java:120)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingTemporaryRedirectResponseWithoutLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingTemporaryRedirectResponseWithoutLatency_avgt_jmhStub(RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingTemporaryRedirectResponseWithoutLatency_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingTemporaryRedirectResponseWithoutLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingTemporaryRedirectResponseWithoutLatency_AverageTime(RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingTemporaryRedirectResponseWithoutLatency_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 44.80% complete, ETA 01:14:20
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.stubs.StubResponse.getHeaders()" because "this.mockStubResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest.setUp(RedirectResponseHandlingStrategyTest.java:46)
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest$_Benchmark.before(RedirectResponseHandlingStrategyTest.java:144)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.RedirectResponseHandlingStrategyTest$_Benchmark.benchmark_shouldVerifyBehaviourWhenHandlingTemporaryRedirectResponseWithoutLatency(RedirectResponseHandlingStrategyTest.java:120)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingTemporaryRedirectResponseWithoutLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingTemporaryRedirectResponseWithoutLatency_avgt_jmhStub(RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingTemporaryRedirectResponseWithoutLatency_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingTemporaryRedirectResponseWithoutLatency_jmhTest.benchmark_shouldVerifyBehaviourWhenHandlingTemporaryRedirectResponseWithoutLatency_AverageTime(RedirectResponseHandlingStrategyTest__Benchmark_benchmark_shouldVerifyBehaviourWhenHandlingTemporaryRedirectResponseWithoutLatency_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.strategy.StubsResponseHandlingStrategyFactoryTest._Benchmark.benchmark_shouldReturnDefaultResponseHandlingStrategyWhen404ResponseHasNoBody

# Run progress: 44.88% complete, ETA 01:14:07
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.stubs.StubResponse.getHttpStatusCode()" because "this.mockStubResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.StubsResponseHandlingStrategyFactoryTest.shouldReturnDefaultResponseHandlingStrategyWhen404ResponseHasNoBody(StubsResponseHandlingStrategyFactoryTest.java:37)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.StubsResponseHandlingStrategyFactoryTest$_Benchmark.benchmark_shouldReturnDefaultResponseHandlingStrategyWhen404ResponseHasNoBody(StubsResponseHandlingStrategyFactoryTest.java:52)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.StubsResponseHandlingStrategyFactoryTest__Benchmark_benchmark_shouldReturnDefaultResponseHandlingStrategyWhen404ResponseHasNoBody_jmhTest.benchmark_shouldReturnDefaultResponseHandlingStrategyWhen404ResponseHasNoBody_avgt_jmhStub(StubsResponseHandlingStrategyFactoryTest__Benchmark_benchmark_shouldReturnDefaultResponseHandlingStrategyWhen404ResponseHasNoBody_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.StubsResponseHandlingStrategyFactoryTest__Benchmark_benchmark_shouldReturnDefaultResponseHandlingStrategyWhen404ResponseHasNoBody_jmhTest.benchmark_shouldReturnDefaultResponseHandlingStrategyWhen404ResponseHasNoBody_AverageTime(StubsResponseHandlingStrategyFactoryTest__Benchmark_benchmark_shouldReturnDefaultResponseHandlingStrategyWhen404ResponseHasNoBody_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 44.95% complete, ETA 01:13:54
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.stubs.StubResponse.getHttpStatusCode()" because "this.mockStubResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.StubsResponseHandlingStrategyFactoryTest.shouldReturnDefaultResponseHandlingStrategyWhen404ResponseHasNoBody(StubsResponseHandlingStrategyFactoryTest.java:37)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.StubsResponseHandlingStrategyFactoryTest$_Benchmark.benchmark_shouldReturnDefaultResponseHandlingStrategyWhen404ResponseHasNoBody(StubsResponseHandlingStrategyFactoryTest.java:52)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.StubsResponseHandlingStrategyFactoryTest__Benchmark_benchmark_shouldReturnDefaultResponseHandlingStrategyWhen404ResponseHasNoBody_jmhTest.benchmark_shouldReturnDefaultResponseHandlingStrategyWhen404ResponseHasNoBody_avgt_jmhStub(StubsResponseHandlingStrategyFactoryTest__Benchmark_benchmark_shouldReturnDefaultResponseHandlingStrategyWhen404ResponseHasNoBody_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.StubsResponseHandlingStrategyFactoryTest__Benchmark_benchmark_shouldReturnDefaultResponseHandlingStrategyWhen404ResponseHasNoBody_jmhTest.benchmark_shouldReturnDefaultResponseHandlingStrategyWhen404ResponseHasNoBody_AverageTime(StubsResponseHandlingStrategyFactoryTest__Benchmark_benchmark_shouldReturnDefaultResponseHandlingStrategyWhen404ResponseHasNoBody_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.handlers.strategy.StubsResponseHandlingStrategyFactoryTest._Benchmark.benchmark_shouldReturnNotFoundResponseHandlingStrategyWhen404ResponseHasNoBody

# Run progress: 45.03% complete, ETA 01:13:41
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.stubs.StubResponse.getHttpStatusCode()" because "this.mockStubResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.StubsResponseHandlingStrategyFactoryTest.shouldReturnNotFoundResponseHandlingStrategyWhen404ResponseHasNoBody(StubsResponseHandlingStrategyFactoryTest.java:27)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.StubsResponseHandlingStrategyFactoryTest$_Benchmark.benchmark_shouldReturnNotFoundResponseHandlingStrategyWhen404ResponseHasNoBody(StubsResponseHandlingStrategyFactoryTest.java:46)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.StubsResponseHandlingStrategyFactoryTest__Benchmark_benchmark_shouldReturnNotFoundResponseHandlingStrategyWhen404ResponseHasNoBody_jmhTest.benchmark_shouldReturnNotFoundResponseHandlingStrategyWhen404ResponseHasNoBody_avgt_jmhStub(StubsResponseHandlingStrategyFactoryTest__Benchmark_benchmark_shouldReturnNotFoundResponseHandlingStrategyWhen404ResponseHasNoBody_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.StubsResponseHandlingStrategyFactoryTest__Benchmark_benchmark_shouldReturnNotFoundResponseHandlingStrategyWhen404ResponseHasNoBody_jmhTest.benchmark_shouldReturnNotFoundResponseHandlingStrategyWhen404ResponseHasNoBody_AverageTime(StubsResponseHandlingStrategyFactoryTest__Benchmark_benchmark_shouldReturnNotFoundResponseHandlingStrategyWhen404ResponseHasNoBody_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 45.11% complete, ETA 01:13:28
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.stubs.StubResponse.getHttpStatusCode()" because "this.mockStubResponse" is null
	at io.github.azagniotov.stubby4j.handlers.strategy.StubsResponseHandlingStrategyFactoryTest.shouldReturnNotFoundResponseHandlingStrategyWhen404ResponseHasNoBody(StubsResponseHandlingStrategyFactoryTest.java:27)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.handlers.strategy.StubsResponseHandlingStrategyFactoryTest$_Benchmark.benchmark_shouldReturnNotFoundResponseHandlingStrategyWhen404ResponseHasNoBody(StubsResponseHandlingStrategyFactoryTest.java:46)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.StubsResponseHandlingStrategyFactoryTest__Benchmark_benchmark_shouldReturnNotFoundResponseHandlingStrategyWhen404ResponseHasNoBody_jmhTest.benchmark_shouldReturnNotFoundResponseHandlingStrategyWhen404ResponseHasNoBody_avgt_jmhStub(StubsResponseHandlingStrategyFactoryTest__Benchmark_benchmark_shouldReturnNotFoundResponseHandlingStrategyWhen404ResponseHasNoBody_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.handlers.strategy.jmh_generated.StubsResponseHandlingStrategyFactoryTest__Benchmark_benchmark_shouldReturnNotFoundResponseHandlingStrategyWhen404ResponseHasNoBody_jmhTest.benchmark_shouldReturnNotFoundResponseHandlingStrategyWhen404ResponseHasNoBody_AverageTime(StubsResponseHandlingStrategyFactoryTest__Benchmark_benchmark_shouldReturnNotFoundResponseHandlingStrategyWhen404ResponseHasNoBody_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.parser.json.JSONAssertTest._Benchmark.benchmark_shouldCompareTwoJsonArraysWithDifferentContentOrder

# Run progress: 45.18% complete, ETA 01:13:15
# Fork: 1 of 2
# Warmup Iteration   1: 1649.332 ns/op
# Warmup Iteration   2: 877.993 ns/op
# Warmup Iteration   3: 825.590 ns/op
# Warmup Iteration   4: 826.612 ns/op
# Warmup Iteration   5: 824.482 ns/op
# Warmup Iteration   6: 824.007 ns/op
# Warmup Iteration   7: 824.025 ns/op
# Warmup Iteration   8: 825.715 ns/op
# Warmup Iteration   9: 826.955 ns/op
# Warmup Iteration  10: 828.333 ns/op
Iteration   1: 827.567 ns/op
Iteration   2: 827.716 ns/op
Iteration   3: 824.437 ns/op
Iteration   4: 824.992 ns/op
Iteration   5: 823.747 ns/op
Iteration   6: 825.457 ns/op
Iteration   7: 822.669 ns/op
Iteration   8: 822.015 ns/op
Iteration   9: 824.903 ns/op
Iteration  10: 826.772 ns/op
Iteration  11: 827.163 ns/op
Iteration  12: 828.212 ns/op
Iteration  13: 822.874 ns/op
Iteration  14: 823.550 ns/op
Iteration  15: 824.848 ns/op
Iteration  16: 826.243 ns/op
Iteration  17: 826.517 ns/op
Iteration  18: 824.756 ns/op
Iteration  19: 824.047 ns/op
Iteration  20: 825.456 ns/op

# Run progress: 45.26% complete, ETA 01:13:38
# Fork: 2 of 2
# Warmup Iteration   1: 1880.536 ns/op
# Warmup Iteration   2: 844.193 ns/op
# Warmup Iteration   3: 782.179 ns/op
# Warmup Iteration   4: 781.976 ns/op
# Warmup Iteration   5: 779.073 ns/op
# Warmup Iteration   6: 779.761 ns/op
# Warmup Iteration   7: 779.271 ns/op
# Warmup Iteration   8: 778.130 ns/op
# Warmup Iteration   9: 779.261 ns/op
# Warmup Iteration  10: 777.983 ns/op
Iteration   1: 777.468 ns/op
Iteration   2: 776.452 ns/op
Iteration   3: 781.818 ns/op
Iteration   4: 774.616 ns/op
Iteration   5: 778.344 ns/op
Iteration   6: 777.225 ns/op
Iteration   7: 780.777 ns/op
Iteration   8: 778.203 ns/op
Iteration   9: 779.561 ns/op
Iteration  10: 781.130 ns/op
Iteration  11: 779.927 ns/op
Iteration  12: 780.957 ns/op
Iteration  13: 779.166 ns/op
Iteration  14: 777.506 ns/op
Iteration  15: 782.741 ns/op
Iteration  16: 780.388 ns/op
Iteration  17: 780.879 ns/op
Iteration  18: 781.706 ns/op
Iteration  19: 784.882 ns/op
Iteration  20: 779.305 ns/op


Result "io.github.azagniotov.stubby4j.parser.json.JSONAssertTest._Benchmark.benchmark_shouldCompareTwoJsonArraysWithDifferentContentOrder":
  802.425 ±(99.9%) 13.027 ns/op [Average]
  (min, avg, max) = (774.616, 802.425, 828.212), stdev = 23.155
  CI (99.9%): [789.398, 815.452] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.parser.json.JSONAssertTest._Benchmark.benchmark_shouldCompareTwoJsonComplexGraphsWithDifferentContentOrder

# Run progress: 45.33% complete, ETA 01:14:01
# Fork: 1 of 2
# Warmup Iteration   1: 1723.625 ns/op
# Warmup Iteration   2: 820.463 ns/op
# Warmup Iteration   3: 767.138 ns/op
# Warmup Iteration   4: 767.333 ns/op
# Warmup Iteration   5: 764.916 ns/op
# Warmup Iteration   6: 766.208 ns/op
# Warmup Iteration   7: 767.662 ns/op
# Warmup Iteration   8: 768.485 ns/op
# Warmup Iteration   9: 765.813 ns/op
# Warmup Iteration  10: 764.850 ns/op
Iteration   1: 769.203 ns/op
Iteration   2: 766.665 ns/op
Iteration   3: 768.485 ns/op
Iteration   4: 768.345 ns/op
Iteration   5: 769.011 ns/op
Iteration   6: 768.039 ns/op
Iteration   7: 764.301 ns/op
Iteration   8: 765.916 ns/op
Iteration   9: 764.672 ns/op
Iteration  10: 764.781 ns/op
Iteration  11: 768.223 ns/op
Iteration  12: 767.137 ns/op
Iteration  13: 768.333 ns/op
Iteration  14: 767.294 ns/op
Iteration  15: 763.777 ns/op
Iteration  16: 762.823 ns/op
Iteration  17: 763.039 ns/op
Iteration  18: 765.128 ns/op
Iteration  19: 762.278 ns/op
Iteration  20: 765.354 ns/op

# Run progress: 45.41% complete, ETA 01:14:24
# Fork: 2 of 2
# Warmup Iteration   1: 1734.719 ns/op
# Warmup Iteration   2: 809.006 ns/op
# Warmup Iteration   3: 776.107 ns/op
# Warmup Iteration   4: 776.132 ns/op
# Warmup Iteration   5: 772.566 ns/op
# Warmup Iteration   6: 776.361 ns/op
# Warmup Iteration   7: 772.180 ns/op
# Warmup Iteration   8: 774.944 ns/op
# Warmup Iteration   9: 772.056 ns/op
# Warmup Iteration  10: 775.154 ns/op
Iteration   1: 775.451 ns/op
Iteration   2: 775.303 ns/op
Iteration   3: 773.257 ns/op
Iteration   4: 773.474 ns/op
Iteration   5: 775.328 ns/op
Iteration   6: 774.884 ns/op
Iteration   7: 774.441 ns/op
Iteration   8: 775.848 ns/op
Iteration   9: 778.971 ns/op
Iteration  10: 776.474 ns/op
Iteration  11: 779.436 ns/op
Iteration  12: 776.845 ns/op
Iteration  13: 774.159 ns/op
Iteration  14: 776.154 ns/op
Iteration  15: 775.590 ns/op
Iteration  16: 777.233 ns/op
Iteration  17: 775.827 ns/op
Iteration  18: 775.810 ns/op
Iteration  19: 781.768 ns/op
Iteration  20: 775.103 ns/op


Result "io.github.azagniotov.stubby4j.parser.json.JSONAssertTest._Benchmark.benchmark_shouldCompareTwoJsonComplexGraphsWithDifferentContentOrder":
  771.104 ±(99.9%) 3.066 ns/op [Average]
  (min, avg, max) = (762.278, 771.104, 781.768), stdev = 5.451
  CI (99.9%): [768.038, 774.170] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.server.ssl.CustomHostnameVerifierTest._Benchmark.benchmark_expectedSubjectAltNames

# Run progress: 45.48% complete, ETA 01:14:47
# Fork: 1 of 2
# Warmup Iteration   1: 17126.587 ns/op
# Warmup Iteration   2: 2330.923 ns/op
# Warmup Iteration   3: 1585.904 ns/op
# Warmup Iteration   4: 1490.762 ns/op
# Warmup Iteration   5: 1489.700 ns/op
# Warmup Iteration   6: 1493.301 ns/op
# Warmup Iteration   7: 1493.243 ns/op
# Warmup Iteration   8: 1494.574 ns/op
# Warmup Iteration   9: 1501.174 ns/op
# Warmup Iteration  10: 1489.330 ns/op
Iteration   1: 1492.762 ns/op
Iteration   2: 1498.048 ns/op
Iteration   3: 1488.613 ns/op
Iteration   4: 1491.680 ns/op
Iteration   5: 1484.913 ns/op
Iteration   6: 1494.747 ns/op
Iteration   7: 1489.289 ns/op
Iteration   8: 1489.899 ns/op
Iteration   9: 1485.205 ns/op
Iteration  10: 1493.145 ns/op
Iteration  11: 1483.766 ns/op
Iteration  12: 1486.033 ns/op
Iteration  13: 1491.125 ns/op
Iteration  14: 1491.457 ns/op
Iteration  15: 1488.751 ns/op
Iteration  16: 1487.587 ns/op
Iteration  17: 1488.969 ns/op
Iteration  18: 1491.494 ns/op
Iteration  19: 1488.752 ns/op
Iteration  20: 1489.033 ns/op

# Run progress: 45.56% complete, ETA 01:15:10
# Fork: 2 of 2
# Warmup Iteration   1: 15707.633 ns/op
# Warmup Iteration   2: 2312.326 ns/op
# Warmup Iteration   3: 1600.119 ns/op
# Warmup Iteration   4: 1552.162 ns/op
# Warmup Iteration   5: 1547.934 ns/op
# Warmup Iteration   6: 1543.413 ns/op
# Warmup Iteration   7: 1548.889 ns/op
# Warmup Iteration   8: 1544.601 ns/op
# Warmup Iteration   9: 1548.187 ns/op
# Warmup Iteration  10: 1548.693 ns/op
Iteration   1: 1550.784 ns/op
Iteration   2: 1547.025 ns/op
Iteration   3: 1542.478 ns/op
Iteration   4: 1549.818 ns/op
Iteration   5: 1551.858 ns/op
Iteration   6: 1544.940 ns/op
Iteration   7: 1541.652 ns/op
Iteration   8: 1549.097 ns/op
Iteration   9: 1544.203 ns/op
Iteration  10: 1546.406 ns/op
Iteration  11: 1548.512 ns/op
Iteration  12: 1549.196 ns/op
Iteration  13: 1547.306 ns/op
Iteration  14: 1544.271 ns/op
Iteration  15: 1544.645 ns/op
Iteration  16: 1541.984 ns/op
Iteration  17: 1545.870 ns/op
Iteration  18: 1549.195 ns/op
Iteration  19: 1548.430 ns/op
Iteration  20: 1547.696 ns/op


Result "io.github.azagniotov.stubby4j.server.ssl.CustomHostnameVerifierTest._Benchmark.benchmark_expectedSubjectAltNames":
  1518.266 ±(99.9%) 16.337 ns/op [Average]
  (min, avg, max) = (1483.766, 1518.266, 1551.858), stdev = 29.040
  CI (99.9%): [1501.928, 1534.603] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.server.ssl.CustomHostnameVerifierTest._Benchmark.benchmark_nonSubjectAltNames

# Run progress: 45.63% complete, ETA 01:15:32
# Fork: 1 of 2
# Warmup Iteration   1: 18308.105 ns/op
# Warmup Iteration   2: 2371.253 ns/op
# Warmup Iteration   3: 1670.229 ns/op
# Warmup Iteration   4: 1567.060 ns/op
# Warmup Iteration   5: 1568.284 ns/op
# Warmup Iteration   6: 1575.357 ns/op
# Warmup Iteration   7: 1575.581 ns/op
# Warmup Iteration   8: 1572.497 ns/op
# Warmup Iteration   9: 1577.543 ns/op
# Warmup Iteration  10: 1572.431 ns/op
Iteration   1: 1569.903 ns/op
Iteration   2: 1577.927 ns/op
Iteration   3: 1577.759 ns/op
Iteration   4: 1576.355 ns/op
Iteration   5: 1570.201 ns/op
Iteration   6: 1569.231 ns/op
Iteration   7: 1570.877 ns/op
Iteration   8: 1566.483 ns/op
Iteration   9: 1576.328 ns/op
Iteration  10: 1577.861 ns/op
Iteration  11: 1566.261 ns/op
Iteration  12: 1569.698 ns/op
Iteration  13: 1568.358 ns/op
Iteration  14: 1571.906 ns/op
Iteration  15: 1577.480 ns/op
Iteration  16: 1571.410 ns/op
Iteration  17: 1572.948 ns/op
Iteration  18: 1570.799 ns/op
Iteration  19: 1573.029 ns/op
Iteration  20: 1654.671 ns/op

# Run progress: 45.71% complete, ETA 01:15:54
# Fork: 2 of 2
# Warmup Iteration   1: 28560.004 ns/op
# Warmup Iteration   2: 3752.938 ns/op
# Warmup Iteration   3: 2846.146 ns/op
# Warmup Iteration   4: 2722.037 ns/op
# Warmup Iteration   5: 2632.943 ns/op
# Warmup Iteration   6: 2595.998 ns/op
# Warmup Iteration   7: 2589.692 ns/op
# Warmup Iteration   8: 2586.442 ns/op
# Warmup Iteration   9: 2592.075 ns/op
# Warmup Iteration  10: 2595.891 ns/op
Iteration   1: 2606.034 ns/op
Iteration   2: 2584.575 ns/op
Iteration   3: 2594.817 ns/op
Iteration   4: 2589.710 ns/op
Iteration   5: 2589.766 ns/op
Iteration   6: 2594.549 ns/op
Iteration   7: 2581.973 ns/op
Iteration   8: 2586.441 ns/op
Iteration   9: 2596.060 ns/op
Iteration  10: 2584.894 ns/op
Iteration  11: 2593.344 ns/op
Iteration  12: 2578.677 ns/op
Iteration  13: 2589.441 ns/op
Iteration  14: 2591.038 ns/op
Iteration  15: 2597.340 ns/op
Iteration  16: 2596.509 ns/op
Iteration  17: 2584.038 ns/op
Iteration  18: 2588.754 ns/op
Iteration  19: 2587.932 ns/op
Iteration  20: 2594.518 ns/op


Result "io.github.azagniotov.stubby4j.server.ssl.CustomHostnameVerifierTest._Benchmark.benchmark_nonSubjectAltNames":
  2083.497 ±(99.9%) 288.984 ns/op [Average]
  (min, avg, max) = (1566.261, 2083.497, 2606.034), stdev = 513.669
  CI (99.9%): [1794.513, 2372.481] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.server.ssl.CustomHostnameVerifierTest._Benchmark.benchmark_stubbySelfSignedCertificateShouldContainPrivateIp

# Run progress: 45.78% complete, ETA 01:16:17
# Fork: 1 of 2
# Warmup Iteration   1: 18177.806 ns/op
# Warmup Iteration   2: 3479.233 ns/op
# Warmup Iteration   3: 1628.420 ns/op
# Warmup Iteration   4: 1542.848 ns/op
# Warmup Iteration   5: 1540.610 ns/op
# Warmup Iteration   6: 1540.594 ns/op
# Warmup Iteration   7: 1548.940 ns/op
# Warmup Iteration   8: 1543.527 ns/op
# Warmup Iteration   9: 1550.520 ns/op
# Warmup Iteration  10: 1544.025 ns/op
Iteration   1: 1539.552 ns/op
Iteration   2: 1536.667 ns/op
Iteration   3: 1537.359 ns/op
Iteration   4: 1539.599 ns/op
Iteration   5: 1540.749 ns/op
Iteration   6: 1540.320 ns/op
Iteration   7: 1546.209 ns/op
Iteration   8: 1538.863 ns/op
Iteration   9: 1540.510 ns/op
Iteration  10: 1536.474 ns/op
Iteration  11: 1537.599 ns/op
Iteration  12: 1542.660 ns/op
Iteration  13: 1533.303 ns/op
Iteration  14: 1539.805 ns/op
Iteration  15: 1534.678 ns/op
Iteration  16: 1541.813 ns/op
Iteration  17: 1533.904 ns/op
Iteration  18: 1536.944 ns/op
Iteration  19: 1545.328 ns/op
Iteration  20: 1540.222 ns/op

# Run progress: 45.86% complete, ETA 01:16:39
# Fork: 2 of 2
# Warmup Iteration   1: 20540.393 ns/op
# Warmup Iteration   2: 2480.512 ns/op
# Warmup Iteration   3: 1599.349 ns/op
# Warmup Iteration   4: 1525.236 ns/op
# Warmup Iteration   5: 1520.818 ns/op
# Warmup Iteration   6: 1524.295 ns/op
# Warmup Iteration   7: 1516.809 ns/op
# Warmup Iteration   8: 1519.160 ns/op
# Warmup Iteration   9: 1525.847 ns/op
# Warmup Iteration  10: 1514.172 ns/op
Iteration   1: 1520.517 ns/op
Iteration   2: 1520.851 ns/op
Iteration   3: 1516.598 ns/op
Iteration   4: 1526.051 ns/op
Iteration   5: 1518.992 ns/op
Iteration   6: 1519.499 ns/op
Iteration   7: 1498.218 ns/op
Iteration   8: 1503.978 ns/op
Iteration   9: 1509.001 ns/op
Iteration  10: 1505.349 ns/op
Iteration  11: 1499.354 ns/op
Iteration  12: 1502.039 ns/op
Iteration  13: 1505.257 ns/op
Iteration  14: 1509.501 ns/op
Iteration  15: 1506.429 ns/op
Iteration  16: 1506.305 ns/op
Iteration  17: 1505.065 ns/op
Iteration  18: 1503.019 ns/op
Iteration  19: 1501.619 ns/op
Iteration  20: 1501.412 ns/op


Result "io.github.azagniotov.stubby4j.server.ssl.CustomHostnameVerifierTest._Benchmark.benchmark_stubbySelfSignedCertificateShouldContainPrivateIp":
  1524.040 ±(99.9%) 9.295 ns/op [Average]
  (min, avg, max) = (1498.218, 1524.040, 1546.209), stdev = 16.521
  CI (99.9%): [1514.745, 1533.335] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.server.ssl.CustomHostnameVerifierTest._Benchmark.benchmark_stubbySelfSignedCertificateShouldNotHaveX500PrincipalNameLocalhost

# Run progress: 45.93% complete, ETA 01:17:00
# Fork: 1 of 2
# Warmup Iteration   1: 19815.446 ns/op
# Warmup Iteration   2: 2296.138 ns/op
# Warmup Iteration   3: 1589.023 ns/op
# Warmup Iteration   4: 1477.618 ns/op
# Warmup Iteration   5: 1488.555 ns/op
# Warmup Iteration   6: 1474.932 ns/op
# Warmup Iteration   7: 1482.165 ns/op
# Warmup Iteration   8: 1479.844 ns/op
# Warmup Iteration   9: 1473.493 ns/op
# Warmup Iteration  10: 1472.958 ns/op
Iteration   1: 1472.950 ns/op
Iteration   2: 1475.519 ns/op
Iteration   3: 1481.185 ns/op
Iteration   4: 1472.320 ns/op
Iteration   5: 1478.429 ns/op
Iteration   6: 1483.810 ns/op
Iteration   7: 1476.690 ns/op
Iteration   8: 1481.347 ns/op
Iteration   9: 1480.557 ns/op
Iteration  10: 1474.164 ns/op
Iteration  11: 1483.511 ns/op
Iteration  12: 1476.980 ns/op
Iteration  13: 1479.653 ns/op
Iteration  14: 1477.851 ns/op
Iteration  15: 1479.954 ns/op
Iteration  16: 1484.969 ns/op
Iteration  17: 1470.983 ns/op
Iteration  18: 1484.084 ns/op
Iteration  19: 1477.527 ns/op
Iteration  20: 1481.883 ns/op

# Run progress: 46.01% complete, ETA 01:17:22
# Fork: 2 of 2
# Warmup Iteration   1: 22405.291 ns/op
# Warmup Iteration   2: 2542.020 ns/op
# Warmup Iteration   3: 1625.423 ns/op
# Warmup Iteration   4: 1521.015 ns/op
# Warmup Iteration   5: 1523.744 ns/op
# Warmup Iteration   6: 1520.508 ns/op
# Warmup Iteration   7: 1515.283 ns/op
# Warmup Iteration   8: 1512.774 ns/op
# Warmup Iteration   9: 1520.637 ns/op
# Warmup Iteration  10: 1525.488 ns/op
Iteration   1: 1520.118 ns/op
Iteration   2: 1519.059 ns/op
Iteration   3: 1515.297 ns/op
Iteration   4: 1514.202 ns/op
Iteration   5: 1521.469 ns/op
Iteration   6: 1521.847 ns/op
Iteration   7: 1517.361 ns/op
Iteration   8: 1514.985 ns/op
Iteration   9: 1524.113 ns/op
Iteration  10: 1512.954 ns/op
Iteration  11: 1517.964 ns/op
Iteration  12: 1515.203 ns/op
Iteration  13: 1520.858 ns/op
Iteration  14: 1515.753 ns/op
Iteration  15: 1514.895 ns/op
Iteration  16: 1519.648 ns/op
Iteration  17: 1519.583 ns/op
Iteration  18: 1523.613 ns/op
Iteration  19: 1513.008 ns/op
Iteration  20: 1520.266 ns/op


Result "io.github.azagniotov.stubby4j.server.ssl.CustomHostnameVerifierTest._Benchmark.benchmark_stubbySelfSignedCertificateShouldNotHaveX500PrincipalNameLocalhost":
  1498.414 ±(99.9%) 11.417 ns/op [Average]
  (min, avg, max) = (1470.983, 1498.414, 1524.113), stdev = 20.293
  CI (99.9%): [1486.997, 1509.831] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.server.ssl.CustomHostnameVerifierTest._Benchmark.benchmark_subjectAltNamesMustContain127_0_0_1

# Run progress: 46.08% complete, ETA 01:17:44
# Fork: 1 of 2
# Warmup Iteration   1: 20782.859 ns/op
# Warmup Iteration   2: 2755.573 ns/op
# Warmup Iteration   3: 2308.354 ns/op
# Warmup Iteration   4: 2193.931 ns/op
# Warmup Iteration   5: 2197.500 ns/op
# Warmup Iteration   6: 2195.143 ns/op
# Warmup Iteration   7: 2195.947 ns/op
# Warmup Iteration   8: 2194.675 ns/op
# Warmup Iteration   9: 2195.264 ns/op
# Warmup Iteration  10: 2200.987 ns/op
Iteration   1: 2187.776 ns/op
Iteration   2: 2190.247 ns/op
Iteration   3: 2188.782 ns/op
Iteration   4: 2188.242 ns/op
Iteration   5: 2193.156 ns/op
Iteration   6: 2196.536 ns/op
Iteration   7: 2195.904 ns/op
Iteration   8: 2194.954 ns/op
Iteration   9: 2198.243 ns/op
Iteration  10: 2200.951 ns/op
Iteration  11: 2196.200 ns/op
Iteration  12: 2194.479 ns/op
Iteration  13: 2199.560 ns/op
Iteration  14: 2196.889 ns/op
Iteration  15: 2202.188 ns/op
Iteration  16: 2199.818 ns/op
Iteration  17: 2194.140 ns/op
Iteration  18: 2198.537 ns/op
Iteration  19: 2198.896 ns/op
Iteration  20: 2198.984 ns/op

# Run progress: 46.16% complete, ETA 01:18:05
# Fork: 2 of 2
# Warmup Iteration   1: 26020.842 ns/op
# Warmup Iteration   2: 4075.110 ns/op
# Warmup Iteration   3: 3740.059 ns/op
# Warmup Iteration   4: 3577.890 ns/op
# Warmup Iteration   5: 3579.701 ns/op
# Warmup Iteration   6: 3590.205 ns/op
# Warmup Iteration   7: 3578.914 ns/op
# Warmup Iteration   8: 3570.860 ns/op
# Warmup Iteration   9: 3598.541 ns/op
# Warmup Iteration  10: 3588.778 ns/op
Iteration   1: 3580.799 ns/op
Iteration   2: 3583.948 ns/op
Iteration   3: 3585.765 ns/op
Iteration   4: 3578.938 ns/op
Iteration   5: 3574.110 ns/op
Iteration   6: 3578.594 ns/op
Iteration   7: 3590.568 ns/op
Iteration   8: 3578.863 ns/op
Iteration   9: 3581.767 ns/op
Iteration  10: 3572.206 ns/op
Iteration  11: 3573.650 ns/op
Iteration  12: 3584.392 ns/op
Iteration  13: 3578.123 ns/op
Iteration  14: 3576.685 ns/op
Iteration  15: 3570.003 ns/op
Iteration  16: 3588.237 ns/op
Iteration  17: 3577.305 ns/op
Iteration  18: 3593.057 ns/op
Iteration  19: 3580.414 ns/op
Iteration  20: 3583.229 ns/op


Result "io.github.azagniotov.stubby4j.server.ssl.CustomHostnameVerifierTest._Benchmark.benchmark_subjectAltNamesMustContain127_0_0_1":
  2888.128 ±(99.9%) 394.512 ns/op [Average]
  (min, avg, max) = (2187.776, 2888.128, 3593.057), stdev = 701.244
  CI (99.9%): [2493.617, 3282.640] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.server.ssl.CustomHostnameVerifierTest._Benchmark.benchmark_subjectAltNamesMustContainLocalhost

# Run progress: 46.23% complete, ETA 01:18:26
# Fork: 1 of 2
# Warmup Iteration   1: 17304.805 ns/op
# Warmup Iteration   2: 2092.731 ns/op
# Warmup Iteration   3: 1725.035 ns/op
# Warmup Iteration   4: 1643.626 ns/op
# Warmup Iteration   5: 1651.040 ns/op
# Warmup Iteration   6: 1644.511 ns/op
# Warmup Iteration   7: 1647.135 ns/op
# Warmup Iteration   8: 1648.073 ns/op
# Warmup Iteration   9: 1653.366 ns/op
# Warmup Iteration  10: 1650.473 ns/op
Iteration   1: 1646.384 ns/op
Iteration   2: 1647.846 ns/op
Iteration   3: 1647.312 ns/op
Iteration   4: 1645.296 ns/op
Iteration   5: 1649.645 ns/op
Iteration   6: 1647.512 ns/op
Iteration   7: 1648.191 ns/op
Iteration   8: 1643.957 ns/op
Iteration   9: 1646.548 ns/op
Iteration  10: 1642.056 ns/op
Iteration  11: 1645.646 ns/op
Iteration  12: 1646.039 ns/op
Iteration  13: 1651.556 ns/op
Iteration  14: 1647.262 ns/op
Iteration  15: 1643.658 ns/op
Iteration  16: 1642.660 ns/op
Iteration  17: 1643.227 ns/op
Iteration  18: 1645.701 ns/op
Iteration  19: 1641.420 ns/op
Iteration  20: 1642.086 ns/op

# Run progress: 46.31% complete, ETA 01:18:47
# Fork: 2 of 2
# Warmup Iteration   1: 15428.694 ns/op
# Warmup Iteration   2: 2056.414 ns/op
# Warmup Iteration   3: 1601.980 ns/op
# Warmup Iteration   4: 1580.752 ns/op
# Warmup Iteration   5: 1581.103 ns/op
# Warmup Iteration   6: 1579.655 ns/op
# Warmup Iteration   7: 1575.375 ns/op
# Warmup Iteration   8: 1586.488 ns/op
# Warmup Iteration   9: 1579.079 ns/op
# Warmup Iteration  10: 1579.948 ns/op
Iteration   1: 1580.276 ns/op
Iteration   2: 1584.160 ns/op
Iteration   3: 1585.339 ns/op
Iteration   4: 1578.223 ns/op
Iteration   5: 1590.344 ns/op
Iteration   6: 1586.942 ns/op
Iteration   7: 1596.985 ns/op
Iteration   8: 1600.070 ns/op
Iteration   9: 1597.438 ns/op
Iteration  10: 1592.050 ns/op
Iteration  11: 1598.766 ns/op
Iteration  12: 1593.240 ns/op
Iteration  13: 1591.796 ns/op
Iteration  14: 1589.383 ns/op
Iteration  15: 1592.604 ns/op
Iteration  16: 1592.552 ns/op
Iteration  17: 1594.317 ns/op
Iteration  18: 1597.094 ns/op
Iteration  19: 1596.839 ns/op
Iteration  20: 1593.067 ns/op


Result "io.github.azagniotov.stubby4j.server.ssl.CustomHostnameVerifierTest._Benchmark.benchmark_subjectAltNamesMustContainLocalhost":
  1618.637 ±(99.9%) 15.635 ns/op [Average]
  (min, avg, max) = (1578.223, 1618.637, 1651.556), stdev = 27.791
  CI (99.9%): [1603.002, 1634.272] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.server.ssl.LanIPv4ValidatorTest._Benchmark.benchmark_isNotPrivateIp

# Run progress: 46.39% complete, ETA 01:19:08
# Fork: 1 of 2
# Warmup Iteration   1: 3749.803 ns/op
# Warmup Iteration   2: 1805.833 ns/op
# Warmup Iteration   3: 1678.816 ns/op
# Warmup Iteration   4: 1676.044 ns/op
# Warmup Iteration   5: 1676.343 ns/op
# Warmup Iteration   6: 1671.563 ns/op
# Warmup Iteration   7: 1677.703 ns/op
# Warmup Iteration   8: 1668.377 ns/op
# Warmup Iteration   9: 1676.192 ns/op
# Warmup Iteration  10: 1667.206 ns/op
Iteration   1: 1674.815 ns/op
Iteration   2: 1670.526 ns/op
Iteration   3: 1675.650 ns/op
Iteration   4: 1681.558 ns/op
Iteration   5: 1675.929 ns/op
Iteration   6: 1674.900 ns/op
Iteration   7: 1680.758 ns/op
Iteration   8: 1672.829 ns/op
Iteration   9: 1666.830 ns/op
Iteration  10: 1664.874 ns/op
Iteration  11: 1673.082 ns/op
Iteration  12: 1663.614 ns/op
Iteration  13: 1669.683 ns/op
Iteration  14: 1676.257 ns/op
Iteration  15: 1676.236 ns/op
Iteration  16: 1668.660 ns/op
Iteration  17: 1673.065 ns/op
Iteration  18: 1675.731 ns/op
Iteration  19: 1667.638 ns/op
Iteration  20: 1676.616 ns/op

# Run progress: 46.46% complete, ETA 01:19:28
# Fork: 2 of 2
# Warmup Iteration   1: 4109.810 ns/op
# Warmup Iteration   2: 1780.415 ns/op
# Warmup Iteration   3: 1670.304 ns/op
# Warmup Iteration   4: 1670.496 ns/op
# Warmup Iteration   5: 1669.273 ns/op
# Warmup Iteration   6: 1665.931 ns/op
# Warmup Iteration   7: 1666.482 ns/op
# Warmup Iteration   8: 1678.258 ns/op
# Warmup Iteration   9: 1670.455 ns/op
# Warmup Iteration  10: 1671.553 ns/op
Iteration   1: 1673.950 ns/op
Iteration   2: 1663.620 ns/op
Iteration   3: 1670.804 ns/op
Iteration   4: 1668.741 ns/op
Iteration   5: 1667.571 ns/op
Iteration   6: 1665.620 ns/op
Iteration   7: 1677.045 ns/op
Iteration   8: 1676.731 ns/op
Iteration   9: 1666.233 ns/op
Iteration  10: 1665.253 ns/op
Iteration  11: 1667.672 ns/op
Iteration  12: 1671.299 ns/op
Iteration  13: 1671.341 ns/op
Iteration  14: 1675.983 ns/op
Iteration  15: 1666.726 ns/op
Iteration  16: 1672.431 ns/op
Iteration  17: 1681.053 ns/op
Iteration  18: 1676.821 ns/op
Iteration  19: 1674.745 ns/op
Iteration  20: 1672.820 ns/op


Result "io.github.azagniotov.stubby4j.server.ssl.LanIPv4ValidatorTest._Benchmark.benchmark_isNotPrivateIp":
  1672.143 ±(99.9%) 2.736 ns/op [Average]
  (min, avg, max) = (1663.614, 1672.143, 1681.558), stdev = 4.863
  CI (99.9%): [1669.407, 1674.878] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.server.ssl.LanIPv4ValidatorTest._Benchmark.benchmark_isPrivateIp

# Run progress: 46.54% complete, ETA 01:19:49
# Fork: 1 of 2
# Warmup Iteration   1: 4676.635 ns/op
# Warmup Iteration   2: 2381.479 ns/op
# Warmup Iteration   3: 2292.633 ns/op
# Warmup Iteration   4: 2293.576 ns/op
# Warmup Iteration   5: 2289.321 ns/op
# Warmup Iteration   6: 2293.240 ns/op
# Warmup Iteration   7: 2291.649 ns/op
# Warmup Iteration   8: 2283.588 ns/op
# Warmup Iteration   9: 2288.490 ns/op
# Warmup Iteration  10: 2289.086 ns/op
Iteration   1: 2287.466 ns/op
Iteration   2: 2289.909 ns/op
Iteration   3: 2281.038 ns/op
Iteration   4: 2284.963 ns/op
Iteration   5: 2290.049 ns/op
Iteration   6: 2290.335 ns/op
Iteration   7: 2276.589 ns/op
Iteration   8: 2281.757 ns/op
Iteration   9: 2280.466 ns/op
Iteration  10: 2278.410 ns/op
Iteration  11: 2287.861 ns/op
Iteration  12: 2295.460 ns/op
Iteration  13: 2281.475 ns/op
Iteration  14: 2293.325 ns/op
Iteration  15: 2283.790 ns/op
Iteration  16: 2286.705 ns/op
Iteration  17: 2293.753 ns/op
Iteration  18: 2287.409 ns/op
Iteration  19: 2277.955 ns/op
Iteration  20: 2295.180 ns/op

# Run progress: 46.61% complete, ETA 01:20:09
# Fork: 2 of 2
# Warmup Iteration   1: 4720.413 ns/op
# Warmup Iteration   2: 2402.589 ns/op
# Warmup Iteration   3: 2311.910 ns/op
# Warmup Iteration   4: 2310.552 ns/op
# Warmup Iteration   5: 2310.834 ns/op
# Warmup Iteration   6: 2310.507 ns/op
# Warmup Iteration   7: 2311.260 ns/op
# Warmup Iteration   8: 2303.140 ns/op
# Warmup Iteration   9: 2302.320 ns/op
# Warmup Iteration  10: 2303.114 ns/op
Iteration   1: 2305.481 ns/op
Iteration   2: 2305.955 ns/op
Iteration   3: 2303.892 ns/op
Iteration   4: 2307.422 ns/op
Iteration   5: 2311.247 ns/op
Iteration   6: 2302.341 ns/op
Iteration   7: 2321.286 ns/op
Iteration   8: 2317.438 ns/op
Iteration   9: 2316.548 ns/op
Iteration  10: 2320.406 ns/op
Iteration  11: 2326.921 ns/op
Iteration  12: 2313.270 ns/op
Iteration  13: 2315.674 ns/op
Iteration  14: 2316.568 ns/op
Iteration  15: 2320.152 ns/op
Iteration  16: 2321.915 ns/op
Iteration  17: 2313.989 ns/op
Iteration  18: 2320.680 ns/op
Iteration  19: 2313.825 ns/op
Iteration  20: 2318.544 ns/op


Result "io.github.azagniotov.stubby4j.server.ssl.LanIPv4ValidatorTest._Benchmark.benchmark_isPrivateIp":
  2300.436 ±(99.9%) 8.845 ns/op [Average]
  (min, avg, max) = (2276.589, 2300.436, 2326.921), stdev = 15.723
  CI (99.9%): [2291.591, 2309.282] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.server.ssl.SslUtilsTest._Benchmark.benchmark_certificateShouldBeVersion3

# Run progress: 46.69% complete, ETA 01:20:29
# Fork: 1 of 2
# Warmup Iteration   1: 18422.646 ns/op
# Warmup Iteration   2: 2241.920 ns/op
# Warmup Iteration   3: 1504.661 ns/op
# Warmup Iteration   4: 1414.010 ns/op
# Warmup Iteration   5: 1415.527 ns/op
# Warmup Iteration   6: 1422.508 ns/op
# Warmup Iteration   7: 1412.975 ns/op
# Warmup Iteration   8: 1414.950 ns/op
# Warmup Iteration   9: 1413.820 ns/op
# Warmup Iteration  10: 1424.881 ns/op
Iteration   1: 1418.248 ns/op
Iteration   2: 1419.282 ns/op
Iteration   3: 1418.407 ns/op
Iteration   4: 1417.196 ns/op
Iteration   5: 1416.647 ns/op
Iteration   6: 1414.050 ns/op
Iteration   7: 1429.719 ns/op
Iteration   8: 1431.738 ns/op
Iteration   9: 1433.238 ns/op
Iteration  10: 1424.423 ns/op
Iteration  11: 1434.325 ns/op
Iteration  12: 1432.576 ns/op
Iteration  13: 1431.427 ns/op
Iteration  14: 1430.282 ns/op
Iteration  15: 1432.526 ns/op
Iteration  16: 1428.866 ns/op
Iteration  17: 1426.837 ns/op
Iteration  18: 1430.793 ns/op
Iteration  19: 1433.457 ns/op
Iteration  20: 1428.832 ns/op

# Run progress: 46.76% complete, ETA 01:20:49
# Fork: 2 of 2
# Warmup Iteration   1: 16067.320 ns/op
# Warmup Iteration   2: 2248.951 ns/op
# Warmup Iteration   3: 1556.119 ns/op
# Warmup Iteration   4: 1479.919 ns/op
# Warmup Iteration   5: 1469.300 ns/op
# Warmup Iteration   6: 1474.976 ns/op
# Warmup Iteration   7: 1483.277 ns/op
# Warmup Iteration   8: 1474.104 ns/op
# Warmup Iteration   9: 1480.703 ns/op
# Warmup Iteration  10: 1480.582 ns/op
Iteration   1: 1475.446 ns/op
Iteration   2: 1474.210 ns/op
Iteration   3: 1477.177 ns/op
Iteration   4: 1470.322 ns/op
Iteration   5: 1475.312 ns/op
Iteration   6: 1474.825 ns/op
Iteration   7: 1468.256 ns/op
Iteration   8: 1476.169 ns/op
Iteration   9: 1475.255 ns/op
Iteration  10: 1469.137 ns/op
Iteration  11: 1465.546 ns/op
Iteration  12: 1472.423 ns/op
Iteration  13: 1475.745 ns/op
Iteration  14: 1478.224 ns/op
Iteration  15: 1468.988 ns/op
Iteration  16: 1469.213 ns/op
Iteration  17: 1470.320 ns/op
Iteration  18: 1470.174 ns/op
Iteration  19: 1472.499 ns/op
Iteration  20: 1470.609 ns/op


Result "io.github.azagniotov.stubby4j.server.ssl.SslUtilsTest._Benchmark.benchmark_certificateShouldBeVersion3":
  1449.568 ±(99.9%) 13.397 ns/op [Average]
  (min, avg, max) = (1414.050, 1449.568, 1478.224), stdev = 23.812
  CI (99.9%): [1436.171, 1462.965] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.server.ssl.SslUtilsTest._Benchmark.benchmark_certificateShouldContainExpectedSubjectAltIps

# Run progress: 46.84% complete, ETA 01:21:09
# Fork: 1 of 2
# Warmup Iteration   1: 34457.033 ns/op
# Warmup Iteration   2: 4496.331 ns/op
# Warmup Iteration   3: 3097.022 ns/op
# Warmup Iteration   4: 3056.970 ns/op
# Warmup Iteration   5: 3057.378 ns/op
# Warmup Iteration   6: 3045.233 ns/op
# Warmup Iteration   7: 3052.698 ns/op
# Warmup Iteration   8: 3044.785 ns/op
# Warmup Iteration   9: 3054.539 ns/op
# Warmup Iteration  10: 3049.167 ns/op
Iteration   1: 3035.152 ns/op
Iteration   2: 3030.263 ns/op
Iteration   3: 3043.960 ns/op
Iteration   4: 3052.963 ns/op
Iteration   5: 3050.862 ns/op
Iteration   6: 3038.093 ns/op
Iteration   7: 3056.042 ns/op
Iteration   8: 3038.607 ns/op
Iteration   9: 3035.446 ns/op
Iteration  10: 3055.304 ns/op
Iteration  11: 3047.715 ns/op
Iteration  12: 3042.140 ns/op
Iteration  13: 3040.794 ns/op
Iteration  14: 3049.109 ns/op
Iteration  15: 3048.114 ns/op
Iteration  16: 3059.724 ns/op
Iteration  17: 3148.548 ns/op
Iteration  18: 3036.423 ns/op
Iteration  19: 3050.038 ns/op
Iteration  20: 3052.815 ns/op

# Run progress: 46.91% complete, ETA 01:21:29
# Fork: 2 of 2
# Warmup Iteration   1: 34823.665 ns/op
# Warmup Iteration   2: 5595.168 ns/op
# Warmup Iteration   3: 3253.126 ns/op
# Warmup Iteration   4: 3147.098 ns/op
# Warmup Iteration   5: 3145.514 ns/op
# Warmup Iteration   6: 3129.005 ns/op
# Warmup Iteration   7: 3138.514 ns/op
# Warmup Iteration   8: 3140.069 ns/op
# Warmup Iteration   9: 3146.251 ns/op
# Warmup Iteration  10: 3144.695 ns/op
Iteration   1: 3146.733 ns/op
Iteration   2: 3128.658 ns/op
Iteration   3: 3135.237 ns/op
Iteration   4: 3138.979 ns/op
Iteration   5: 3135.373 ns/op
Iteration   6: 3141.951 ns/op
Iteration   7: 3127.775 ns/op
Iteration   8: 3141.137 ns/op
Iteration   9: 3146.639 ns/op
Iteration  10: 3148.734 ns/op
Iteration  11: 3147.126 ns/op
Iteration  12: 3144.289 ns/op
Iteration  13: 3138.998 ns/op
Iteration  14: 3147.645 ns/op
Iteration  15: 3172.283 ns/op
Iteration  16: 3148.681 ns/op
Iteration  17: 3124.493 ns/op
Iteration  18: 3123.546 ns/op
Iteration  19: 3147.026 ns/op
Iteration  20: 3135.290 ns/op


Result "io.github.azagniotov.stubby4j.server.ssl.SslUtilsTest._Benchmark.benchmark_certificateShouldContainExpectedSubjectAltIps":
  3095.818 ±(99.9%) 27.827 ns/op [Average]
  (min, avg, max) = (3030.263, 3095.818, 3172.283), stdev = 49.463
  CI (99.9%): [3067.990, 3123.645] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.server.ssl.SslUtilsTest._Benchmark.benchmark_certificateSigAlgNameShouldBeSHA256withRSA

# Run progress: 46.99% complete, ETA 01:21:48
# Fork: 1 of 2
# Warmup Iteration   1: 19824.270 ns/op
# Warmup Iteration   2: 2289.840 ns/op
# Warmup Iteration   3: 1463.366 ns/op
# Warmup Iteration   4: 1375.161 ns/op
# Warmup Iteration   5: 1367.305 ns/op
# Warmup Iteration   6: 1366.035 ns/op
# Warmup Iteration   7: 1372.803 ns/op
# Warmup Iteration   8: 1370.506 ns/op
# Warmup Iteration   9: 1373.839 ns/op
# Warmup Iteration  10: 1367.601 ns/op
Iteration   1: 1374.323 ns/op
Iteration   2: 1380.919 ns/op
Iteration   3: 1374.731 ns/op
Iteration   4: 1374.273 ns/op
Iteration   5: 1376.729 ns/op
Iteration   6: 1367.983 ns/op
Iteration   7: 1387.490 ns/op
Iteration   8: 1384.185 ns/op
Iteration   9: 1394.404 ns/op
Iteration  10: 1392.452 ns/op
Iteration  11: 1390.741 ns/op
Iteration  12: 1395.914 ns/op
Iteration  13: 1392.413 ns/op
Iteration  14: 1392.821 ns/op
Iteration  15: 1390.444 ns/op
Iteration  16: 1385.034 ns/op
Iteration  17: 1390.969 ns/op
Iteration  18: 1388.974 ns/op
Iteration  19: 1384.414 ns/op
Iteration  20: 1390.178 ns/op

# Run progress: 47.06% complete, ETA 01:22:07
# Fork: 2 of 2
# Warmup Iteration   1: 16883.198 ns/op
# Warmup Iteration   2: 3654.248 ns/op
# Warmup Iteration   3: 1561.273 ns/op
# Warmup Iteration   4: 1425.039 ns/op
# Warmup Iteration   5: 1440.239 ns/op
# Warmup Iteration   6: 1421.380 ns/op
# Warmup Iteration   7: 1431.024 ns/op
# Warmup Iteration   8: 1429.745 ns/op
# Warmup Iteration   9: 1426.057 ns/op
# Warmup Iteration  10: 1428.881 ns/op
Iteration   1: 1434.043 ns/op
Iteration   2: 1424.766 ns/op
Iteration   3: 1429.505 ns/op
Iteration   4: 1425.711 ns/op
Iteration   5: 1429.816 ns/op
Iteration   6: 1418.416 ns/op
Iteration   7: 1430.045 ns/op
Iteration   8: 1426.427 ns/op
Iteration   9: 1427.771 ns/op
Iteration  10: 1421.060 ns/op
Iteration  11: 1430.672 ns/op
Iteration  12: 1427.350 ns/op
Iteration  13: 1426.498 ns/op
Iteration  14: 1423.989 ns/op
Iteration  15: 1426.611 ns/op
Iteration  16: 1431.758 ns/op
Iteration  17: 1423.575 ns/op
Iteration  18: 1428.582 ns/op
Iteration  19: 1427.800 ns/op
Iteration  20: 1429.304 ns/op


Result "io.github.azagniotov.stubby4j.server.ssl.SslUtilsTest._Benchmark.benchmark_certificateSigAlgNameShouldBeSHA256withRSA":
  1406.327 ±(99.9%) 12.381 ns/op [Average]
  (min, avg, max) = (1367.983, 1406.327, 1434.043), stdev = 22.007
  CI (99.9%): [1393.946, 1418.708] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest._Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyDisconnect

# Run progress: 47.14% complete, ETA 01:22:27
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.websocket.api.Session.getRemote()" because "this.mockSession" is null
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest.setUp(StubsServerWebSocketTest.java:74)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.before(StubsServerWebSocketTest.java:285)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyDisconnect(StubsServerWebSocketTest.java:249)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyDisconnect_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyDisconnect_avgt_jmhStub(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyDisconnect_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyDisconnect_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyDisconnect_AverageTime(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyDisconnect_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 47.21% complete, ETA 01:22:12
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.websocket.api.Session.getRemote()" because "this.mockSession" is null
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest.setUp(StubsServerWebSocketTest.java:74)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.before(StubsServerWebSocketTest.java:285)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyDisconnect(StubsServerWebSocketTest.java:249)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyDisconnect_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyDisconnect_avgt_jmhStub(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyDisconnect_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyDisconnect_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyDisconnect_AverageTime(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyDisconnect_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest._Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyFragmentation

# Run progress: 47.29% complete, ETA 01:21:58
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.websocket.api.Session.getRemote()" because "this.mockSession" is null
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest.setUp(StubsServerWebSocketTest.java:74)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.before(StubsServerWebSocketTest.java:285)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyFragmentation(StubsServerWebSocketTest.java:273)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyFragmentation_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyFragmentation_avgt_jmhStub(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyFragmentation_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyFragmentation_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyFragmentation_AverageTime(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyFragmentation_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 47.36% complete, ETA 01:21:43
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.websocket.api.Session.getRemote()" because "this.mockSession" is null
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest.setUp(StubsServerWebSocketTest.java:74)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.before(StubsServerWebSocketTest.java:285)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyFragmentation(StubsServerWebSocketTest.java:273)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyFragmentation_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyFragmentation_avgt_jmhStub(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyFragmentation_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyFragmentation_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyFragmentation_AverageTime(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerBinaryResponseWhenPolicyFragmentation_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest._Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicBinaryResponseWhenPolicyPush

# Run progress: 47.44% complete, ETA 01:21:29
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.websocket.api.Session.getRemote()" because "this.mockSession" is null
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest.setUp(StubsServerWebSocketTest.java:74)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.before(StubsServerWebSocketTest.java:285)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicBinaryResponseWhenPolicyPush(StubsServerWebSocketTest.java:267)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicBinaryResponseWhenPolicyPush_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicBinaryResponseWhenPolicyPush_avgt_jmhStub(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicBinaryResponseWhenPolicyPush_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicBinaryResponseWhenPolicyPush_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicBinaryResponseWhenPolicyPush_AverageTime(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicBinaryResponseWhenPolicyPush_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 47.52% complete, ETA 01:21:14
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.websocket.api.Session.getRemote()" because "this.mockSession" is null
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest.setUp(StubsServerWebSocketTest.java:74)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.before(StubsServerWebSocketTest.java:285)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicBinaryResponseWhenPolicyPush(StubsServerWebSocketTest.java:267)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicBinaryResponseWhenPolicyPush_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicBinaryResponseWhenPolicyPush_avgt_jmhStub(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicBinaryResponseWhenPolicyPush_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicBinaryResponseWhenPolicyPush_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicBinaryResponseWhenPolicyPush_AverageTime(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicBinaryResponseWhenPolicyPush_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest._Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicPingResponseWhenPolicyPing

# Run progress: 47.59% complete, ETA 01:21:00
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.websocket.api.Session.getRemote()" because "this.mockSession" is null
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest.setUp(StubsServerWebSocketTest.java:74)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.before(StubsServerWebSocketTest.java:285)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicPingResponseWhenPolicyPing(StubsServerWebSocketTest.java:255)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicPingResponseWhenPolicyPing_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicPingResponseWhenPolicyPing_avgt_jmhStub(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicPingResponseWhenPolicyPing_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicPingResponseWhenPolicyPing_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicPingResponseWhenPolicyPing_AverageTime(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicPingResponseWhenPolicyPing_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 47.67% complete, ETA 01:20:46
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.websocket.api.Session.getRemote()" because "this.mockSession" is null
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest.setUp(StubsServerWebSocketTest.java:74)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.before(StubsServerWebSocketTest.java:285)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicPingResponseWhenPolicyPing(StubsServerWebSocketTest.java:255)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicPingResponseWhenPolicyPing_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicPingResponseWhenPolicyPing_avgt_jmhStub(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicPingResponseWhenPolicyPing_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicPingResponseWhenPolicyPing_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicPingResponseWhenPolicyPing_AverageTime(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicPingResponseWhenPolicyPing_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest._Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicTextResponseWhenPolicyPush

# Run progress: 47.74% complete, ETA 01:20:31
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.websocket.api.Session.getRemote()" because "this.mockSession" is null
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest.setUp(StubsServerWebSocketTest.java:74)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.before(StubsServerWebSocketTest.java:285)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicTextResponseWhenPolicyPush(StubsServerWebSocketTest.java:261)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicTextResponseWhenPolicyPush_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicTextResponseWhenPolicyPush_avgt_jmhStub(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicTextResponseWhenPolicyPush_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicTextResponseWhenPolicyPush_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicTextResponseWhenPolicyPush_AverageTime(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicTextResponseWhenPolicyPush_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 47.82% complete, ETA 01:20:17
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.websocket.api.Session.getRemote()" because "this.mockSession" is null
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest.setUp(StubsServerWebSocketTest.java:74)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.before(StubsServerWebSocketTest.java:285)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicTextResponseWhenPolicyPush(StubsServerWebSocketTest.java:261)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicTextResponseWhenPolicyPush_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicTextResponseWhenPolicyPush_avgt_jmhStub(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicTextResponseWhenPolicyPush_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicTextResponseWhenPolicyPush_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicTextResponseWhenPolicyPush_AverageTime(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerPeriodicTextResponseWhenPolicyPush_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest._Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyDisconnect

# Run progress: 47.89% complete, ETA 01:20:03
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.websocket.api.Session.getRemote()" because "this.mockSession" is null
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest.setUp(StubsServerWebSocketTest.java:74)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.before(StubsServerWebSocketTest.java:285)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyDisconnect(StubsServerWebSocketTest.java:243)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyDisconnect_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyDisconnect_avgt_jmhStub(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyDisconnect_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyDisconnect_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyDisconnect_AverageTime(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyDisconnect_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 47.97% complete, ETA 01:19:49
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.websocket.api.Session.getRemote()" because "this.mockSession" is null
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest.setUp(StubsServerWebSocketTest.java:74)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.before(StubsServerWebSocketTest.java:285)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyDisconnect(StubsServerWebSocketTest.java:243)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyDisconnect_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyDisconnect_avgt_jmhStub(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyDisconnect_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyDisconnect_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyDisconnect_AverageTime(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyDisconnect_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest._Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyOnce

# Run progress: 48.04% complete, ETA 01:19:35
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.websocket.api.Session.getRemote()" because "this.mockSession" is null
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest.setUp(StubsServerWebSocketTest.java:74)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.before(StubsServerWebSocketTest.java:285)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyOnce(StubsServerWebSocketTest.java:237)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyOnce_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyOnce_avgt_jmhStub(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyOnce_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyOnce_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyOnce_AverageTime(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyOnce_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 48.12% complete, ETA 01:19:21
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.websocket.api.Session.getRemote()" because "this.mockSession" is null
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest.setUp(StubsServerWebSocketTest.java:74)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.before(StubsServerWebSocketTest.java:285)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyOnce(StubsServerWebSocketTest.java:237)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyOnce_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyOnce_avgt_jmhStub(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyOnce_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyOnce_jmhTest.benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyOnce_AverageTime(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketConnect_DispatchesExpectedServerTextResponseWhenPolicyOnce_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest._Benchmark.benchmark_onWebSocketText_DispatchesExpectedServerTextResponseWhenPolicyOnce

# Run progress: 48.19% complete, ETA 01:19:07
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.websocket.api.Session.getRemote()" because "this.mockSession" is null
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest.setUp(StubsServerWebSocketTest.java:74)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.before(StubsServerWebSocketTest.java:285)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.benchmark_onWebSocketText_DispatchesExpectedServerTextResponseWhenPolicyOnce(StubsServerWebSocketTest.java:279)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketText_DispatchesExpectedServerTextResponseWhenPolicyOnce_jmhTest.benchmark_onWebSocketText_DispatchesExpectedServerTextResponseWhenPolicyOnce_avgt_jmhStub(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketText_DispatchesExpectedServerTextResponseWhenPolicyOnce_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketText_DispatchesExpectedServerTextResponseWhenPolicyOnce_jmhTest.benchmark_onWebSocketText_DispatchesExpectedServerTextResponseWhenPolicyOnce_AverageTime(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketText_DispatchesExpectedServerTextResponseWhenPolicyOnce_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 48.27% complete, ETA 01:18:53
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "org.eclipse.jetty.websocket.api.Session.getRemote()" because "this.mockSession" is null
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest.setUp(StubsServerWebSocketTest.java:74)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.before(StubsServerWebSocketTest.java:285)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.server.websocket.StubsServerWebSocketTest$_Benchmark.benchmark_onWebSocketText_DispatchesExpectedServerTextResponseWhenPolicyOnce(StubsServerWebSocketTest.java:279)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketText_DispatchesExpectedServerTextResponseWhenPolicyOnce_jmhTest.benchmark_onWebSocketText_DispatchesExpectedServerTextResponseWhenPolicyOnce_avgt_jmhStub(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketText_DispatchesExpectedServerTextResponseWhenPolicyOnce_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.server.websocket.jmh_generated.StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketText_DispatchesExpectedServerTextResponseWhenPolicyOnce_jmhTest.benchmark_onWebSocketText_DispatchesExpectedServerTextResponseWhenPolicyOnce_AverageTime(StubsServerWebSocketTest__Benchmark_benchmark_onWebSocketText_DispatchesExpectedServerTextResponseWhenPolicyOnce_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.RegexParserTest._Benchmark.benchmark_shouldDetermineStringAsPotentialRegexPatterns

# Run progress: 48.34% complete, ETA 01:18:39
# Fork: 1 of 2
# Warmup Iteration   1: 6049.966 ns/op
# Warmup Iteration   2: 2028.447 ns/op
# Warmup Iteration   3: 1874.919 ns/op
# Warmup Iteration   4: 1867.498 ns/op
# Warmup Iteration   5: 1858.570 ns/op
# Warmup Iteration   6: 1866.231 ns/op
# Warmup Iteration   7: 1868.975 ns/op
# Warmup Iteration   8: 1879.778 ns/op
# Warmup Iteration   9: 1859.300 ns/op
# Warmup Iteration  10: 1871.569 ns/op
Iteration   1: 1865.306 ns/op
Iteration   2: 1865.195 ns/op
Iteration   3: 1866.383 ns/op
Iteration   4: 1865.859 ns/op
Iteration   5: 1863.145 ns/op
Iteration   6: 1863.143 ns/op
Iteration   7: 1877.539 ns/op
Iteration   8: 1877.758 ns/op
Iteration   9: 1865.254 ns/op
Iteration  10: 1869.403 ns/op
Iteration  11: 1878.702 ns/op
Iteration  12: 1865.806 ns/op
Iteration  13: 1870.718 ns/op
Iteration  14: 1872.813 ns/op
Iteration  15: 1871.205 ns/op
Iteration  16: 1859.547 ns/op
Iteration  17: 1867.523 ns/op
Iteration  18: 1863.301 ns/op
Iteration  19: 1885.700 ns/op
Iteration  20: 1875.235 ns/op

# Run progress: 48.42% complete, ETA 01:18:57
# Fork: 2 of 2
# Warmup Iteration   1: 6443.334 ns/op
# Warmup Iteration   2: 2009.666 ns/op
# Warmup Iteration   3: 1853.489 ns/op
# Warmup Iteration   4: 1855.091 ns/op
# Warmup Iteration   5: 1838.122 ns/op
# Warmup Iteration   6: 1841.039 ns/op
# Warmup Iteration   7: 1841.243 ns/op
# Warmup Iteration   8: 1854.289 ns/op
# Warmup Iteration   9: 1837.605 ns/op
# Warmup Iteration  10: 1843.930 ns/op
Iteration   1: 1850.137 ns/op
Iteration   2: 1841.428 ns/op
Iteration   3: 1850.772 ns/op
Iteration   4: 1844.957 ns/op
Iteration   5: 1833.460 ns/op
Iteration   6: 1846.192 ns/op
Iteration   7: 1849.266 ns/op
Iteration   8: 1848.712 ns/op
Iteration   9: 1824.657 ns/op
Iteration  10: 1836.934 ns/op
Iteration  11: 1834.976 ns/op
Iteration  12: 1851.215 ns/op
Iteration  13: 1844.317 ns/op
Iteration  14: 1852.207 ns/op
Iteration  15: 1845.868 ns/op
Iteration  16: 1853.042 ns/op
Iteration  17: 1839.584 ns/op
Iteration  18: 1845.979 ns/op
Iteration  19: 1863.079 ns/op
Iteration  20: 1840.785 ns/op


Result "io.github.azagniotov.stubby4j.stubs.RegexParserTest._Benchmark.benchmark_shouldDetermineStringAsPotentialRegexPatterns":
  1857.178 ±(99.9%) 8.178 ns/op [Average]
  (min, avg, max) = (1824.657, 1857.178, 1885.700), stdev = 14.537
  CI (99.9%): [1848.999, 1865.356] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.RegexParserTest._Benchmark.benchmark_shouldMatchSubjectWithMultiline

# Run progress: 48.49% complete, ETA 01:19:15
# Fork: 1 of 2
# Warmup Iteration   1: 223189.025 ns/op
# Warmup Iteration   2: 32118.413 ns/op
# Warmup Iteration   3: 20393.415 ns/op
# Warmup Iteration   4: 20380.231 ns/op
# Warmup Iteration   5: 20175.730 ns/op
# Warmup Iteration   6: 20488.256 ns/op
# Warmup Iteration   7: 20447.515 ns/op
# Warmup Iteration   8: 20289.757 ns/op
# Warmup Iteration   9: 20006.240 ns/op
# Warmup Iteration  10: 20585.954 ns/op
Iteration   1: 19952.297 ns/op
Iteration   2: 19953.634 ns/op
Iteration   3: 20002.111 ns/op
Iteration   4: 20650.043 ns/op
Iteration   5: 20112.436 ns/op
Iteration   6: 19859.758 ns/op
Iteration   7: 19992.100 ns/op
Iteration   8: 20653.334 ns/op
Iteration   9: 19855.828 ns/op
Iteration  10: 20210.837 ns/op
Iteration  11: 19942.221 ns/op
Iteration  12: 20437.935 ns/op
Iteration  13: 20082.014 ns/op
Iteration  14: 19935.481 ns/op
Iteration  15: 20127.796 ns/op
Iteration  16: 20643.180 ns/op
Iteration  17: 20560.155 ns/op
Iteration  18: 20169.990 ns/op
Iteration  19: 20065.568 ns/op
Iteration  20: 20580.247 ns/op

# Run progress: 48.57% complete, ETA 01:19:33
# Fork: 2 of 2
# Warmup Iteration   1: 115990.466 ns/op
# Warmup Iteration   2: 26680.373 ns/op
# Warmup Iteration   3: 21721.146 ns/op
# Warmup Iteration   4: 21436.622 ns/op
# Warmup Iteration   5: 21145.790 ns/op
# Warmup Iteration   6: 21213.869 ns/op
# Warmup Iteration   7: 21433.120 ns/op
# Warmup Iteration   8: 21355.417 ns/op
# Warmup Iteration   9: 21220.097 ns/op
# Warmup Iteration  10: 21098.036 ns/op
Iteration   1: 21009.319 ns/op
Iteration   2: 21199.581 ns/op
Iteration   3: 21167.461 ns/op
Iteration   4: 21238.030 ns/op
Iteration   5: 21436.907 ns/op
Iteration   6: 21321.294 ns/op
Iteration   7: 21308.187 ns/op
Iteration   8: 21118.646 ns/op
Iteration   9: 21188.765 ns/op
Iteration  10: 21172.359 ns/op
Iteration  11: 21029.116 ns/op
Iteration  12: 21191.403 ns/op
Iteration  13: 21152.272 ns/op
Iteration  14: 21042.883 ns/op
Iteration  15: 21065.718 ns/op
Iteration  16: 21198.178 ns/op
Iteration  17: 21147.189 ns/op
Iteration  18: 21193.304 ns/op
Iteration  19: 21181.473 ns/op
Iteration  20: 21190.553 ns/op


Result "io.github.azagniotov.stubby4j.stubs.RegexParserTest._Benchmark.benchmark_shouldMatchSubjectWithMultiline":
  20683.490 ±(99.9%) 305.730 ns/op [Average]
  (min, avg, max) = (19855.828, 20683.490, 21436.907), stdev = 543.436
  CI (99.9%): [20377.760, 20989.220] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.RegexParserTest._Benchmark.benchmark_shouldNotMatchWhenRegexPatternWithSyntaxError

# Run progress: 48.64% complete, ETA 01:19:50
# Fork: 1 of 2
# Warmup Iteration   1: 24817.740 ns/op
# Warmup Iteration   2: 6537.256 ns/op
# Warmup Iteration   3: 6081.841 ns/op
# Warmup Iteration   4: 5879.055 ns/op
# Warmup Iteration   5: 5847.594 ns/op
# Warmup Iteration   6: 5819.963 ns/op
# Warmup Iteration   7: 5843.892 ns/op
# Warmup Iteration   8: 5885.457 ns/op
# Warmup Iteration   9: 5850.034 ns/op
# Warmup Iteration  10: 5858.937 ns/op
Iteration   1: 5847.038 ns/op
Iteration   2: 5843.607 ns/op
Iteration   3: 5887.750 ns/op
Iteration   4: 5817.483 ns/op
Iteration   5: 5827.132 ns/op
Iteration   6: 5894.492 ns/op
Iteration   7: 5784.319 ns/op
Iteration   8: 5809.277 ns/op
Iteration   9: 5774.590 ns/op
Iteration  10: 5761.163 ns/op
Iteration  11: 5805.133 ns/op
Iteration  12: 5760.106 ns/op
Iteration  13: 5776.230 ns/op
Iteration  14: 5779.564 ns/op
Iteration  15: 5795.446 ns/op
Iteration  16: 5770.541 ns/op
Iteration  17: 5774.860 ns/op
Iteration  18: 5785.427 ns/op
Iteration  19: 5796.919 ns/op
Iteration  20: 6003.803 ns/op

# Run progress: 48.72% complete, ETA 01:20:08
# Fork: 2 of 2
# Warmup Iteration   1: 23889.799 ns/op
# Warmup Iteration   2: 6403.278 ns/op
# Warmup Iteration   3: 5936.676 ns/op
# Warmup Iteration   4: 5811.190 ns/op
# Warmup Iteration   5: 5831.564 ns/op
# Warmup Iteration   6: 5834.545 ns/op
# Warmup Iteration   7: 5837.660 ns/op
# Warmup Iteration   8: 5847.354 ns/op
# Warmup Iteration   9: 5828.101 ns/op
# Warmup Iteration  10: 5822.806 ns/op
Iteration   1: 5815.367 ns/op
Iteration   2: 5784.151 ns/op
Iteration   3: 5793.035 ns/op
Iteration   4: 5844.083 ns/op
Iteration   5: 5815.784 ns/op
Iteration   6: 5839.621 ns/op
Iteration   7: 5713.382 ns/op
Iteration   8: 5679.784 ns/op
Iteration   9: 5692.158 ns/op
Iteration  10: 5705.993 ns/op
Iteration  11: 5692.341 ns/op
Iteration  12: 5696.695 ns/op
Iteration  13: 5693.318 ns/op
Iteration  14: 5681.407 ns/op
Iteration  15: 5695.334 ns/op
Iteration  16: 5698.701 ns/op
Iteration  17: 5727.832 ns/op
Iteration  18: 5689.423 ns/op
Iteration  19: 5698.592 ns/op
Iteration  20: 5727.834 ns/op


Result "io.github.azagniotov.stubby4j.stubs.RegexParserTest._Benchmark.benchmark_shouldNotMatchWhenRegexPatternWithSyntaxError":
  5774.493 ±(99.9%) 39.545 ns/op [Average]
  (min, avg, max) = (5679.784, 5774.493, 6003.803), stdev = 70.292
  CI (99.9%): [5734.948, 5814.038] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldAuthorizeViaBearer_WhenAuthorizationHeaderBearerEquals

# Run progress: 48.80% complete, ETA 01:20:25
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1092797502.000 ns/op
# Warmup Iteration   2: 828376.199 ns/op
# Warmup Iteration   3: 334240.270 ns/op
# Warmup Iteration   4: 268853.896 ns/op
# Warmup Iteration   5: 207708.762 ns/op
# Warmup Iteration   6: 198496.482 ns/op
# Warmup Iteration   7: 163301.325 ns/op
# Warmup Iteration   8: 165870.290 ns/op
# Warmup Iteration   9: 105045.890 ns/op
# Warmup Iteration  10: 91288.456 ns/op
Iteration   1: 101453.939 ns/op
Iteration   2: 80854.839 ns/op
Iteration   3: 78827.157 ns/op
Iteration   4: 103075.368 ns/op
Iteration   5: 85282.412 ns/op
Iteration   6: 83608.043 ns/op
Iteration   7: 80471.022 ns/op
Iteration   8: 89512.346 ns/op
Iteration   9: 84639.131 ns/op
Iteration  10: 80187.081 ns/op
Iteration  11: 80311.100 ns/op
Iteration  12: 83998.205 ns/op
Iteration  13: 78049.928 ns/op
Iteration  14: 84211.139 ns/op
Iteration  15: 82116.224 ns/op
Iteration  16: 83388.162 ns/op
Iteration  17: 95103.520 ns/op
Iteration  18: 83919.999 ns/op
Iteration  19: 84824.245 ns/op
Iteration  20: 83209.815 ns/op

# Run progress: 48.87% complete, ETA 01:20:43
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1141485030.000 ns/op
# Warmup Iteration   2: 698550.182 ns/op
# Warmup Iteration   3: 360345.096 ns/op
# Warmup Iteration   4: 241163.450 ns/op
# Warmup Iteration   5: 213674.420 ns/op
# Warmup Iteration   6: 171677.988 ns/op
# Warmup Iteration   7: 155580.631 ns/op
# Warmup Iteration   8: 154661.680 ns/op
# Warmup Iteration   9: 87049.892 ns/op
# Warmup Iteration  10: 97788.316 ns/op
Iteration   1: 81364.130 ns/op
Iteration   2: 93066.004 ns/op
Iteration   3: 88584.070 ns/op
Iteration   4: 95470.666 ns/op
Iteration   5: 84430.399 ns/op
Iteration   6: 81837.991 ns/op
Iteration   7: 81964.684 ns/op
Iteration   8: 75865.465 ns/op
Iteration   9: 82532.499 ns/op
Iteration  10: 82759.245 ns/op
Iteration  11: 81938.309 ns/op
Iteration  12: 96242.181 ns/op
Iteration  13: 83911.764 ns/op
Iteration  14: 83525.566 ns/op
Iteration  15: 82477.536 ns/op
Iteration  16: 83419.923 ns/op
Iteration  17: 74042.898 ns/op
Iteration  18: 82270.493 ns/op
Iteration  19: 82598.081 ns/op
Iteration  20: 82250.331 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldAuthorizeViaBearer_WhenAuthorizationHeaderBearerEquals":
  84689.898 ±(99.9%) 3498.373 ns/op [Average]
  (min, avg, max) = (74042.898, 84689.898, 103075.368), stdev = 6218.356
  CI (99.9%): [81191.524, 88188.271] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldFindStubHttpLifecycleEqual_WhenComparedToItself

# Run progress: 48.95% complete, ETA 01:21:00
# Fork: 1 of 2
# Warmup Iteration   1: 2028.099 ns/op
# Warmup Iteration   2: 594.573 ns/op
# Warmup Iteration   3: 546.205 ns/op
# Warmup Iteration   4: 548.790 ns/op
# Warmup Iteration   5: 544.480 ns/op
# Warmup Iteration   6: 544.449 ns/op
# Warmup Iteration   7: 545.847 ns/op
# Warmup Iteration   8: 546.469 ns/op
# Warmup Iteration   9: 545.811 ns/op
# Warmup Iteration  10: 547.700 ns/op
Iteration   1: 543.820 ns/op
Iteration   2: 540.848 ns/op
Iteration   3: 543.452 ns/op
Iteration   4: 544.909 ns/op
Iteration   5: 545.153 ns/op
Iteration   6: 542.763 ns/op
Iteration   7: 543.393 ns/op
Iteration   8: 548.675 ns/op
Iteration   9: 543.706 ns/op
Iteration  10: 546.719 ns/op
Iteration  11: 543.992 ns/op
Iteration  12: 542.804 ns/op
Iteration  13: 547.934 ns/op
Iteration  14: 544.520 ns/op
Iteration  15: 543.855 ns/op
Iteration  16: 541.482 ns/op
Iteration  17: 544.016 ns/op
Iteration  18: 543.392 ns/op
Iteration  19: 543.897 ns/op
Iteration  20: 544.367 ns/op

# Run progress: 49.02% complete, ETA 01:21:17
# Fork: 2 of 2
# Warmup Iteration   1: 1923.495 ns/op
# Warmup Iteration   2: 631.412 ns/op
# Warmup Iteration   3: 561.146 ns/op
# Warmup Iteration   4: 562.888 ns/op
# Warmup Iteration   5: 562.603 ns/op
# Warmup Iteration   6: 560.646 ns/op
# Warmup Iteration   7: 561.004 ns/op
# Warmup Iteration   8: 561.892 ns/op
# Warmup Iteration   9: 564.008 ns/op
# Warmup Iteration  10: 560.229 ns/op
Iteration   1: 561.399 ns/op
Iteration   2: 560.709 ns/op
Iteration   3: 558.814 ns/op
Iteration   4: 559.942 ns/op
Iteration   5: 560.056 ns/op
Iteration   6: 559.601 ns/op
Iteration   7: 559.209 ns/op
Iteration   8: 559.747 ns/op
Iteration   9: 561.858 ns/op
Iteration  10: 561.117 ns/op
Iteration  11: 563.889 ns/op
Iteration  12: 561.007 ns/op
Iteration  13: 561.478 ns/op
Iteration  14: 565.043 ns/op
Iteration  15: 561.666 ns/op
Iteration  16: 559.638 ns/op
Iteration  17: 563.760 ns/op
Iteration  18: 562.331 ns/op
Iteration  19: 559.951 ns/op
Iteration  20: 562.598 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldFindStubHttpLifecycleEqual_WhenComparedToItself":
  552.688 ±(99.9%) 4.945 ns/op [Average]
  (min, avg, max) = (540.848, 552.688, 565.043), stdev = 8.790
  CI (99.9%): [547.743, 557.633] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldFindStubHttpLifecycleNotEqual_WhenComparedToDifferentInstanceClass

# Run progress: 49.10% complete, ETA 01:21:34
# Fork: 1 of 2
# Warmup Iteration   1: 1777.082 ns/op
# Warmup Iteration   2: 657.893 ns/op
# Warmup Iteration   3: 586.430 ns/op
# Warmup Iteration   4: 584.200 ns/op
# Warmup Iteration   5: 588.859 ns/op
# Warmup Iteration   6: 585.516 ns/op
# Warmup Iteration   7: 583.461 ns/op
# Warmup Iteration   8: 580.443 ns/op
# Warmup Iteration   9: 585.770 ns/op
# Warmup Iteration  10: 582.563 ns/op
Iteration   1: 584.713 ns/op
Iteration   2: 584.572 ns/op
Iteration   3: 588.266 ns/op
Iteration   4: 588.729 ns/op
Iteration   5: 583.578 ns/op
Iteration   6: 588.333 ns/op
Iteration   7: 583.528 ns/op
Iteration   8: 584.270 ns/op
Iteration   9: 585.552 ns/op
Iteration  10: 583.429 ns/op
Iteration  11: 583.890 ns/op
Iteration  12: 585.613 ns/op
Iteration  13: 587.460 ns/op
Iteration  14: 588.783 ns/op
Iteration  15: 585.686 ns/op
Iteration  16: 586.426 ns/op
Iteration  17: 585.112 ns/op
Iteration  18: 586.165 ns/op
Iteration  19: 584.664 ns/op
Iteration  20: 584.849 ns/op

# Run progress: 49.17% complete, ETA 01:21:51
# Fork: 2 of 2
# Warmup Iteration   1: 1769.330 ns/op
# Warmup Iteration   2: 652.185 ns/op
# Warmup Iteration   3: 587.769 ns/op
# Warmup Iteration   4: 586.631 ns/op
# Warmup Iteration   5: 587.590 ns/op
# Warmup Iteration   6: 587.571 ns/op
# Warmup Iteration   7: 586.610 ns/op
# Warmup Iteration   8: 586.018 ns/op
# Warmup Iteration   9: 583.669 ns/op
# Warmup Iteration  10: 587.739 ns/op
Iteration   1: 585.726 ns/op
Iteration   2: 585.961 ns/op
Iteration   3: 586.261 ns/op
Iteration   4: 585.209 ns/op
Iteration   5: 582.774 ns/op
Iteration   6: 585.207 ns/op
Iteration   7: 583.378 ns/op
Iteration   8: 584.214 ns/op
Iteration   9: 587.255 ns/op
Iteration  10: 584.928 ns/op
Iteration  11: 582.945 ns/op
Iteration  12: 585.946 ns/op
Iteration  13: 586.428 ns/op
Iteration  14: 586.889 ns/op
Iteration  15: 587.478 ns/op
Iteration  16: 585.669 ns/op
Iteration  17: 584.848 ns/op
Iteration  18: 584.205 ns/op
Iteration  19: 585.198 ns/op
Iteration  20: 589.428 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldFindStubHttpLifecycleNotEqual_WhenComparedToDifferentInstanceClass":
  585.589 ±(99.9%) 0.943 ns/op [Average]
  (min, avg, max) = (582.774, 585.589, 589.428), stdev = 1.676
  CI (99.9%): [584.646, 586.532] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldGetRawBasicAuthorizationHttpHeader

# Run progress: 49.25% complete, ETA 01:22:07
# Fork: 1 of 2
# Warmup Iteration   1: 5209.202 ns/op
# Warmup Iteration   2: 1099.939 ns/op
# Warmup Iteration   3: 788.589 ns/op
# Warmup Iteration   4: 788.389 ns/op
# Warmup Iteration   5: 789.053 ns/op
# Warmup Iteration   6: 792.071 ns/op
# Warmup Iteration   7: 785.867 ns/op
# Warmup Iteration   8: 785.657 ns/op
# Warmup Iteration   9: 794.696 ns/op
# Warmup Iteration  10: 784.999 ns/op
Iteration   1: 786.667 ns/op
Iteration   2: 789.824 ns/op
Iteration   3: 789.179 ns/op
Iteration   4: 784.777 ns/op
Iteration   5: 786.949 ns/op
Iteration   6: 789.891 ns/op
Iteration   7: 786.202 ns/op
Iteration   8: 783.810 ns/op
Iteration   9: 789.841 ns/op
Iteration  10: 789.011 ns/op
Iteration  11: 788.998 ns/op
Iteration  12: 787.435 ns/op
Iteration  13: 791.103 ns/op
Iteration  14: 785.759 ns/op
Iteration  15: 786.716 ns/op
Iteration  16: 786.062 ns/op
Iteration  17: 786.608 ns/op
Iteration  18: 784.233 ns/op
Iteration  19: 783.572 ns/op
Iteration  20: 785.747 ns/op

# Run progress: 49.32% complete, ETA 01:22:24
# Fork: 2 of 2
# Warmup Iteration   1: 5302.681 ns/op
# Warmup Iteration   2: 1762.077 ns/op
# Warmup Iteration   3: 800.552 ns/op
# Warmup Iteration   4: 778.147 ns/op
# Warmup Iteration   5: 776.475 ns/op
# Warmup Iteration   6: 776.213 ns/op
# Warmup Iteration   7: 774.546 ns/op
# Warmup Iteration   8: 773.943 ns/op
# Warmup Iteration   9: 776.187 ns/op
# Warmup Iteration  10: 771.621 ns/op
Iteration   1: 776.012 ns/op
Iteration   2: 782.913 ns/op
Iteration   3: 778.015 ns/op
Iteration   4: 776.404 ns/op
Iteration   5: 776.601 ns/op
Iteration   6: 774.240 ns/op
Iteration   7: 774.357 ns/op
Iteration   8: 773.707 ns/op
Iteration   9: 775.608 ns/op
Iteration  10: 777.246 ns/op
Iteration  11: 778.061 ns/op
Iteration  12: 775.265 ns/op
Iteration  13: 776.119 ns/op
Iteration  14: 775.549 ns/op
Iteration  15: 773.613 ns/op
Iteration  16: 773.950 ns/op
Iteration  17: 774.832 ns/op
Iteration  18: 776.256 ns/op
Iteration  19: 772.687 ns/op
Iteration  20: 774.910 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldGetRawBasicAuthorizationHttpHeader":
  781.468 ±(99.9%) 3.447 ns/op [Average]
  (min, avg, max) = (772.687, 781.468, 791.103), stdev = 6.126
  CI (99.9%): [778.022, 784.915] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldGetRawBearerAuthorizationHttpHeader

# Run progress: 49.40% complete, ETA 01:22:40
# Fork: 1 of 2
# Warmup Iteration   1: 4697.406 ns/op
# Warmup Iteration   2: 1338.906 ns/op
# Warmup Iteration   3: 825.502 ns/op
# Warmup Iteration   4: 786.161 ns/op
# Warmup Iteration   5: 787.316 ns/op
# Warmup Iteration   6: 788.573 ns/op
# Warmup Iteration   7: 789.271 ns/op
# Warmup Iteration   8: 784.559 ns/op
# Warmup Iteration   9: 782.402 ns/op
# Warmup Iteration  10: 781.159 ns/op
Iteration   1: 782.431 ns/op
Iteration   2: 790.004 ns/op
Iteration   3: 784.452 ns/op
Iteration   4: 786.152 ns/op
Iteration   5: 785.495 ns/op
Iteration   6: 781.860 ns/op
Iteration   7: 781.501 ns/op
Iteration   8: 781.837 ns/op
Iteration   9: 784.125 ns/op
Iteration  10: 784.009 ns/op
Iteration  11: 785.960 ns/op
Iteration  12: 787.228 ns/op
Iteration  13: 782.798 ns/op
Iteration  14: 787.637 ns/op
Iteration  15: 783.100 ns/op
Iteration  16: 782.866 ns/op
Iteration  17: 783.776 ns/op
Iteration  18: 784.484 ns/op
Iteration  19: 789.077 ns/op
Iteration  20: 783.306 ns/op

# Run progress: 49.47% complete, ETA 01:22:56
# Fork: 2 of 2
# Warmup Iteration   1: 5735.397 ns/op
# Warmup Iteration   2: 2233.700 ns/op
# Warmup Iteration   3: 845.451 ns/op
# Warmup Iteration   4: 801.438 ns/op
# Warmup Iteration   5: 803.251 ns/op
# Warmup Iteration   6: 801.468 ns/op
# Warmup Iteration   7: 807.219 ns/op
# Warmup Iteration   8: 802.537 ns/op
# Warmup Iteration   9: 800.029 ns/op
# Warmup Iteration  10: 801.940 ns/op
Iteration   1: 805.529 ns/op
Iteration   2: 805.820 ns/op
Iteration   3: 801.713 ns/op
Iteration   4: 804.663 ns/op
Iteration   5: 800.899 ns/op
Iteration   6: 803.174 ns/op
Iteration   7: 800.600 ns/op
Iteration   8: 800.745 ns/op
Iteration   9: 804.194 ns/op
Iteration  10: 800.900 ns/op
Iteration  11: 804.925 ns/op
Iteration  12: 799.638 ns/op
Iteration  13: 801.272 ns/op
Iteration  14: 800.181 ns/op
Iteration  15: 808.041 ns/op
Iteration  16: 804.710 ns/op
Iteration  17: 800.200 ns/op
Iteration  18: 802.792 ns/op
Iteration  19: 803.510 ns/op
Iteration  20: 800.904 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldGetRawBearerAuthorizationHttpHeader":
  793.663 ±(99.9%) 5.328 ns/op [Average]
  (min, avg, max) = (781.501, 793.663, 808.041), stdev = 9.471
  CI (99.9%): [788.334, 798.991] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldNotAuthorizeViaBasic_WhenAssertingAuthorizationHeaderBasicIsNotSet

# Run progress: 49.55% complete, ETA 01:23:12
# Fork: 1 of 2
# Warmup Iteration   1: 5646.320 ns/op
# Warmup Iteration   2: 1547.714 ns/op
# Warmup Iteration   3: 1048.627 ns/op
# Warmup Iteration   4: 1042.992 ns/op
# Warmup Iteration   5: 1040.414 ns/op
# Warmup Iteration   6: 1042.233 ns/op
# Warmup Iteration   7: 1046.325 ns/op
# Warmup Iteration   8: 1042.545 ns/op
# Warmup Iteration   9: 1042.593 ns/op
# Warmup Iteration  10: 1048.122 ns/op
Iteration   1: 1048.975 ns/op
Iteration   2: 1046.406 ns/op
Iteration   3: 1042.047 ns/op
Iteration   4: 1045.837 ns/op
Iteration   5: 1043.718 ns/op
Iteration   6: 1045.271 ns/op
Iteration   7: 1042.480 ns/op
Iteration   8: 1045.393 ns/op
Iteration   9: 1036.749 ns/op
Iteration  10: 1040.459 ns/op
Iteration  11: 1042.679 ns/op
Iteration  12: 1044.775 ns/op
Iteration  13: 1040.782 ns/op
Iteration  14: 1038.140 ns/op
Iteration  15: 1042.630 ns/op
Iteration  16: 1035.791 ns/op
Iteration  17: 1034.847 ns/op
Iteration  18: 1037.233 ns/op
Iteration  19: 1034.251 ns/op
Iteration  20: 1037.408 ns/op

# Run progress: 49.62% complete, ETA 01:23:28
# Fork: 2 of 2
# Warmup Iteration   1: 5897.909 ns/op
# Warmup Iteration   2: 1550.185 ns/op
# Warmup Iteration   3: 1090.178 ns/op
# Warmup Iteration   4: 1059.570 ns/op
# Warmup Iteration   5: 1058.921 ns/op
# Warmup Iteration   6: 1060.432 ns/op
# Warmup Iteration   7: 1057.567 ns/op
# Warmup Iteration   8: 1058.882 ns/op
# Warmup Iteration   9: 1063.662 ns/op
# Warmup Iteration  10: 1062.551 ns/op
Iteration   1: 1062.419 ns/op
Iteration   2: 1063.568 ns/op
Iteration   3: 1066.446 ns/op
Iteration   4: 1062.465 ns/op
Iteration   5: 1057.707 ns/op
Iteration   6: 1058.716 ns/op
Iteration   7: 1060.671 ns/op
Iteration   8: 1063.709 ns/op
Iteration   9: 1063.751 ns/op
Iteration  10: 1066.713 ns/op
Iteration  11: 1064.902 ns/op
Iteration  12: 1059.633 ns/op
Iteration  13: 1062.005 ns/op
Iteration  14: 1058.298 ns/op
Iteration  15: 1058.806 ns/op
Iteration  16: 1063.253 ns/op
Iteration  17: 1055.922 ns/op
Iteration  18: 1060.629 ns/op
Iteration  19: 1058.241 ns/op
Iteration  20: 1057.059 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldNotAuthorizeViaBasic_WhenAssertingAuthorizationHeaderBasicIsNotSet":
  1051.270 ±(99.9%) 6.053 ns/op [Average]
  (min, avg, max) = (1034.251, 1051.270, 1066.713), stdev = 10.759
  CI (99.9%): [1045.216, 1057.323] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldNotAuthorizeViaBasic_WhenAuthorizationHeaderBasicIsNotTheSame

# Run progress: 49.70% complete, ETA 01:23:43
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1064750229.000 ns/op
# Warmup Iteration   2: 768513.820 ns/op
# Warmup Iteration   3: 330374.965 ns/op
# Warmup Iteration   4: 235630.275 ns/op
# Warmup Iteration   5: 198734.885 ns/op
# Warmup Iteration   6: 172791.563 ns/op
# Warmup Iteration   7: 159311.478 ns/op
# Warmup Iteration   8: 167152.273 ns/op
# Warmup Iteration   9: 90545.889 ns/op
# Warmup Iteration  10: 86393.189 ns/op
Iteration   1: 89335.552 ns/op
Iteration   2: 77203.702 ns/op
Iteration   3: 74285.502 ns/op
Iteration   4: 95764.460 ns/op
Iteration   5: 76953.120 ns/op
Iteration   6: 79188.056 ns/op
Iteration   7: 77144.773 ns/op
Iteration   8: 86980.171 ns/op
Iteration   9: 81696.464 ns/op
Iteration  10: 80239.387 ns/op
Iteration  11: 80218.070 ns/op
Iteration  12: 78423.707 ns/op
Iteration  13: 73249.503 ns/op
Iteration  14: 79904.774 ns/op
Iteration  15: 78864.079 ns/op
Iteration  16: 76944.070 ns/op
Iteration  17: 85474.642 ns/op
Iteration  18: 77495.338 ns/op
Iteration  19: 80154.945 ns/op
Iteration  20: 81005.763 ns/op

# Run progress: 49.77% complete, ETA 01:23:59
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1067602716.000 ns/op
# Warmup Iteration   2: 805437.714 ns/op
# Warmup Iteration   3: 334584.860 ns/op
# Warmup Iteration   4: 249356.130 ns/op
# Warmup Iteration   5: 215629.643 ns/op
# Warmup Iteration   6: 174617.978 ns/op
# Warmup Iteration   7: 159584.404 ns/op
# Warmup Iteration   8: 162300.485 ns/op
# Warmup Iteration   9: 113486.549 ns/op
# Warmup Iteration  10: 93508.631 ns/op
Iteration   1: 85968.943 ns/op
Iteration   2: 87111.905 ns/op
Iteration   3: 84740.659 ns/op
Iteration   4: 94631.575 ns/op
Iteration   5: 78982.604 ns/op
Iteration   6: 79058.419 ns/op
Iteration   7: 81084.672 ns/op
Iteration   8: 84803.980 ns/op
Iteration   9: 79153.386 ns/op
Iteration  10: 79945.699 ns/op
Iteration  11: 82092.428 ns/op
Iteration  12: 73794.609 ns/op
Iteration  13: 81310.018 ns/op
Iteration  14: 79741.555 ns/op
Iteration  15: 79455.635 ns/op
Iteration  16: 88150.559 ns/op
Iteration  17: 81065.893 ns/op
Iteration  18: 81060.531 ns/op
Iteration  19: 81000.384 ns/op
Iteration  20: 81148.936 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldNotAuthorizeViaBasic_WhenAuthorizationHeaderBasicIsNotTheSame":
  81370.712 ±(99.9%) 2750.807 ns/op [Average]
  (min, avg, max) = (73249.503, 81370.712, 95764.460), stdev = 4889.557
  CI (99.9%): [78619.905, 84121.519] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldNotAuthorizeViaBearer_WhenAssertingAuthorizationHeaderBearerIsNotSet

# Run progress: 49.85% complete, ETA 01:24:15
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1138341318.000 ns/op
# Warmup Iteration   2: 664613.022 ns/op
# Warmup Iteration   3: 320900.756 ns/op
# Warmup Iteration   4: 231613.079 ns/op
# Warmup Iteration   5: 198885.383 ns/op
# Warmup Iteration   6: 160626.043 ns/op
# Warmup Iteration   7: 157399.106 ns/op
# Warmup Iteration   8: 163247.093 ns/op
# Warmup Iteration   9: 120359.901 ns/op
# Warmup Iteration  10: 84541.277 ns/op
Iteration   1: 79839.536 ns/op
Iteration   2: 77578.818 ns/op
Iteration   3: 78441.649 ns/op
Iteration   4: 90781.013 ns/op
Iteration   5: 75583.098 ns/op
Iteration   6: 74176.041 ns/op
Iteration   7: 74072.319 ns/op
Iteration   8: 77576.810 ns/op
Iteration   9: 72810.985 ns/op
Iteration  10: 70727.797 ns/op
Iteration  11: 73614.331 ns/op
Iteration  12: 69686.083 ns/op
Iteration  13: 72738.054 ns/op
Iteration  14: 72292.401 ns/op
Iteration  15: 71971.950 ns/op
Iteration  16: 81599.553 ns/op
Iteration  17: 73387.646 ns/op
Iteration  18: 74879.080 ns/op
Iteration  19: 74773.559 ns/op
Iteration  20: 76142.421 ns/op

# Run progress: 49.92% complete, ETA 01:24:31
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1060417265.000 ns/op
# Warmup Iteration   2: 858063.415 ns/op
# Warmup Iteration   3: 362855.917 ns/op
# Warmup Iteration   4: 247623.551 ns/op
# Warmup Iteration   5: 203015.105 ns/op
# Warmup Iteration   6: 170985.916 ns/op
# Warmup Iteration   7: 141021.382 ns/op
# Warmup Iteration   8: 94713.911 ns/op
# Warmup Iteration   9: 75944.486 ns/op
# Warmup Iteration  10: 87338.499 ns/op
Iteration   1: 75829.694 ns/op
Iteration   2: 83225.639 ns/op
Iteration   3: 78481.240 ns/op
Iteration   4: 84040.017 ns/op
Iteration   5: 73952.039 ns/op
Iteration   6: 76078.609 ns/op
Iteration   7: 74021.715 ns/op
Iteration   8: 68775.264 ns/op
Iteration   9: 77034.870 ns/op
Iteration  10: 78186.467 ns/op
Iteration  11: 74605.405 ns/op
Iteration  12: 83734.979 ns/op
Iteration  13: 74420.055 ns/op
Iteration  14: 75976.697 ns/op
Iteration  15: 75858.966 ns/op
Iteration  16: 76616.264 ns/op
Iteration  17: 66715.020 ns/op
Iteration  18: 75404.213 ns/op
Iteration  19: 77474.331 ns/op
Iteration  20: 76978.341 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldNotAuthorizeViaBearer_WhenAssertingAuthorizationHeaderBearerIsNotSet":
  76002.074 ±(99.9%) 2483.571 ns/op [Average]
  (min, avg, max) = (66715.020, 76002.074, 90781.013), stdev = 4414.544
  CI (99.9%): [73518.504, 78485.645] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldNotAuthorizeViaBearer_WhenAuthorizationHeaderBearerIsNotTheSame

# Run progress: 50.00% complete, ETA 01:24:46
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1111574270.000 ns/op
# Warmup Iteration   2: 653411.657 ns/op
# Warmup Iteration   3: 317111.340 ns/op
# Warmup Iteration   4: 246887.581 ns/op
# Warmup Iteration   5: 204622.315 ns/op
# Warmup Iteration   6: 156408.782 ns/op
# Warmup Iteration   7: 159620.752 ns/op
# Warmup Iteration   8: 162192.179 ns/op
# Warmup Iteration   9: 136337.153 ns/op
# Warmup Iteration  10: 77701.055 ns/op
Iteration   1: 95879.792 ns/op
Iteration   2: 69704.086 ns/op
Iteration   3: 72132.601 ns/op
Iteration   4: 96822.877 ns/op
Iteration   5: 72168.116 ns/op
Iteration   6: 73214.869 ns/op
Iteration   7: 71037.241 ns/op
Iteration   8: 86180.620 ns/op
Iteration   9: 71709.356 ns/op
Iteration  10: 72646.596 ns/op
Iteration  11: 76988.495 ns/op
Iteration  12: 84255.120 ns/op
Iteration  13: 71562.366 ns/op
Iteration  14: 72482.766 ns/op
Iteration  15: 72221.156 ns/op
Iteration  16: 75071.854 ns/op
Iteration  17: 76870.100 ns/op
Iteration  18: 71123.671 ns/op
Iteration  19: 71858.655 ns/op
Iteration  20: 72091.298 ns/op

# Run progress: 50.08% complete, ETA 01:25:02
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1077758828.000 ns/op
# Warmup Iteration   2: 797209.464 ns/op
# Warmup Iteration   3: 327615.530 ns/op
# Warmup Iteration   4: 239325.940 ns/op
# Warmup Iteration   5: 190550.650 ns/op
# Warmup Iteration   6: 161474.732 ns/op
# Warmup Iteration   7: 121892.831 ns/op
# Warmup Iteration   8: 98921.477 ns/op
# Warmup Iteration   9: 85444.482 ns/op
# Warmup Iteration  10: 89243.138 ns/op
Iteration   1: 87082.167 ns/op
Iteration   2: 76987.259 ns/op
Iteration   3: 79041.500 ns/op
Iteration   4: 94275.221 ns/op
Iteration   5: 82657.283 ns/op
Iteration   6: 80824.308 ns/op
Iteration   7: 78667.509 ns/op
Iteration   8: 88167.602 ns/op
Iteration   9: 82406.868 ns/op
Iteration  10: 78576.173 ns/op
Iteration  11: 80212.108 ns/op
Iteration  12: 79648.725 ns/op
Iteration  13: 73414.391 ns/op
Iteration  14: 80175.764 ns/op
Iteration  15: 79685.234 ns/op
Iteration  16: 80218.736 ns/op
Iteration  17: 87738.056 ns/op
Iteration  18: 79418.969 ns/op
Iteration  19: 79634.843 ns/op
Iteration  20: 79188.227 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldNotAuthorizeViaBearer_WhenAuthorizationHeaderBearerIsNotTheSame":
  78851.064 ±(99.9%) 3935.835 ns/op [Average]
  (min, avg, max) = (69704.086, 78851.064, 96822.877), stdev = 6995.942
  CI (99.9%): [74915.230, 82786.899] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldRequireBasicAuthorization

# Run progress: 50.15% complete, ETA 01:25:17
# Fork: 1 of 2
# Warmup Iteration   1: 4716.009 ns/op
# Warmup Iteration   2: 1324.668 ns/op
# Warmup Iteration   3: 768.787 ns/op
# Warmup Iteration   4: 766.680 ns/op
# Warmup Iteration   5: 775.885 ns/op
# Warmup Iteration   6: 772.514 ns/op
# Warmup Iteration   7: 769.633 ns/op
# Warmup Iteration   8: 767.892 ns/op
# Warmup Iteration   9: 768.449 ns/op
# Warmup Iteration  10: 766.595 ns/op
Iteration   1: 770.832 ns/op
Iteration   2: 769.099 ns/op
Iteration   3: 770.214 ns/op
Iteration   4: 768.623 ns/op
Iteration   5: 768.515 ns/op
Iteration   6: 770.874 ns/op
Iteration   7: 771.302 ns/op
Iteration   8: 768.494 ns/op
Iteration   9: 770.138 ns/op
Iteration  10: 769.265 ns/op
Iteration  11: 765.986 ns/op
Iteration  12: 768.543 ns/op
Iteration  13: 767.516 ns/op
Iteration  14: 771.818 ns/op
Iteration  15: 770.161 ns/op
Iteration  16: 773.222 ns/op
Iteration  17: 771.103 ns/op
Iteration  18: 771.080 ns/op
Iteration  19: 768.284 ns/op
Iteration  20: 767.391 ns/op

# Run progress: 50.23% complete, ETA 01:25:32
# Fork: 2 of 2
# Warmup Iteration   1: 5491.756 ns/op
# Warmup Iteration   2: 2029.417 ns/op
# Warmup Iteration   3: 793.066 ns/op
# Warmup Iteration   4: 775.781 ns/op
# Warmup Iteration   5: 773.164 ns/op
# Warmup Iteration   6: 772.983 ns/op
# Warmup Iteration   7: 772.368 ns/op
# Warmup Iteration   8: 772.517 ns/op
# Warmup Iteration   9: 770.526 ns/op
# Warmup Iteration  10: 773.000 ns/op
Iteration   1: 774.400 ns/op
Iteration   2: 771.554 ns/op
Iteration   3: 772.440 ns/op
Iteration   4: 767.079 ns/op
Iteration   5: 773.604 ns/op
Iteration   6: 773.147 ns/op
Iteration   7: 771.631 ns/op
Iteration   8: 766.803 ns/op
Iteration   9: 766.898 ns/op
Iteration  10: 768.114 ns/op
Iteration  11: 768.540 ns/op
Iteration  12: 771.257 ns/op
Iteration  13: 775.740 ns/op
Iteration  14: 772.202 ns/op
Iteration  15: 771.007 ns/op
Iteration  16: 771.635 ns/op
Iteration  17: 768.156 ns/op
Iteration  18: 770.207 ns/op
Iteration  19: 771.571 ns/op
Iteration  20: 768.703 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldRequireBasicAuthorization":
  770.179 ±(99.9%) 1.267 ns/op [Average]
  (min, avg, max) = (765.986, 770.179, 775.740), stdev = 2.253
  CI (99.9%): [768.911, 771.446] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldRequireBearerAuthorization

# Run progress: 50.30% complete, ETA 01:25:46
# Fork: 1 of 2
# Warmup Iteration   1: 5155.322 ns/op
# Warmup Iteration   2: 1172.941 ns/op
# Warmup Iteration   3: 789.144 ns/op
# Warmup Iteration   4: 768.143 ns/op
# Warmup Iteration   5: 773.154 ns/op
# Warmup Iteration   6: 773.495 ns/op
# Warmup Iteration   7: 769.107 ns/op
# Warmup Iteration   8: 770.719 ns/op
# Warmup Iteration   9: 768.354 ns/op
# Warmup Iteration  10: 769.840 ns/op
Iteration   1: 772.808 ns/op
Iteration   2: 769.154 ns/op
Iteration   3: 768.615 ns/op
Iteration   4: 771.452 ns/op
Iteration   5: 771.180 ns/op
Iteration   6: 769.105 ns/op
Iteration   7: 768.717 ns/op
Iteration   8: 769.121 ns/op
Iteration   9: 766.657 ns/op
Iteration  10: 770.975 ns/op
Iteration  11: 766.117 ns/op
Iteration  12: 770.336 ns/op
Iteration  13: 770.921 ns/op
Iteration  14: 768.160 ns/op
Iteration  15: 768.448 ns/op
Iteration  16: 773.384 ns/op
Iteration  17: 769.375 ns/op
Iteration  18: 767.215 ns/op
Iteration  19: 764.223 ns/op
Iteration  20: 770.393 ns/op

# Run progress: 50.38% complete, ETA 01:26:01
# Fork: 2 of 2
# Warmup Iteration   1: 4490.326 ns/op
# Warmup Iteration   2: 1192.072 ns/op
# Warmup Iteration   3: 778.150 ns/op
# Warmup Iteration   4: 759.670 ns/op
# Warmup Iteration   5: 755.131 ns/op
# Warmup Iteration   6: 754.307 ns/op
# Warmup Iteration   7: 754.857 ns/op
# Warmup Iteration   8: 753.745 ns/op
# Warmup Iteration   9: 754.575 ns/op
# Warmup Iteration  10: 757.876 ns/op
Iteration   1: 759.343 ns/op
Iteration   2: 758.569 ns/op
Iteration   3: 753.820 ns/op
Iteration   4: 757.278 ns/op
Iteration   5: 757.108 ns/op
Iteration   6: 754.787 ns/op
Iteration   7: 753.037 ns/op
Iteration   8: 755.837 ns/op
Iteration   9: 753.596 ns/op
Iteration  10: 752.576 ns/op
Iteration  11: 754.725 ns/op
Iteration  12: 759.069 ns/op
Iteration  13: 753.894 ns/op
Iteration  14: 753.141 ns/op
Iteration  15: 757.753 ns/op
Iteration  16: 753.642 ns/op
Iteration  17: 755.666 ns/op
Iteration  18: 758.345 ns/op
Iteration  19: 751.813 ns/op
Iteration  20: 760.524 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldRequireBearerAuthorization":
  762.522 ±(99.9%) 4.099 ns/op [Average]
  (min, avg, max) = (751.813, 762.522, 773.384), stdev = 7.285
  CI (99.9%): [758.423, 766.621] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldReturnAjaxResponseContent_WhenStubTypeRequest

# Run progress: 50.45% complete, ETA 01:26:15
# Fork: 1 of 2
# Warmup Iteration   1: 5398.282 ns/op
# Warmup Iteration   2: 1851.582 ns/op
# Warmup Iteration   3: 1250.273 ns/op
# Warmup Iteration   4: 1248.071 ns/op
# Warmup Iteration   5: 1249.860 ns/op
# Warmup Iteration   6: 1247.461 ns/op
# Warmup Iteration   7: 1242.362 ns/op
# Warmup Iteration   8: 1241.522 ns/op
# Warmup Iteration   9: 1241.322 ns/op
# Warmup Iteration  10: 1245.582 ns/op
Iteration   1: 1253.775 ns/op
Iteration   2: 1239.002 ns/op
Iteration   3: 1243.885 ns/op
Iteration   4: 1246.178 ns/op
Iteration   5: 1242.017 ns/op
Iteration   6: 1256.874 ns/op
Iteration   7: 1239.522 ns/op
Iteration   8: 1236.001 ns/op
Iteration   9: 1239.411 ns/op
Iteration  10: 1251.743 ns/op
Iteration  11: 1232.322 ns/op
Iteration  12: 1239.330 ns/op
Iteration  13: 1237.375 ns/op
Iteration  14: 1239.455 ns/op
Iteration  15: 1238.147 ns/op
Iteration  16: 1235.610 ns/op
Iteration  17: 1233.229 ns/op
Iteration  18: 1232.003 ns/op
Iteration  19: 1233.085 ns/op
Iteration  20: 1249.537 ns/op

# Run progress: 50.53% complete, ETA 01:26:29
# Fork: 2 of 2
# Warmup Iteration   1: 7184.340 ns/op
# Warmup Iteration   2: 2128.834 ns/op
# Warmup Iteration   3: 1576.484 ns/op
# Warmup Iteration   4: 1581.046 ns/op
# Warmup Iteration   5: 1565.061 ns/op
# Warmup Iteration   6: 1568.992 ns/op
# Warmup Iteration   7: 1559.746 ns/op
# Warmup Iteration   8: 1567.505 ns/op
# Warmup Iteration   9: 1565.031 ns/op
# Warmup Iteration  10: 1561.134 ns/op
Iteration   1: 1568.827 ns/op
Iteration   2: 1572.153 ns/op
Iteration   3: 1571.144 ns/op
Iteration   4: 1577.812 ns/op
Iteration   5: 1568.554 ns/op
Iteration   6: 1570.504 ns/op
Iteration   7: 1565.391 ns/op
Iteration   8: 1557.585 ns/op
Iteration   9: 1563.981 ns/op
Iteration  10: 1566.083 ns/op
Iteration  11: 1566.480 ns/op
Iteration  12: 1561.625 ns/op
Iteration  13: 1559.123 ns/op
Iteration  14: 1571.562 ns/op
Iteration  15: 1563.266 ns/op
Iteration  16: 1561.110 ns/op
Iteration  17: 1572.580 ns/op
Iteration  18: 1560.460 ns/op
Iteration  19: 1564.751 ns/op
Iteration  20: 1570.305 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldReturnAjaxResponseContent_WhenStubTypeRequest":
  1403.795 ±(99.9%) 92.863 ns/op [Average]
  (min, avg, max) = (1232.003, 1403.795, 1577.812), stdev = 165.064
  CI (99.9%): [1310.932, 1496.658] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldReturnAjaxResponseContent_WhenStubTypeResponse

# Run progress: 50.60% complete, ETA 01:26:43
# Fork: 1 of 2
# Warmup Iteration   1: 5361.649 ns/op
# Warmup Iteration   2: 1473.614 ns/op
# Warmup Iteration   3: 1341.064 ns/op
# Warmup Iteration   4: 1353.438 ns/op
# Warmup Iteration   5: 1353.356 ns/op
# Warmup Iteration   6: 1341.881 ns/op
# Warmup Iteration   7: 1349.070 ns/op
# Warmup Iteration   8: 1349.364 ns/op
# Warmup Iteration   9: 1339.283 ns/op
# Warmup Iteration  10: 1345.880 ns/op
Iteration   1: 1338.575 ns/op
Iteration   2: 1342.797 ns/op
Iteration   3: 1347.244 ns/op
Iteration   4: 1352.428 ns/op
Iteration   5: 1341.941 ns/op
Iteration   6: 1349.671 ns/op
Iteration   7: 1341.075 ns/op
Iteration   8: 1348.040 ns/op
Iteration   9: 1349.677 ns/op
Iteration  10: 1345.041 ns/op
Iteration  11: 1362.360 ns/op
Iteration  12: 1349.593 ns/op
Iteration  13: 1343.034 ns/op
Iteration  14: 1356.514 ns/op
Iteration  15: 1353.204 ns/op
Iteration  16: 1345.890 ns/op
Iteration  17: 1350.910 ns/op
Iteration  18: 1349.595 ns/op
Iteration  19: 1354.372 ns/op
Iteration  20: 1336.765 ns/op

# Run progress: 50.68% complete, ETA 01:26:57
# Fork: 2 of 2
# Warmup Iteration   1: 6420.687 ns/op
# Warmup Iteration   2: 1616.004 ns/op
# Warmup Iteration   3: 1375.990 ns/op
# Warmup Iteration   4: 1353.206 ns/op
# Warmup Iteration   5: 1371.146 ns/op
# Warmup Iteration   6: 1363.980 ns/op
# Warmup Iteration   7: 1362.775 ns/op
# Warmup Iteration   8: 1360.608 ns/op
# Warmup Iteration   9: 1353.627 ns/op
# Warmup Iteration  10: 1376.031 ns/op
Iteration   1: 1350.762 ns/op
Iteration   2: 1365.625 ns/op
Iteration   3: 1358.779 ns/op
Iteration   4: 1356.720 ns/op
Iteration   5: 1349.475 ns/op
Iteration   6: 1371.758 ns/op
Iteration   7: 1359.470 ns/op
Iteration   8: 1356.385 ns/op
Iteration   9: 1356.007 ns/op
Iteration  10: 1359.058 ns/op
Iteration  11: 1364.262 ns/op
Iteration  12: 1354.752 ns/op
Iteration  13: 1350.474 ns/op
Iteration  14: 1359.228 ns/op
Iteration  15: 1351.743 ns/op
Iteration  16: 1366.822 ns/op
Iteration  17: 1346.420 ns/op
Iteration  18: 1360.341 ns/op
Iteration  19: 1365.302 ns/op
Iteration  20: 1360.944 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldReturnAjaxResponseContent_WhenStubTypeResponse":
  1353.076 ±(99.9%) 4.609 ns/op [Average]
  (min, avg, max) = (1336.765, 1353.076, 1371.758), stdev = 8.192
  CI (99.9%): [1348.468, 1357.685] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldReturnDescription_WhenDescription

# Run progress: 50.75% complete, ETA 01:27:11
# Fork: 1 of 2
# Warmup Iteration   1: 1755.854 ns/op
# Warmup Iteration   2: 568.485 ns/op
# Warmup Iteration   3: 521.065 ns/op
# Warmup Iteration   4: 519.106 ns/op
# Warmup Iteration   5: 517.406 ns/op
# Warmup Iteration   6: 519.527 ns/op
# Warmup Iteration   7: 517.799 ns/op
# Warmup Iteration   8: 517.926 ns/op
# Warmup Iteration   9: 520.761 ns/op
# Warmup Iteration  10: 523.204 ns/op
Iteration   1: 518.580 ns/op
Iteration   2: 525.281 ns/op
Iteration   3: 522.600 ns/op
Iteration   4: 521.761 ns/op
Iteration   5: 521.335 ns/op
Iteration   6: 518.150 ns/op
Iteration   7: 517.873 ns/op
Iteration   8: 518.764 ns/op
Iteration   9: 518.241 ns/op
Iteration  10: 518.006 ns/op
Iteration  11: 520.074 ns/op
Iteration  12: 515.039 ns/op
Iteration  13: 519.569 ns/op
Iteration  14: 521.394 ns/op
Iteration  15: 520.108 ns/op
Iteration  16: 520.313 ns/op
Iteration  17: 519.049 ns/op
Iteration  18: 524.048 ns/op
Iteration  19: 523.157 ns/op
Iteration  20: 519.888 ns/op

# Run progress: 50.83% complete, ETA 01:27:25
# Fork: 2 of 2
# Warmup Iteration   1: 2221.350 ns/op
# Warmup Iteration   2: 610.255 ns/op
# Warmup Iteration   3: 547.189 ns/op
# Warmup Iteration   4: 545.980 ns/op
# Warmup Iteration   5: 545.219 ns/op
# Warmup Iteration   6: 545.543 ns/op
# Warmup Iteration   7: 544.765 ns/op
# Warmup Iteration   8: 553.229 ns/op
# Warmup Iteration   9: 546.526 ns/op
# Warmup Iteration  10: 547.233 ns/op
Iteration   1: 550.779 ns/op
Iteration   2: 548.818 ns/op
Iteration   3: 547.373 ns/op
Iteration   4: 544.833 ns/op
Iteration   5: 548.218 ns/op
Iteration   6: 546.050 ns/op
Iteration   7: 545.693 ns/op
Iteration   8: 545.394 ns/op
Iteration   9: 546.503 ns/op
Iteration  10: 546.374 ns/op
Iteration  11: 546.723 ns/op
Iteration  12: 549.518 ns/op
Iteration  13: 545.479 ns/op
Iteration  14: 546.428 ns/op
Iteration  15: 552.391 ns/op
Iteration  16: 548.379 ns/op
Iteration  17: 543.807 ns/op
Iteration  18: 546.191 ns/op
Iteration  19: 545.554 ns/op
Iteration  20: 543.421 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldReturnDescription_WhenDescription":
  533.529 ±(99.9%) 7.726 ns/op [Average]
  (min, avg, max) = (515.039, 533.529, 552.391), stdev = 13.732
  CI (99.9%): [525.803, 541.255] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldReturnSecondSequenceResponseAfterSecondCall_WhenTwoSequenceResponsePresent

# Run progress: 50.90% complete, ETA 01:27:38
# Fork: 1 of 2
# Warmup Iteration   1: 5106.685 ns/op
# Warmup Iteration   2: 1718.976 ns/op
# Warmup Iteration   3: 985.030 ns/op
# Warmup Iteration   4: 956.140 ns/op
# Warmup Iteration   5: 954.293 ns/op
# Warmup Iteration   6: 954.416 ns/op
# Warmup Iteration   7: 956.927 ns/op
# Warmup Iteration   8: 955.861 ns/op
# Warmup Iteration   9: 956.353 ns/op
# Warmup Iteration  10: 957.076 ns/op
Iteration   1: 960.650 ns/op
Iteration   2: 957.666 ns/op
Iteration   3: 954.565 ns/op
Iteration   4: 952.541 ns/op
Iteration   5: 961.088 ns/op
Iteration   6: 957.465 ns/op
Iteration   7: 954.796 ns/op
Iteration   8: 951.800 ns/op
Iteration   9: 959.322 ns/op
Iteration  10: 957.407 ns/op
Iteration  11: 954.589 ns/op
Iteration  12: 952.287 ns/op
Iteration  13: 957.558 ns/op
Iteration  14: 958.334 ns/op
Iteration  15: 960.282 ns/op
Iteration  16: 951.414 ns/op
Iteration  17: 960.010 ns/op
Iteration  18: 957.252 ns/op
Iteration  19: 956.105 ns/op
Iteration  20: 955.004 ns/op

# Run progress: 50.98% complete, ETA 01:27:51
# Fork: 2 of 2
# Warmup Iteration   1: 5029.302 ns/op
# Warmup Iteration   2: 1785.876 ns/op
# Warmup Iteration   3: 1041.035 ns/op
# Warmup Iteration   4: 967.390 ns/op
# Warmup Iteration   5: 967.592 ns/op
# Warmup Iteration   6: 966.264 ns/op
# Warmup Iteration   7: 963.462 ns/op
# Warmup Iteration   8: 960.447 ns/op
# Warmup Iteration   9: 964.068 ns/op
# Warmup Iteration  10: 978.563 ns/op
Iteration   1: 971.670 ns/op
Iteration   2: 967.653 ns/op
Iteration   3: 962.707 ns/op
Iteration   4: 961.167 ns/op
Iteration   5: 984.927 ns/op
Iteration   6: 963.375 ns/op
Iteration   7: 957.762 ns/op
Iteration   8: 958.620 ns/op
Iteration   9: 963.981 ns/op
Iteration  10: 956.570 ns/op
Iteration  11: 963.047 ns/op
Iteration  12: 968.117 ns/op
Iteration  13: 963.706 ns/op
Iteration  14: 965.802 ns/op
Iteration  15: 960.529 ns/op
Iteration  16: 959.876 ns/op
Iteration  17: 961.118 ns/op
Iteration  18: 958.595 ns/op
Iteration  19: 962.800 ns/op
Iteration  20: 960.069 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldReturnSecondSequenceResponseAfterSecondCall_WhenTwoSequenceResponsePresent":
  960.056 ±(99.9%) 3.399 ns/op [Average]
  (min, avg, max) = (951.414, 960.056, 984.927), stdev = 6.042
  CI (99.9%): [956.656, 963.455] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldReturnSequenceResponse_WhenOneSequenceResponsePresent

# Run progress: 51.05% complete, ETA 01:28:05
# Fork: 1 of 2
# Warmup Iteration   1: 4584.075 ns/op
# Warmup Iteration   2: 1252.699 ns/op
# Warmup Iteration   3: 853.468 ns/op
# Warmup Iteration   4: 857.498 ns/op
# Warmup Iteration   5: 853.375 ns/op
# Warmup Iteration   6: 850.716 ns/op
# Warmup Iteration   7: 854.944 ns/op
# Warmup Iteration   8: 853.722 ns/op
# Warmup Iteration   9: 852.349 ns/op
# Warmup Iteration  10: 853.245 ns/op
Iteration   1: 856.495 ns/op
Iteration   2: 853.317 ns/op
Iteration   3: 853.227 ns/op
Iteration   4: 851.063 ns/op
Iteration   5: 852.588 ns/op
Iteration   6: 848.665 ns/op
Iteration   7: 853.049 ns/op
Iteration   8: 854.922 ns/op
Iteration   9: 855.413 ns/op
Iteration  10: 855.138 ns/op
Iteration  11: 859.189 ns/op
Iteration  12: 853.352 ns/op
Iteration  13: 851.638 ns/op
Iteration  14: 856.356 ns/op
Iteration  15: 851.478 ns/op
Iteration  16: 851.128 ns/op
Iteration  17: 853.750 ns/op
Iteration  18: 854.743 ns/op
Iteration  19: 853.332 ns/op
Iteration  20: 858.455 ns/op

# Run progress: 51.13% complete, ETA 01:28:18
# Fork: 2 of 2
# Warmup Iteration   1: 4356.546 ns/op
# Warmup Iteration   2: 1136.662 ns/op
# Warmup Iteration   3: 853.337 ns/op
# Warmup Iteration   4: 851.609 ns/op
# Warmup Iteration   5: 853.632 ns/op
# Warmup Iteration   6: 849.224 ns/op
# Warmup Iteration   7: 851.124 ns/op
# Warmup Iteration   8: 852.037 ns/op
# Warmup Iteration   9: 849.790 ns/op
# Warmup Iteration  10: 851.554 ns/op
Iteration   1: 853.758 ns/op
Iteration   2: 849.856 ns/op
Iteration   3: 848.529 ns/op
Iteration   4: 849.460 ns/op
Iteration   5: 850.486 ns/op
Iteration   6: 849.768 ns/op
Iteration   7: 852.718 ns/op
Iteration   8: 848.505 ns/op
Iteration   9: 851.914 ns/op
Iteration  10: 851.940 ns/op
Iteration  11: 850.986 ns/op
Iteration  12: 849.009 ns/op
Iteration  13: 850.826 ns/op
Iteration  14: 852.944 ns/op
Iteration  15: 850.841 ns/op
Iteration  16: 851.572 ns/op
Iteration  17: 853.128 ns/op
Iteration  18: 851.805 ns/op
Iteration  19: 849.870 ns/op
Iteration  20: 852.556 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldReturnSequenceResponse_WhenOneSequenceResponsePresent":
  852.444 ±(99.9%) 1.432 ns/op [Average]
  (min, avg, max) = (848.505, 852.444, 859.189), stdev = 2.546
  CI (99.9%): [851.012, 853.877] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldThrow_WhenResponseObjectIsNotCollectionType

# Run progress: 51.20% complete, ETA 01:28:31
# Fork: 1 of 2
# Warmup Iteration   1: 8833.734 ns/op
# Warmup Iteration   2: 3669.218 ns/op
# Warmup Iteration   3: 3361.914 ns/op
# Warmup Iteration   4: 3342.428 ns/op
# Warmup Iteration   5: 3348.218 ns/op
# Warmup Iteration   6: 3363.625 ns/op
# Warmup Iteration   7: 3371.044 ns/op
# Warmup Iteration   8: 3347.468 ns/op
# Warmup Iteration   9: 3383.461 ns/op
# Warmup Iteration  10: 3353.740 ns/op
Iteration   1: 3345.623 ns/op
Iteration   2: 3352.523 ns/op
Iteration   3: 3370.773 ns/op
Iteration   4: 3353.021 ns/op
Iteration   5: 3349.038 ns/op
Iteration   6: 3364.332 ns/op
Iteration   7: 3298.520 ns/op
Iteration   8: 3309.137 ns/op
Iteration   9: 3301.378 ns/op
Iteration  10: 3311.771 ns/op
Iteration  11: 3286.378 ns/op
Iteration  12: 3303.864 ns/op
Iteration  13: 3298.663 ns/op
Iteration  14: 3306.271 ns/op
Iteration  15: 3317.474 ns/op
Iteration  16: 3312.663 ns/op
Iteration  17: 3310.491 ns/op
Iteration  18: 3315.825 ns/op
Iteration  19: 3296.511 ns/op
Iteration  20: 3303.757 ns/op

# Run progress: 51.28% complete, ETA 01:28:44
# Fork: 2 of 2
# Warmup Iteration   1: 8243.796 ns/op
# Warmup Iteration   2: 3566.861 ns/op
# Warmup Iteration   3: 3346.188 ns/op
# Warmup Iteration   4: 3330.884 ns/op
# Warmup Iteration   5: 3331.443 ns/op
# Warmup Iteration   6: 3341.554 ns/op
# Warmup Iteration   7: 3349.442 ns/op
# Warmup Iteration   8: 3336.185 ns/op
# Warmup Iteration   9: 3338.802 ns/op
# Warmup Iteration  10: 3354.707 ns/op
Iteration   1: 3348.247 ns/op
Iteration   2: 3344.774 ns/op
Iteration   3: 3349.872 ns/op
Iteration   4: 3342.420 ns/op
Iteration   5: 3350.552 ns/op
Iteration   6: 3334.116 ns/op
Iteration   7: 3281.674 ns/op
Iteration   8: 3293.160 ns/op
Iteration   9: 3300.085 ns/op
Iteration  10: 3311.204 ns/op
Iteration  11: 3297.074 ns/op
Iteration  12: 3266.664 ns/op
Iteration  13: 3316.406 ns/op
Iteration  14: 3286.735 ns/op
Iteration  15: 3280.329 ns/op
Iteration  16: 3280.753 ns/op
Iteration  17: 3267.471 ns/op
Iteration  18: 3278.296 ns/op
Iteration  19: 3290.688 ns/op
Iteration  20: 3278.410 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldThrow_WhenResponseObjectIsNotCollectionType":
  3312.674 ±(99.9%) 15.951 ns/op [Average]
  (min, avg, max) = (3266.664, 3312.674, 3370.773), stdev = 28.352
  CI (99.9%): [3296.723, 3328.624] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldThrow_WhenResponseObjectIsNotStubResponseType

# Run progress: 51.36% complete, ETA 01:28:56
# Fork: 1 of 2
# Warmup Iteration   1: 8007.061 ns/op
# Warmup Iteration   2: 3636.448 ns/op
# Warmup Iteration   3: 3368.435 ns/op
# Warmup Iteration   4: 3355.070 ns/op
# Warmup Iteration   5: 3351.611 ns/op
# Warmup Iteration   6: 3372.181 ns/op
# Warmup Iteration   7: 3366.368 ns/op
# Warmup Iteration   8: 3362.910 ns/op
# Warmup Iteration   9: 3357.142 ns/op
# Warmup Iteration  10: 3348.897 ns/op
Iteration   1: 3374.536 ns/op
Iteration   2: 3380.842 ns/op
Iteration   3: 3370.842 ns/op
Iteration   4: 3361.744 ns/op
Iteration   5: 3343.985 ns/op
Iteration   6: 3350.025 ns/op
Iteration   7: 3304.752 ns/op
Iteration   8: 3292.309 ns/op
Iteration   9: 3303.887 ns/op
Iteration  10: 3313.179 ns/op
Iteration  11: 3304.837 ns/op
Iteration  12: 3299.379 ns/op
Iteration  13: 3305.908 ns/op
Iteration  14: 3291.702 ns/op
Iteration  15: 3294.686 ns/op
Iteration  16: 3304.535 ns/op
Iteration  17: 3294.655 ns/op
Iteration  18: 3305.322 ns/op
Iteration  19: 3314.720 ns/op
Iteration  20: 3287.336 ns/op

# Run progress: 51.43% complete, ETA 01:29:09
# Fork: 2 of 2
# Warmup Iteration   1: 8371.944 ns/op
# Warmup Iteration   2: 3627.134 ns/op
# Warmup Iteration   3: 3379.521 ns/op
# Warmup Iteration   4: 3362.217 ns/op
# Warmup Iteration   5: 3353.725 ns/op
# Warmup Iteration   6: 3385.027 ns/op
# Warmup Iteration   7: 3372.095 ns/op
# Warmup Iteration   8: 3390.360 ns/op
# Warmup Iteration   9: 3370.681 ns/op
# Warmup Iteration  10: 3374.802 ns/op
Iteration   1: 3379.758 ns/op
Iteration   2: 3381.687 ns/op
Iteration   3: 3378.805 ns/op
Iteration   4: 3394.374 ns/op
Iteration   5: 3367.792 ns/op
Iteration   6: 3379.612 ns/op
Iteration   7: 3309.771 ns/op
Iteration   8: 3305.453 ns/op
Iteration   9: 3319.041 ns/op
Iteration  10: 3329.194 ns/op
Iteration  11: 3340.570 ns/op
Iteration  12: 3321.843 ns/op
Iteration  13: 3311.452 ns/op
Iteration  14: 3309.854 ns/op
Iteration  15: 3296.420 ns/op
Iteration  16: 3331.843 ns/op
Iteration  17: 3349.149 ns/op
Iteration  18: 3304.158 ns/op
Iteration  19: 3296.817 ns/op
Iteration  20: 3321.288 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldThrow_WhenResponseObjectIsNotStubResponseType":
  3328.202 ±(99.9%) 18.269 ns/op [Average]
  (min, avg, max) = (3287.336, 3328.202, 3394.374), stdev = 32.473
  CI (99.9%): [3309.933, 3346.471] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldVerifyBehaviour_WhenAuthorizationHeaderBasicEquals

# Run progress: 51.51% complete, ETA 01:29:21
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1208023352.000 ns/op
# Warmup Iteration   2: 1350384.148 ns/op
# Warmup Iteration   3: 529069.647 ns/op
# Warmup Iteration   4: 490131.761 ns/op
# Warmup Iteration   5: 435767.697 ns/op
# Warmup Iteration   6: 427633.449 ns/op
# Warmup Iteration   7: 393882.737 ns/op
# Warmup Iteration   8: 405043.642 ns/op
# Warmup Iteration   9: 340421.162 ns/op
# Warmup Iteration  10: 346360.615 ns/op
Iteration   1: 306396.482 ns/op
Iteration   2: 167390.108 ns/op
Iteration   3: 183877.361 ns/op
Iteration   4: 170257.104 ns/op
Iteration   5: 186939.131 ns/op
Iteration   6: 167677.454 ns/op
Iteration   7: 174167.329 ns/op
Iteration   8: 168253.676 ns/op
Iteration   9: 161361.758 ns/op
Iteration  10: 181737.254 ns/op
Iteration  11: 161439.001 ns/op
Iteration  12: 160500.566 ns/op
Iteration  13: 171621.573 ns/op
Iteration  14: 171865.321 ns/op
Iteration  15: 160964.167 ns/op
Iteration  16: 168518.794 ns/op
Iteration  17: 170886.954 ns/op
Iteration  18: 174264.491 ns/op
Iteration  19: 162801.161 ns/op
Iteration  20: 162848.435 ns/op

# Run progress: 51.58% complete, ETA 01:29:34
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1078144379.000 ns/op
# Warmup Iteration   2: 1490153.275 ns/op
# Warmup Iteration   3: 596327.327 ns/op
# Warmup Iteration   4: 510573.730 ns/op
# Warmup Iteration   5: 435090.449 ns/op
# Warmup Iteration   6: 415715.283 ns/op
# Warmup Iteration   7: 367673.540 ns/op
# Warmup Iteration   8: 356403.881 ns/op
# Warmup Iteration   9: 217615.279 ns/op
# Warmup Iteration  10: 210700.679 ns/op
Iteration   1: 204342.023 ns/op
Iteration   2: 210597.695 ns/op
Iteration   3: 201735.826 ns/op
Iteration   4: 201788.245 ns/op
Iteration   5: 193880.586 ns/op
Iteration   6: 204101.663 ns/op
Iteration   7: 193366.454 ns/op
Iteration   8: 192731.311 ns/op
Iteration   9: 198924.864 ns/op
Iteration  10: 194790.788 ns/op
Iteration  11: 188673.165 ns/op
Iteration  12: 188364.104 ns/op
Iteration  13: 187861.309 ns/op
Iteration  14: 194834.425 ns/op
Iteration  15: 188092.646 ns/op
Iteration  16: 189345.105 ns/op
Iteration  17: 190149.401 ns/op
Iteration  18: 197282.378 ns/op
Iteration  19: 191057.491 ns/op
Iteration  20: 198108.198 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldVerifyBehaviour_WhenAuthorizationHeaderBasicEquals":
  186094.895 ±(99.9%) 13704.246 ns/op [Average]
  (min, avg, max) = (160500.566, 186094.895, 306396.482), stdev = 24359.286
  CI (99.9%): [172390.649, 199799.141] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldVerifyBehaviour_WhenAuthorizationHeaderBasicIsNotTheSame

# Run progress: 51.66% complete, ETA 01:29:46
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1040020156.000 ns/op
# Warmup Iteration   2: 1574621.158 ns/op
# Warmup Iteration   3: 600337.526 ns/op
# Warmup Iteration   4: 539966.264 ns/op
# Warmup Iteration   5: 455872.584 ns/op
# Warmup Iteration   6: 459663.075 ns/op
# Warmup Iteration   7: 407224.138 ns/op
# Warmup Iteration   8: 377195.435 ns/op
# Warmup Iteration   9: 329708.054 ns/op
# Warmup Iteration  10: 217285.568 ns/op
Iteration   1: 203721.696 ns/op
Iteration   2: 220440.526 ns/op
Iteration   3: 196928.782 ns/op
Iteration   4: 212695.575 ns/op
Iteration   5: 198665.954 ns/op
Iteration   6: 205374.787 ns/op
Iteration   7: 199977.413 ns/op
Iteration   8: 189838.394 ns/op
Iteration   9: 201587.463 ns/op
Iteration  10: 198793.856 ns/op
Iteration  11: 196348.565 ns/op
Iteration  12: 191230.876 ns/op
Iteration  13: 190563.496 ns/op
Iteration  14: 199381.949 ns/op
Iteration  15: 194596.504 ns/op
Iteration  16: 193101.847 ns/op
Iteration  17: 191280.324 ns/op
Iteration  18: 203789.906 ns/op
Iteration  19: 197901.172 ns/op
Iteration  20: 195108.330 ns/op

# Run progress: 51.73% complete, ETA 01:29:59
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1103016951.000 ns/op
# Warmup Iteration   2: 1599692.201 ns/op
# Warmup Iteration   3: 627727.275 ns/op
# Warmup Iteration   4: 547573.336 ns/op
# Warmup Iteration   5: 456429.805 ns/op
# Warmup Iteration   6: 441781.072 ns/op
# Warmup Iteration   7: 370121.937 ns/op
# Warmup Iteration   8: 379844.916 ns/op
# Warmup Iteration   9: 257615.439 ns/op
# Warmup Iteration  10: 211053.359 ns/op
Iteration   1: 202157.476 ns/op
Iteration   2: 220079.150 ns/op
Iteration   3: 200928.871 ns/op
Iteration   4: 211743.434 ns/op
Iteration   5: 205834.683 ns/op
Iteration   6: 197147.366 ns/op
Iteration   7: 208019.585 ns/op
Iteration   8: 190471.497 ns/op
Iteration   9: 193740.713 ns/op
Iteration  10: 200374.586 ns/op
Iteration  11: 204810.287 ns/op
Iteration  12: 190732.369 ns/op
Iteration  13: 198524.160 ns/op
Iteration  14: 194664.043 ns/op
Iteration  15: 194313.693 ns/op
Iteration  16: 191272.361 ns/op
Iteration  17: 193293.269 ns/op
Iteration  18: 198854.349 ns/op
Iteration  19: 195006.132 ns/op
Iteration  20: 197331.416 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldVerifyBehaviour_WhenAuthorizationHeaderBasicIsNotTheSame":
  199265.671 ±(99.9%) 4228.798 ns/op [Average]
  (min, avg, max) = (189838.394, 199265.671, 220440.526), stdev = 7516.685
  CI (99.9%): [195036.873, 203494.469] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldVerifyBehaviour_WhenAuthorizationHeaderBearerEquals

# Run progress: 51.81% complete, ETA 01:30:11
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1043791284.000 ns/op
# Warmup Iteration   2: 1429625.586 ns/op
# Warmup Iteration   3: 597215.881 ns/op
# Warmup Iteration   4: 500526.245 ns/op
# Warmup Iteration   5: 436909.375 ns/op
# Warmup Iteration   6: 438218.847 ns/op
# Warmup Iteration   7: 406186.982 ns/op
# Warmup Iteration   8: 381877.040 ns/op
# Warmup Iteration   9: 337974.790 ns/op
# Warmup Iteration  10: 268481.641 ns/op
Iteration   1: 171842.990 ns/op
Iteration   2: 190532.843 ns/op
Iteration   3: 181286.611 ns/op
Iteration   4: 197442.904 ns/op
Iteration   5: 168910.797 ns/op
Iteration   6: 191357.137 ns/op
Iteration   7: 165248.027 ns/op
Iteration   8: 178190.165 ns/op
Iteration   9: 173418.202 ns/op
Iteration  10: 173935.184 ns/op
Iteration  11: 177122.051 ns/op
Iteration  12: 172940.783 ns/op
Iteration  13: 169477.641 ns/op
Iteration  14: 168634.643 ns/op
Iteration  15: 176834.637 ns/op
Iteration  16: 180935.706 ns/op
Iteration  17: 165667.867 ns/op
Iteration  18: 167446.420 ns/op
Iteration  19: 167661.199 ns/op
Iteration  20: 172289.895 ns/op

# Run progress: 51.88% complete, ETA 01:30:23
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1049354054.000 ns/op
# Warmup Iteration   2: 1501696.709 ns/op
# Warmup Iteration   3: 630401.821 ns/op
# Warmup Iteration   4: 578322.838 ns/op
# Warmup Iteration   5: 448996.458 ns/op
# Warmup Iteration   6: 415695.291 ns/op
# Warmup Iteration   7: 332299.358 ns/op
# Warmup Iteration   8: 362133.590 ns/op
# Warmup Iteration   9: 210710.373 ns/op
# Warmup Iteration  10: 208291.444 ns/op
Iteration   1: 197013.309 ns/op
Iteration   2: 215815.158 ns/op
Iteration   3: 193965.403 ns/op
Iteration   4: 212255.949 ns/op
Iteration   5: 194226.732 ns/op
Iteration   6: 204024.641 ns/op
Iteration   7: 196539.594 ns/op
Iteration   8: 195731.345 ns/op
Iteration   9: 192463.835 ns/op
Iteration  10: 190145.498 ns/op
Iteration  11: 205870.635 ns/op
Iteration  12: 192448.899 ns/op
Iteration  13: 190980.133 ns/op
Iteration  14: 195013.944 ns/op
Iteration  15: 191804.837 ns/op
Iteration  16: 192122.317 ns/op
Iteration  17: 192042.132 ns/op
Iteration  18: 191289.377 ns/op
Iteration  19: 191104.068 ns/op
Iteration  20: 197032.531 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldVerifyBehaviour_WhenAuthorizationHeaderBearerEquals":
  186076.651 ±(99.9%) 7511.204 ns/op [Average]
  (min, avg, max) = (165248.027, 186076.651, 215815.158), stdev = 13351.158
  CI (99.9%): [178565.447, 193587.855] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldVerifyBehaviour_WhenAuthorizationHeaderBearerIsNotSet

# Run progress: 51.96% complete, ETA 01:30:35
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1046426003.000 ns/op
# Warmup Iteration   2: 1358836.569 ns/op
# Warmup Iteration   3: 561308.983 ns/op
# Warmup Iteration   4: 535096.776 ns/op
# Warmup Iteration   5: 458990.545 ns/op
# Warmup Iteration   6: 418222.735 ns/op
# Warmup Iteration   7: 361487.501 ns/op
# Warmup Iteration   8: 376970.950 ns/op
# Warmup Iteration   9: 238460.598 ns/op
# Warmup Iteration  10: 207604.069 ns/op
Iteration   1: 201453.344 ns/op
Iteration   2: 206803.662 ns/op
Iteration   3: 196693.627 ns/op
Iteration   4: 200736.199 ns/op
Iteration   5: 201380.717 ns/op
Iteration   6: 192753.117 ns/op
Iteration   7: 189954.950 ns/op
Iteration   8: 197604.298 ns/op
Iteration   9: 185135.009 ns/op
Iteration  10: 191978.203 ns/op
Iteration  11: 186062.006 ns/op
Iteration  12: 183720.258 ns/op
Iteration  13: 193288.525 ns/op
Iteration  14: 193590.284 ns/op
Iteration  15: 185154.763 ns/op
Iteration  16: 184369.603 ns/op
Iteration  17: 187170.792 ns/op
Iteration  18: 184494.419 ns/op
Iteration  19: 193446.274 ns/op
Iteration  20: 192181.227 ns/op

# Run progress: 52.03% complete, ETA 01:30:46
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1070029504.000 ns/op
# Warmup Iteration   2: 1336267.077 ns/op
# Warmup Iteration   3: 549965.045 ns/op
# Warmup Iteration   4: 488747.844 ns/op
# Warmup Iteration   5: 440421.634 ns/op
# Warmup Iteration   6: 425067.462 ns/op
# Warmup Iteration   7: 430274.586 ns/op
# Warmup Iteration   8: 385672.458 ns/op
# Warmup Iteration   9: 351109.642 ns/op
# Warmup Iteration  10: 218501.375 ns/op
Iteration   1: 195563.635 ns/op
Iteration   2: 199205.326 ns/op
Iteration   3: 200518.778 ns/op
Iteration   4: 198854.829 ns/op
Iteration   5: 184896.259 ns/op
Iteration   6: 187839.736 ns/op
Iteration   7: 183385.149 ns/op
Iteration   8: 191700.300 ns/op
Iteration   9: 189428.826 ns/op
Iteration  10: 183157.844 ns/op
Iteration  11: 187371.923 ns/op
Iteration  12: 188438.240 ns/op
Iteration  13: 201611.021 ns/op
Iteration  14: 197743.612 ns/op
Iteration  15: 186992.767 ns/op
Iteration  16: 191840.539 ns/op
Iteration  17: 193289.033 ns/op
Iteration  18: 171729.971 ns/op
Iteration  19: 175511.277 ns/op
Iteration  20: 186647.693 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldVerifyBehaviour_WhenAuthorizationHeaderBearerIsNotSet":
  191092.451 ±(99.9%) 4175.898 ns/op [Average]
  (min, avg, max) = (171729.971, 191092.451, 206803.662), stdev = 7422.656
  CI (99.9%): [186916.553, 195268.349] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldVerifyBehaviour_WhenAuthorizationHeaderBearerIsNotTheSame

# Run progress: 52.11% complete, ETA 01:30:58
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1136100733.000 ns/op
# Warmup Iteration   2: 1441862.040 ns/op
# Warmup Iteration   3: 588673.566 ns/op
# Warmup Iteration   4: 519816.503 ns/op
# Warmup Iteration   5: 461675.020 ns/op
# Warmup Iteration   6: 446148.492 ns/op
# Warmup Iteration   7: 368170.432 ns/op
# Warmup Iteration   8: 337862.153 ns/op
# Warmup Iteration   9: 203110.447 ns/op
# Warmup Iteration  10: 209373.382 ns/op
Iteration   1: 197146.714 ns/op
Iteration   2: 202773.496 ns/op
Iteration   3: 198010.664 ns/op
Iteration   4: 195735.882 ns/op
Iteration   5: 195854.344 ns/op
Iteration   6: 188214.945 ns/op
Iteration   7: 189090.526 ns/op
Iteration   8: 199492.667 ns/op
Iteration   9: 184356.157 ns/op
Iteration  10: 191345.352 ns/op
Iteration  11: 185274.698 ns/op
Iteration  12: 185398.340 ns/op
Iteration  13: 188905.147 ns/op
Iteration  14: 195265.246 ns/op
Iteration  15: 182698.552 ns/op
Iteration  16: 184458.347 ns/op
Iteration  17: 180587.087 ns/op
Iteration  18: 188705.972 ns/op
Iteration  19: 175842.903 ns/op
Iteration  20: 172414.118 ns/op

# Run progress: 52.18% complete, ETA 01:31:10
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1049750020.000 ns/op
# Warmup Iteration   2: 1580287.626 ns/op
# Warmup Iteration   3: 622982.623 ns/op
# Warmup Iteration   4: 536364.726 ns/op
# Warmup Iteration   5: 434284.106 ns/op
# Warmup Iteration   6: 448133.300 ns/op
# Warmup Iteration   7: 327926.565 ns/op
# Warmup Iteration   8: 368410.949 ns/op
# Warmup Iteration   9: 274073.496 ns/op
# Warmup Iteration  10: 212280.828 ns/op
Iteration   1: 200407.626 ns/op
Iteration   2: 217863.241 ns/op
Iteration   3: 196524.846 ns/op
Iteration   4: 215515.892 ns/op
Iteration   5: 196812.467 ns/op
Iteration   6: 205014.564 ns/op
Iteration   7: 196917.522 ns/op
Iteration   8: 192120.565 ns/op
Iteration   9: 191634.969 ns/op
Iteration  10: 206995.550 ns/op
Iteration  11: 194905.064 ns/op
Iteration  12: 191338.603 ns/op
Iteration  13: 190387.159 ns/op
Iteration  14: 200373.584 ns/op
Iteration  15: 193910.905 ns/op
Iteration  16: 191972.241 ns/op
Iteration  17: 192014.357 ns/op
Iteration  18: 202916.359 ns/op
Iteration  19: 191199.240 ns/op
Iteration  20: 192729.961 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldVerifyBehaviour_WhenAuthorizationHeaderBearerIsNotTheSame":
  193578.147 ±(99.9%) 5131.170 ns/op [Average]
  (min, avg, max) = (172414.118, 193578.147, 217863.241), stdev = 9120.649
  CI (99.9%): [188446.977, 198709.316] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_arraysIntersect_ShouldReturnFalse_WhenAssertingArrayEmpty

# Run progress: 52.26% complete, ETA 01:31:21
# Fork: 1 of 2
# Warmup Iteration   1: 653.225 ns/op
# Warmup Iteration   2: 336.746 ns/op
# Warmup Iteration   3: 327.665 ns/op
# Warmup Iteration   4: 327.878 ns/op
# Warmup Iteration   5: 327.034 ns/op
# Warmup Iteration   6: 326.908 ns/op
# Warmup Iteration   7: 327.406 ns/op
# Warmup Iteration   8: 327.126 ns/op
# Warmup Iteration   9: 327.065 ns/op
# Warmup Iteration  10: 327.077 ns/op
Iteration   1: 327.579 ns/op
Iteration   2: 326.778 ns/op
Iteration   3: 327.841 ns/op
Iteration   4: 326.863 ns/op
Iteration   5: 327.834 ns/op
Iteration   6: 328.578 ns/op
Iteration   7: 320.318 ns/op
Iteration   8: 320.344 ns/op
Iteration   9: 321.379 ns/op
Iteration  10: 320.113 ns/op
Iteration  11: 321.154 ns/op
Iteration  12: 319.805 ns/op
Iteration  13: 320.541 ns/op
Iteration  14: 321.169 ns/op
Iteration  15: 319.965 ns/op
Iteration  16: 320.697 ns/op
Iteration  17: 318.849 ns/op
Iteration  18: 319.696 ns/op
Iteration  19: 318.821 ns/op
Iteration  20: 318.811 ns/op

# Run progress: 52.33% complete, ETA 01:31:32
# Fork: 2 of 2
# Warmup Iteration   1: 673.027 ns/op
# Warmup Iteration   2: 346.666 ns/op
# Warmup Iteration   3: 324.371 ns/op
# Warmup Iteration   4: 324.800 ns/op
# Warmup Iteration   5: 323.151 ns/op
# Warmup Iteration   6: 321.680 ns/op
# Warmup Iteration   7: 324.112 ns/op
# Warmup Iteration   8: 322.737 ns/op
# Warmup Iteration   9: 323.693 ns/op
# Warmup Iteration  10: 322.268 ns/op
Iteration   1: 321.108 ns/op
Iteration   2: 324.218 ns/op
Iteration   3: 322.959 ns/op
Iteration   4: 323.006 ns/op
Iteration   5: 323.534 ns/op
Iteration   6: 322.759 ns/op
Iteration   7: 323.652 ns/op
Iteration   8: 323.130 ns/op
Iteration   9: 322.731 ns/op
Iteration  10: 324.313 ns/op
Iteration  11: 324.167 ns/op
Iteration  12: 323.746 ns/op
Iteration  13: 323.770 ns/op
Iteration  14: 323.546 ns/op
Iteration  15: 325.033 ns/op
Iteration  16: 324.370 ns/op
Iteration  17: 325.015 ns/op
Iteration  18: 324.293 ns/op
Iteration  19: 325.099 ns/op
Iteration  20: 324.665 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_arraysIntersect_ShouldReturnFalse_WhenAssertingArrayEmpty":
  323.056 ±(99.9%) 1.516 ns/op [Average]
  (min, avg, max) = (318.811, 323.056, 328.578), stdev = 2.695
  CI (99.9%): [321.540, 324.572] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_arraysIntersect_ShouldReturnFalse_WhenTwoArraysDontHaveTheSameElements

# Run progress: 52.41% complete, ETA 01:31:43
# Fork: 1 of 2
# Warmup Iteration   1: 892.298 ns/op
# Warmup Iteration   2: 377.395 ns/op
# Warmup Iteration   3: 349.150 ns/op
# Warmup Iteration   4: 349.007 ns/op
# Warmup Iteration   5: 349.757 ns/op
# Warmup Iteration   6: 350.619 ns/op
# Warmup Iteration   7: 348.003 ns/op
# Warmup Iteration   8: 348.359 ns/op
# Warmup Iteration   9: 349.516 ns/op
# Warmup Iteration  10: 349.724 ns/op
Iteration   1: 348.211 ns/op
Iteration   2: 349.700 ns/op
Iteration   3: 349.581 ns/op
Iteration   4: 348.691 ns/op
Iteration   5: 349.907 ns/op
Iteration   6: 349.496 ns/op
Iteration   7: 348.927 ns/op
Iteration   8: 347.999 ns/op
Iteration   9: 348.921 ns/op
Iteration  10: 348.762 ns/op
Iteration  11: 349.219 ns/op
Iteration  12: 347.563 ns/op
Iteration  13: 347.610 ns/op
Iteration  14: 349.261 ns/op
Iteration  15: 349.968 ns/op
Iteration  16: 348.905 ns/op
Iteration  17: 349.746 ns/op
Iteration  18: 348.516 ns/op
Iteration  19: 347.808 ns/op
Iteration  20: 346.918 ns/op

# Run progress: 52.48% complete, ETA 01:31:54
# Fork: 2 of 2
# Warmup Iteration   1: 815.220 ns/op
# Warmup Iteration   2: 377.723 ns/op
# Warmup Iteration   3: 350.676 ns/op
# Warmup Iteration   4: 349.713 ns/op
# Warmup Iteration   5: 350.904 ns/op
# Warmup Iteration   6: 350.172 ns/op
# Warmup Iteration   7: 349.277 ns/op
# Warmup Iteration   8: 350.688 ns/op
# Warmup Iteration   9: 349.508 ns/op
# Warmup Iteration  10: 349.293 ns/op
Iteration   1: 346.260 ns/op
Iteration   2: 348.412 ns/op
Iteration   3: 347.256 ns/op
Iteration   4: 349.502 ns/op
Iteration   5: 348.518 ns/op
Iteration   6: 348.357 ns/op
Iteration   7: 348.739 ns/op
Iteration   8: 349.028 ns/op
Iteration   9: 348.879 ns/op
Iteration  10: 349.821 ns/op
Iteration  11: 350.287 ns/op
Iteration  12: 350.368 ns/op
Iteration  13: 351.142 ns/op
Iteration  14: 351.603 ns/op
Iteration  15: 349.564 ns/op
Iteration  16: 350.694 ns/op
Iteration  17: 350.250 ns/op
Iteration  18: 348.988 ns/op
Iteration  19: 350.161 ns/op
Iteration  20: 352.297 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_arraysIntersect_ShouldReturnFalse_WhenTwoArraysDontHaveTheSameElements":
  349.146 ±(99.9%) 0.691 ns/op [Average]
  (min, avg, max) = (346.260, 349.146, 352.297), stdev = 1.228
  CI (99.9%): [348.455, 349.837] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_arraysIntersect_ShouldReturnTrue_WhenDataStoreArrayEmpty

# Run progress: 52.56% complete, ETA 01:32:05
# Fork: 1 of 2
# Warmup Iteration   1: 697.020 ns/op
# Warmup Iteration   2: 345.181 ns/op
# Warmup Iteration   3: 319.979 ns/op
# Warmup Iteration   4: 319.272 ns/op
# Warmup Iteration   5: 320.075 ns/op
# Warmup Iteration   6: 320.913 ns/op
# Warmup Iteration   7: 318.528 ns/op
# Warmup Iteration   8: 319.793 ns/op
# Warmup Iteration   9: 319.069 ns/op
# Warmup Iteration  10: 320.185 ns/op
Iteration   1: 319.409 ns/op
Iteration   2: 320.107 ns/op
Iteration   3: 319.088 ns/op
Iteration   4: 320.913 ns/op
Iteration   5: 319.987 ns/op
Iteration   6: 319.325 ns/op
Iteration   7: 317.373 ns/op
Iteration   8: 318.908 ns/op
Iteration   9: 318.447 ns/op
Iteration  10: 319.129 ns/op
Iteration  11: 319.620 ns/op
Iteration  12: 320.226 ns/op
Iteration  13: 320.726 ns/op
Iteration  14: 320.665 ns/op
Iteration  15: 320.642 ns/op
Iteration  16: 321.399 ns/op
Iteration  17: 320.713 ns/op
Iteration  18: 318.825 ns/op
Iteration  19: 318.724 ns/op
Iteration  20: 320.023 ns/op

# Run progress: 52.64% complete, ETA 01:32:15
# Fork: 2 of 2
# Warmup Iteration   1: 639.269 ns/op
# Warmup Iteration   2: 341.053 ns/op
# Warmup Iteration   3: 324.013 ns/op
# Warmup Iteration   4: 322.037 ns/op
# Warmup Iteration   5: 323.328 ns/op
# Warmup Iteration   6: 322.557 ns/op
# Warmup Iteration   7: 323.402 ns/op
# Warmup Iteration   8: 322.897 ns/op
# Warmup Iteration   9: 322.584 ns/op
# Warmup Iteration  10: 323.207 ns/op
Iteration   1: 322.085 ns/op
Iteration   2: 323.184 ns/op
Iteration   3: 322.599 ns/op
Iteration   4: 322.289 ns/op
Iteration   5: 322.562 ns/op
Iteration   6: 322.090 ns/op
Iteration   7: 324.304 ns/op
Iteration   8: 324.883 ns/op
Iteration   9: 323.804 ns/op
Iteration  10: 322.939 ns/op
Iteration  11: 323.077 ns/op
Iteration  12: 323.980 ns/op
Iteration  13: 324.351 ns/op
Iteration  14: 324.635 ns/op
Iteration  15: 324.320 ns/op
Iteration  16: 324.675 ns/op
Iteration  17: 325.026 ns/op
Iteration  18: 325.554 ns/op
Iteration  19: 324.332 ns/op
Iteration  20: 324.754 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_arraysIntersect_ShouldReturnTrue_WhenDataStoreArrayEmpty":
  321.742 ±(99.9%) 1.293 ns/op [Average]
  (min, avg, max) = (317.373, 321.742, 325.554), stdev = 2.298
  CI (99.9%): [320.449, 323.035] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_arraysIntersect_ShouldReturnTrue_WhenTwoArraysHaveTheSameElements

# Run progress: 52.71% complete, ETA 01:32:26
# Fork: 1 of 2
# Warmup Iteration   1: 780.602 ns/op
# Warmup Iteration   2: 358.049 ns/op
# Warmup Iteration   3: 343.893 ns/op
# Warmup Iteration   4: 342.845 ns/op
# Warmup Iteration   5: 345.480 ns/op
# Warmup Iteration   6: 344.534 ns/op
# Warmup Iteration   7: 343.496 ns/op
# Warmup Iteration   8: 341.826 ns/op
# Warmup Iteration   9: 343.489 ns/op
# Warmup Iteration  10: 344.004 ns/op
Iteration   1: 342.987 ns/op
Iteration   2: 343.695 ns/op
Iteration   3: 343.769 ns/op
Iteration   4: 342.637 ns/op
Iteration   5: 341.352 ns/op
Iteration   6: 341.733 ns/op
Iteration   7: 344.831 ns/op
Iteration   8: 341.531 ns/op
Iteration   9: 341.566 ns/op
Iteration  10: 342.862 ns/op
Iteration  11: 341.725 ns/op
Iteration  12: 343.365 ns/op
Iteration  13: 343.267 ns/op
Iteration  14: 343.711 ns/op
Iteration  15: 344.848 ns/op
Iteration  16: 342.774 ns/op
Iteration  17: 344.086 ns/op
Iteration  18: 342.565 ns/op
Iteration  19: 343.146 ns/op
Iteration  20: 343.269 ns/op

# Run progress: 52.79% complete, ETA 01:32:36
# Fork: 2 of 2
# Warmup Iteration   1: 772.537 ns/op
# Warmup Iteration   2: 359.066 ns/op
# Warmup Iteration   3: 342.047 ns/op
# Warmup Iteration   4: 341.655 ns/op
# Warmup Iteration   5: 344.433 ns/op
# Warmup Iteration   6: 342.455 ns/op
# Warmup Iteration   7: 342.217 ns/op
# Warmup Iteration   8: 344.481 ns/op
# Warmup Iteration   9: 344.586 ns/op
# Warmup Iteration  10: 344.621 ns/op
Iteration   1: 343.782 ns/op
Iteration   2: 341.817 ns/op
Iteration   3: 343.360 ns/op
Iteration   4: 343.583 ns/op
Iteration   5: 343.321 ns/op
Iteration   6: 341.909 ns/op
Iteration   7: 344.901 ns/op
Iteration   8: 342.797 ns/op
Iteration   9: 343.953 ns/op
Iteration  10: 344.373 ns/op
Iteration  11: 344.411 ns/op
Iteration  12: 343.671 ns/op
Iteration  13: 346.232 ns/op
Iteration  14: 344.764 ns/op
Iteration  15: 344.057 ns/op
Iteration  16: 343.449 ns/op
Iteration  17: 343.332 ns/op
Iteration  18: 344.093 ns/op
Iteration  19: 345.514 ns/op
Iteration  20: 343.706 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_arraysIntersect_ShouldReturnTrue_WhenTwoArraysHaveTheSameElements":
  343.419 ±(99.9%) 0.631 ns/op [Average]
  (min, avg, max) = (341.352, 343.419, 346.232), stdev = 1.121
  CI (99.9%): [342.788, 344.049] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_mapsMatch_ShouldReturnFalse_WhenAssertingMapDoesNotContainDataStoreKey

# Run progress: 52.86% complete, ETA 01:32:47
# Fork: 1 of 2
# Warmup Iteration   1: 2098.968 ns/op
# Warmup Iteration   2: 581.345 ns/op
# Warmup Iteration   3: 514.538 ns/op
# Warmup Iteration   4: 515.490 ns/op
# Warmup Iteration   5: 515.496 ns/op
# Warmup Iteration   6: 514.802 ns/op
# Warmup Iteration   7: 516.398 ns/op
# Warmup Iteration   8: 514.209 ns/op
# Warmup Iteration   9: 516.152 ns/op
# Warmup Iteration  10: 515.852 ns/op
Iteration   1: 512.974 ns/op
Iteration   2: 522.348 ns/op
Iteration   3: 516.488 ns/op
Iteration   4: 514.296 ns/op
Iteration   5: 517.894 ns/op
Iteration   6: 514.655 ns/op
Iteration   7: 517.635 ns/op
Iteration   8: 516.143 ns/op
Iteration   9: 514.758 ns/op
Iteration  10: 518.031 ns/op
Iteration  11: 516.560 ns/op
Iteration  12: 515.036 ns/op
Iteration  13: 516.918 ns/op
Iteration  14: 513.699 ns/op
Iteration  15: 514.898 ns/op
Iteration  16: 513.550 ns/op
Iteration  17: 516.794 ns/op
Iteration  18: 514.418 ns/op
Iteration  19: 513.776 ns/op
Iteration  20: 514.789 ns/op

# Run progress: 52.94% complete, ETA 01:32:57
# Fork: 2 of 2
# Warmup Iteration   1: 2259.651 ns/op
# Warmup Iteration   2: 602.452 ns/op
# Warmup Iteration   3: 513.384 ns/op
# Warmup Iteration   4: 513.273 ns/op
# Warmup Iteration   5: 511.165 ns/op
# Warmup Iteration   6: 511.713 ns/op
# Warmup Iteration   7: 512.772 ns/op
# Warmup Iteration   8: 516.320 ns/op
# Warmup Iteration   9: 514.166 ns/op
# Warmup Iteration  10: 513.552 ns/op
Iteration   1: 514.042 ns/op
Iteration   2: 517.357 ns/op
Iteration   3: 512.202 ns/op
Iteration   4: 514.648 ns/op
Iteration   5: 513.515 ns/op
Iteration   6: 515.914 ns/op
Iteration   7: 511.893 ns/op
Iteration   8: 512.711 ns/op
Iteration   9: 512.675 ns/op
Iteration  10: 515.096 ns/op
Iteration  11: 512.215 ns/op
Iteration  12: 513.235 ns/op
Iteration  13: 513.587 ns/op
Iteration  14: 513.254 ns/op
Iteration  15: 513.691 ns/op
Iteration  16: 512.678 ns/op
Iteration  17: 513.619 ns/op
Iteration  18: 513.464 ns/op
Iteration  19: 515.899 ns/op
Iteration  20: 517.570 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_mapsMatch_ShouldReturnFalse_WhenAssertingMapDoesNotContainDataStoreKey":
  514.873 ±(99.9%) 1.187 ns/op [Average]
  (min, avg, max) = (511.893, 514.873, 522.348), stdev = 2.110
  CI (99.9%): [513.686, 516.060] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_mapsMatch_ShouldReturnFalse_WhenAssertingMapDoesNotContainDataStoreValue

# Run progress: 53.01% complete, ETA 01:33:07
# Fork: 1 of 2
# Warmup Iteration   1: 8140.844 ns/op
# Warmup Iteration   2: 2019.873 ns/op
# Warmup Iteration   3: 1015.774 ns/op
# Warmup Iteration   4: 994.551 ns/op
# Warmup Iteration   5: 992.047 ns/op
# Warmup Iteration   6: 988.850 ns/op
# Warmup Iteration   7: 984.511 ns/op
# Warmup Iteration   8: 994.083 ns/op
# Warmup Iteration   9: 995.572 ns/op
# Warmup Iteration  10: 988.392 ns/op
Iteration   1: 988.863 ns/op
Iteration   2: 990.780 ns/op
Iteration   3: 994.552 ns/op
Iteration   4: 989.263 ns/op
Iteration   5: 991.838 ns/op
Iteration   6: 993.010 ns/op
Iteration   7: 992.108 ns/op
Iteration   8: 986.436 ns/op
Iteration   9: 984.331 ns/op
Iteration  10: 984.003 ns/op
Iteration  11: 989.169 ns/op
Iteration  12: 988.475 ns/op
Iteration  13: 986.699 ns/op
Iteration  14: 990.285 ns/op
Iteration  15: 995.120 ns/op
Iteration  16: 989.898 ns/op
Iteration  17: 984.587 ns/op
Iteration  18: 989.496 ns/op
Iteration  19: 993.586 ns/op
Iteration  20: 992.499 ns/op

# Run progress: 53.09% complete, ETA 01:33:17
# Fork: 2 of 2
# Warmup Iteration   1: 8533.737 ns/op
# Warmup Iteration   2: 2481.355 ns/op
# Warmup Iteration   3: 1020.229 ns/op
# Warmup Iteration   4: 996.410 ns/op
# Warmup Iteration   5: 993.488 ns/op
# Warmup Iteration   6: 995.644 ns/op
# Warmup Iteration   7: 995.542 ns/op
# Warmup Iteration   8: 994.749 ns/op
# Warmup Iteration   9: 990.613 ns/op
# Warmup Iteration  10: 992.447 ns/op
Iteration   1: 993.432 ns/op
Iteration   2: 990.498 ns/op
Iteration   3: 989.281 ns/op
Iteration   4: 989.191 ns/op
Iteration   5: 988.642 ns/op
Iteration   6: 993.551 ns/op
Iteration   7: 994.689 ns/op
Iteration   8: 994.512 ns/op
Iteration   9: 997.870 ns/op
Iteration  10: 996.861 ns/op
Iteration  11: 992.841 ns/op
Iteration  12: 990.321 ns/op
Iteration  13: 992.264 ns/op
Iteration  14: 998.575 ns/op
Iteration  15: 991.074 ns/op
Iteration  16: 998.901 ns/op
Iteration  17: 998.118 ns/op
Iteration  18: 995.135 ns/op
Iteration  19: 993.740 ns/op
Iteration  20: 998.644 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_mapsMatch_ShouldReturnFalse_WhenAssertingMapDoesNotContainDataStoreValue":
  991.828 ±(99.9%) 2.212 ns/op [Average]
  (min, avg, max) = (984.003, 991.828, 998.901), stdev = 3.933
  CI (99.9%): [989.616, 994.041] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_mapsMatch_ShouldReturnFalse_WhenDataStoreMapNotEmptyAndAssertingMapEmpty

# Run progress: 53.16% complete, ETA 01:33:27
# Fork: 1 of 2
# Warmup Iteration   1: 779.886 ns/op
# Warmup Iteration   2: 386.187 ns/op
# Warmup Iteration   3: 362.358 ns/op
# Warmup Iteration   4: 361.454 ns/op
# Warmup Iteration   5: 361.336 ns/op
# Warmup Iteration   6: 361.654 ns/op
# Warmup Iteration   7: 361.020 ns/op
# Warmup Iteration   8: 361.060 ns/op
# Warmup Iteration   9: 361.360 ns/op
# Warmup Iteration  10: 360.839 ns/op
Iteration   1: 362.997 ns/op
Iteration   2: 361.055 ns/op
Iteration   3: 361.155 ns/op
Iteration   4: 362.396 ns/op
Iteration   5: 363.438 ns/op
Iteration   6: 363.917 ns/op
Iteration   7: 363.439 ns/op
Iteration   8: 361.940 ns/op
Iteration   9: 361.553 ns/op
Iteration  10: 364.310 ns/op
Iteration  11: 362.970 ns/op
Iteration  12: 362.487 ns/op
Iteration  13: 363.281 ns/op
Iteration  14: 361.624 ns/op
Iteration  15: 362.865 ns/op
Iteration  16: 363.394 ns/op
Iteration  17: 363.432 ns/op
Iteration  18: 363.049 ns/op
Iteration  19: 361.819 ns/op
Iteration  20: 362.389 ns/op

# Run progress: 53.24% complete, ETA 01:33:36
# Fork: 2 of 2
# Warmup Iteration   1: 794.591 ns/op
# Warmup Iteration   2: 372.896 ns/op
# Warmup Iteration   3: 349.599 ns/op
# Warmup Iteration   4: 351.197 ns/op
# Warmup Iteration   5: 349.401 ns/op
# Warmup Iteration   6: 347.834 ns/op
# Warmup Iteration   7: 347.322 ns/op
# Warmup Iteration   8: 347.780 ns/op
# Warmup Iteration   9: 349.597 ns/op
# Warmup Iteration  10: 350.267 ns/op
Iteration   1: 348.046 ns/op
Iteration   2: 348.192 ns/op
Iteration   3: 348.298 ns/op
Iteration   4: 348.040 ns/op
Iteration   5: 349.046 ns/op
Iteration   6: 347.828 ns/op
Iteration   7: 348.136 ns/op
Iteration   8: 347.938 ns/op
Iteration   9: 350.540 ns/op
Iteration  10: 349.436 ns/op
Iteration  11: 349.479 ns/op
Iteration  12: 350.835 ns/op
Iteration  13: 351.343 ns/op
Iteration  14: 349.422 ns/op
Iteration  15: 351.306 ns/op
Iteration  16: 351.879 ns/op
Iteration  17: 348.590 ns/op
Iteration  18: 349.348 ns/op
Iteration  19: 350.453 ns/op
Iteration  20: 349.020 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_mapsMatch_ShouldReturnFalse_WhenDataStoreMapNotEmptyAndAssertingMapEmpty":
  356.017 ±(99.9%) 3.844 ns/op [Average]
  (min, avg, max) = (347.828, 356.017, 364.310), stdev = 6.833
  CI (99.9%): [352.173, 359.861] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_mapsMatch_ShouldReturnTrue_WhenAssertingMapMatchesDataStoreMap

# Run progress: 53.31% complete, ETA 01:33:46
# Fork: 1 of 2
# Warmup Iteration   1: 9369.060 ns/op
# Warmup Iteration   2: 3871.711 ns/op
# Warmup Iteration   3: 1700.495 ns/op
# Warmup Iteration   4: 1277.194 ns/op
# Warmup Iteration   5: 1284.086 ns/op
# Warmup Iteration   6: 1256.036 ns/op
# Warmup Iteration   7: 1288.384 ns/op
# Warmup Iteration   8: 1217.431 ns/op
# Warmup Iteration   9: 1246.627 ns/op
# Warmup Iteration  10: 1316.261 ns/op
Iteration   1: 1249.459 ns/op
Iteration   2: 1273.749 ns/op
Iteration   3: 1235.302 ns/op
Iteration   4: 1257.727 ns/op
Iteration   5: 1281.245 ns/op
Iteration   6: 1246.384 ns/op
Iteration   7: 1278.928 ns/op
Iteration   8: 1254.178 ns/op
Iteration   9: 1225.316 ns/op
Iteration  10: 1252.210 ns/op
Iteration  11: 1230.806 ns/op
Iteration  12: 1286.181 ns/op
Iteration  13: 1217.343 ns/op
Iteration  14: 1249.922 ns/op
Iteration  15: 1251.403 ns/op
Iteration  16: 1235.647 ns/op
Iteration  17: 1284.354 ns/op
Iteration  18: 1237.302 ns/op
Iteration  19: 1215.852 ns/op
Iteration  20: 1256.813 ns/op

# Run progress: 53.39% complete, ETA 01:33:56
# Fork: 2 of 2
# Warmup Iteration   1: 8757.696 ns/op
# Warmup Iteration   2: 4090.135 ns/op
# Warmup Iteration   3: 1943.494 ns/op
# Warmup Iteration   4: 1178.310 ns/op
# Warmup Iteration   5: 1148.057 ns/op
# Warmup Iteration   6: 1142.169 ns/op
# Warmup Iteration   7: 1145.421 ns/op
# Warmup Iteration   8: 1150.160 ns/op
# Warmup Iteration   9: 1146.607 ns/op
# Warmup Iteration  10: 1149.408 ns/op
Iteration   1: 1143.311 ns/op
Iteration   2: 1143.499 ns/op
Iteration   3: 1145.177 ns/op
Iteration   4: 1147.411 ns/op
Iteration   5: 1145.019 ns/op
Iteration   6: 1160.755 ns/op
Iteration   7: 1145.631 ns/op
Iteration   8: 1140.768 ns/op
Iteration   9: 1140.307 ns/op
Iteration  10: 1138.974 ns/op
Iteration  11: 1131.946 ns/op
Iteration  12: 1141.990 ns/op
Iteration  13: 1147.204 ns/op
Iteration  14: 1139.775 ns/op
Iteration  15: 1142.010 ns/op
Iteration  16: 1152.608 ns/op
Iteration  17: 1146.377 ns/op
Iteration  18: 1140.994 ns/op
Iteration  19: 1139.321 ns/op
Iteration  20: 1141.144 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_mapsMatch_ShouldReturnTrue_WhenAssertingMapMatchesDataStoreMap":
  1197.359 ±(99.9%) 31.793 ns/op [Average]
  (min, avg, max) = (1131.946, 1197.359, 1286.181), stdev = 56.512
  CI (99.9%): [1165.565, 1229.152] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_mapsMatch_ShouldReturnTrue_WhenDataStoreMapEmpty

# Run progress: 53.46% complete, ETA 01:34:05
# Fork: 1 of 2
# Warmup Iteration   1: 964.118 ns/op
# Warmup Iteration   2: 406.051 ns/op
# Warmup Iteration   3: 369.808 ns/op
# Warmup Iteration   4: 370.853 ns/op
# Warmup Iteration   5: 368.885 ns/op
# Warmup Iteration   6: 369.647 ns/op
# Warmup Iteration   7: 367.382 ns/op
# Warmup Iteration   8: 372.425 ns/op
# Warmup Iteration   9: 394.833 ns/op
# Warmup Iteration  10: 373.452 ns/op
Iteration   1: 371.037 ns/op
Iteration   2: 369.478 ns/op
Iteration   3: 395.155 ns/op
Iteration   4: 371.714 ns/op
Iteration   5: 371.056 ns/op
Iteration   6: 369.154 ns/op
Iteration   7: 370.174 ns/op
Iteration   8: 383.946 ns/op
Iteration   9: 380.018 ns/op
Iteration  10: 371.312 ns/op
Iteration  11: 369.735 ns/op
Iteration  12: 374.306 ns/op
Iteration  13: 380.447 ns/op
Iteration  14: 403.626 ns/op
Iteration  15: 372.476 ns/op
Iteration  16: 372.419 ns/op
Iteration  17: 371.243 ns/op
Iteration  18: 371.512 ns/op
Iteration  19: 371.063 ns/op
Iteration  20: 368.663 ns/op

# Run progress: 53.54% complete, ETA 01:34:14
# Fork: 2 of 2
# Warmup Iteration   1: 898.370 ns/op
# Warmup Iteration   2: 398.533 ns/op
# Warmup Iteration   3: 370.363 ns/op
# Warmup Iteration   4: 371.225 ns/op
# Warmup Iteration   5: 371.416 ns/op
# Warmup Iteration   6: 369.916 ns/op
# Warmup Iteration   7: 370.935 ns/op
# Warmup Iteration   8: 370.162 ns/op
# Warmup Iteration   9: 371.789 ns/op
# Warmup Iteration  10: 369.807 ns/op
Iteration   1: 370.594 ns/op
Iteration   2: 370.308 ns/op
Iteration   3: 369.685 ns/op
Iteration   4: 370.277 ns/op
Iteration   5: 372.244 ns/op
Iteration   6: 369.845 ns/op
Iteration   7: 370.197 ns/op
Iteration   8: 369.544 ns/op
Iteration   9: 369.829 ns/op
Iteration  10: 369.811 ns/op
Iteration  11: 371.326 ns/op
Iteration  12: 371.848 ns/op
Iteration  13: 372.751 ns/op
Iteration  14: 371.648 ns/op
Iteration  15: 370.583 ns/op
Iteration  16: 369.811 ns/op
Iteration  17: 369.851 ns/op
Iteration  18: 368.768 ns/op
Iteration  19: 367.889 ns/op
Iteration  20: 368.259 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_mapsMatch_ShouldReturnTrue_WhenDataStoreMapEmpty":
  372.840 ±(99.9%) 3.948 ns/op [Average]
  (min, avg, max) = (367.889, 372.840, 403.626), stdev = 7.018
  CI (99.9%): [368.892, 376.788] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_mapsMatch_ShouldReturnTrue_WhenDataStoreMapEmptyAndAssertingMapEmpty

# Run progress: 53.61% complete, ETA 01:34:23
# Fork: 1 of 2
# Warmup Iteration   1: 671.576 ns/op
# Warmup Iteration   2: 345.634 ns/op
# Warmup Iteration   3: 321.148 ns/op
# Warmup Iteration   4: 321.395 ns/op
# Warmup Iteration   5: 321.995 ns/op
# Warmup Iteration   6: 322.462 ns/op
# Warmup Iteration   7: 322.398 ns/op
# Warmup Iteration   8: 321.355 ns/op
# Warmup Iteration   9: 324.661 ns/op
# Warmup Iteration  10: 323.340 ns/op
Iteration   1: 321.021 ns/op
Iteration   2: 320.726 ns/op
Iteration   3: 320.902 ns/op
Iteration   4: 323.672 ns/op
Iteration   5: 322.588 ns/op
Iteration   6: 322.210 ns/op
Iteration   7: 322.803 ns/op
Iteration   8: 322.094 ns/op
Iteration   9: 323.543 ns/op
Iteration  10: 321.630 ns/op
Iteration  11: 323.174 ns/op
Iteration  12: 320.146 ns/op
Iteration  13: 322.369 ns/op
Iteration  14: 319.447 ns/op
Iteration  15: 320.936 ns/op
Iteration  16: 319.862 ns/op
Iteration  17: 322.303 ns/op
Iteration  18: 321.002 ns/op
Iteration  19: 320.818 ns/op
Iteration  20: 321.454 ns/op

# Run progress: 53.69% complete, ETA 01:34:32
# Fork: 2 of 2
# Warmup Iteration   1: 663.354 ns/op
# Warmup Iteration   2: 342.885 ns/op
# Warmup Iteration   3: 329.541 ns/op
# Warmup Iteration   4: 326.717 ns/op
# Warmup Iteration   5: 327.058 ns/op
# Warmup Iteration   6: 325.960 ns/op
# Warmup Iteration   7: 326.653 ns/op
# Warmup Iteration   8: 327.057 ns/op
# Warmup Iteration   9: 327.220 ns/op
# Warmup Iteration  10: 327.058 ns/op
Iteration   1: 326.136 ns/op
Iteration   2: 326.480 ns/op
Iteration   3: 325.321 ns/op
Iteration   4: 325.667 ns/op
Iteration   5: 329.086 ns/op
Iteration   6: 326.081 ns/op
Iteration   7: 325.985 ns/op
Iteration   8: 327.001 ns/op
Iteration   9: 325.595 ns/op
Iteration  10: 325.989 ns/op
Iteration  11: 325.043 ns/op
Iteration  12: 325.333 ns/op
Iteration  13: 327.108 ns/op
Iteration  14: 325.929 ns/op
Iteration  15: 325.729 ns/op
Iteration  16: 326.150 ns/op
Iteration  17: 326.595 ns/op
Iteration  18: 326.788 ns/op
Iteration  19: 326.049 ns/op
Iteration  20: 326.428 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_mapsMatch_ShouldReturnTrue_WhenDataStoreMapEmptyAndAssertingMapEmpty":
  323.930 ±(99.9%) 1.431 ns/op [Average]
  (min, avg, max) = (319.447, 323.930, 329.086), stdev = 2.544
  CI (99.9%): [322.499, 325.361] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesDoNotMatch_ShouldReturnFalse_WhenDifferentXmlWithAttributes

# Run progress: 53.77% complete, ETA 01:34:41
# Fork: 1 of 2
# Warmup Iteration   1: 52991414.158 ns/op
# Warmup Iteration   2: 23953696.524 ns/op
# Warmup Iteration   3: 15439877.923 ns/op
# Warmup Iteration   4: 11072372.659 ns/op
# Warmup Iteration   5: 10796230.000 ns/op
# Warmup Iteration   6: 10592085.274 ns/op
# Warmup Iteration   7: 9569575.610 ns/op
# Warmup Iteration   8: 8830446.930 ns/op
# Warmup Iteration   9: 8860511.389 ns/op
# Warmup Iteration  10: 8115540.573 ns/op
Iteration   1: 7510892.672 ns/op
Iteration   2: 7953957.540 ns/op
Iteration   3: 7693921.746 ns/op
Iteration   4: 7039687.203 ns/op
Iteration   5: 7382221.118 ns/op
Iteration   6: 7227805.460 ns/op
Iteration   7: 6262937.356 ns/op
Iteration   8: 6105617.433 ns/op
Iteration   9: 6377213.917 ns/op
Iteration  10: 5656016.316 ns/op
Iteration  11: 5580672.639 ns/op
Iteration  12: 5196375.114 ns/op
Iteration  13: 5304878.508 ns/op
Iteration  14: 5174964.974 ns/op
Iteration  15: 4053625.202 ns/op
Iteration  16: 4617607.700 ns/op
Iteration  17: 4713898.878 ns/op
Iteration  18: 6106115.713 ns/op
Iteration  19: 4947314.143 ns/op
Iteration  20: 4731782.623 ns/op

# Run progress: 53.84% complete, ETA 01:34:50
# Fork: 2 of 2
# Warmup Iteration   1: 56617378.833 ns/op
# Warmup Iteration   2: 22371684.333 ns/op
# Warmup Iteration   3: 14008865.685 ns/op
# Warmup Iteration   4: 13725142.301 ns/op
# Warmup Iteration   5: 11066714.934 ns/op
# Warmup Iteration   6: 10131717.040 ns/op
# Warmup Iteration   7: 9841916.559 ns/op
# Warmup Iteration   8: 10492448.490 ns/op
# Warmup Iteration   9: 8223494.672 ns/op
# Warmup Iteration  10: 7734237.285 ns/op
Iteration   1: 7343450.197 ns/op
Iteration   2: 8665234.940 ns/op
Iteration   3: 7819547.023 ns/op
Iteration   4: 6953895.111 ns/op
Iteration   5: 7389916.632 ns/op
Iteration   6: 8230392.770 ns/op
Iteration   7: 6556328.124 ns/op
Iteration   8: 6239296.261 ns/op
Iteration   9: 5826618.343 ns/op
Iteration  10: 6316534.950 ns/op
Iteration  11: 5851064.860 ns/op
Iteration  12: 5701490.568 ns/op
Iteration  13: 5967069.512 ns/op
Iteration  14: 5640551.202 ns/op
Iteration  15: 6582275.612 ns/op
Iteration  16: 4465012.982 ns/op
Iteration  17: 5036116.111 ns/op
Iteration  18: 4607762.977 ns/op
Iteration  19: 6009700.545 ns/op
Iteration  20: 5081959.112 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesDoNotMatch_ShouldReturnFalse_WhenDifferentXmlWithAttributes":
  6148043.102 ±(99.9%) 650742.574 ns/op [Average]
  (min, avg, max) = (4053625.202, 6148043.102, 8665234.940), stdev = 1156694.354
  CI (99.9%): [5497300.528, 6798785.676] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatchUsingComplexVanillaRegex_ShouldReturnTrue

# Run progress: 53.92% complete, ETA 01:34:59
# Fork: 1 of 2
# Warmup Iteration   1: 9444896.613 ns/op
# Warmup Iteration   2: 2489979.995 ns/op
# Warmup Iteration   3: 1728157.288 ns/op
# Warmup Iteration   4: 1465475.966 ns/op
# Warmup Iteration   5: 1242156.251 ns/op
# Warmup Iteration   6: 1122155.178 ns/op
# Warmup Iteration   7: 1262218.383 ns/op
# Warmup Iteration   8: 1052916.324 ns/op
# Warmup Iteration   9: 1006635.671 ns/op
# Warmup Iteration  10: 838171.396 ns/op
Iteration   1: 749882.576 ns/op
Iteration   2: 796787.746 ns/op
Iteration   3: 765917.172 ns/op
Iteration   4: 834582.055 ns/op
Iteration   5: 788535.074 ns/op
Iteration   6: 794552.236 ns/op
Iteration   7: 741075.914 ns/op
Iteration   8: 808881.076 ns/op
Iteration   9: 720701.287 ns/op
Iteration  10: 639373.034 ns/op
Iteration  11: 617302.831 ns/op
Iteration  12: 629575.535 ns/op
Iteration  13: 641911.285 ns/op
Iteration  14: 606946.573 ns/op
Iteration  15: 608443.804 ns/op
Iteration  16: 645908.797 ns/op
Iteration  17: 629296.991 ns/op
Iteration  18: 691717.480 ns/op
Iteration  19: 653265.316 ns/op
Iteration  20: 666977.020 ns/op

# Run progress: 53.99% complete, ETA 01:35:08
# Fork: 2 of 2
# Warmup Iteration   1: 7776488.659 ns/op
# Warmup Iteration   2: 2455087.341 ns/op
# Warmup Iteration   3: 1654152.365 ns/op
# Warmup Iteration   4: 1324869.127 ns/op
# Warmup Iteration   5: 1245662.923 ns/op
# Warmup Iteration   6: 1001972.638 ns/op
# Warmup Iteration   7: 924778.505 ns/op
# Warmup Iteration   8: 839571.861 ns/op
# Warmup Iteration   9: 856238.478 ns/op
# Warmup Iteration  10: 867185.591 ns/op
Iteration   1: 703432.725 ns/op
Iteration   2: 899995.449 ns/op
Iteration   3: 775024.584 ns/op
Iteration   4: 767707.910 ns/op
Iteration   5: 773309.687 ns/op
Iteration   6: 721445.597 ns/op
Iteration   7: 708184.430 ns/op
Iteration   8: 662974.968 ns/op
Iteration   9: 664511.608 ns/op
Iteration  10: 658142.654 ns/op
Iteration  11: 668680.891 ns/op
Iteration  12: 668943.142 ns/op
Iteration  13: 670736.306 ns/op
Iteration  14: 651489.192 ns/op
Iteration  15: 679188.749 ns/op
Iteration  16: 662572.204 ns/op
Iteration  17: 784114.293 ns/op
Iteration  18: 653667.587 ns/op
Iteration  19: 671852.138 ns/op
Iteration  20: 655649.955 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatchUsingComplexVanillaRegex_ShouldReturnTrue":
  703331.447 ±(99.9%) 39396.996 ns/op [Average]
  (min, avg, max) = (606946.573, 703331.447, 899995.449), stdev = 70028.126
  CI (99.9%): [663934.450, 742728.443] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatchUsingVanillaRegex_ShouldReturnTrue

# Run progress: 54.07% complete, ETA 01:35:16
# Fork: 1 of 2
# Warmup Iteration   1: 7790327.636 ns/op
# Warmup Iteration   2: 2239853.112 ns/op
# Warmup Iteration   3: 1673807.619 ns/op
# Warmup Iteration   4: 1363852.823 ns/op
# Warmup Iteration   5: 1309179.160 ns/op
# Warmup Iteration   6: 1092585.937 ns/op
# Warmup Iteration   7: 963321.640 ns/op
# Warmup Iteration   8: 789553.593 ns/op
# Warmup Iteration   9: 753810.938 ns/op
# Warmup Iteration  10: 792047.891 ns/op
Iteration   1: 725272.534 ns/op
Iteration   2: 729391.151 ns/op
Iteration   3: 691463.142 ns/op
Iteration   4: 763851.337 ns/op
Iteration   5: 667464.198 ns/op
Iteration   6: 634777.306 ns/op
Iteration   7: 652729.333 ns/op
Iteration   8: 587689.277 ns/op
Iteration   9: 607255.521 ns/op
Iteration  10: 574413.527 ns/op
Iteration  11: 571497.128 ns/op
Iteration  12: 581715.046 ns/op
Iteration  13: 608777.716 ns/op
Iteration  14: 618523.530 ns/op
Iteration  15: 618074.680 ns/op
Iteration  16: 651402.514 ns/op
Iteration  17: 610869.139 ns/op
Iteration  18: 592062.973 ns/op
Iteration  19: 609728.176 ns/op
Iteration  20: 585980.206 ns/op

# Run progress: 54.14% complete, ETA 01:35:25
# Fork: 2 of 2
# Warmup Iteration   1: 6860758.884 ns/op
# Warmup Iteration   2: 2164992.478 ns/op
# Warmup Iteration   3: 1575475.200 ns/op
# Warmup Iteration   4: 1335273.944 ns/op
# Warmup Iteration   5: 1339106.665 ns/op
# Warmup Iteration   6: 1064035.718 ns/op
# Warmup Iteration   7: 816867.116 ns/op
# Warmup Iteration   8: 833168.959 ns/op
# Warmup Iteration   9: 1036527.849 ns/op
# Warmup Iteration  10: 934213.994 ns/op
Iteration   1: 749976.478 ns/op
Iteration   2: 769868.949 ns/op
Iteration   3: 717860.130 ns/op
Iteration   4: 756746.703 ns/op
Iteration   5: 700068.048 ns/op
Iteration   6: 726614.731 ns/op
Iteration   7: 800931.302 ns/op
Iteration   8: 730488.493 ns/op
Iteration   9: 646438.931 ns/op
Iteration  10: 643535.675 ns/op
Iteration  11: 645162.014 ns/op
Iteration  12: 651170.072 ns/op
Iteration  13: 648632.144 ns/op
Iteration  14: 643890.596 ns/op
Iteration  15: 642668.308 ns/op
Iteration  16: 662991.976 ns/op
Iteration  17: 676715.471 ns/op
Iteration  18: 649296.951 ns/op
Iteration  19: 653870.231 ns/op
Iteration  20: 641327.828 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatchUsingVanillaRegex_ShouldReturnTrue":
  661029.837 ±(99.9%) 33470.460 ns/op [Average]
  (min, avg, max) = (571497.128, 661029.837, 800931.302), stdev = 59493.714
  CI (99.9%): [627559.376, 694500.297] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatchUsingXMLUnitRegexPlaceholder_ShouldReturnTrue

# Run progress: 54.22% complete, ETA 01:35:33
# Fork: 1 of 2
# Warmup Iteration   1: 59908612.529 ns/op
# Warmup Iteration   2: 29269418.371 ns/op
# Warmup Iteration   3: 15920851.921 ns/op
# Warmup Iteration   4: 12557946.432 ns/op
# Warmup Iteration   5: 12663185.709 ns/op
# Warmup Iteration   6: 11365304.455 ns/op
# Warmup Iteration   7: 10220675.806 ns/op
# Warmup Iteration   8: 10582928.779 ns/op
# Warmup Iteration   9: 9198379.239 ns/op
# Warmup Iteration  10: 9805560.137 ns/op
Iteration   1: 8505036.856 ns/op
Iteration   2: 7992891.016 ns/op
Iteration   3: 9660071.404 ns/op
Iteration   4: 8818785.763 ns/op
Iteration   5: 8930846.696 ns/op
Iteration   6: 8272914.537 ns/op
Iteration   7: 7640602.084 ns/op
Iteration   8: 7342688.109 ns/op
Iteration   9: 6916786.441 ns/op
Iteration  10: 7517567.849 ns/op
Iteration  11: 6938244.297 ns/op
Iteration  12: 8176317.244 ns/op
Iteration  13: 6883254.555 ns/op
Iteration  14: 6971945.389 ns/op
Iteration  15: 6864482.479 ns/op
Iteration  16: 6642235.510 ns/op
Iteration  17: 6892022.445 ns/op
Iteration  18: 6476138.181 ns/op
Iteration  19: 5887253.865 ns/op
Iteration  20: 5628872.438 ns/op

# Run progress: 54.29% complete, ETA 01:35:41
# Fork: 2 of 2
# Warmup Iteration   1: 73186730.000 ns/op
# Warmup Iteration   2: 21779879.894 ns/op
# Warmup Iteration   3: 14808423.691 ns/op
# Warmup Iteration   4: 14844638.235 ns/op
# Warmup Iteration   5: 10943336.323 ns/op
# Warmup Iteration   6: 10618274.274 ns/op
# Warmup Iteration   7: 9787213.981 ns/op
# Warmup Iteration   8: 9431844.757 ns/op
# Warmup Iteration   9: 9289696.861 ns/op
# Warmup Iteration  10: 8656463.293 ns/op
Iteration   1: 8283345.273 ns/op
Iteration   2: 7940675.357 ns/op
Iteration   3: 8915476.611 ns/op
Iteration   4: 8770656.287 ns/op
Iteration   5: 8820071.684 ns/op
Iteration   6: 7564571.947 ns/op
Iteration   7: 6813963.449 ns/op
Iteration   8: 6791372.093 ns/op
Iteration   9: 6717026.752 ns/op
Iteration  10: 7830807.781 ns/op
Iteration  11: 6559079.804 ns/op
Iteration  12: 6960509.049 ns/op
Iteration  13: 6395782.516 ns/op
Iteration  14: 6199875.222 ns/op
Iteration  15: 6481210.697 ns/op
Iteration  16: 6581548.224 ns/op
Iteration  17: 5625814.584 ns/op
Iteration  18: 6498576.484 ns/op
Iteration  19: 6660531.993 ns/op
Iteration  20: 5196504.865 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatchUsingXMLUnitRegexPlaceholder_ShouldReturnTrue":
  7264158.946 ±(99.9%) 590161.112 ns/op [Average]
  (min, avg, max) = (5196504.865, 7264158.946, 9660071.404), stdev = 1049010.859
  CI (99.9%): [6673997.834, 7854320.058] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnFalse_WhenAssertingBodyWhitespace

# Run progress: 54.37% complete, ETA 01:35:50
# Fork: 1 of 2
# Warmup Iteration   1: 4676.528 ns/op
# Warmup Iteration   2: 976.408 ns/op
# Warmup Iteration   3: 722.948 ns/op
# Warmup Iteration   4: 723.032 ns/op
# Warmup Iteration   5: 723.015 ns/op
# Warmup Iteration   6: 714.770 ns/op
# Warmup Iteration   7: 717.244 ns/op
# Warmup Iteration   8: 722.660 ns/op
# Warmup Iteration   9: 720.523 ns/op
# Warmup Iteration  10: 721.206 ns/op
Iteration   1: 716.254 ns/op
Iteration   2: 716.372 ns/op
Iteration   3: 716.794 ns/op
Iteration   4: 719.021 ns/op
Iteration   5: 720.233 ns/op
Iteration   6: 718.074 ns/op
Iteration   7: 719.680 ns/op
Iteration   8: 715.526 ns/op
Iteration   9: 717.303 ns/op
Iteration  10: 717.418 ns/op
Iteration  11: 719.324 ns/op
Iteration  12: 718.588 ns/op
Iteration  13: 718.869 ns/op
Iteration  14: 718.283 ns/op
Iteration  15: 722.109 ns/op
Iteration  16: 715.327 ns/op
Iteration  17: 716.157 ns/op
Iteration  18: 718.374 ns/op
Iteration  19: 714.068 ns/op
Iteration  20: 715.008 ns/op

# Run progress: 54.44% complete, ETA 01:35:58
# Fork: 2 of 2
# Warmup Iteration   1: 5083.527 ns/op
# Warmup Iteration   2: 1005.767 ns/op
# Warmup Iteration   3: 736.786 ns/op
# Warmup Iteration   4: 732.432 ns/op
# Warmup Iteration   5: 727.951 ns/op
# Warmup Iteration   6: 730.933 ns/op
# Warmup Iteration   7: 730.819 ns/op
# Warmup Iteration   8: 730.166 ns/op
# Warmup Iteration   9: 732.678 ns/op
# Warmup Iteration  10: 729.850 ns/op
Iteration   1: 730.870 ns/op
Iteration   2: 731.803 ns/op
Iteration   3: 733.642 ns/op
Iteration   4: 732.295 ns/op
Iteration   5: 732.344 ns/op
Iteration   6: 739.661 ns/op
Iteration   7: 731.101 ns/op
Iteration   8: 728.318 ns/op
Iteration   9: 731.319 ns/op
Iteration  10: 732.633 ns/op
Iteration  11: 732.483 ns/op
Iteration  12: 733.270 ns/op
Iteration  13: 731.858 ns/op
Iteration  14: 727.961 ns/op
Iteration  15: 732.590 ns/op
Iteration  16: 733.697 ns/op
Iteration  17: 729.485 ns/op
Iteration  18: 730.817 ns/op
Iteration  19: 731.158 ns/op
Iteration  20: 732.405 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnFalse_WhenAssertingBodyWhitespace":
  724.812 ±(99.9%) 4.265 ns/op [Average]
  (min, avg, max) = (714.068, 724.812, 739.661), stdev = 7.581
  CI (99.9%): [720.547, 729.077] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnFalse_WhenAssertingPostBodyNull

# Run progress: 54.52% complete, ETA 01:36:06
# Fork: 1 of 2
# Warmup Iteration   1: 4804.247 ns/op
# Warmup Iteration   2: 1019.011 ns/op
# Warmup Iteration   3: 726.576 ns/op
# Warmup Iteration   4: 722.419 ns/op
# Warmup Iteration   5: 721.550 ns/op
# Warmup Iteration   6: 724.328 ns/op
# Warmup Iteration   7: 721.449 ns/op
# Warmup Iteration   8: 723.821 ns/op
# Warmup Iteration   9: 722.815 ns/op
# Warmup Iteration  10: 724.298 ns/op
Iteration   1: 722.689 ns/op
Iteration   2: 722.616 ns/op
Iteration   3: 723.586 ns/op
Iteration   4: 723.661 ns/op
Iteration   5: 721.354 ns/op
Iteration   6: 731.181 ns/op
Iteration   7: 722.203 ns/op
Iteration   8: 721.759 ns/op
Iteration   9: 722.376 ns/op
Iteration  10: 719.750 ns/op
Iteration  11: 722.907 ns/op
Iteration  12: 726.700 ns/op
Iteration  13: 724.515 ns/op
Iteration  14: 722.562 ns/op
Iteration  15: 721.009 ns/op
Iteration  16: 721.630 ns/op
Iteration  17: 718.341 ns/op
Iteration  18: 721.750 ns/op
Iteration  19: 719.599 ns/op
Iteration  20: 726.248 ns/op

# Run progress: 54.59% complete, ETA 01:36:13
# Fork: 2 of 2
# Warmup Iteration   1: 5422.569 ns/op
# Warmup Iteration   2: 1019.710 ns/op
# Warmup Iteration   3: 715.380 ns/op
# Warmup Iteration   4: 709.237 ns/op
# Warmup Iteration   5: 710.776 ns/op
# Warmup Iteration   6: 707.840 ns/op
# Warmup Iteration   7: 717.146 ns/op
# Warmup Iteration   8: 711.759 ns/op
# Warmup Iteration   9: 713.557 ns/op
# Warmup Iteration  10: 711.040 ns/op
Iteration   1: 714.712 ns/op
Iteration   2: 716.456 ns/op
Iteration   3: 711.964 ns/op
Iteration   4: 711.575 ns/op
Iteration   5: 716.260 ns/op
Iteration   6: 720.466 ns/op
Iteration   7: 711.963 ns/op
Iteration   8: 715.485 ns/op
Iteration   9: 715.400 ns/op
Iteration  10: 715.215 ns/op
Iteration  11: 715.954 ns/op
Iteration  12: 716.261 ns/op
Iteration  13: 715.796 ns/op
Iteration  14: 716.395 ns/op
Iteration  15: 712.801 ns/op
Iteration  16: 710.524 ns/op
Iteration  17: 711.014 ns/op
Iteration  18: 711.953 ns/op
Iteration  19: 711.108 ns/op
Iteration  20: 716.412 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnFalse_WhenAssertingPostBodyNull":
  718.604 ±(99.9%) 2.836 ns/op [Average]
  (min, avg, max) = (710.524, 718.604, 731.181), stdev = 5.041
  CI (99.9%): [715.767, 721.440] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnFalse_WhenDifferentJson

# Run progress: 54.67% complete, ETA 01:36:21
# Fork: 1 of 2
# Warmup Iteration   1: 46315.786 ns/op
# Warmup Iteration   2: 19316.534 ns/op
# Warmup Iteration   3: 11058.268 ns/op
# Warmup Iteration   4: 6247.903 ns/op
# Warmup Iteration   5: 3026.255 ns/op
# Warmup Iteration   6: 2909.696 ns/op
# Warmup Iteration   7: 2973.523 ns/op
# Warmup Iteration   8: 2920.471 ns/op
# Warmup Iteration   9: 2916.451 ns/op
# Warmup Iteration  10: 2932.507 ns/op
Iteration   1: 2924.001 ns/op
Iteration   2: 2912.916 ns/op
Iteration   3: 2915.615 ns/op
Iteration   4: 2910.942 ns/op
Iteration   5: 2922.040 ns/op
Iteration   6: 2923.873 ns/op
Iteration   7: 2915.397 ns/op
Iteration   8: 2906.530 ns/op
Iteration   9: 2918.052 ns/op
Iteration  10: 2916.444 ns/op
Iteration  11: 2931.413 ns/op
Iteration  12: 2925.579 ns/op
Iteration  13: 2923.947 ns/op
Iteration  14: 2908.164 ns/op
Iteration  15: 2912.334 ns/op
Iteration  16: 2920.184 ns/op
Iteration  17: 2917.477 ns/op
Iteration  18: 2908.580 ns/op
Iteration  19: 2909.309 ns/op
Iteration  20: 2920.160 ns/op

# Run progress: 54.74% complete, ETA 01:36:29
# Fork: 2 of 2
# Warmup Iteration   1: 47668.850 ns/op
# Warmup Iteration   2: 16061.787 ns/op
# Warmup Iteration   3: 10976.022 ns/op
# Warmup Iteration   4: 4509.415 ns/op
# Warmup Iteration   5: 2991.135 ns/op
# Warmup Iteration   6: 2929.170 ns/op
# Warmup Iteration   7: 2907.784 ns/op
# Warmup Iteration   8: 2908.448 ns/op
# Warmup Iteration   9: 2915.999 ns/op
# Warmup Iteration  10: 2911.884 ns/op
Iteration   1: 2902.311 ns/op
Iteration   2: 2907.474 ns/op
Iteration   3: 2903.032 ns/op
Iteration   4: 2932.552 ns/op
Iteration   5: 2914.216 ns/op
Iteration   6: 2999.759 ns/op
Iteration   7: 2903.457 ns/op
Iteration   8: 2898.711 ns/op
Iteration   9: 2896.991 ns/op
Iteration  10: 2903.384 ns/op
Iteration  11: 2901.286 ns/op
Iteration  12: 2921.079 ns/op
Iteration  13: 2915.102 ns/op
Iteration  14: 2902.442 ns/op
Iteration  15: 2918.884 ns/op
Iteration  16: 2914.564 ns/op
Iteration  17: 2898.711 ns/op
Iteration  18: 2909.694 ns/op
Iteration  19: 2909.876 ns/op
Iteration  20: 2911.383 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnFalse_WhenDifferentJson":
  2915.197 ±(99.9%) 9.188 ns/op [Average]
  (min, avg, max) = (2896.991, 2915.197, 2999.759), stdev = 16.332
  CI (99.9%): [2906.008, 2924.385] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnFalse_WhenDifferentXml

# Run progress: 54.82% complete, ETA 01:36:36
# Fork: 1 of 2
# Warmup Iteration   1: 53067670.789 ns/op
# Warmup Iteration   2: 17917034.825 ns/op
# Warmup Iteration   3: 13948432.875 ns/op
# Warmup Iteration   4: 11514795.747 ns/op
# Warmup Iteration   5: 8789712.798 ns/op
# Warmup Iteration   6: 8251074.279 ns/op
# Warmup Iteration   7: 9109740.245 ns/op
# Warmup Iteration   8: 7537995.015 ns/op
# Warmup Iteration   9: 7071731.134 ns/op
# Warmup Iteration  10: 6774477.953 ns/op
Iteration   1: 6977855.521 ns/op
Iteration   2: 6814546.653 ns/op
Iteration   3: 6089359.012 ns/op
Iteration   4: 6113745.585 ns/op
Iteration   5: 5373505.176 ns/op
Iteration   6: 6080572.624 ns/op
Iteration   7: 5076890.680 ns/op
Iteration   8: 6264513.138 ns/op
Iteration   9: 4767790.452 ns/op
Iteration  10: 4986001.010 ns/op
Iteration  11: 5398402.957 ns/op
Iteration  12: 5565900.983 ns/op
Iteration  13: 4590210.995 ns/op
Iteration  14: 4618030.120 ns/op
Iteration  15: 4877900.626 ns/op
Iteration  16: 6191200.019 ns/op
Iteration  17: 4388910.921 ns/op
Iteration  18: 4781590.048 ns/op
Iteration  19: 4107865.746 ns/op
Iteration  20: 3990182.112 ns/op

# Run progress: 54.89% complete, ETA 01:36:43
# Fork: 2 of 2
# Warmup Iteration   1: 54411379.895 ns/op
# Warmup Iteration   2: 16382911.661 ns/op
# Warmup Iteration   3: 11116816.143 ns/op
# Warmup Iteration   4: 10597355.505 ns/op
# Warmup Iteration   5: 9391993.748 ns/op
# Warmup Iteration   6: 9486824.660 ns/op
# Warmup Iteration   7: 10319381.227 ns/op
# Warmup Iteration   8: 7905236.654 ns/op
# Warmup Iteration   9: 7384713.978 ns/op
# Warmup Iteration  10: 6757101.953 ns/op
Iteration   1: 7262803.826 ns/op
Iteration   2: 6521615.513 ns/op
Iteration   3: 5530297.685 ns/op
Iteration   4: 6465949.632 ns/op
Iteration   5: 5162230.366 ns/op
Iteration   6: 5534122.724 ns/op
Iteration   7: 5414837.697 ns/op
Iteration   8: 5985361.363 ns/op
Iteration   9: 4747489.630 ns/op
Iteration  10: 4567855.278 ns/op
Iteration  11: 4981922.498 ns/op
Iteration  12: 4990885.876 ns/op
Iteration  13: 5173985.253 ns/op
Iteration  14: 4636135.986 ns/op
Iteration  15: 4185401.987 ns/op
Iteration  16: 4933998.138 ns/op
Iteration  17: 4238993.051 ns/op
Iteration  18: 4550254.077 ns/op
Iteration  19: 4116602.140 ns/op
Iteration  20: 3975438.968 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnFalse_WhenDifferentXml":
  5250778.902 ±(99.9%) 489783.271 ns/op [Average]
  (min, avg, max) = (3975438.968, 5250778.902, 7262803.826), stdev = 870589.335
  CI (99.9%): [4760995.630, 5740562.173] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnFalse_WhenNonEquivalentStringWithInvalidContentType

# Run progress: 54.97% complete, ETA 01:36:51
# Fork: 1 of 2
# Warmup Iteration   1: 14242.618 ns/op
# Warmup Iteration   2: 2796.215 ns/op
# Warmup Iteration   3: 1296.820 ns/op
# Warmup Iteration   4: 1252.733 ns/op
# Warmup Iteration   5: 1258.339 ns/op
# Warmup Iteration   6: 1264.414 ns/op
# Warmup Iteration   7: 1261.312 ns/op
# Warmup Iteration   8: 1259.205 ns/op
# Warmup Iteration   9: 1260.169 ns/op
# Warmup Iteration  10: 1264.907 ns/op
Iteration   1: 1254.962 ns/op
Iteration   2: 1266.795 ns/op
Iteration   3: 1263.576 ns/op
Iteration   4: 1256.776 ns/op
Iteration   5: 1259.987 ns/op
Iteration   6: 1264.811 ns/op
Iteration   7: 1251.808 ns/op
Iteration   8: 1265.297 ns/op
Iteration   9: 1264.349 ns/op
Iteration  10: 1258.706 ns/op
Iteration  11: 1259.854 ns/op
Iteration  12: 1258.065 ns/op
Iteration  13: 1257.264 ns/op
Iteration  14: 1259.512 ns/op
Iteration  15: 1256.608 ns/op
Iteration  16: 1253.769 ns/op
Iteration  17: 1257.775 ns/op
Iteration  18: 1257.948 ns/op
Iteration  19: 1257.646 ns/op
Iteration  20: 1260.930 ns/op

# Run progress: 55.05% complete, ETA 01:36:58
# Fork: 2 of 2
# Warmup Iteration   1: 14216.995 ns/op
# Warmup Iteration   2: 3012.441 ns/op
# Warmup Iteration   3: 1281.828 ns/op
# Warmup Iteration   4: 1244.434 ns/op
# Warmup Iteration   5: 1243.095 ns/op
# Warmup Iteration   6: 1243.911 ns/op
# Warmup Iteration   7: 1246.553 ns/op
# Warmup Iteration   8: 1241.191 ns/op
# Warmup Iteration   9: 1242.355 ns/op
# Warmup Iteration  10: 1242.253 ns/op
Iteration   1: 1241.748 ns/op
Iteration   2: 1243.177 ns/op
Iteration   3: 1243.048 ns/op
Iteration   4: 1236.496 ns/op
Iteration   5: 1241.260 ns/op
Iteration   6: 1262.684 ns/op
Iteration   7: 1247.608 ns/op
Iteration   8: 1251.202 ns/op
Iteration   9: 1243.707 ns/op
Iteration  10: 1245.735 ns/op
Iteration  11: 1242.984 ns/op
Iteration  12: 1237.526 ns/op
Iteration  13: 1250.783 ns/op
Iteration  14: 1243.014 ns/op
Iteration  15: 1248.000 ns/op
Iteration  16: 1236.839 ns/op
Iteration  17: 1244.240 ns/op
Iteration  18: 1242.292 ns/op
Iteration  19: 1244.108 ns/op
Iteration  20: 1248.759 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnFalse_WhenNonEquivalentStringWithInvalidContentType":
  1252.041 ±(99.9%) 5.000 ns/op [Average]
  (min, avg, max) = (1236.496, 1252.041, 1266.795), stdev = 8.888
  CI (99.9%): [1247.041, 1257.042] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnFalse_WhenStringNotMatch

# Run progress: 55.12% complete, ETA 01:37:05
# Fork: 1 of 2
# Warmup Iteration   1: 11383.177 ns/op
# Warmup Iteration   2: 1931.123 ns/op
# Warmup Iteration   3: 1024.277 ns/op
# Warmup Iteration   4: 1023.852 ns/op
# Warmup Iteration   5: 1019.463 ns/op
# Warmup Iteration   6: 1020.045 ns/op
# Warmup Iteration   7: 1024.535 ns/op
# Warmup Iteration   8: 1028.262 ns/op
# Warmup Iteration   9: 1027.937 ns/op
# Warmup Iteration  10: 1020.933 ns/op
Iteration   1: 1022.991 ns/op
Iteration   2: 1020.138 ns/op
Iteration   3: 1024.053 ns/op
Iteration   4: 1021.038 ns/op
Iteration   5: 1026.049 ns/op
Iteration   6: 1020.533 ns/op
Iteration   7: 1021.127 ns/op
Iteration   8: 1024.517 ns/op
Iteration   9: 1020.540 ns/op
Iteration  10: 1020.756 ns/op
Iteration  11: 1025.419 ns/op
Iteration  12: 1015.307 ns/op
Iteration  13: 1018.344 ns/op
Iteration  14: 1023.477 ns/op
Iteration  15: 1022.266 ns/op
Iteration  16: 1017.531 ns/op
Iteration  17: 1018.002 ns/op
Iteration  18: 1015.030 ns/op
Iteration  19: 1026.828 ns/op
Iteration  20: 1018.037 ns/op

# Run progress: 55.20% complete, ETA 01:37:12
# Fork: 2 of 2
# Warmup Iteration   1: 11030.249 ns/op
# Warmup Iteration   2: 1716.850 ns/op
# Warmup Iteration   3: 984.646 ns/op
# Warmup Iteration   4: 987.691 ns/op
# Warmup Iteration   5: 980.223 ns/op
# Warmup Iteration   6: 982.357 ns/op
# Warmup Iteration   7: 981.390 ns/op
# Warmup Iteration   8: 980.112 ns/op
# Warmup Iteration   9: 984.695 ns/op
# Warmup Iteration  10: 983.404 ns/op
Iteration   1: 985.744 ns/op
Iteration   2: 983.236 ns/op
Iteration   3: 983.004 ns/op
Iteration   4: 979.089 ns/op
Iteration   5: 980.235 ns/op
Iteration   6: 988.981 ns/op
Iteration   7: 979.634 ns/op
Iteration   8: 984.635 ns/op
Iteration   9: 979.118 ns/op
Iteration  10: 978.014 ns/op
Iteration  11: 979.867 ns/op
Iteration  12: 983.736 ns/op
Iteration  13: 984.592 ns/op
Iteration  14: 985.507 ns/op
Iteration  15: 976.951 ns/op
Iteration  16: 977.625 ns/op
Iteration  17: 985.095 ns/op
Iteration  18: 981.643 ns/op
Iteration  19: 984.251 ns/op
Iteration  20: 983.849 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnFalse_WhenStringNotMatch":
  1001.670 ±(99.9%) 11.223 ns/op [Average]
  (min, avg, max) = (976.951, 1001.670, 1026.828), stdev = 19.949
  CI (99.9%): [990.447, 1012.893] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentJson

# Run progress: 55.27% complete, ETA 01:37:19
# Fork: 1 of 2
# Warmup Iteration   1: 15407.131 ns/op
# Warmup Iteration   2: 5440.792 ns/op
# Warmup Iteration   3: 2090.001 ns/op
# Warmup Iteration   4: 1666.238 ns/op
# Warmup Iteration   5: 1662.600 ns/op
# Warmup Iteration   6: 1671.129 ns/op
# Warmup Iteration   7: 1667.741 ns/op
# Warmup Iteration   8: 1669.089 ns/op
# Warmup Iteration   9: 1664.926 ns/op
# Warmup Iteration  10: 1663.784 ns/op
Iteration   1: 1659.342 ns/op
Iteration   2: 1656.129 ns/op
Iteration   3: 1656.116 ns/op
Iteration   4: 1655.536 ns/op
Iteration   5: 1662.212 ns/op
Iteration   6: 1680.428 ns/op
Iteration   7: 1664.360 ns/op
Iteration   8: 1665.224 ns/op
Iteration   9: 1660.252 ns/op
Iteration  10: 1655.773 ns/op
Iteration  11: 1668.457 ns/op
Iteration  12: 1653.576 ns/op
Iteration  13: 1662.332 ns/op
Iteration  14: 1652.108 ns/op
Iteration  15: 1654.745 ns/op
Iteration  16: 1665.639 ns/op
Iteration  17: 1660.019 ns/op
Iteration  18: 1654.176 ns/op
Iteration  19: 1659.782 ns/op
Iteration  20: 1660.382 ns/op

# Run progress: 55.35% complete, ETA 01:37:26
# Fork: 2 of 2
# Warmup Iteration   1: 16564.951 ns/op
# Warmup Iteration   2: 5766.412 ns/op
# Warmup Iteration   3: 1995.963 ns/op
# Warmup Iteration   4: 1676.412 ns/op
# Warmup Iteration   5: 1670.840 ns/op
# Warmup Iteration   6: 1673.624 ns/op
# Warmup Iteration   7: 1672.301 ns/op
# Warmup Iteration   8: 1684.045 ns/op
# Warmup Iteration   9: 1675.186 ns/op
# Warmup Iteration  10: 1673.372 ns/op
Iteration   1: 1676.961 ns/op
Iteration   2: 1680.098 ns/op
Iteration   3: 1678.233 ns/op
Iteration   4: 1685.691 ns/op
Iteration   5: 1677.210 ns/op
Iteration   6: 1690.670 ns/op
Iteration   7: 1679.669 ns/op
Iteration   8: 1679.854 ns/op
Iteration   9: 1676.741 ns/op
Iteration  10: 1674.058 ns/op
Iteration  11: 1676.643 ns/op
Iteration  12: 1672.312 ns/op
Iteration  13: 1677.753 ns/op
Iteration  14: 1680.065 ns/op
Iteration  15: 1675.684 ns/op
Iteration  16: 1678.302 ns/op
Iteration  17: 1679.861 ns/op
Iteration  18: 1677.567 ns/op
Iteration  19: 1675.957 ns/op
Iteration  20: 1683.543 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentJson":
  1669.587 ±(99.9%) 6.079 ns/op [Average]
  (min, avg, max) = (1652.108, 1669.587, 1690.670), stdev = 10.806
  CI (99.9%): [1663.507, 1675.666] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentJsonWithCustomContentType

# Run progress: 55.42% complete, ETA 01:37:32
# Fork: 1 of 2
# Warmup Iteration   1: 18988.031 ns/op
# Warmup Iteration   2: 9936.752 ns/op
# Warmup Iteration   3: 4709.161 ns/op
# Warmup Iteration   4: 2005.837 ns/op
# Warmup Iteration   5: 1758.267 ns/op
# Warmup Iteration   6: 1783.573 ns/op
# Warmup Iteration   7: 1738.725 ns/op
# Warmup Iteration   8: 1746.829 ns/op
# Warmup Iteration   9: 1741.045 ns/op
# Warmup Iteration  10: 1760.906 ns/op
Iteration   1: 1748.308 ns/op
Iteration   2: 1743.812 ns/op
Iteration   3: 1743.449 ns/op
Iteration   4: 1741.195 ns/op
Iteration   5: 1740.753 ns/op
Iteration   6: 1736.487 ns/op
Iteration   7: 1739.649 ns/op
Iteration   8: 1746.386 ns/op
Iteration   9: 1737.512 ns/op
Iteration  10: 1736.510 ns/op
Iteration  11: 1738.659 ns/op
Iteration  12: 1736.072 ns/op
Iteration  13: 1737.624 ns/op
Iteration  14: 1735.545 ns/op
Iteration  15: 1741.198 ns/op
Iteration  16: 1741.898 ns/op
Iteration  17: 1734.768 ns/op
Iteration  18: 1737.817 ns/op
Iteration  19: 1745.601 ns/op
Iteration  20: 1737.922 ns/op

# Run progress: 55.50% complete, ETA 01:37:39
# Fork: 2 of 2
# Warmup Iteration   1: 20856.295 ns/op
# Warmup Iteration   2: 9525.539 ns/op
# Warmup Iteration   3: 3445.665 ns/op
# Warmup Iteration   4: 1789.544 ns/op
# Warmup Iteration   5: 1714.220 ns/op
# Warmup Iteration   6: 1719.156 ns/op
# Warmup Iteration   7: 1712.193 ns/op
# Warmup Iteration   8: 1721.380 ns/op
# Warmup Iteration   9: 1719.852 ns/op
# Warmup Iteration  10: 1723.909 ns/op
Iteration   1: 1715.627 ns/op
Iteration   2: 1717.695 ns/op
Iteration   3: 1727.360 ns/op
Iteration   4: 1720.626 ns/op
Iteration   5: 1710.160 ns/op
Iteration   6: 1731.303 ns/op
Iteration   7: 1713.530 ns/op
Iteration   8: 1716.260 ns/op
Iteration   9: 1720.919 ns/op
Iteration  10: 1711.946 ns/op
Iteration  11: 1721.187 ns/op
Iteration  12: 1715.861 ns/op
Iteration  13: 1715.652 ns/op
Iteration  14: 1712.781 ns/op
Iteration  15: 1714.446 ns/op
Iteration  16: 1715.259 ns/op
Iteration  17: 1721.175 ns/op
Iteration  18: 1718.719 ns/op
Iteration  19: 1712.063 ns/op
Iteration  20: 1719.843 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentJsonWithCustomContentType":
  1728.839 ±(99.9%) 6.884 ns/op [Average]
  (min, avg, max) = (1710.160, 1728.839, 1748.308), stdev = 12.237
  CI (99.9%): [1721.955, 1735.724] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentJsonWithCustomContentTypeAndCharset

# Run progress: 55.57% complete, ETA 01:37:45
# Fork: 1 of 2
# Warmup Iteration   1: 16151.897 ns/op
# Warmup Iteration   2: 5474.130 ns/op
# Warmup Iteration   3: 1971.647 ns/op
# Warmup Iteration   4: 1761.703 ns/op
# Warmup Iteration   5: 1753.585 ns/op
# Warmup Iteration   6: 1754.310 ns/op
# Warmup Iteration   7: 1745.873 ns/op
# Warmup Iteration   8: 1751.726 ns/op
# Warmup Iteration   9: 1756.015 ns/op
# Warmup Iteration  10: 1760.666 ns/op
Iteration   1: 1748.186 ns/op
Iteration   2: 1750.509 ns/op
Iteration   3: 1751.661 ns/op
Iteration   4: 1740.015 ns/op
Iteration   5: 1751.497 ns/op
Iteration   6: 1773.968 ns/op
Iteration   7: 1756.624 ns/op
Iteration   8: 1762.084 ns/op
Iteration   9: 1756.803 ns/op
Iteration  10: 1748.828 ns/op
Iteration  11: 1752.487 ns/op
Iteration  12: 1749.733 ns/op
Iteration  13: 1744.230 ns/op
Iteration  14: 1753.854 ns/op
Iteration  15: 1745.715 ns/op
Iteration  16: 1750.993 ns/op
Iteration  17: 1748.048 ns/op
Iteration  18: 1747.454 ns/op
Iteration  19: 1752.060 ns/op
Iteration  20: 1747.373 ns/op

# Run progress: 55.65% complete, ETA 01:37:51
# Fork: 2 of 2
# Warmup Iteration   1: 16470.734 ns/op
# Warmup Iteration   2: 5211.916 ns/op
# Warmup Iteration   3: 1939.830 ns/op
# Warmup Iteration   4: 1768.595 ns/op
# Warmup Iteration   5: 1763.542 ns/op
# Warmup Iteration   6: 1755.274 ns/op
# Warmup Iteration   7: 1766.840 ns/op
# Warmup Iteration   8: 1763.580 ns/op
# Warmup Iteration   9: 1770.484 ns/op
# Warmup Iteration  10: 1767.812 ns/op
Iteration   1: 1758.340 ns/op
Iteration   2: 1753.821 ns/op
Iteration   3: 1756.690 ns/op
Iteration   4: 1755.745 ns/op
Iteration   5: 1757.910 ns/op
Iteration   6: 1785.666 ns/op
Iteration   7: 1760.646 ns/op
Iteration   8: 1751.129 ns/op
Iteration   9: 1749.130 ns/op
Iteration  10: 1767.503 ns/op
Iteration  11: 1750.138 ns/op
Iteration  12: 1753.142 ns/op
Iteration  13: 1750.103 ns/op
Iteration  14: 1760.110 ns/op
Iteration  15: 1753.935 ns/op
Iteration  16: 1756.354 ns/op
Iteration  17: 1761.565 ns/op
Iteration  18: 1759.450 ns/op
Iteration  19: 1757.757 ns/op
Iteration  20: 1759.901 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentJsonWithCustomContentTypeAndCharset":
  1754.779 ±(99.9%) 4.566 ns/op [Average]
  (min, avg, max) = (1740.015, 1754.779, 1785.666), stdev = 8.117
  CI (99.9%): [1750.213, 1759.345] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentStringWithInvalidContentType

# Run progress: 55.72% complete, ETA 01:37:58
# Fork: 1 of 2
# Warmup Iteration   1: 13718.677 ns/op
# Warmup Iteration   2: 3860.783 ns/op
# Warmup Iteration   3: 1440.484 ns/op
# Warmup Iteration   4: 1364.336 ns/op
# Warmup Iteration   5: 1365.132 ns/op
# Warmup Iteration   6: 1372.360 ns/op
# Warmup Iteration   7: 1366.251 ns/op
# Warmup Iteration   8: 1358.283 ns/op
# Warmup Iteration   9: 1359.425 ns/op
# Warmup Iteration  10: 1374.065 ns/op
Iteration   1: 1365.161 ns/op
Iteration   2: 1367.469 ns/op
Iteration   3: 1364.532 ns/op
Iteration   4: 1379.272 ns/op
Iteration   5: 1367.151 ns/op
Iteration   6: 1368.203 ns/op
Iteration   7: 1370.147 ns/op
Iteration   8: 1372.349 ns/op
Iteration   9: 1367.167 ns/op
Iteration  10: 1374.335 ns/op
Iteration  11: 1369.924 ns/op
Iteration  12: 1373.018 ns/op
Iteration  13: 1366.795 ns/op
Iteration  14: 1370.003 ns/op
Iteration  15: 1373.406 ns/op
Iteration  16: 1377.241 ns/op
Iteration  17: 1368.637 ns/op
Iteration  18: 1364.961 ns/op
Iteration  19: 1369.065 ns/op
Iteration  20: 1369.745 ns/op

# Run progress: 55.80% complete, ETA 01:38:04
# Fork: 2 of 2
# Warmup Iteration   1: 13834.125 ns/op
# Warmup Iteration   2: 3623.661 ns/op
# Warmup Iteration   3: 1632.350 ns/op
# Warmup Iteration   4: 1336.582 ns/op
# Warmup Iteration   5: 1340.232 ns/op
# Warmup Iteration   6: 1342.250 ns/op
# Warmup Iteration   7: 1336.895 ns/op
# Warmup Iteration   8: 1336.734 ns/op
# Warmup Iteration   9: 1341.785 ns/op
# Warmup Iteration  10: 1337.506 ns/op
Iteration   1: 1341.468 ns/op
Iteration   2: 1334.274 ns/op
Iteration   3: 1337.603 ns/op
Iteration   4: 1335.738 ns/op
Iteration   5: 1330.645 ns/op
Iteration   6: 1357.356 ns/op
Iteration   7: 1335.134 ns/op
Iteration   8: 1337.495 ns/op
Iteration   9: 1335.007 ns/op
Iteration  10: 1327.785 ns/op
Iteration  11: 1330.441 ns/op
Iteration  12: 1332.080 ns/op
Iteration  13: 1336.352 ns/op
Iteration  14: 1339.383 ns/op
Iteration  15: 1334.553 ns/op
Iteration  16: 1336.753 ns/op
Iteration  17: 1336.481 ns/op
Iteration  18: 1336.043 ns/op
Iteration  19: 1331.366 ns/op
Iteration  20: 1333.270 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentStringWithInvalidContentType":
  1352.945 ±(99.9%) 10.080 ns/op [Average]
  (min, avg, max) = (1327.785, 1352.945, 1379.272), stdev = 17.917
  CI (99.9%): [1342.865, 1363.025] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentXml

# Run progress: 55.87% complete, ETA 01:38:10
# Fork: 1 of 2
# Warmup Iteration   1: 42172672.125 ns/op
# Warmup Iteration   2: 17338763.828 ns/op
# Warmup Iteration   3: 12877004.620 ns/op
# Warmup Iteration   4: 12383271.778 ns/op
# Warmup Iteration   5: 8655500.543 ns/op
# Warmup Iteration   6: 8519155.203 ns/op
# Warmup Iteration   7: 9526285.771 ns/op
# Warmup Iteration   8: 7743244.838 ns/op
# Warmup Iteration   9: 7427381.896 ns/op
# Warmup Iteration  10: 6502285.084 ns/op
Iteration   1: 7376298.103 ns/op
Iteration   2: 6946753.243 ns/op
Iteration   3: 6673108.973 ns/op
Iteration   4: 5578073.694 ns/op
Iteration   5: 5730643.606 ns/op
Iteration   6: 5798140.699 ns/op
Iteration   7: 6277083.669 ns/op
Iteration   8: 6660212.907 ns/op
Iteration   9: 5424787.027 ns/op
Iteration  10: 5715728.251 ns/op
Iteration  11: 5040866.915 ns/op
Iteration  12: 5243045.340 ns/op
Iteration  13: 4488151.601 ns/op
Iteration  14: 5336191.016 ns/op
Iteration  15: 4304892.764 ns/op
Iteration  16: 4898998.966 ns/op
Iteration  17: 5008928.605 ns/op
Iteration  18: 4843978.686 ns/op
Iteration  19: 5031890.276 ns/op
Iteration  20: 4568256.224 ns/op

# Run progress: 55.95% complete, ETA 01:38:16
# Fork: 2 of 2
# Warmup Iteration   1: 51207933.850 ns/op
# Warmup Iteration   2: 14700740.275 ns/op
# Warmup Iteration   3: 11908602.988 ns/op
# Warmup Iteration   4: 12208683.756 ns/op
# Warmup Iteration   5: 9097152.645 ns/op
# Warmup Iteration   6: 8820937.649 ns/op
# Warmup Iteration   7: 9665811.240 ns/op
# Warmup Iteration   8: 9133142.718 ns/op
# Warmup Iteration   9: 7125662.851 ns/op
# Warmup Iteration  10: 6972199.243 ns/op
Iteration   1: 7390087.772 ns/op
Iteration   2: 7163431.143 ns/op
Iteration   3: 5790677.410 ns/op
Iteration   4: 5959811.631 ns/op
Iteration   5: 6753469.591 ns/op
Iteration   6: 5626737.994 ns/op
Iteration   7: 6120552.409 ns/op
Iteration   8: 5474540.383 ns/op
Iteration   9: 6100959.970 ns/op
Iteration  10: 5770158.747 ns/op
Iteration  11: 5315208.656 ns/op
Iteration  12: 4866798.743 ns/op
Iteration  13: 5159942.871 ns/op
Iteration  14: 4478502.750 ns/op
Iteration  15: 4790992.010 ns/op
Iteration  16: 4824724.389 ns/op
Iteration  17: 4175623.354 ns/op
Iteration  18: 4380093.729 ns/op
Iteration  19: 3898858.023 ns/op
Iteration  20: 4440714.283 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentXml":
  5485697.911 ±(99.9%) 511963.566 ns/op [Average]
  (min, avg, max) = (3898858.023, 5485697.911, 7390087.772), stdev = 910014.789
  CI (99.9%): [4973734.345, 5997661.477] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentXmlWithAttributes

# Run progress: 56.02% complete, ETA 01:38:22
# Fork: 1 of 2
# Warmup Iteration   1: 69587448.467 ns/op
# Warmup Iteration   2: 26089141.513 ns/op
# Warmup Iteration   3: 15414590.892 ns/op
# Warmup Iteration   4: 13645211.878 ns/op
# Warmup Iteration   5: 11299561.393 ns/op
# Warmup Iteration   6: 10046607.670 ns/op
# Warmup Iteration   7: 10439160.250 ns/op
# Warmup Iteration   8: 10039291.440 ns/op
# Warmup Iteration   9: 8430125.067 ns/op
# Warmup Iteration  10: 8568814.042 ns/op
Iteration   1: 7772621.729 ns/op
Iteration   2: 8022771.200 ns/op
Iteration   3: 8406852.000 ns/op
Iteration   4: 8321026.347 ns/op
Iteration   5: 8222740.418 ns/op
Iteration   6: 7720679.192 ns/op
Iteration   7: 6941425.400 ns/op
Iteration   8: 7259545.877 ns/op
Iteration   9: 7301091.022 ns/op
Iteration  10: 6886240.890 ns/op
Iteration  11: 7055042.641 ns/op
Iteration  12: 7173158.343 ns/op
Iteration  13: 5974009.952 ns/op
Iteration  14: 6472084.077 ns/op
Iteration  15: 6549069.255 ns/op
Iteration  16: 6555656.556 ns/op
Iteration  17: 5252461.099 ns/op
Iteration  18: 5009733.595 ns/op
Iteration  19: 5543733.392 ns/op
Iteration  20: 4902189.468 ns/op

# Run progress: 56.10% complete, ETA 01:38:28
# Fork: 2 of 2
# Warmup Iteration   1: 80245813.846 ns/op
# Warmup Iteration   2: 20496622.184 ns/op
# Warmup Iteration   3: 13233703.342 ns/op
# Warmup Iteration   4: 14513524.638 ns/op
# Warmup Iteration   5: 12260947.451 ns/op
# Warmup Iteration   6: 10090288.840 ns/op
# Warmup Iteration   7: 9946631.891 ns/op
# Warmup Iteration   8: 10061685.380 ns/op
# Warmup Iteration   9: 9325060.407 ns/op
# Warmup Iteration  10: 9147539.709 ns/op
Iteration   1: 8463442.874 ns/op
Iteration   2: 8170116.667 ns/op
Iteration   3: 8347703.717 ns/op
Iteration   4: 8754962.209 ns/op
Iteration   5: 7601197.485 ns/op
Iteration   6: 8122396.573 ns/op
Iteration   7: 7074494.444 ns/op
Iteration   8: 7146449.929 ns/op
Iteration   9: 6727519.228 ns/op
Iteration  10: 8353261.017 ns/op
Iteration  11: 6558504.627 ns/op
Iteration  12: 6554850.889 ns/op
Iteration  13: 6899136.972 ns/op
Iteration  14: 6218476.615 ns/op
Iteration  15: 6343180.019 ns/op
Iteration  16: 5788170.468 ns/op
Iteration  17: 4827151.341 ns/op
Iteration  18: 6834908.939 ns/op
Iteration  19: 4861304.667 ns/op
Iteration  20: 4918590.779 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentXmlWithAttributes":
  6897698.798 ±(99.9%) 643147.986 ns/op [Average]
  (min, avg, max) = (4827151.341, 6897698.798, 8754962.209), stdev = 1143194.980
  CI (99.9%): [6254550.812, 7540846.783] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentXmlWithCustomContentType

# Run progress: 56.17% complete, ETA 01:38:33
# Fork: 1 of 2
# Warmup Iteration   1: 50438491.000 ns/op
# Warmup Iteration   2: 18590535.630 ns/op
# Warmup Iteration   3: 12350782.580 ns/op
# Warmup Iteration   4: 9998709.297 ns/op
# Warmup Iteration   5: 8019293.584 ns/op
# Warmup Iteration   6: 8323322.545 ns/op
# Warmup Iteration   7: 8758054.522 ns/op
# Warmup Iteration   8: 7343815.029 ns/op
# Warmup Iteration   9: 6723782.000 ns/op
# Warmup Iteration  10: 6235432.143 ns/op
Iteration   1: 7093374.510 ns/op
Iteration   2: 6487391.665 ns/op
Iteration   3: 6377415.006 ns/op
Iteration   4: 6228141.894 ns/op
Iteration   5: 5704770.472 ns/op
Iteration   6: 6065351.697 ns/op
Iteration   7: 5801762.561 ns/op
Iteration   8: 5260018.963 ns/op
Iteration   9: 5963947.952 ns/op
Iteration  10: 5174175.979 ns/op
Iteration  11: 4960524.356 ns/op
Iteration  12: 5324084.532 ns/op
Iteration  13: 5255532.529 ns/op
Iteration  14: 4291533.748 ns/op
Iteration  15: 4777019.833 ns/op
Iteration  16: 5480560.093 ns/op
Iteration  17: 5378286.586 ns/op
Iteration  18: 4395265.746 ns/op
Iteration  19: 4603227.078 ns/op
Iteration  20: 3892901.654 ns/op

# Run progress: 56.25% complete, ETA 01:38:39
# Fork: 2 of 2
# Warmup Iteration   1: 41191426.440 ns/op
# Warmup Iteration   2: 19803661.333 ns/op
# Warmup Iteration   3: 14715386.118 ns/op
# Warmup Iteration   4: 13612286.486 ns/op
# Warmup Iteration   5: 10673869.670 ns/op
# Warmup Iteration   6: 9262737.454 ns/op
# Warmup Iteration   7: 9230221.881 ns/op
# Warmup Iteration   8: 9156628.072 ns/op
# Warmup Iteration   9: 8035736.968 ns/op
# Warmup Iteration  10: 7183288.879 ns/op
Iteration   1: 6763286.108 ns/op
Iteration   2: 7379915.022 ns/op
Iteration   3: 6886072.253 ns/op
Iteration   4: 6216470.611 ns/op
Iteration   5: 6720535.611 ns/op
Iteration   6: 5954796.708 ns/op
Iteration   7: 5571604.122 ns/op
Iteration   8: 6330301.380 ns/op
Iteration   9: 6033997.807 ns/op
Iteration  10: 5415281.043 ns/op
Iteration  11: 4888957.551 ns/op
Iteration  12: 5696868.131 ns/op
Iteration  13: 6506592.260 ns/op
Iteration  14: 5969232.619 ns/op
Iteration  15: 5423285.368 ns/op
Iteration  16: 4764805.104 ns/op
Iteration  17: 5319327.963 ns/op
Iteration  18: 5763182.471 ns/op
Iteration  19: 4992124.836 ns/op
Iteration  20: 5148382.359 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentXmlWithCustomContentType":
  5656507.655 ±(99.9%) 446598.775 ns/op [Average]
  (min, avg, max) = (3892901.654, 5656507.655, 7379915.022), stdev = 793828.931
  CI (99.9%): [5209908.879, 6103106.430] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentXmlWithCustomContentTypeAndCharset

# Run progress: 56.33% complete, ETA 01:38:45
# Fork: 1 of 2
# Warmup Iteration   1: 40739912.040 ns/op
# Warmup Iteration   2: 18969287.189 ns/op
# Warmup Iteration   3: 12358172.037 ns/op
# Warmup Iteration   4: 11033409.462 ns/op
# Warmup Iteration   5: 9166901.928 ns/op
# Warmup Iteration   6: 8480575.695 ns/op
# Warmup Iteration   7: 9213528.882 ns/op
# Warmup Iteration   8: 7957023.865 ns/op
# Warmup Iteration   9: 7181872.436 ns/op
# Warmup Iteration  10: 6560249.405 ns/op
Iteration   1: 6694125.520 ns/op
Iteration   2: 7154601.636 ns/op
Iteration   3: 5715640.023 ns/op
Iteration   4: 6465907.290 ns/op
Iteration   5: 6187593.043 ns/op
Iteration   6: 5078565.005 ns/op
Iteration   7: 5801103.786 ns/op
Iteration   8: 6277389.825 ns/op
Iteration   9: 5199126.472 ns/op
Iteration  10: 5633891.084 ns/op
Iteration  11: 5182404.454 ns/op
Iteration  12: 5175547.929 ns/op
Iteration  13: 4518738.842 ns/op
Iteration  14: 5495982.313 ns/op
Iteration  15: 4592519.404 ns/op
Iteration  16: 4888982.527 ns/op
Iteration  17: 4820196.244 ns/op
Iteration  18: 4465016.555 ns/op
Iteration  19: 4198122.615 ns/op
Iteration  20: 4104988.533 ns/op

# Run progress: 56.40% complete, ETA 01:38:50
# Fork: 2 of 2
# Warmup Iteration   1: 44865033.130 ns/op
# Warmup Iteration   2: 19009406.604 ns/op
# Warmup Iteration   3: 13577914.473 ns/op
# Warmup Iteration   4: 12307225.183 ns/op
# Warmup Iteration   5: 9236959.972 ns/op
# Warmup Iteration   6: 8381909.537 ns/op
# Warmup Iteration   7: 8494780.475 ns/op
# Warmup Iteration   8: 8282346.388 ns/op
# Warmup Iteration   9: 7829338.703 ns/op
# Warmup Iteration  10: 6561483.595 ns/op
Iteration   1: 6721860.450 ns/op
Iteration   2: 6568150.719 ns/op
Iteration   3: 6752861.235 ns/op
Iteration   4: 5687186.938 ns/op
Iteration   5: 5613605.246 ns/op
Iteration   6: 5506787.434 ns/op
Iteration   7: 6587358.059 ns/op
Iteration   8: 5740809.611 ns/op
Iteration   9: 5309821.032 ns/op
Iteration  10: 5007854.730 ns/op
Iteration  11: 5431445.681 ns/op
Iteration  12: 5971124.548 ns/op
Iteration  13: 4382968.651 ns/op
Iteration  14: 4608853.239 ns/op
Iteration  15: 4569341.160 ns/op
Iteration  16: 4967725.411 ns/op
Iteration  17: 5004625.365 ns/op
Iteration  18: 3878333.438 ns/op
Iteration  19: 4695117.491 ns/op
Iteration  20: 3916447.254 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentXmlWithCustomContentTypeAndCharset":
  5364318.020 ±(99.9%) 481937.303 ns/op [Average]
  (min, avg, max) = (3878333.438, 5364318.020, 7154601.636), stdev = 856643.133
  CI (99.9%): [4882380.717, 5846255.323] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenIsPostStubbedFalse

# Run progress: 56.48% complete, ETA 01:38:56
# Fork: 1 of 2
# Warmup Iteration   1: 2143.218 ns/op
# Warmup Iteration   2: 547.142 ns/op
# Warmup Iteration   3: 429.167 ns/op
# Warmup Iteration   4: 426.208 ns/op
# Warmup Iteration   5: 425.787 ns/op
# Warmup Iteration   6: 427.435 ns/op
# Warmup Iteration   7: 426.628 ns/op
# Warmup Iteration   8: 426.984 ns/op
# Warmup Iteration   9: 426.622 ns/op
# Warmup Iteration  10: 426.629 ns/op
Iteration   1: 429.844 ns/op
Iteration   2: 426.253 ns/op
Iteration   3: 422.818 ns/op
Iteration   4: 426.051 ns/op
Iteration   5: 424.390 ns/op
Iteration   6: 429.247 ns/op
Iteration   7: 424.190 ns/op
Iteration   8: 426.784 ns/op
Iteration   9: 425.842 ns/op
Iteration  10: 427.288 ns/op
Iteration  11: 427.555 ns/op
Iteration  12: 425.768 ns/op
Iteration  13: 425.528 ns/op
Iteration  14: 426.512 ns/op
Iteration  15: 427.284 ns/op
Iteration  16: 428.134 ns/op
Iteration  17: 428.144 ns/op
Iteration  18: 426.675 ns/op
Iteration  19: 425.278 ns/op
Iteration  20: 426.712 ns/op

# Run progress: 56.55% complete, ETA 01:39:01
# Fork: 2 of 2
# Warmup Iteration   1: 2123.528 ns/op
# Warmup Iteration   2: 577.133 ns/op
# Warmup Iteration   3: 436.938 ns/op
# Warmup Iteration   4: 435.192 ns/op
# Warmup Iteration   5: 436.759 ns/op
# Warmup Iteration   6: 434.755 ns/op
# Warmup Iteration   7: 434.416 ns/op
# Warmup Iteration   8: 436.972 ns/op
# Warmup Iteration   9: 434.865 ns/op
# Warmup Iteration  10: 436.585 ns/op
Iteration   1: 435.867 ns/op
Iteration   2: 434.260 ns/op
Iteration   3: 434.054 ns/op
Iteration   4: 436.122 ns/op
Iteration   5: 436.184 ns/op
Iteration   6: 438.673 ns/op
Iteration   7: 432.861 ns/op
Iteration   8: 433.743 ns/op
Iteration   9: 435.252 ns/op
Iteration  10: 432.748 ns/op
Iteration  11: 437.020 ns/op
Iteration  12: 433.637 ns/op
Iteration  13: 435.268 ns/op
Iteration  14: 434.248 ns/op
Iteration  15: 437.824 ns/op
Iteration  16: 435.225 ns/op
Iteration  17: 434.851 ns/op
Iteration  18: 434.106 ns/op
Iteration  19: 436.540 ns/op
Iteration  20: 437.309 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenIsPostStubbedFalse":
  430.902 ±(99.9%) 2.664 ns/op [Average]
  (min, avg, max) = (422.818, 430.902, 438.673), stdev = 4.736
  CI (99.9%): [428.238, 433.566] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenStringMatch

# Run progress: 56.63% complete, ETA 01:39:06
# Fork: 1 of 2
# Warmup Iteration   1: 12233.837 ns/op
# Warmup Iteration   2: 2855.832 ns/op
# Warmup Iteration   3: 1149.996 ns/op
# Warmup Iteration   4: 1139.743 ns/op
# Warmup Iteration   5: 1132.761 ns/op
# Warmup Iteration   6: 1135.600 ns/op
# Warmup Iteration   7: 1136.416 ns/op
# Warmup Iteration   8: 1137.660 ns/op
# Warmup Iteration   9: 1136.554 ns/op
# Warmup Iteration  10: 1132.840 ns/op
Iteration   1: 1139.225 ns/op
Iteration   2: 1132.441 ns/op
Iteration   3: 1133.316 ns/op
Iteration   4: 1136.384 ns/op
Iteration   5: 1130.947 ns/op
Iteration   6: 1128.242 ns/op
Iteration   7: 1126.007 ns/op
Iteration   8: 1139.755 ns/op
Iteration   9: 1133.609 ns/op
Iteration  10: 1126.553 ns/op
Iteration  11: 1134.116 ns/op
Iteration  12: 1130.698 ns/op
Iteration  13: 1134.373 ns/op
Iteration  14: 1128.218 ns/op
Iteration  15: 1136.872 ns/op
Iteration  16: 1136.853 ns/op
Iteration  17: 1126.042 ns/op
Iteration  18: 1129.228 ns/op
Iteration  19: 1134.387 ns/op
Iteration  20: 1130.667 ns/op

# Run progress: 56.70% complete, ETA 01:39:11
# Fork: 2 of 2
# Warmup Iteration   1: 13010.399 ns/op
# Warmup Iteration   2: 3465.457 ns/op
# Warmup Iteration   3: 1532.018 ns/op
# Warmup Iteration   4: 1158.899 ns/op
# Warmup Iteration   5: 1121.590 ns/op
# Warmup Iteration   6: 1112.838 ns/op
# Warmup Iteration   7: 1114.071 ns/op
# Warmup Iteration   8: 1120.447 ns/op
# Warmup Iteration   9: 1118.289 ns/op
# Warmup Iteration  10: 1114.892 ns/op
Iteration   1: 1123.966 ns/op
Iteration   2: 1119.950 ns/op
Iteration   3: 1115.542 ns/op
Iteration   4: 1117.305 ns/op
Iteration   5: 1112.626 ns/op
Iteration   6: 1134.653 ns/op
Iteration   7: 1112.501 ns/op
Iteration   8: 1123.937 ns/op
Iteration   9: 1123.364 ns/op
Iteration  10: 1117.223 ns/op
Iteration  11: 1115.326 ns/op
Iteration  12: 1115.641 ns/op
Iteration  13: 1123.972 ns/op
Iteration  14: 1119.029 ns/op
Iteration  15: 1118.543 ns/op
Iteration  16: 1114.347 ns/op
Iteration  17: 1112.609 ns/op
Iteration  18: 1119.528 ns/op
Iteration  19: 1113.675 ns/op
Iteration  20: 1120.475 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenStringMatch":
  1125.554 ±(99.9%) 4.739 ns/op [Average]
  (min, avg, max) = (1112.501, 1125.554, 1139.755), stdev = 8.423
  CI (99.9%): [1120.815, 1130.292] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_stringsMatch_ShouldReturnFalse_WhenAssertingValueEmpty

# Run progress: 56.78% complete, ETA 01:39:16
# Fork: 1 of 2
# Warmup Iteration   1: 580.935 ns/op
# Warmup Iteration   2: 332.184 ns/op
# Warmup Iteration   3: 315.380 ns/op
# Warmup Iteration   4: 314.381 ns/op
# Warmup Iteration   5: 317.400 ns/op
# Warmup Iteration   6: 315.075 ns/op
# Warmup Iteration   7: 314.674 ns/op
# Warmup Iteration   8: 317.720 ns/op
# Warmup Iteration   9: 315.420 ns/op
# Warmup Iteration  10: 317.813 ns/op
Iteration   1: 314.807 ns/op
Iteration   2: 315.664 ns/op
Iteration   3: 314.568 ns/op
Iteration   4: 313.590 ns/op
Iteration   5: 315.976 ns/op
Iteration   6: 315.670 ns/op
Iteration   7: 314.644 ns/op
Iteration   8: 315.290 ns/op
Iteration   9: 314.915 ns/op
Iteration  10: 316.079 ns/op
Iteration  11: 314.377 ns/op
Iteration  12: 314.867 ns/op
Iteration  13: 315.127 ns/op
Iteration  14: 315.920 ns/op
Iteration  15: 314.827 ns/op
Iteration  16: 315.127 ns/op
Iteration  17: 316.040 ns/op
Iteration  18: 315.540 ns/op
Iteration  19: 314.831 ns/op
Iteration  20: 316.516 ns/op

# Run progress: 56.85% complete, ETA 01:39:21
# Fork: 2 of 2
# Warmup Iteration   1: 601.609 ns/op
# Warmup Iteration   2: 342.909 ns/op
# Warmup Iteration   3: 317.484 ns/op
# Warmup Iteration   4: 318.465 ns/op
# Warmup Iteration   5: 319.191 ns/op
# Warmup Iteration   6: 317.523 ns/op
# Warmup Iteration   7: 317.274 ns/op
# Warmup Iteration   8: 317.422 ns/op
# Warmup Iteration   9: 318.215 ns/op
# Warmup Iteration  10: 317.138 ns/op
Iteration   1: 317.191 ns/op
Iteration   2: 317.759 ns/op
Iteration   3: 320.180 ns/op
Iteration   4: 318.168 ns/op
Iteration   5: 317.476 ns/op
Iteration   6: 318.282 ns/op
Iteration   7: 318.243 ns/op
Iteration   8: 318.561 ns/op
Iteration   9: 318.038 ns/op
Iteration  10: 317.723 ns/op
Iteration  11: 316.654 ns/op
Iteration  12: 318.440 ns/op
Iteration  13: 318.402 ns/op
Iteration  14: 317.053 ns/op
Iteration  15: 316.483 ns/op
Iteration  16: 318.298 ns/op
Iteration  17: 317.515 ns/op
Iteration  18: 318.538 ns/op
Iteration  19: 317.280 ns/op
Iteration  20: 316.507 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_stringsMatch_ShouldReturnFalse_WhenAssertingValueEmpty":
  316.529 ±(99.9%) 0.867 ns/op [Average]
  (min, avg, max) = (313.590, 316.529, 320.180), stdev = 1.542
  CI (99.9%): [315.662, 317.396] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_stringsMatch_ShouldReturnFalse_WhenAssertingValueNull

# Run progress: 56.93% complete, ETA 01:39:25
# Fork: 1 of 2
# Warmup Iteration   1: 594.722 ns/op
# Warmup Iteration   2: 344.191 ns/op
# Warmup Iteration   3: 322.312 ns/op
# Warmup Iteration   4: 321.630 ns/op
# Warmup Iteration   5: 321.185 ns/op
# Warmup Iteration   6: 321.142 ns/op
# Warmup Iteration   7: 320.804 ns/op
# Warmup Iteration   8: 320.184 ns/op
# Warmup Iteration   9: 321.729 ns/op
# Warmup Iteration  10: 322.503 ns/op
Iteration   1: 321.645 ns/op
Iteration   2: 322.470 ns/op
Iteration   3: 319.888 ns/op
Iteration   4: 319.734 ns/op
Iteration   5: 321.643 ns/op
Iteration   6: 321.811 ns/op
Iteration   7: 320.808 ns/op
Iteration   8: 320.002 ns/op
Iteration   9: 321.019 ns/op
Iteration  10: 321.449 ns/op
Iteration  11: 319.713 ns/op
Iteration  12: 321.087 ns/op
Iteration  13: 322.320 ns/op
Iteration  14: 322.183 ns/op
Iteration  15: 322.188 ns/op
Iteration  16: 321.916 ns/op
Iteration  17: 321.700 ns/op
Iteration  18: 321.590 ns/op
Iteration  19: 323.218 ns/op
Iteration  20: 323.832 ns/op

# Run progress: 57.00% complete, ETA 01:39:30
# Fork: 2 of 2
# Warmup Iteration   1: 604.691 ns/op
# Warmup Iteration   2: 346.023 ns/op
# Warmup Iteration   3: 319.505 ns/op
# Warmup Iteration   4: 319.254 ns/op
# Warmup Iteration   5: 319.182 ns/op
# Warmup Iteration   6: 318.412 ns/op
# Warmup Iteration   7: 319.448 ns/op
# Warmup Iteration   8: 317.535 ns/op
# Warmup Iteration   9: 318.754 ns/op
# Warmup Iteration  10: 319.910 ns/op
Iteration   1: 319.443 ns/op
Iteration   2: 317.596 ns/op
Iteration   3: 317.018 ns/op
Iteration   4: 317.620 ns/op
Iteration   5: 317.382 ns/op
Iteration   6: 320.253 ns/op
Iteration   7: 317.877 ns/op
Iteration   8: 318.290 ns/op
Iteration   9: 319.057 ns/op
Iteration  10: 319.570 ns/op
Iteration  11: 320.255 ns/op
Iteration  12: 318.680 ns/op
Iteration  13: 318.170 ns/op
Iteration  14: 318.322 ns/op
Iteration  15: 319.491 ns/op
Iteration  16: 319.203 ns/op
Iteration  17: 318.211 ns/op
Iteration  18: 317.164 ns/op
Iteration  19: 318.773 ns/op
Iteration  20: 320.331 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_stringsMatch_ShouldReturnFalse_WhenAssertingValueNull":
  320.073 ±(99.9%) 1.013 ns/op [Average]
  (min, avg, max) = (317.018, 320.073, 323.832), stdev = 1.801
  CI (99.9%): [319.060, 321.086] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_stringsMatch_ShouldReturnTrue_WhenDataStoreValueEmpty

# Run progress: 57.08% complete, ETA 01:39:34
# Fork: 1 of 2
# Warmup Iteration   1: 631.907 ns/op
# Warmup Iteration   2: 336.678 ns/op
# Warmup Iteration   3: 322.146 ns/op
# Warmup Iteration   4: 320.875 ns/op
# Warmup Iteration   5: 320.493 ns/op
# Warmup Iteration   6: 322.180 ns/op
# Warmup Iteration   7: 322.493 ns/op
# Warmup Iteration   8: 321.944 ns/op
# Warmup Iteration   9: 321.891 ns/op
# Warmup Iteration  10: 321.539 ns/op
Iteration   1: 323.069 ns/op
Iteration   2: 321.353 ns/op
Iteration   3: 321.658 ns/op
Iteration   4: 320.260 ns/op
Iteration   5: 321.006 ns/op
Iteration   6: 322.050 ns/op
Iteration   7: 320.698 ns/op
Iteration   8: 323.044 ns/op
Iteration   9: 322.213 ns/op
Iteration  10: 321.632 ns/op
Iteration  11: 322.583 ns/op
Iteration  12: 321.980 ns/op
Iteration  13: 323.131 ns/op
Iteration  14: 323.426 ns/op
Iteration  15: 321.889 ns/op
Iteration  16: 322.555 ns/op
Iteration  17: 321.499 ns/op
Iteration  18: 320.043 ns/op
Iteration  19: 322.400 ns/op
Iteration  20: 321.365 ns/op

# Run progress: 57.15% complete, ETA 01:39:39
# Fork: 2 of 2
# Warmup Iteration   1: 618.630 ns/op
# Warmup Iteration   2: 338.271 ns/op
# Warmup Iteration   3: 322.343 ns/op
# Warmup Iteration   4: 321.093 ns/op
# Warmup Iteration   5: 321.151 ns/op
# Warmup Iteration   6: 321.261 ns/op
# Warmup Iteration   7: 322.656 ns/op
# Warmup Iteration   8: 321.230 ns/op
# Warmup Iteration   9: 322.553 ns/op
# Warmup Iteration  10: 319.744 ns/op
Iteration   1: 320.246 ns/op
Iteration   2: 321.616 ns/op
Iteration   3: 321.705 ns/op
Iteration   4: 320.062 ns/op
Iteration   5: 319.827 ns/op
Iteration   6: 322.338 ns/op
Iteration   7: 322.151 ns/op
Iteration   8: 320.519 ns/op
Iteration   9: 321.358 ns/op
Iteration  10: 322.218 ns/op
Iteration  11: 322.475 ns/op
Iteration  12: 321.729 ns/op
Iteration  13: 320.615 ns/op
Iteration  14: 321.510 ns/op
Iteration  15: 321.045 ns/op
Iteration  16: 320.779 ns/op
Iteration  17: 321.627 ns/op
Iteration  18: 320.322 ns/op
Iteration  19: 320.997 ns/op
Iteration  20: 320.652 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_stringsMatch_ShouldReturnTrue_WhenDataStoreValueEmpty":
  321.541 ±(99.9%) 0.526 ns/op [Average]
  (min, avg, max) = (319.827, 321.541, 323.426), stdev = 0.935
  CI (99.9%): [321.015, 322.067] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_stringsMatch_ShouldReturnTrue_WhenDataStoreValueNull

# Run progress: 57.23% complete, ETA 01:39:43
# Fork: 1 of 2
# Warmup Iteration   1: 622.369 ns/op
# Warmup Iteration   2: 337.718 ns/op
# Warmup Iteration   3: 318.921 ns/op
# Warmup Iteration   4: 319.599 ns/op
# Warmup Iteration   5: 319.527 ns/op
# Warmup Iteration   6: 318.651 ns/op
# Warmup Iteration   7: 318.843 ns/op
# Warmup Iteration   8: 319.775 ns/op
# Warmup Iteration   9: 319.510 ns/op
# Warmup Iteration  10: 318.972 ns/op
Iteration   1: 318.941 ns/op
Iteration   2: 319.354 ns/op
Iteration   3: 317.557 ns/op
Iteration   4: 319.141 ns/op
Iteration   5: 318.161 ns/op
Iteration   6: 318.868 ns/op
Iteration   7: 319.004 ns/op
Iteration   8: 319.554 ns/op
Iteration   9: 319.735 ns/op
Iteration  10: 317.242 ns/op
Iteration  11: 319.510 ns/op
Iteration  12: 319.402 ns/op
Iteration  13: 319.688 ns/op
Iteration  14: 318.868 ns/op
Iteration  15: 319.469 ns/op
Iteration  16: 318.531 ns/op
Iteration  17: 317.901 ns/op
Iteration  18: 318.433 ns/op
Iteration  19: 318.896 ns/op
Iteration  20: 318.093 ns/op

# Run progress: 57.30% complete, ETA 01:39:47
# Fork: 2 of 2
# Warmup Iteration   1: 583.329 ns/op
# Warmup Iteration   2: 332.416 ns/op
# Warmup Iteration   3: 317.903 ns/op
# Warmup Iteration   4: 318.348 ns/op
# Warmup Iteration   5: 317.586 ns/op
# Warmup Iteration   6: 318.156 ns/op
# Warmup Iteration   7: 317.568 ns/op
# Warmup Iteration   8: 317.570 ns/op
# Warmup Iteration   9: 317.910 ns/op
# Warmup Iteration  10: 317.128 ns/op
Iteration   1: 317.226 ns/op
Iteration   2: 316.481 ns/op
Iteration   3: 316.459 ns/op
Iteration   4: 315.619 ns/op
Iteration   5: 317.953 ns/op
Iteration   6: 318.686 ns/op
Iteration   7: 318.558 ns/op
Iteration   8: 321.314 ns/op
Iteration   9: 318.319 ns/op
Iteration  10: 318.714 ns/op
Iteration  11: 317.534 ns/op
Iteration  12: 318.928 ns/op
Iteration  13: 318.919 ns/op
Iteration  14: 317.239 ns/op
Iteration  15: 318.764 ns/op
Iteration  16: 318.153 ns/op
Iteration  17: 317.833 ns/op
Iteration  18: 317.895 ns/op
Iteration  19: 318.879 ns/op
Iteration  20: 317.955 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubMatcherTest._Benchmark.benchmark_stringsMatch_ShouldReturnTrue_WhenDataStoreValueNull":
  318.444 ±(99.9%) 0.588 ns/op [Average]
  (min, avg, max) = (315.619, 318.444, 321.314), stdev = 1.046
  CI (99.9%): [317.856, 319.033] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_shouldThrowWhenUnexpectedProxyStrategyPassedIn

# Run progress: 57.38% complete, ETA 01:39:51
# Fork: 1 of 2
# Warmup Iteration   1: 8259.291 ns/op
# Warmup Iteration   2: 2268.987 ns/op
# Warmup Iteration   3: 2094.451 ns/op
# Warmup Iteration   4: 2082.258 ns/op
# Warmup Iteration   5: 2084.702 ns/op
# Warmup Iteration   6: 2090.233 ns/op
# Warmup Iteration   7: 2088.104 ns/op
# Warmup Iteration   8: 2083.236 ns/op
# Warmup Iteration   9: 2088.639 ns/op
# Warmup Iteration  10: 2103.094 ns/op
Iteration   1: 2083.086 ns/op
Iteration   2: 2089.092 ns/op
Iteration   3: 2083.532 ns/op
Iteration   4: 2088.602 ns/op
Iteration   5: 2092.447 ns/op
Iteration   6: 2088.759 ns/op
Iteration   7: 2013.941 ns/op
Iteration   8: 2006.397 ns/op
Iteration   9: 2000.147 ns/op
Iteration  10: 1998.438 ns/op
Iteration  11: 2005.768 ns/op
Iteration  12: 2019.113 ns/op
Iteration  13: 2003.123 ns/op
Iteration  14: 2004.295 ns/op
Iteration  15: 2005.267 ns/op
Iteration  16: 1999.027 ns/op
Iteration  17: 2007.944 ns/op
Iteration  18: 2007.499 ns/op
Iteration  19: 2008.301 ns/op
Iteration  20: 2010.864 ns/op

# Run progress: 57.45% complete, ETA 01:39:56
# Fork: 2 of 2
# Warmup Iteration   1: 6644.979 ns/op
# Warmup Iteration   2: 2332.155 ns/op
# Warmup Iteration   3: 2149.502 ns/op
# Warmup Iteration   4: 2140.623 ns/op
# Warmup Iteration   5: 2128.029 ns/op
# Warmup Iteration   6: 2142.326 ns/op
# Warmup Iteration   7: 2146.759 ns/op
# Warmup Iteration   8: 2142.573 ns/op
# Warmup Iteration   9: 2142.661 ns/op
# Warmup Iteration  10: 2145.724 ns/op
Iteration   1: 2133.115 ns/op
Iteration   2: 2142.403 ns/op
Iteration   3: 2131.157 ns/op
Iteration   4: 2127.336 ns/op
Iteration   5: 2131.157 ns/op
Iteration   6: 2146.554 ns/op
Iteration   7: 2072.778 ns/op
Iteration   8: 2062.074 ns/op
Iteration   9: 2063.690 ns/op
Iteration  10: 2074.262 ns/op
Iteration  11: 2083.639 ns/op
Iteration  12: 2069.767 ns/op
Iteration  13: 2083.181 ns/op
Iteration  14: 2068.011 ns/op
Iteration  15: 2076.762 ns/op
Iteration  16: 2063.715 ns/op
Iteration  17: 2066.882 ns/op
Iteration  18: 2064.203 ns/op
Iteration  19: 2074.023 ns/op
Iteration  20: 2078.937 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_shouldThrowWhenUnexpectedProxyStrategyPassedIn":
  2060.732 ±(99.9%) 25.803 ns/op [Average]
  (min, avg, max) = (1998.438, 2060.732, 2146.554), stdev = 45.864
  CI (99.9%): [2034.929, 2086.535] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigAsYaml

# Run progress: 57.53% complete, ETA 01:39:59
# Fork: 1 of 2
# Warmup Iteration   1: 5086.305 ns/op
# Warmup Iteration   2: 902.742 ns/op
# Warmup Iteration   3: 608.699 ns/op
# Warmup Iteration   4: 591.608 ns/op
# Warmup Iteration   5: 589.437 ns/op
# Warmup Iteration   6: 586.062 ns/op
# Warmup Iteration   7: 588.499 ns/op
# Warmup Iteration   8: 589.014 ns/op
# Warmup Iteration   9: 590.476 ns/op
# Warmup Iteration  10: 587.898 ns/op
Iteration   1: 588.634 ns/op
Iteration   2: 588.927 ns/op
Iteration   3: 586.736 ns/op
Iteration   4: 585.887 ns/op
Iteration   5: 583.343 ns/op
Iteration   6: 592.652 ns/op
Iteration   7: 587.167 ns/op
Iteration   8: 588.330 ns/op
Iteration   9: 587.443 ns/op
Iteration  10: 584.965 ns/op
Iteration  11: 587.423 ns/op
Iteration  12: 585.053 ns/op
Iteration  13: 588.660 ns/op
Iteration  14: 584.789 ns/op
Iteration  15: 587.934 ns/op
Iteration  16: 585.491 ns/op
Iteration  17: 587.222 ns/op
Iteration  18: 586.900 ns/op
Iteration  19: 585.831 ns/op
Iteration  20: 586.700 ns/op

# Run progress: 57.61% complete, ETA 01:40:03
# Fork: 2 of 2
# Warmup Iteration   1: 5185.169 ns/op
# Warmup Iteration   2: 909.252 ns/op
# Warmup Iteration   3: 567.687 ns/op
# Warmup Iteration   4: 565.830 ns/op
# Warmup Iteration   5: 574.234 ns/op
# Warmup Iteration   6: 568.341 ns/op
# Warmup Iteration   7: 565.170 ns/op
# Warmup Iteration   8: 565.608 ns/op
# Warmup Iteration   9: 564.274 ns/op
# Warmup Iteration  10: 564.889 ns/op
Iteration   1: 564.494 ns/op
Iteration   2: 569.722 ns/op
Iteration   3: 568.858 ns/op
Iteration   4: 563.285 ns/op
Iteration   5: 566.156 ns/op
Iteration   6: 569.415 ns/op
Iteration   7: 567.399 ns/op
Iteration   8: 569.265 ns/op
Iteration   9: 566.064 ns/op
Iteration  10: 567.476 ns/op
Iteration  11: 566.695 ns/op
Iteration  12: 567.531 ns/op
Iteration  13: 564.388 ns/op
Iteration  14: 567.880 ns/op
Iteration  15: 563.986 ns/op
Iteration  16: 568.033 ns/op
Iteration  17: 567.254 ns/op
Iteration  18: 570.127 ns/op
Iteration  19: 566.638 ns/op
Iteration  20: 565.802 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigAsYaml":
  577.014 ±(99.9%) 5.797 ns/op [Average]
  (min, avg, max) = (563.285, 577.014, 592.652), stdev = 10.305
  CI (99.9%): [571.217, 582.811] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigDefaultStrategyNotAdditive

# Run progress: 57.68% complete, ETA 01:40:07
# Fork: 1 of 2
# Warmup Iteration   1: 3669.479 ns/op
# Warmup Iteration   2: 591.919 ns/op
# Warmup Iteration   3: 486.707 ns/op
# Warmup Iteration   4: 483.017 ns/op
# Warmup Iteration   5: 483.396 ns/op
# Warmup Iteration   6: 489.405 ns/op
# Warmup Iteration   7: 485.287 ns/op
# Warmup Iteration   8: 484.083 ns/op
# Warmup Iteration   9: 481.752 ns/op
# Warmup Iteration  10: 484.461 ns/op
Iteration   1: 484.651 ns/op
Iteration   2: 483.731 ns/op
Iteration   3: 484.434 ns/op
Iteration   4: 484.078 ns/op
Iteration   5: 482.897 ns/op
Iteration   6: 487.504 ns/op
Iteration   7: 482.263 ns/op
Iteration   8: 483.782 ns/op
Iteration   9: 486.457 ns/op
Iteration  10: 484.504 ns/op
Iteration  11: 483.359 ns/op
Iteration  12: 485.093 ns/op
Iteration  13: 486.048 ns/op
Iteration  14: 483.073 ns/op
Iteration  15: 485.179 ns/op
Iteration  16: 485.385 ns/op
Iteration  17: 487.003 ns/op
Iteration  18: 485.711 ns/op
Iteration  19: 482.799 ns/op
Iteration  20: 483.777 ns/op

# Run progress: 57.76% complete, ETA 01:40:11
# Fork: 2 of 2
# Warmup Iteration   1: 3080.540 ns/op
# Warmup Iteration   2: 600.898 ns/op
# Warmup Iteration   3: 499.483 ns/op
# Warmup Iteration   4: 499.590 ns/op
# Warmup Iteration   5: 499.355 ns/op
# Warmup Iteration   6: 498.290 ns/op
# Warmup Iteration   7: 497.340 ns/op
# Warmup Iteration   8: 498.512 ns/op
# Warmup Iteration   9: 498.300 ns/op
# Warmup Iteration  10: 499.576 ns/op
Iteration   1: 498.700 ns/op
Iteration   2: 497.378 ns/op
Iteration   3: 498.972 ns/op
Iteration   4: 499.509 ns/op
Iteration   5: 498.997 ns/op
Iteration   6: 499.343 ns/op
Iteration   7: 500.203 ns/op
Iteration   8: 497.840 ns/op
Iteration   9: 499.644 ns/op
Iteration  10: 499.610 ns/op
Iteration  11: 497.793 ns/op
Iteration  12: 498.217 ns/op
Iteration  13: 501.061 ns/op
Iteration  14: 501.500 ns/op
Iteration  15: 500.248 ns/op
Iteration  16: 497.546 ns/op
Iteration  17: 497.351 ns/op
Iteration  18: 501.057 ns/op
Iteration  19: 499.272 ns/op
Iteration  20: 501.140 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigDefaultStrategyNotAdditive":
  491.928 ±(99.9%) 4.253 ns/op [Average]
  (min, avg, max) = (482.263, 491.928, 501.500), stdev = 7.560
  CI (99.9%): [487.675, 496.181] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigEqualsAssertingConfig

# Run progress: 57.83% complete, ETA 01:40:14
# Fork: 1 of 2
# Warmup Iteration   1: 8510.930 ns/op
# Warmup Iteration   2: 1691.148 ns/op
# Warmup Iteration   3: 1158.198 ns/op
# Warmup Iteration   4: 1123.352 ns/op
# Warmup Iteration   5: 1125.540 ns/op
# Warmup Iteration   6: 1120.908 ns/op
# Warmup Iteration   7: 1117.456 ns/op
# Warmup Iteration   8: 1115.465 ns/op
# Warmup Iteration   9: 1122.475 ns/op
# Warmup Iteration  10: 1117.428 ns/op
Iteration   1: 1116.424 ns/op
Iteration   2: 1117.708 ns/op
Iteration   3: 1115.718 ns/op
Iteration   4: 1116.939 ns/op
Iteration   5: 1119.851 ns/op
Iteration   6: 1135.634 ns/op
Iteration   7: 1116.517 ns/op
Iteration   8: 1116.986 ns/op
Iteration   9: 1119.476 ns/op
Iteration  10: 1123.110 ns/op
Iteration  11: 1119.875 ns/op
Iteration  12: 1124.462 ns/op
Iteration  13: 1116.278 ns/op
Iteration  14: 1116.928 ns/op
Iteration  15: 1117.525 ns/op
Iteration  16: 1123.046 ns/op
Iteration  17: 1119.913 ns/op
Iteration  18: 1120.867 ns/op
Iteration  19: 1117.808 ns/op
Iteration  20: 1118.153 ns/op

# Run progress: 57.91% complete, ETA 01:40:18
# Fork: 2 of 2
# Warmup Iteration   1: 8380.980 ns/op
# Warmup Iteration   2: 1605.175 ns/op
# Warmup Iteration   3: 1083.762 ns/op
# Warmup Iteration   4: 1079.190 ns/op
# Warmup Iteration   5: 1080.487 ns/op
# Warmup Iteration   6: 1080.157 ns/op
# Warmup Iteration   7: 1081.591 ns/op
# Warmup Iteration   8: 1083.603 ns/op
# Warmup Iteration   9: 1081.540 ns/op
# Warmup Iteration  10: 1078.724 ns/op
Iteration   1: 1073.686 ns/op
Iteration   2: 1076.683 ns/op
Iteration   3: 1081.339 ns/op
Iteration   4: 1077.060 ns/op
Iteration   5: 1076.699 ns/op
Iteration   6: 1090.386 ns/op
Iteration   7: 1082.482 ns/op
Iteration   8: 1083.927 ns/op
Iteration   9: 1079.432 ns/op
Iteration  10: 1087.910 ns/op
Iteration  11: 1080.048 ns/op
Iteration  12: 1077.018 ns/op
Iteration  13: 1080.850 ns/op
Iteration  14: 1080.658 ns/op
Iteration  15: 1082.657 ns/op
Iteration  16: 1078.674 ns/op
Iteration  17: 1081.241 ns/op
Iteration  18: 1080.374 ns/op
Iteration  19: 1084.852 ns/op
Iteration  20: 1080.093 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigEqualsAssertingConfig":
  1100.232 ±(99.9%) 11.317 ns/op [Average]
  (min, avg, max) = (1073.686, 1100.232, 1135.634), stdev = 20.116
  CI (99.9%): [1088.915, 1111.549] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigEqualsAssertingConfig_WhenProxyConfigDescriptionDifferent

# Run progress: 57.98% complete, ETA 01:40:21
# Fork: 1 of 2
# Warmup Iteration   1: 2960.590 ns/op
# Warmup Iteration   2: 579.844 ns/op
# Warmup Iteration   3: 509.864 ns/op
# Warmup Iteration   4: 510.252 ns/op
# Warmup Iteration   5: 509.085 ns/op
# Warmup Iteration   6: 509.969 ns/op
# Warmup Iteration   7: 509.543 ns/op
# Warmup Iteration   8: 512.101 ns/op
# Warmup Iteration   9: 509.235 ns/op
# Warmup Iteration  10: 510.112 ns/op
Iteration   1: 512.632 ns/op
Iteration   2: 510.349 ns/op
Iteration   3: 509.528 ns/op
Iteration   4: 510.938 ns/op
Iteration   5: 509.454 ns/op
Iteration   6: 511.096 ns/op
Iteration   7: 504.450 ns/op
Iteration   8: 511.832 ns/op
Iteration   9: 505.778 ns/op
Iteration  10: 507.431 ns/op
Iteration  11: 511.191 ns/op
Iteration  12: 508.509 ns/op
Iteration  13: 508.756 ns/op
Iteration  14: 509.618 ns/op
Iteration  15: 508.906 ns/op
Iteration  16: 511.659 ns/op
Iteration  17: 506.376 ns/op
Iteration  18: 507.686 ns/op
Iteration  19: 511.471 ns/op
Iteration  20: 510.676 ns/op

# Run progress: 58.06% complete, ETA 01:40:25
# Fork: 2 of 2
# Warmup Iteration   1: 5172.412 ns/op
# Warmup Iteration   2: 723.847 ns/op
# Warmup Iteration   3: 519.584 ns/op
# Warmup Iteration   4: 521.597 ns/op
# Warmup Iteration   5: 519.177 ns/op
# Warmup Iteration   6: 516.784 ns/op
# Warmup Iteration   7: 514.920 ns/op
# Warmup Iteration   8: 516.154 ns/op
# Warmup Iteration   9: 519.091 ns/op
# Warmup Iteration  10: 520.397 ns/op
Iteration   1: 517.989 ns/op
Iteration   2: 518.711 ns/op
Iteration   3: 516.111 ns/op
Iteration   4: 521.073 ns/op
Iteration   5: 520.257 ns/op
Iteration   6: 522.570 ns/op
Iteration   7: 518.449 ns/op
Iteration   8: 519.257 ns/op
Iteration   9: 518.524 ns/op
Iteration  10: 516.731 ns/op
Iteration  11: 518.415 ns/op
Iteration  12: 517.318 ns/op
Iteration  13: 516.691 ns/op
Iteration  14: 519.072 ns/op
Iteration  15: 516.489 ns/op
Iteration  16: 518.133 ns/op
Iteration  17: 516.394 ns/op
Iteration  18: 518.932 ns/op
Iteration  19: 516.720 ns/op
Iteration  20: 517.740 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigEqualsAssertingConfig_WhenProxyConfigDescriptionDifferent":
  513.848 ±(99.9%) 2.747 ns/op [Average]
  (min, avg, max) = (504.450, 513.848, 522.570), stdev = 4.883
  CI (99.9%): [511.101, 516.595] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigEqualsAssertingConfig_WhenProxyNameNull

# Run progress: 58.13% complete, ETA 01:40:28
# Fork: 1 of 2
# Warmup Iteration   1: 4676.588 ns/op
# Warmup Iteration   2: 708.513 ns/op
# Warmup Iteration   3: 521.006 ns/op
# Warmup Iteration   4: 519.172 ns/op
# Warmup Iteration   5: 518.851 ns/op
# Warmup Iteration   6: 520.399 ns/op
# Warmup Iteration   7: 516.854 ns/op
# Warmup Iteration   8: 517.656 ns/op
# Warmup Iteration   9: 519.141 ns/op
# Warmup Iteration  10: 518.275 ns/op
Iteration   1: 518.720 ns/op
Iteration   2: 517.952 ns/op
Iteration   3: 521.075 ns/op
Iteration   4: 520.912 ns/op
Iteration   5: 519.239 ns/op
Iteration   6: 526.135 ns/op
Iteration   7: 521.066 ns/op
Iteration   8: 517.748 ns/op
Iteration   9: 518.595 ns/op
Iteration  10: 526.752 ns/op
Iteration  11: 519.051 ns/op
Iteration  12: 517.550 ns/op
Iteration  13: 518.914 ns/op
Iteration  14: 520.800 ns/op
Iteration  15: 522.082 ns/op
Iteration  16: 521.075 ns/op
Iteration  17: 523.733 ns/op
Iteration  18: 517.404 ns/op
Iteration  19: 519.964 ns/op
Iteration  20: 521.309 ns/op

# Run progress: 58.21% complete, ETA 01:40:31
# Fork: 2 of 2
# Warmup Iteration   1: 4571.644 ns/op
# Warmup Iteration   2: 679.797 ns/op
# Warmup Iteration   3: 517.906 ns/op
# Warmup Iteration   4: 517.174 ns/op
# Warmup Iteration   5: 514.426 ns/op
# Warmup Iteration   6: 514.672 ns/op
# Warmup Iteration   7: 515.664 ns/op
# Warmup Iteration   8: 532.261 ns/op
# Warmup Iteration   9: 536.037 ns/op
# Warmup Iteration  10: 515.281 ns/op
Iteration   1: 515.916 ns/op
Iteration   2: 516.598 ns/op
Iteration   3: 535.712 ns/op
Iteration   4: 514.429 ns/op
Iteration   5: 537.690 ns/op
Iteration   6: 523.196 ns/op
Iteration   7: 512.125 ns/op
Iteration   8: 540.263 ns/op
Iteration   9: 515.897 ns/op
Iteration  10: 514.768 ns/op
Iteration  11: 513.781 ns/op
Iteration  12: 512.814 ns/op
Iteration  13: 513.567 ns/op
Iteration  14: 516.658 ns/op
Iteration  15: 513.646 ns/op
Iteration  16: 517.761 ns/op
Iteration  17: 518.647 ns/op
Iteration  18: 513.494 ns/op
Iteration  19: 515.155 ns/op
Iteration  20: 515.813 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigEqualsAssertingConfig_WhenProxyNameNull":
  519.700 ±(99.9%) 3.549 ns/op [Average]
  (min, avg, max) = (512.125, 519.700, 540.263), stdev = 6.309
  CI (99.9%): [516.151, 523.250] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigHasDefaultUuid

# Run progress: 58.28% complete, ETA 01:40:34
# Fork: 1 of 2
# Warmup Iteration   1: 2805.804 ns/op
# Warmup Iteration   2: 537.496 ns/op
# Warmup Iteration   3: 454.796 ns/op
# Warmup Iteration   4: 454.181 ns/op
# Warmup Iteration   5: 453.368 ns/op
# Warmup Iteration   6: 456.194 ns/op
# Warmup Iteration   7: 451.002 ns/op
# Warmup Iteration   8: 451.299 ns/op
# Warmup Iteration   9: 452.210 ns/op
# Warmup Iteration  10: 451.494 ns/op
Iteration   1: 452.437 ns/op
Iteration   2: 450.353 ns/op
Iteration   3: 453.628 ns/op
Iteration   4: 450.553 ns/op
Iteration   5: 451.734 ns/op
Iteration   6: 451.501 ns/op
Iteration   7: 452.573 ns/op
Iteration   8: 450.662 ns/op
Iteration   9: 448.224 ns/op
Iteration  10: 449.688 ns/op
Iteration  11: 453.317 ns/op
Iteration  12: 449.581 ns/op
Iteration  13: 451.596 ns/op
Iteration  14: 448.737 ns/op
Iteration  15: 451.278 ns/op
Iteration  16: 449.355 ns/op
Iteration  17: 450.096 ns/op
Iteration  18: 448.191 ns/op
Iteration  19: 448.309 ns/op
Iteration  20: 450.248 ns/op

# Run progress: 58.36% complete, ETA 01:40:37
# Fork: 2 of 2
# Warmup Iteration   1: 3013.508 ns/op
# Warmup Iteration   2: 529.521 ns/op
# Warmup Iteration   3: 443.264 ns/op
# Warmup Iteration   4: 445.817 ns/op
# Warmup Iteration   5: 444.664 ns/op
# Warmup Iteration   6: 445.150 ns/op
# Warmup Iteration   7: 446.127 ns/op
# Warmup Iteration   8: 446.324 ns/op
# Warmup Iteration   9: 445.758 ns/op
# Warmup Iteration  10: 447.194 ns/op
Iteration   1: 446.201 ns/op
Iteration   2: 445.490 ns/op
Iteration   3: 446.280 ns/op
Iteration   4: 446.073 ns/op
Iteration   5: 446.274 ns/op
Iteration   6: 447.110 ns/op
Iteration   7: 444.329 ns/op
Iteration   8: 444.889 ns/op
Iteration   9: 444.914 ns/op
Iteration  10: 444.883 ns/op
Iteration  11: 444.218 ns/op
Iteration  12: 445.642 ns/op
Iteration  13: 446.024 ns/op
Iteration  14: 446.291 ns/op
Iteration  15: 445.668 ns/op
Iteration  16: 442.805 ns/op
Iteration  17: 443.999 ns/op
Iteration  18: 445.018 ns/op
Iteration  19: 443.852 ns/op
Iteration  20: 445.825 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigHasDefaultUuid":
  447.946 ±(99.9%) 1.698 ns/op [Average]
  (min, avg, max) = (442.805, 447.946, 453.628), stdev = 3.018
  CI (99.9%): [446.248, 449.644] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigHasNoHeaders

# Run progress: 58.43% complete, ETA 01:40:40
# Fork: 1 of 2
# Warmup Iteration   1: 3614.286 ns/op
# Warmup Iteration   2: 633.808 ns/op
# Warmup Iteration   3: 479.941 ns/op
# Warmup Iteration   4: 480.234 ns/op
# Warmup Iteration   5: 478.629 ns/op
# Warmup Iteration   6: 475.215 ns/op
# Warmup Iteration   7: 479.235 ns/op
# Warmup Iteration   8: 477.909 ns/op
# Warmup Iteration   9: 478.579 ns/op
# Warmup Iteration  10: 478.278 ns/op
Iteration   1: 478.749 ns/op
Iteration   2: 477.310 ns/op
Iteration   3: 476.708 ns/op
Iteration   4: 477.683 ns/op
Iteration   5: 477.364 ns/op
Iteration   6: 481.923 ns/op
Iteration   7: 479.449 ns/op
Iteration   8: 479.171 ns/op
Iteration   9: 476.657 ns/op
Iteration  10: 476.794 ns/op
Iteration  11: 475.994 ns/op
Iteration  12: 477.546 ns/op
Iteration  13: 479.720 ns/op
Iteration  14: 480.754 ns/op
Iteration  15: 478.650 ns/op
Iteration  16: 479.892 ns/op
Iteration  17: 477.884 ns/op
Iteration  18: 476.078 ns/op
Iteration  19: 478.924 ns/op
Iteration  20: 480.293 ns/op

# Run progress: 58.51% complete, ETA 01:40:43
# Fork: 2 of 2
# Warmup Iteration   1: 4102.798 ns/op
# Warmup Iteration   2: 625.331 ns/op
# Warmup Iteration   3: 471.444 ns/op
# Warmup Iteration   4: 468.137 ns/op
# Warmup Iteration   5: 466.653 ns/op
# Warmup Iteration   6: 465.859 ns/op
# Warmup Iteration   7: 466.033 ns/op
# Warmup Iteration   8: 470.140 ns/op
# Warmup Iteration   9: 466.094 ns/op
# Warmup Iteration  10: 467.024 ns/op
Iteration   1: 467.984 ns/op
Iteration   2: 468.410 ns/op
Iteration   3: 468.455 ns/op
Iteration   4: 469.188 ns/op
Iteration   5: 467.897 ns/op
Iteration   6: 467.039 ns/op
Iteration   7: 466.747 ns/op
Iteration   8: 470.097 ns/op
Iteration   9: 468.811 ns/op
Iteration  10: 468.463 ns/op
Iteration  11: 470.486 ns/op
Iteration  12: 475.903 ns/op
Iteration  13: 469.798 ns/op
Iteration  14: 468.374 ns/op
Iteration  15: 468.101 ns/op
Iteration  16: 466.594 ns/op
Iteration  17: 466.982 ns/op
Iteration  18: 468.185 ns/op
Iteration  19: 468.225 ns/op
Iteration  20: 465.332 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigHasNoHeaders":
  473.465 ±(99.9%) 2.990 ns/op [Average]
  (min, avg, max) = (465.332, 473.465, 481.923), stdev = 5.315
  CI (99.9%): [470.475, 476.456] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigHashCode

# Run progress: 58.58% complete, ETA 01:40:46
# Fork: 1 of 2
# Warmup Iteration   1: 7457.892 ns/op
# Warmup Iteration   2: 1153.990 ns/op
# Warmup Iteration   3: 828.492 ns/op
# Warmup Iteration   4: 824.244 ns/op
# Warmup Iteration   5: 827.795 ns/op
# Warmup Iteration   6: 824.811 ns/op
# Warmup Iteration   7: 824.371 ns/op
# Warmup Iteration   8: 826.223 ns/op
# Warmup Iteration   9: 826.853 ns/op
# Warmup Iteration  10: 831.673 ns/op
Iteration   1: 827.435 ns/op
Iteration   2: 826.770 ns/op
Iteration   3: 823.404 ns/op
Iteration   4: 826.389 ns/op
Iteration   5: 826.186 ns/op
Iteration   6: 827.896 ns/op
Iteration   7: 825.794 ns/op
Iteration   8: 828.879 ns/op
Iteration   9: 825.050 ns/op
Iteration  10: 825.774 ns/op
Iteration  11: 826.132 ns/op
Iteration  12: 824.653 ns/op
Iteration  13: 829.036 ns/op
Iteration  14: 825.829 ns/op
Iteration  15: 823.539 ns/op
Iteration  16: 827.605 ns/op
Iteration  17: 825.270 ns/op
Iteration  18: 826.140 ns/op
Iteration  19: 827.996 ns/op
Iteration  20: 832.956 ns/op

# Run progress: 58.66% complete, ETA 01:40:48
# Fork: 2 of 2
# Warmup Iteration   1: 7386.151 ns/op
# Warmup Iteration   2: 1148.230 ns/op
# Warmup Iteration   3: 809.398 ns/op
# Warmup Iteration   4: 810.258 ns/op
# Warmup Iteration   5: 816.862 ns/op
# Warmup Iteration   6: 810.869 ns/op
# Warmup Iteration   7: 808.210 ns/op
# Warmup Iteration   8: 808.091 ns/op
# Warmup Iteration   9: 812.300 ns/op
# Warmup Iteration  10: 815.240 ns/op
Iteration   1: 809.767 ns/op
Iteration   2: 812.176 ns/op
Iteration   3: 810.230 ns/op
Iteration   4: 808.695 ns/op
Iteration   5: 806.652 ns/op
Iteration   6: 809.528 ns/op
Iteration   7: 811.123 ns/op
Iteration   8: 812.159 ns/op
Iteration   9: 814.540 ns/op
Iteration  10: 805.241 ns/op
Iteration  11: 813.046 ns/op
Iteration  12: 808.665 ns/op
Iteration  13: 810.713 ns/op
Iteration  14: 810.317 ns/op
Iteration  15: 807.818 ns/op
Iteration  16: 811.056 ns/op
Iteration  17: 813.207 ns/op
Iteration  18: 808.337 ns/op
Iteration  19: 812.449 ns/op
Iteration  20: 811.391 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigHashCode":
  818.496 ±(99.9%) 4.802 ns/op [Average]
  (min, avg, max) = (805.241, 818.496, 832.956), stdev = 8.535
  CI (99.9%): [813.694, 823.298] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigNameResetsToDefaultUuid

# Run progress: 58.73% complete, ETA 01:40:51
# Fork: 1 of 2
# Warmup Iteration   1: 5595.736 ns/op
# Warmup Iteration   2: 762.984 ns/op
# Warmup Iteration   3: 564.874 ns/op
# Warmup Iteration   4: 561.899 ns/op
# Warmup Iteration   5: 561.926 ns/op
# Warmup Iteration   6: 559.029 ns/op
# Warmup Iteration   7: 565.510 ns/op
# Warmup Iteration   8: 561.913 ns/op
# Warmup Iteration   9: 563.607 ns/op
# Warmup Iteration  10: 563.991 ns/op
Iteration   1: 565.928 ns/op
Iteration   2: 561.040 ns/op
Iteration   3: 561.207 ns/op
Iteration   4: 561.886 ns/op
Iteration   5: 559.881 ns/op
Iteration   6: 565.341 ns/op
Iteration   7: 562.182 ns/op
Iteration   8: 560.893 ns/op
Iteration   9: 562.490 ns/op
Iteration  10: 559.737 ns/op
Iteration  11: 565.664 ns/op
Iteration  12: 562.117 ns/op
Iteration  13: 557.937 ns/op
Iteration  14: 562.468 ns/op
Iteration  15: 559.810 ns/op
Iteration  16: 563.091 ns/op
Iteration  17: 559.491 ns/op
Iteration  18: 561.316 ns/op
Iteration  19: 561.170 ns/op
Iteration  20: 563.224 ns/op

# Run progress: 58.81% complete, ETA 01:40:53
# Fork: 2 of 2
# Warmup Iteration   1: 5213.964 ns/op
# Warmup Iteration   2: 755.156 ns/op
# Warmup Iteration   3: 561.326 ns/op
# Warmup Iteration   4: 561.603 ns/op
# Warmup Iteration   5: 563.194 ns/op
# Warmup Iteration   6: 559.728 ns/op
# Warmup Iteration   7: 563.321 ns/op
# Warmup Iteration   8: 560.182 ns/op
# Warmup Iteration   9: 560.878 ns/op
# Warmup Iteration  10: 563.989 ns/op
Iteration   1: 562.602 ns/op
Iteration   2: 561.473 ns/op
Iteration   3: 562.401 ns/op
Iteration   4: 559.436 ns/op
Iteration   5: 564.078 ns/op
Iteration   6: 569.358 ns/op
Iteration   7: 559.014 ns/op
Iteration   8: 560.546 ns/op
Iteration   9: 559.810 ns/op
Iteration  10: 562.671 ns/op
Iteration  11: 561.337 ns/op
Iteration  12: 558.247 ns/op
Iteration  13: 562.995 ns/op
Iteration  14: 561.151 ns/op
Iteration  15: 557.886 ns/op
Iteration  16: 560.734 ns/op
Iteration  17: 559.475 ns/op
Iteration  18: 562.026 ns/op
Iteration  19: 560.801 ns/op
Iteration  20: 558.257 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigNameResetsToDefaultUuid":
  561.529 ±(99.9%) 1.318 ns/op [Average]
  (min, avg, max) = (557.886, 561.529, 569.358), stdev = 2.344
  CI (99.9%): [560.211, 562.848] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigNotEqualsAssertingConfig

# Run progress: 58.89% complete, ETA 01:40:56
# Fork: 1 of 2
# Warmup Iteration   1: 6186.555 ns/op
# Warmup Iteration   2: 892.095 ns/op
# Warmup Iteration   3: 690.786 ns/op
# Warmup Iteration   4: 688.072 ns/op
# Warmup Iteration   5: 689.959 ns/op
# Warmup Iteration   6: 689.068 ns/op
# Warmup Iteration   7: 687.741 ns/op
# Warmup Iteration   8: 687.161 ns/op
# Warmup Iteration   9: 687.621 ns/op
# Warmup Iteration  10: 690.549 ns/op
Iteration   1: 690.787 ns/op
Iteration   2: 689.223 ns/op
Iteration   3: 685.941 ns/op
Iteration   4: 688.519 ns/op
Iteration   5: 687.898 ns/op
Iteration   6: 693.994 ns/op
Iteration   7: 693.024 ns/op
Iteration   8: 692.380 ns/op
Iteration   9: 692.434 ns/op
Iteration  10: 692.523 ns/op
Iteration  11: 691.750 ns/op
Iteration  12: 692.135 ns/op
Iteration  13: 691.879 ns/op
Iteration  14: 693.975 ns/op
Iteration  15: 692.523 ns/op
Iteration  16: 695.105 ns/op
Iteration  17: 691.748 ns/op
Iteration  18: 692.041 ns/op
Iteration  19: 693.140 ns/op
Iteration  20: 693.533 ns/op

# Run progress: 58.96% complete, ETA 01:40:58
# Fork: 2 of 2
# Warmup Iteration   1: 6642.794 ns/op
# Warmup Iteration   2: 934.381 ns/op
# Warmup Iteration   3: 690.522 ns/op
# Warmup Iteration   4: 688.986 ns/op
# Warmup Iteration   5: 688.965 ns/op
# Warmup Iteration   6: 686.025 ns/op
# Warmup Iteration   7: 688.577 ns/op
# Warmup Iteration   8: 690.208 ns/op
# Warmup Iteration   9: 688.748 ns/op
# Warmup Iteration  10: 689.742 ns/op
Iteration   1: 689.810 ns/op
Iteration   2: 692.652 ns/op
Iteration   3: 684.599 ns/op
Iteration   4: 684.601 ns/op
Iteration   5: 686.503 ns/op
Iteration   6: 695.941 ns/op
Iteration   7: 689.490 ns/op
Iteration   8: 690.973 ns/op
Iteration   9: 690.964 ns/op
Iteration  10: 686.891 ns/op
Iteration  11: 688.921 ns/op
Iteration  12: 687.141 ns/op
Iteration  13: 689.459 ns/op
Iteration  14: 689.590 ns/op
Iteration  15: 688.407 ns/op
Iteration  16: 689.274 ns/op
Iteration  17: 692.483 ns/op
Iteration  18: 687.134 ns/op
Iteration  19: 689.708 ns/op
Iteration  20: 691.016 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigNotEqualsAssertingConfig":
  690.503 ±(99.9%) 1.558 ns/op [Average]
  (min, avg, max) = (684.599, 690.503, 695.941), stdev = 2.770
  CI (99.9%): [688.944, 692.061] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigNotEqualsAssertingConfigWithDifferentHeader

# Run progress: 59.04% complete, ETA 01:41:00
# Fork: 1 of 2
# Warmup Iteration   1: 8601.675 ns/op
# Warmup Iteration   2: 2144.215 ns/op
# Warmup Iteration   3: 1247.849 ns/op
# Warmup Iteration   4: 1197.988 ns/op
# Warmup Iteration   5: 1203.757 ns/op
# Warmup Iteration   6: 1201.130 ns/op
# Warmup Iteration   7: 1204.184 ns/op
# Warmup Iteration   8: 1207.279 ns/op
# Warmup Iteration   9: 1205.057 ns/op
# Warmup Iteration  10: 1201.860 ns/op
Iteration   1: 1209.949 ns/op
Iteration   2: 1207.300 ns/op
Iteration   3: 1217.762 ns/op
Iteration   4: 1205.055 ns/op
Iteration   5: 1202.799 ns/op
Iteration   6: 1216.978 ns/op
Iteration   7: 1203.341 ns/op
Iteration   8: 1209.642 ns/op
Iteration   9: 1207.956 ns/op
Iteration  10: 1208.113 ns/op
Iteration  11: 1202.658 ns/op
Iteration  12: 1204.280 ns/op
Iteration  13: 1205.086 ns/op
Iteration  14: 1206.781 ns/op
Iteration  15: 1206.558 ns/op
Iteration  16: 1210.587 ns/op
Iteration  17: 1209.889 ns/op
Iteration  18: 1221.409 ns/op
Iteration  19: 1215.374 ns/op
Iteration  20: 1208.938 ns/op

# Run progress: 59.11% complete, ETA 01:41:02
# Fork: 2 of 2
# Warmup Iteration   1: 8545.052 ns/op
# Warmup Iteration   2: 2061.669 ns/op
# Warmup Iteration   3: 1173.815 ns/op
# Warmup Iteration   4: 1184.128 ns/op
# Warmup Iteration   5: 1180.095 ns/op
# Warmup Iteration   6: 1176.627 ns/op
# Warmup Iteration   7: 1178.408 ns/op
# Warmup Iteration   8: 1180.256 ns/op
# Warmup Iteration   9: 1180.021 ns/op
# Warmup Iteration  10: 1177.220 ns/op
Iteration   1: 1181.894 ns/op
Iteration   2: 1179.099 ns/op
Iteration   3: 1174.852 ns/op
Iteration   4: 1175.713 ns/op
Iteration   5: 1180.844 ns/op
Iteration   6: 1183.277 ns/op
Iteration   7: 1219.614 ns/op
Iteration   8: 1172.239 ns/op
Iteration   9: 1179.723 ns/op
Iteration  10: 1176.589 ns/op
Iteration  11: 1181.828 ns/op
Iteration  12: 1176.837 ns/op
Iteration  13: 1176.832 ns/op
Iteration  14: 1176.879 ns/op
Iteration  15: 1171.611 ns/op
Iteration  16: 1172.757 ns/op
Iteration  17: 1179.648 ns/op
Iteration  18: 1176.999 ns/op
Iteration  19: 1173.469 ns/op
Iteration  20: 1176.121 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigNotEqualsAssertingConfigWithDifferentHeader":
  1194.182 ±(99.9%) 9.553 ns/op [Average]
  (min, avg, max) = (1171.611, 1194.182, 1221.409), stdev = 16.980
  CI (99.9%): [1184.629, 1203.735] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigNotEqualsAssertingConfig_WhenProxyNamesDifferent

# Run progress: 59.19% complete, ETA 01:41:05
# Fork: 1 of 2
# Warmup Iteration   1: 4831.045 ns/op
# Warmup Iteration   2: 651.244 ns/op
# Warmup Iteration   3: 520.618 ns/op
# Warmup Iteration   4: 515.409 ns/op
# Warmup Iteration   5: 515.219 ns/op
# Warmup Iteration   6: 517.311 ns/op
# Warmup Iteration   7: 514.467 ns/op
# Warmup Iteration   8: 520.130 ns/op
# Warmup Iteration   9: 518.488 ns/op
# Warmup Iteration  10: 516.618 ns/op
Iteration   1: 513.690 ns/op
Iteration   2: 514.595 ns/op
Iteration   3: 517.860 ns/op
Iteration   4: 515.025 ns/op
Iteration   5: 513.844 ns/op
Iteration   6: 520.717 ns/op
Iteration   7: 512.362 ns/op
Iteration   8: 515.695 ns/op
Iteration   9: 517.222 ns/op
Iteration  10: 516.028 ns/op
Iteration  11: 513.902 ns/op
Iteration  12: 517.869 ns/op
Iteration  13: 518.580 ns/op
Iteration  14: 517.499 ns/op
Iteration  15: 518.822 ns/op
Iteration  16: 515.448 ns/op
Iteration  17: 519.500 ns/op
Iteration  18: 516.561 ns/op
Iteration  19: 516.036 ns/op
Iteration  20: 515.764 ns/op

# Run progress: 59.26% complete, ETA 01:41:07
# Fork: 2 of 2
# Warmup Iteration   1: 4708.836 ns/op
# Warmup Iteration   2: 695.013 ns/op
# Warmup Iteration   3: 507.836 ns/op
# Warmup Iteration   4: 508.730 ns/op
# Warmup Iteration   5: 506.768 ns/op
# Warmup Iteration   6: 507.311 ns/op
# Warmup Iteration   7: 508.856 ns/op
# Warmup Iteration   8: 508.361 ns/op
# Warmup Iteration   9: 507.391 ns/op
# Warmup Iteration  10: 505.583 ns/op
Iteration   1: 504.900 ns/op
Iteration   2: 504.135 ns/op
Iteration   3: 505.618 ns/op
Iteration   4: 508.592 ns/op
Iteration   5: 506.067 ns/op
Iteration   6: 510.694 ns/op
Iteration   7: 507.081 ns/op
Iteration   8: 506.009 ns/op
Iteration   9: 507.620 ns/op
Iteration  10: 507.046 ns/op
Iteration  11: 507.203 ns/op
Iteration  12: 506.713 ns/op
Iteration  13: 506.169 ns/op
Iteration  14: 503.384 ns/op
Iteration  15: 506.189 ns/op
Iteration  16: 505.671 ns/op
Iteration  17: 512.738 ns/op
Iteration  18: 523.557 ns/op
Iteration  19: 522.961 ns/op
Iteration  20: 520.446 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigNotEqualsAssertingConfig_WhenProxyNamesDifferent":
  512.745 ±(99.9%) 3.259 ns/op [Average]
  (min, avg, max) = (503.384, 512.745, 523.557), stdev = 5.793
  CI (99.9%): [509.486, 516.005] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigNotEqualsAssertingConfig_WhenProxyPropertiesDifferent

# Run progress: 59.34% complete, ETA 01:41:08
# Fork: 1 of 2
# Warmup Iteration   1: 5851.697 ns/op
# Warmup Iteration   2: 928.206 ns/op
# Warmup Iteration   3: 675.050 ns/op
# Warmup Iteration   4: 677.653 ns/op
# Warmup Iteration   5: 667.746 ns/op
# Warmup Iteration   6: 654.259 ns/op
# Warmup Iteration   7: 656.958 ns/op
# Warmup Iteration   8: 656.044 ns/op
# Warmup Iteration   9: 653.350 ns/op
# Warmup Iteration  10: 654.661 ns/op
Iteration   1: 656.243 ns/op
Iteration   2: 655.158 ns/op
Iteration   3: 651.654 ns/op
Iteration   4: 658.613 ns/op
Iteration   5: 656.361 ns/op
Iteration   6: 659.147 ns/op
Iteration   7: 654.917 ns/op
Iteration   8: 658.182 ns/op
Iteration   9: 656.755 ns/op
Iteration  10: 661.811 ns/op
Iteration  11: 656.888 ns/op
Iteration  12: 655.439 ns/op
Iteration  13: 654.518 ns/op
Iteration  14: 658.462 ns/op
Iteration  15: 655.094 ns/op
Iteration  16: 656.620 ns/op
Iteration  17: 657.671 ns/op
Iteration  18: 660.678 ns/op
Iteration  19: 658.756 ns/op
Iteration  20: 654.744 ns/op

# Run progress: 59.41% complete, ETA 01:41:10
# Fork: 2 of 2
# Warmup Iteration   1: 5461.768 ns/op
# Warmup Iteration   2: 827.841 ns/op
# Warmup Iteration   3: 648.919 ns/op
# Warmup Iteration   4: 647.358 ns/op
# Warmup Iteration   5: 646.969 ns/op
# Warmup Iteration   6: 646.539 ns/op
# Warmup Iteration   7: 647.897 ns/op
# Warmup Iteration   8: 652.853 ns/op
# Warmup Iteration   9: 652.161 ns/op
# Warmup Iteration  10: 650.839 ns/op
Iteration   1: 648.041 ns/op
Iteration   2: 650.511 ns/op
Iteration   3: 651.081 ns/op
Iteration   4: 647.094 ns/op
Iteration   5: 646.494 ns/op
Iteration   6: 656.905 ns/op
Iteration   7: 653.341 ns/op
Iteration   8: 652.450 ns/op
Iteration   9: 652.516 ns/op
Iteration  10: 650.839 ns/op
Iteration  11: 649.197 ns/op
Iteration  12: 652.357 ns/op
Iteration  13: 655.708 ns/op
Iteration  14: 653.009 ns/op
Iteration  15: 650.878 ns/op
Iteration  16: 655.883 ns/op
Iteration  17: 652.802 ns/op
Iteration  18: 654.103 ns/op
Iteration  19: 650.656 ns/op
Iteration  20: 647.581 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigNotEqualsAssertingConfig_WhenProxyPropertiesDifferent":
  654.229 ±(99.9%) 2.114 ns/op [Average]
  (min, avg, max) = (646.494, 654.229, 661.811), stdev = 3.757
  CI (99.9%): [652.115, 656.342] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigReturnsExpectedEndpointAndDescription

# Run progress: 59.49% complete, ETA 01:41:12
# Fork: 1 of 2
# Warmup Iteration   1: 6220.372 ns/op
# Warmup Iteration   2: 1093.706 ns/op
# Warmup Iteration   3: 676.978 ns/op
# Warmup Iteration   4: 676.389 ns/op
# Warmup Iteration   5: 676.711 ns/op
# Warmup Iteration   6: 675.903 ns/op
# Warmup Iteration   7: 674.892 ns/op
# Warmup Iteration   8: 675.596 ns/op
# Warmup Iteration   9: 675.393 ns/op
# Warmup Iteration  10: 674.328 ns/op
Iteration   1: 673.766 ns/op
Iteration   2: 675.415 ns/op
Iteration   3: 673.197 ns/op
Iteration   4: 673.752 ns/op
Iteration   5: 675.224 ns/op
Iteration   6: 678.604 ns/op
Iteration   7: 675.644 ns/op
Iteration   8: 676.381 ns/op
Iteration   9: 673.270 ns/op
Iteration  10: 675.473 ns/op
Iteration  11: 678.321 ns/op
Iteration  12: 676.920 ns/op
Iteration  13: 676.616 ns/op
Iteration  14: 672.843 ns/op
Iteration  15: 672.526 ns/op
Iteration  16: 676.230 ns/op
Iteration  17: 676.362 ns/op
Iteration  18: 678.457 ns/op
Iteration  19: 675.772 ns/op
Iteration  20: 676.241 ns/op

# Run progress: 59.56% complete, ETA 01:41:14
# Fork: 2 of 2
# Warmup Iteration   1: 6516.563 ns/op
# Warmup Iteration   2: 1121.400 ns/op
# Warmup Iteration   3: 673.814 ns/op
# Warmup Iteration   4: 673.551 ns/op
# Warmup Iteration   5: 675.444 ns/op
# Warmup Iteration   6: 671.653 ns/op
# Warmup Iteration   7: 674.270 ns/op
# Warmup Iteration   8: 673.720 ns/op
# Warmup Iteration   9: 674.342 ns/op
# Warmup Iteration  10: 677.744 ns/op
Iteration   1: 674.761 ns/op
Iteration   2: 675.654 ns/op
Iteration   3: 672.741 ns/op
Iteration   4: 673.310 ns/op
Iteration   5: 672.446 ns/op
Iteration   6: 679.412 ns/op
Iteration   7: 677.487 ns/op
Iteration   8: 677.639 ns/op
Iteration   9: 675.367 ns/op
Iteration  10: 677.572 ns/op
Iteration  11: 677.187 ns/op
Iteration  12: 675.443 ns/op
Iteration  13: 676.966 ns/op
Iteration  14: 676.494 ns/op
Iteration  15: 674.711 ns/op
Iteration  16: 678.674 ns/op
Iteration  17: 677.150 ns/op
Iteration  18: 674.729 ns/op
Iteration  19: 679.203 ns/op
Iteration  20: 677.265 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigReturnsExpectedEndpointAndDescription":
  675.881 ±(99.9%) 1.089 ns/op [Average]
  (min, avg, max) = (672.446, 675.881, 679.412), stdev = 1.936
  CI (99.9%): [674.792, 676.970] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigStrategyAdditive

# Run progress: 59.64% complete, ETA 01:41:15
# Fork: 1 of 2
# Warmup Iteration   1: 4719.413 ns/op
# Warmup Iteration   2: 738.291 ns/op
# Warmup Iteration   3: 528.439 ns/op
# Warmup Iteration   4: 526.061 ns/op
# Warmup Iteration   5: 525.764 ns/op
# Warmup Iteration   6: 526.178 ns/op
# Warmup Iteration   7: 525.366 ns/op
# Warmup Iteration   8: 525.947 ns/op
# Warmup Iteration   9: 526.069 ns/op
# Warmup Iteration  10: 526.383 ns/op
Iteration   1: 525.707 ns/op
Iteration   2: 524.328 ns/op
Iteration   3: 524.498 ns/op
Iteration   4: 525.464 ns/op
Iteration   5: 524.322 ns/op
Iteration   6: 525.561 ns/op
Iteration   7: 527.045 ns/op
Iteration   8: 525.093 ns/op
Iteration   9: 525.251 ns/op
Iteration  10: 527.396 ns/op
Iteration  11: 527.949 ns/op
Iteration  12: 526.111 ns/op
Iteration  13: 527.329 ns/op
Iteration  14: 526.936 ns/op
Iteration  15: 526.312 ns/op
Iteration  16: 529.057 ns/op
Iteration  17: 525.814 ns/op
Iteration  18: 525.305 ns/op
Iteration  19: 527.437 ns/op
Iteration  20: 525.278 ns/op

# Run progress: 59.71% complete, ETA 01:41:17
# Fork: 2 of 2
# Warmup Iteration   1: 3992.106 ns/op
# Warmup Iteration   2: 705.727 ns/op
# Warmup Iteration   3: 531.171 ns/op
# Warmup Iteration   4: 530.135 ns/op
# Warmup Iteration   5: 533.597 ns/op
# Warmup Iteration   6: 532.833 ns/op
# Warmup Iteration   7: 530.779 ns/op
# Warmup Iteration   8: 532.544 ns/op
# Warmup Iteration   9: 534.829 ns/op
# Warmup Iteration  10: 534.043 ns/op
Iteration   1: 529.630 ns/op
Iteration   2: 533.336 ns/op
Iteration   3: 529.533 ns/op
Iteration   4: 530.695 ns/op
Iteration   5: 532.410 ns/op
Iteration   6: 533.867 ns/op
Iteration   7: 530.104 ns/op
Iteration   8: 529.884 ns/op
Iteration   9: 529.015 ns/op
Iteration  10: 532.006 ns/op
Iteration  11: 531.871 ns/op
Iteration  12: 533.083 ns/op
Iteration  13: 532.113 ns/op
Iteration  14: 534.230 ns/op
Iteration  15: 531.128 ns/op
Iteration  16: 532.997 ns/op
Iteration  17: 532.219 ns/op
Iteration  18: 530.330 ns/op
Iteration  19: 531.588 ns/op
Iteration  20: 528.492 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigStrategyAdditive":
  528.768 ±(99.9%) 1.725 ns/op [Average]
  (min, avg, max) = (524.322, 528.768, 534.230), stdev = 3.067
  CI (99.9%): [527.043, 530.493] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_canMatchHttpCycleByUuid

# Run progress: 59.79% complete, ETA 01:41:18
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1339376012.000 ns/op
# Warmup Iteration   2: 7974187.246 ns/op
# Warmup Iteration   3: 3273644.062 ns/op
# Warmup Iteration   4: 2310406.654 ns/op
# Warmup Iteration   5: 2119931.774 ns/op
# Warmup Iteration   6: 1957146.557 ns/op
# Warmup Iteration   7: 2233410.167 ns/op
# Warmup Iteration   8: 1645049.531 ns/op
# Warmup Iteration   9: 1645569.431 ns/op
# Warmup Iteration  10: 1671898.528 ns/op
Iteration   1: 1497869.217 ns/op
Iteration   2: 1330162.561 ns/op
Iteration   3: 1340625.945 ns/op
Iteration   4: 1314253.286 ns/op
Iteration   5: 1384727.250 ns/op
Iteration   6: 1346615.665 ns/op
Iteration   7: 1312462.575 ns/op
Iteration   8: 1354050.011 ns/op
Iteration   9: 1118344.559 ns/op
Iteration  10: 1105618.701 ns/op
Iteration  11: 1001255.832 ns/op
Iteration  12: 1004600.998 ns/op
Iteration  13: 1135791.352 ns/op
Iteration  14: 1069851.742 ns/op
Iteration  15: 1171273.596 ns/op
Iteration  16: 995573.638 ns/op
Iteration  17: 1100265.085 ns/op
Iteration  18: 1482624.763 ns/op
Iteration  19: 1009982.514 ns/op
Iteration  20: 1104664.895 ns/op

# Run progress: 59.86% complete, ETA 01:41:20
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1282891573.000 ns/op
# Warmup Iteration   2: 6636954.763 ns/op
# Warmup Iteration   3: 2750856.332 ns/op
# Warmup Iteration   4: 2442837.461 ns/op
# Warmup Iteration   5: 2115430.460 ns/op
# Warmup Iteration   6: 2200198.541 ns/op
# Warmup Iteration   7: 1884772.021 ns/op
# Warmup Iteration   8: 1776713.036 ns/op
# Warmup Iteration   9: 1800633.486 ns/op
# Warmup Iteration  10: 1706988.563 ns/op
Iteration   1: 1541827.952 ns/op
Iteration   2: 1364641.799 ns/op
Iteration   3: 1521079.217 ns/op
Iteration   4: 1115818.249 ns/op
Iteration   5: 1522066.562 ns/op
Iteration   6: 1437978.513 ns/op
Iteration   7: 1334014.900 ns/op
Iteration   8: 1287232.658 ns/op
Iteration   9: 1086007.587 ns/op
Iteration  10: 1205153.869 ns/op
Iteration  11: 1079445.140 ns/op
Iteration  12: 1059485.478 ns/op
Iteration  13: 1049119.418 ns/op
Iteration  14: 944539.319 ns/op
Iteration  15: 1068027.316 ns/op
Iteration  16: 1230973.756 ns/op
Iteration  17: 1004941.039 ns/op
Iteration  18: 1105113.366 ns/op
Iteration  19: 958610.243 ns/op
Iteration  20: 987785.036 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_canMatchHttpCycleByUuid":
  1202111.890 ±(99.9%) 101377.519 ns/op [Average]
  (min, avg, max) = (944539.319, 1202111.890, 1541827.952), stdev = 180198.451
  CI (99.9%): [1100734.371, 1303489.409] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldApplyDefaultProxyConfigToHttpTransport_WhenResponseIsProxiable

# Run progress: 59.94% complete, ETA 01:41:22
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.http.StubbyHttpTransport.httpRequestFromStub(io.github.azagniotov.stubby4j.stubs.StubRequest, String)" because "this.mockStubbyHttpTransport" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldApplyDefaultProxyConfigToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1110)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldApplyDefaultProxyConfigToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1300)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldApplyDefaultProxyConfigToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldApplyDefaultProxyConfigToHttpTransport_WhenResponseIsProxiable_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldApplyDefaultProxyConfigToHttpTransport_WhenResponseIsProxiable_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldApplyDefaultProxyConfigToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldApplyDefaultProxyConfigToHttpTransport_WhenResponseIsProxiable_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldApplyDefaultProxyConfigToHttpTransport_WhenResponseIsProxiable_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 60.02% complete, ETA 01:41:04
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.http.StubbyHttpTransport.httpRequestFromStub(io.github.azagniotov.stubby4j.stubs.StubRequest, String)" because "this.mockStubbyHttpTransport" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldApplyDefaultProxyConfigToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1110)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldApplyDefaultProxyConfigToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1300)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldApplyDefaultProxyConfigToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldApplyDefaultProxyConfigToHttpTransport_WhenResponseIsProxiable_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldApplyDefaultProxyConfigToHttpTransport_WhenResponseIsProxiable_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldApplyDefaultProxyConfigToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldApplyDefaultProxyConfigToHttpTransport_WhenResponseIsProxiable_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldApplyDefaultProxyConfigToHttpTransport_WhenResponseIsProxiable_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldApplyDefaultProxyConfigWhenProxyConfigUuidHeaderIncorrectToHttpTransport_WhenResponseIsProxiable

# Run progress: 60.09% complete, ETA 01:40:46
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.http.StubbyHttpTransport.httpRequestFromStub(io.github.azagniotov.stubby4j.stubs.StubRequest, String)" because "this.mockStubbyHttpTransport" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldApplyDefaultProxyConfigWhenProxyConfigUuidHeaderIncorrectToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1346)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldApplyDefaultProxyConfigWhenProxyConfigUuidHeaderIncorrectToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1324)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldApplyDefaultProxyConfigWhenProxyConfigUuidHeaderIncorrectToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldApplyDefaultProxyConfigWhenProxyConfigUuidHeaderIncorrectToHttpTransport_WhenResponseIsProxiable_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldApplyDefaultProxyConfigWhenProxyConfigUuidHeaderIncorrectToHttpTransport_WhenResponseIsProxiable_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldApplyDefaultProxyConfigWhenProxyConfigUuidHeaderIncorrectToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldApplyDefaultProxyConfigWhenProxyConfigUuidHeaderIncorrectToHttpTransport_WhenResponseIsProxiable_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldApplyDefaultProxyConfigWhenProxyConfigUuidHeaderIncorrectToHttpTransport_WhenResponseIsProxiable_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 60.17% complete, ETA 01:40:28
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.http.StubbyHttpTransport.httpRequestFromStub(io.github.azagniotov.stubby4j.stubs.StubRequest, String)" because "this.mockStubbyHttpTransport" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldApplyDefaultProxyConfigWhenProxyConfigUuidHeaderIncorrectToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1346)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldApplyDefaultProxyConfigWhenProxyConfigUuidHeaderIncorrectToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1324)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldApplyDefaultProxyConfigWhenProxyConfigUuidHeaderIncorrectToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldApplyDefaultProxyConfigWhenProxyConfigUuidHeaderIncorrectToHttpTransport_WhenResponseIsProxiable_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldApplyDefaultProxyConfigWhenProxyConfigUuidHeaderIncorrectToHttpTransport_WhenResponseIsProxiable_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldApplyDefaultProxyConfigWhenProxyConfigUuidHeaderIncorrectToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldApplyDefaultProxyConfigWhenProxyConfigUuidHeaderIncorrectToHttpTransport_WhenResponseIsProxiable_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldApplyDefaultProxyConfigWhenProxyConfigUuidHeaderIncorrectToHttpTransport_WhenResponseIsProxiable_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldApplyProxyConfigAdditiveStrategyHeadersToHttpTransport_WhenResponseIsProxiable

# Run progress: 60.24% complete, ETA 01:40:10
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.http.StubbyHttpTransport.httpRequestFromStub(io.github.azagniotov.stubby4j.stubs.StubRequest, String)" because "this.mockStubbyHttpTransport" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldApplyProxyConfigAdditiveStrategyHeadersToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1167)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldApplyProxyConfigAdditiveStrategyHeadersToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1306)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldApplyProxyConfigAdditiveStrategyHeadersToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldApplyProxyConfigAdditiveStrategyHeadersToHttpTransport_WhenResponseIsProxiable_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldApplyProxyConfigAdditiveStrategyHeadersToHttpTransport_WhenResponseIsProxiable_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldApplyProxyConfigAdditiveStrategyHeadersToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldApplyProxyConfigAdditiveStrategyHeadersToHttpTransport_WhenResponseIsProxiable_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldApplyProxyConfigAdditiveStrategyHeadersToHttpTransport_WhenResponseIsProxiable_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 60.32% complete, ETA 01:39:52
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.http.StubbyHttpTransport.httpRequestFromStub(io.github.azagniotov.stubby4j.stubs.StubRequest, String)" because "this.mockStubbyHttpTransport" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldApplyProxyConfigAdditiveStrategyHeadersToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1167)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldApplyProxyConfigAdditiveStrategyHeadersToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1306)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldApplyProxyConfigAdditiveStrategyHeadersToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldApplyProxyConfigAdditiveStrategyHeadersToHttpTransport_WhenResponseIsProxiable_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldApplyProxyConfigAdditiveStrategyHeadersToHttpTransport_WhenResponseIsProxiable_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldApplyProxyConfigAdditiveStrategyHeadersToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldApplyProxyConfigAdditiveStrategyHeadersToHttpTransport_WhenResponseIsProxiable_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldApplyProxyConfigAdditiveStrategyHeadersToHttpTransport_WhenResponseIsProxiable_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldApplyProxyConfigByProxyConfigUuidHeaderToHttpTransport_WhenResponseIsProxiable

# Run progress: 60.39% complete, ETA 01:39:34
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.http.StubbyHttpTransport.httpRequestFromStub(io.github.azagniotov.stubby4j.stubs.StubRequest, String)" because "this.mockStubbyHttpTransport" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldApplyProxyConfigByProxyConfigUuidHeaderToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1271)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldApplyProxyConfigByProxyConfigUuidHeaderToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1318)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldApplyProxyConfigByProxyConfigUuidHeaderToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldApplyProxyConfigByProxyConfigUuidHeaderToHttpTransport_WhenResponseIsProxiable_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldApplyProxyConfigByProxyConfigUuidHeaderToHttpTransport_WhenResponseIsProxiable_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldApplyProxyConfigByProxyConfigUuidHeaderToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldApplyProxyConfigByProxyConfigUuidHeaderToHttpTransport_WhenResponseIsProxiable_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldApplyProxyConfigByProxyConfigUuidHeaderToHttpTransport_WhenResponseIsProxiable_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 60.47% complete, ETA 01:39:17
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.http.StubbyHttpTransport.httpRequestFromStub(io.github.azagniotov.stubby4j.stubs.StubRequest, String)" because "this.mockStubbyHttpTransport" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldApplyProxyConfigByProxyConfigUuidHeaderToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1271)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldApplyProxyConfigByProxyConfigUuidHeaderToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1318)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldApplyProxyConfigByProxyConfigUuidHeaderToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldApplyProxyConfigByProxyConfigUuidHeaderToHttpTransport_WhenResponseIsProxiable_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldApplyProxyConfigByProxyConfigUuidHeaderToHttpTransport_WhenResponseIsProxiable_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldApplyProxyConfigByProxyConfigUuidHeaderToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldApplyProxyConfigByProxyConfigUuidHeaderToHttpTransport_WhenResponseIsProxiable_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldApplyProxyConfigByProxyConfigUuidHeaderToHttpTransport_WhenResponseIsProxiable_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldDeleteOriginalHttpCycleList_WhenInvalidIndexGiven

# Run progress: 60.54% complete, ETA 01:38:59
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1287360585.000 ns/op
# Warmup Iteration   2: 7816729.984 ns/op
# Warmup Iteration   3: 4003731.437 ns/op
# Warmup Iteration   4: 3106232.065 ns/op
# Warmup Iteration   5: 2684086.263 ns/op
# Warmup Iteration   6: 2268055.268 ns/op
# Warmup Iteration   7: 2569659.692 ns/op
# Warmup Iteration   8: 2092995.490 ns/op
# Warmup Iteration   9: 1801740.644 ns/op
# Warmup Iteration  10: 1966378.646 ns/op
Iteration   1: 1563397.321 ns/op
Iteration   2: 1547290.530 ns/op
Iteration   3: 1675356.532 ns/op
Iteration   4: 1363836.619 ns/op
Iteration   5: 1323379.297 ns/op
Iteration   6: 1474318.105 ns/op
Iteration   7: 1463411.190 ns/op
Iteration   8: 1214409.445 ns/op
Iteration   9: 1211112.404 ns/op
Iteration  10: 1433502.702 ns/op
Iteration  11: 1247096.925 ns/op
Iteration  12: 1323840.052 ns/op
Iteration  13: 1098936.990 ns/op
Iteration  14: 1532763.496 ns/op
Iteration  15: 1095032.957 ns/op
Iteration  16: 1116494.897 ns/op
Iteration  17: 1183732.182 ns/op
Iteration  18: 1300436.111 ns/op
Iteration  19: 1072626.448 ns/op
Iteration  20: 1092221.996 ns/op

# Run progress: 60.62% complete, ETA 01:39:00
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1301891098.000 ns/op
# Warmup Iteration   2: 10325509.408 ns/op
# Warmup Iteration   3: 3357020.470 ns/op
# Warmup Iteration   4: 2797755.986 ns/op
# Warmup Iteration   5: 2314426.725 ns/op
# Warmup Iteration   6: 2525974.934 ns/op
# Warmup Iteration   7: 2068152.411 ns/op
# Warmup Iteration   8: 1986257.317 ns/op
# Warmup Iteration   9: 2032430.239 ns/op
# Warmup Iteration  10: 1713785.913 ns/op
Iteration   1: 1408664.742 ns/op
Iteration   2: 1521513.947 ns/op
Iteration   3: 1561154.669 ns/op
Iteration   4: 1332279.439 ns/op
Iteration   5: 1223147.863 ns/op
Iteration   6: 1649632.699 ns/op
Iteration   7: 1446480.049 ns/op
Iteration   8: 1199687.470 ns/op
Iteration   9: 1139582.339 ns/op
Iteration  10: 1613315.852 ns/op
Iteration  11: 1212485.337 ns/op
Iteration  12: 1193905.939 ns/op
Iteration  13: 1193671.326 ns/op
Iteration  14: 1291534.320 ns/op
Iteration  15: 1076084.829 ns/op
Iteration  16: 1280526.489 ns/op
Iteration  17: 1184197.876 ns/op
Iteration  18: 1061416.595 ns/op
Iteration  19: 1014161.611 ns/op
Iteration  20: 1018740.275 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldDeleteOriginalHttpCycleList_WhenInvalidIndexGiven":
  1298884.497 ±(99.9%) 105590.219 ns/op [Average]
  (min, avg, max) = (1014161.611, 1298884.497, 1675356.532), stdev = 187686.522
  CI (99.9%): [1193294.277, 1404474.716] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldDeleteOriginalHttpCycleList_WhenStubsDontExist

# Run progress: 60.69% complete, ETA 01:39:01
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1264976049.000 ns/op
# Warmup Iteration   2: 7650285.107 ns/op
# Warmup Iteration   3: 2767253.268 ns/op
# Warmup Iteration   4: 2232601.136 ns/op
# Warmup Iteration   5: 2026725.441 ns/op
# Warmup Iteration   6: 1963163.367 ns/op
# Warmup Iteration   7: 1846077.734 ns/op
# Warmup Iteration   8: 1819371.773 ns/op
# Warmup Iteration   9: 1530579.953 ns/op
# Warmup Iteration  10: 1518169.945 ns/op
Iteration   1: 1489983.970 ns/op
Iteration   2: 1316099.505 ns/op
Iteration   3: 1229116.459 ns/op
Iteration   4: 1235309.404 ns/op
Iteration   5: 1354017.262 ns/op
Iteration   6: 1202777.784 ns/op
Iteration   7: 1218936.202 ns/op
Iteration   8: 994683.028 ns/op
Iteration   9: 885691.972 ns/op
Iteration  10: 1170363.373 ns/op
Iteration  11: 1044708.155 ns/op
Iteration  12: 854536.704 ns/op
Iteration  13: 967425.926 ns/op
Iteration  14: 906233.745 ns/op
Iteration  15: 852132.926 ns/op
Iteration  16: 924573.987 ns/op
Iteration  17: 866290.771 ns/op
Iteration  18: 824635.870 ns/op
Iteration  19: 856627.466 ns/op
Iteration  20: 871351.931 ns/op

# Run progress: 60.77% complete, ETA 01:39:03
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1285130086.000 ns/op
# Warmup Iteration   2: 6081221.295 ns/op
# Warmup Iteration   3: 3438621.574 ns/op
# Warmup Iteration   4: 2437141.898 ns/op
# Warmup Iteration   5: 2136620.268 ns/op
# Warmup Iteration   6: 1906724.364 ns/op
# Warmup Iteration   7: 1737095.269 ns/op
# Warmup Iteration   8: 1816769.388 ns/op
# Warmup Iteration   9: 1400113.947 ns/op
# Warmup Iteration  10: 1217862.927 ns/op
Iteration   1: 1197611.963 ns/op
Iteration   2: 1108869.123 ns/op
Iteration   3: 1300912.774 ns/op
Iteration   4: 1359105.095 ns/op
Iteration   5: 1412657.764 ns/op
Iteration   6: 1176211.535 ns/op
Iteration   7: 1008818.723 ns/op
Iteration   8: 1236412.038 ns/op
Iteration   9: 1124633.500 ns/op
Iteration  10: 960321.159 ns/op
Iteration  11: 872374.874 ns/op
Iteration  12: 973538.117 ns/op
Iteration  13: 963304.248 ns/op
Iteration  14: 873632.294 ns/op
Iteration  15: 938366.787 ns/op
Iteration  16: 959232.633 ns/op
Iteration  17: 875397.654 ns/op
Iteration  18: 878434.034 ns/op
Iteration  19: 823634.975 ns/op
Iteration  20: 862900.481 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldDeleteOriginalHttpCycleList_WhenStubsDontExist":
  1049296.655 ±(99.9%) 107284.036 ns/op [Average]
  (min, avg, max) = (823634.975, 1049296.655, 1489983.970), stdev = 190697.281
  CI (99.9%): [942012.619, 1156580.692] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldDeleteOriginalHttpCycleList_WhenStubsExist

# Run progress: 60.84% complete, ETA 01:39:04
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1314491670.000 ns/op
# Warmup Iteration   2: 10271792.133 ns/op
# Warmup Iteration   3: 3794382.417 ns/op
# Warmup Iteration   4: 3071272.466 ns/op
# Warmup Iteration   5: 2517234.223 ns/op
# Warmup Iteration   6: 2476979.594 ns/op
# Warmup Iteration   7: 2028501.314 ns/op
# Warmup Iteration   8: 2204451.740 ns/op
# Warmup Iteration   9: 1942577.392 ns/op
# Warmup Iteration  10: 1657558.116 ns/op
Iteration   1: 1534953.178 ns/op
Iteration   2: 1464144.284 ns/op
Iteration   3: 1457748.780 ns/op
Iteration   4: 1341261.976 ns/op
Iteration   5: 1464877.151 ns/op
Iteration   6: 1616544.892 ns/op
Iteration   7: 1345227.590 ns/op
Iteration   8: 1167384.179 ns/op
Iteration   9: 1555758.827 ns/op
Iteration  10: 1248999.316 ns/op
Iteration  11: 1182428.916 ns/op
Iteration  12: 1271219.638 ns/op
Iteration  13: 1246927.031 ns/op
Iteration  14: 1160147.832 ns/op
Iteration  15: 1074078.706 ns/op
Iteration  16: 1073888.454 ns/op
Iteration  17: 1373282.322 ns/op
Iteration  18: 1152077.715 ns/op
Iteration  19: 1042674.626 ns/op
Iteration  20: 1214178.307 ns/op

# Run progress: 60.92% complete, ETA 01:39:05
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1336709202.000 ns/op
# Warmup Iteration   2: 7841418.411 ns/op
# Warmup Iteration   3: 3989023.451 ns/op
# Warmup Iteration   4: 2607580.857 ns/op
# Warmup Iteration   5: 2656011.446 ns/op
# Warmup Iteration   6: 2280785.610 ns/op
# Warmup Iteration   7: 2399565.405 ns/op
# Warmup Iteration   8: 2088710.898 ns/op
# Warmup Iteration   9: 1824273.525 ns/op
# Warmup Iteration  10: 2088952.019 ns/op
Iteration   1: 1434991.446 ns/op
Iteration   2: 1511358.899 ns/op
Iteration   3: 1277169.034 ns/op
Iteration   4: 1323954.851 ns/op
Iteration   5: 1443968.584 ns/op
Iteration   6: 1530349.654 ns/op
Iteration   7: 1792593.068 ns/op
Iteration   8: 1174052.035 ns/op
Iteration   9: 1293404.970 ns/op
Iteration  10: 1112754.003 ns/op
Iteration  11: 1235728.854 ns/op
Iteration  12: 1206530.414 ns/op
Iteration  13: 1471636.325 ns/op
Iteration  14: 1091304.347 ns/op
Iteration  15: 1212728.167 ns/op
Iteration  16: 1255102.757 ns/op
Iteration  17: 1152909.327 ns/op
Iteration  18: 1164149.628 ns/op
Iteration  19: 1276498.341 ns/op
Iteration  20: 1121050.944 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldDeleteOriginalHttpCycleList_WhenStubsExist":
  1301750.984 ±(99.9%) 97161.257 ns/op [Average]
  (min, avg, max) = (1042674.626, 1301750.984, 1792593.068), stdev = 172704.049
  CI (99.9%): [1204589.727, 1398912.241] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldDeleteOriginalHttpCycleList_WhenValidIndexGiven

# Run progress: 60.99% complete, ETA 01:39:06
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1329404538.000 ns/op
# Warmup Iteration   2: 8164719.000 ns/op
# Warmup Iteration   3: 3929935.825 ns/op
# Warmup Iteration   4: 3113154.736 ns/op
# Warmup Iteration   5: 2663345.231 ns/op
# Warmup Iteration   6: 2213964.395 ns/op
# Warmup Iteration   7: 2245833.610 ns/op
# Warmup Iteration   8: 2126558.883 ns/op
# Warmup Iteration   9: 1971573.453 ns/op
# Warmup Iteration  10: 1924298.015 ns/op
Iteration   1: 1734665.544 ns/op
Iteration   2: 1681531.496 ns/op
Iteration   3: 1545560.358 ns/op
Iteration   4: 1579157.739 ns/op
Iteration   5: 1466576.397 ns/op
Iteration   6: 1279087.194 ns/op
Iteration   7: 1653103.521 ns/op
Iteration   8: 1604594.503 ns/op
Iteration   9: 1238130.136 ns/op
Iteration  10: 1313984.579 ns/op
Iteration  11: 1253511.820 ns/op
Iteration  12: 1344567.047 ns/op
Iteration  13: 1129230.383 ns/op
Iteration  14: 1157106.304 ns/op
Iteration  15: 1653740.053 ns/op
Iteration  16: 1137541.403 ns/op
Iteration  17: 1275343.878 ns/op
Iteration  18: 1312826.178 ns/op
Iteration  19: 1114020.657 ns/op
Iteration  20: 1029412.102 ns/op

# Run progress: 61.07% complete, ETA 01:39:06
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1307547863.000 ns/op
# Warmup Iteration   2: 8118978.710 ns/op
# Warmup Iteration   3: 3961257.253 ns/op
# Warmup Iteration   4: 3137149.962 ns/op
# Warmup Iteration   5: 3097966.399 ns/op
# Warmup Iteration   6: 2529753.025 ns/op
# Warmup Iteration   7: 2256426.221 ns/op
# Warmup Iteration   8: 2047439.472 ns/op
# Warmup Iteration   9: 1741795.984 ns/op
# Warmup Iteration  10: 1740031.037 ns/op
Iteration   1: 1575588.784 ns/op
Iteration   2: 1225879.974 ns/op
Iteration   3: 1562066.947 ns/op
Iteration   4: 1394113.673 ns/op
Iteration   5: 1301087.300 ns/op
Iteration   6: 1656636.636 ns/op
Iteration   7: 1334983.997 ns/op
Iteration   8: 1350734.538 ns/op
Iteration   9: 1333856.616 ns/op
Iteration  10: 1407101.753 ns/op
Iteration  11: 1252489.081 ns/op
Iteration  12: 1106462.543 ns/op
Iteration  13: 1440077.132 ns/op
Iteration  14: 1191150.187 ns/op
Iteration  15: 1076948.925 ns/op
Iteration  16: 1186501.100 ns/op
Iteration  17: 1297189.890 ns/op
Iteration  18: 1110093.855 ns/op
Iteration  19: 1037286.073 ns/op
Iteration  20: 1000245.844 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldDeleteOriginalHttpCycleList_WhenValidIndexGiven":
  1333604.653 ±(99.9%) 114746.094 ns/op [Average]
  (min, avg, max) = (1000245.844, 1333604.653, 1734665.544), stdev = 203961.082
  CI (99.9%): [1218858.559, 1448350.748] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldDeleteProxyConfigsByUuid

# Run progress: 61.14% complete, ETA 01:39:07
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1274112014.000 ns/op
# Warmup Iteration   2: 17732550.772 ns/op
# Warmup Iteration   3: 6953897.118 ns/op
# Warmup Iteration   4: 4332910.900 ns/op
# Warmup Iteration   5: 3541693.996 ns/op
# Warmup Iteration   6: 3278146.646 ns/op
# Warmup Iteration   7: 2795723.310 ns/op
# Warmup Iteration   8: 3075599.206 ns/op
# Warmup Iteration   9: 2516259.173 ns/op
# Warmup Iteration  10: 2678814.968 ns/op
Iteration   1: 2482050.356 ns/op
Iteration   2: 2411674.682 ns/op
Iteration   3: 1965487.519 ns/op
Iteration   4: 1900635.829 ns/op
Iteration   5: 1818548.468 ns/op
Iteration   6: 1871498.005 ns/op
Iteration   7: 1516126.932 ns/op
Iteration   8: 1573344.124 ns/op
Iteration   9: 1923773.167 ns/op
Iteration  10: 1714686.192 ns/op
Iteration  11: 1769214.857 ns/op
Iteration  12: 1454392.483 ns/op
Iteration  13: 1925921.315 ns/op
Iteration  14: 1530956.124 ns/op
Iteration  15: 1474592.071 ns/op
Iteration  16: 2029288.635 ns/op
Iteration  17: 1543721.533 ns/op
Iteration  18: 1753163.581 ns/op
Iteration  19: 1473255.993 ns/op
Iteration  20: 1435868.039 ns/op

# Run progress: 61.22% complete, ETA 01:39:08
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1317882755.000 ns/op
# Warmup Iteration   2: 10668402.274 ns/op
# Warmup Iteration   3: 6566133.386 ns/op
# Warmup Iteration   4: 4655842.265 ns/op
# Warmup Iteration   5: 3897170.405 ns/op
# Warmup Iteration   6: 3382534.971 ns/op
# Warmup Iteration   7: 2808712.143 ns/op
# Warmup Iteration   8: 2806271.762 ns/op
# Warmup Iteration   9: 2342353.068 ns/op
# Warmup Iteration  10: 2561848.463 ns/op
Iteration   1: 2058314.973 ns/op
Iteration   2: 1742008.833 ns/op
Iteration   3: 1757166.172 ns/op
Iteration   4: 1688433.201 ns/op
Iteration   5: 1608201.944 ns/op
Iteration   6: 1898055.218 ns/op
Iteration   7: 1829562.229 ns/op
Iteration   8: 1647996.373 ns/op
Iteration   9: 1803542.767 ns/op
Iteration  10: 1634235.272 ns/op
Iteration  11: 1607119.165 ns/op
Iteration  12: 1632297.232 ns/op
Iteration  13: 1413382.675 ns/op
Iteration  14: 1423828.225 ns/op
Iteration  15: 1880940.859 ns/op
Iteration  16: 1357151.520 ns/op
Iteration  17: 1414077.154 ns/op
Iteration  18: 1625168.903 ns/op
Iteration  19: 1426119.286 ns/op
Iteration  20: 1409361.639 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldDeleteProxyConfigsByUuid":
  1710629.089 ±(99.9%) 145393.698 ns/op [Average]
  (min, avg, max) = (1357151.520, 1710629.089, 2482050.356), stdev = 258437.170
  CI (99.9%): [1565235.391, 1856022.786] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldDeleteStubsByUuid

# Run progress: 61.30% complete, ETA 01:39:09
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1271226445.000 ns/op
# Warmup Iteration   2: 17072796.169 ns/op
# Warmup Iteration   3: 5564181.822 ns/op
# Warmup Iteration   4: 4419686.771 ns/op
# Warmup Iteration   5: 3802969.992 ns/op
# Warmup Iteration   6: 3473962.441 ns/op
# Warmup Iteration   7: 3327650.561 ns/op
# Warmup Iteration   8: 3064962.734 ns/op
# Warmup Iteration   9: 2635673.324 ns/op
# Warmup Iteration  10: 2649593.852 ns/op
Iteration   1: 2758126.534 ns/op
Iteration   2: 2199458.600 ns/op
Iteration   3: 2014405.950 ns/op
Iteration   4: 2141935.311 ns/op
Iteration   5: 2025242.816 ns/op
Iteration   6: 1668288.087 ns/op
Iteration   7: 1985790.929 ns/op
Iteration   8: 1907228.128 ns/op
Iteration   9: 1780334.831 ns/op
Iteration  10: 1787967.895 ns/op
Iteration  11: 1529840.692 ns/op
Iteration  12: 2221099.692 ns/op
Iteration  13: 1559050.626 ns/op
Iteration  14: 1578327.991 ns/op
Iteration  15: 2145076.565 ns/op
Iteration  16: 1700576.145 ns/op
Iteration  17: 1504592.489 ns/op
Iteration  18: 1506727.737 ns/op
Iteration  19: 2155021.858 ns/op
Iteration  20: 2302505.954 ns/op

# Run progress: 61.37% complete, ETA 01:39:10
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1346034021.000 ns/op
# Warmup Iteration   2: 12776916.051 ns/op
# Warmup Iteration   3: 6338742.810 ns/op
# Warmup Iteration   4: 4535462.905 ns/op
# Warmup Iteration   5: 3946653.655 ns/op
# Warmup Iteration   6: 3466280.824 ns/op
# Warmup Iteration   7: 3071427.583 ns/op
# Warmup Iteration   8: 3120370.389 ns/op
# Warmup Iteration   9: 2294209.666 ns/op
# Warmup Iteration  10: 2269247.086 ns/op
Iteration   1: 2248311.151 ns/op
Iteration   2: 1847093.292 ns/op
Iteration   3: 1780656.544 ns/op
Iteration   4: 2198843.914 ns/op
Iteration   5: 1607475.066 ns/op
Iteration   6: 2146422.845 ns/op
Iteration   7: 1688995.268 ns/op
Iteration   8: 1876914.788 ns/op
Iteration   9: 1734726.553 ns/op
Iteration  10: 1519606.064 ns/op
Iteration  11: 1948319.482 ns/op
Iteration  12: 1699206.333 ns/op
Iteration  13: 1791163.642 ns/op
Iteration  14: 1468851.056 ns/op
Iteration  15: 1620684.297 ns/op
Iteration  16: 1877181.994 ns/op
Iteration  17: 1489726.536 ns/op
Iteration  18: 1446526.545 ns/op
Iteration  19: 2194491.706 ns/op
Iteration  20: 2307775.604 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldDeleteStubsByUuid":
  1874114.288 ±(99.9%) 171144.761 ns/op [Average]
  (min, avg, max) = (1446526.545, 1874114.288, 2758126.534), stdev = 304209.662
  CI (99.9%): [1702969.527, 2045259.049] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldExpungeOriginalHttpCycleList_WhenNewHttpCyclesGiven

# Run progress: 61.45% complete, ETA 01:39:11
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1310307480.000 ns/op
# Warmup Iteration   2: 5865929.028 ns/op
# Warmup Iteration   3: 3027577.344 ns/op
# Warmup Iteration   4: 2763043.028 ns/op
# Warmup Iteration   5: 2176057.574 ns/op
# Warmup Iteration   6: 2116475.647 ns/op
# Warmup Iteration   7: 1944791.433 ns/op
# Warmup Iteration   8: 1602464.286 ns/op
# Warmup Iteration   9: 1892895.345 ns/op
# Warmup Iteration  10: 1587084.626 ns/op
Iteration   1: 1233091.362 ns/op
Iteration   2: 1513717.967 ns/op
Iteration   3: 1180816.235 ns/op
Iteration   4: 1438621.500 ns/op
Iteration   5: 1463319.899 ns/op
Iteration   6: 1382066.932 ns/op
Iteration   7: 1362167.812 ns/op
Iteration   8: 1417259.157 ns/op
Iteration   9: 1056410.959 ns/op
Iteration  10: 1257690.706 ns/op
Iteration  11: 991971.789 ns/op
Iteration  12: 1121875.260 ns/op
Iteration  13: 1095763.274 ns/op
Iteration  14: 975395.805 ns/op
Iteration  15: 1081290.781 ns/op
Iteration  16: 1509590.983 ns/op
Iteration  17: 1235593.380 ns/op
Iteration  18: 982709.527 ns/op
Iteration  19: 1110421.519 ns/op
Iteration  20: 1011314.132 ns/op

# Run progress: 61.52% complete, ETA 01:39:11
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1289402678.000 ns/op
# Warmup Iteration   2: 5825240.511 ns/op
# Warmup Iteration   3: 3328213.153 ns/op
# Warmup Iteration   4: 2903077.249 ns/op
# Warmup Iteration   5: 2482802.876 ns/op
# Warmup Iteration   6: 1752022.968 ns/op
# Warmup Iteration   7: 2161046.575 ns/op
# Warmup Iteration   8: 1793878.371 ns/op
# Warmup Iteration   9: 1585969.284 ns/op
# Warmup Iteration  10: 1671964.628 ns/op
Iteration   1: 1365741.078 ns/op
Iteration   2: 1283636.285 ns/op
Iteration   3: 1441331.013 ns/op
Iteration   4: 1163622.070 ns/op
Iteration   5: 1399718.910 ns/op
Iteration   6: 1526462.808 ns/op
Iteration   7: 1332395.015 ns/op
Iteration   8: 1260667.587 ns/op
Iteration   9: 1273085.190 ns/op
Iteration  10: 1308176.699 ns/op
Iteration  11: 1009964.003 ns/op
Iteration  12: 949535.599 ns/op
Iteration  13: 1083659.061 ns/op
Iteration  14: 1071412.281 ns/op
Iteration  15: 1006397.189 ns/op
Iteration  16: 1003304.927 ns/op
Iteration  17: 1482301.841 ns/op
Iteration  18: 953859.854 ns/op
Iteration  19: 977393.848 ns/op
Iteration  20: 1038752.247 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldExpungeOriginalHttpCycleList_WhenNewHttpCyclesGiven":
  1208812.662 ±(99.9%) 105291.249 ns/op [Average]
  (min, avg, max) = (949535.599, 1208812.662, 1526462.808), stdev = 187155.103
  CI (99.9%): [1103521.413, 1314103.911] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldFailDeletingDefaultProxyConfigByUuid

# Run progress: 61.60% complete, ETA 01:39:12
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1233414580.000 ns/op
# Warmup Iteration   2: 11124009.593 ns/op
# Warmup Iteration   3: 4104270.061 ns/op
# Warmup Iteration   4: 3153578.450 ns/op
# Warmup Iteration   5: 2689686.930 ns/op
# Warmup Iteration   6: 2297538.164 ns/op
# Warmup Iteration   7: 2075668.710 ns/op
# Warmup Iteration   8: 1999655.848 ns/op
# Warmup Iteration   9: 2044952.898 ns/op
# Warmup Iteration  10: 1967910.530 ns/op
Iteration   1: 1725825.624 ns/op
Iteration   2: 1381545.588 ns/op
Iteration   3: 1434110.752 ns/op
Iteration   4: 1556219.482 ns/op
Iteration   5: 1409155.639 ns/op
Iteration   6: 1500653.798 ns/op
Iteration   7: 1399515.408 ns/op
Iteration   8: 1452139.459 ns/op
Iteration   9: 1195864.404 ns/op
Iteration  10: 1175604.582 ns/op
Iteration  11: 1177580.556 ns/op
Iteration  12: 1240205.853 ns/op
Iteration  13: 1520769.391 ns/op
Iteration  14: 1264520.424 ns/op
Iteration  15: 1139960.910 ns/op
Iteration  16: 1132416.201 ns/op
Iteration  17: 1247832.397 ns/op
Iteration  18: 1294950.635 ns/op
Iteration  19: 1258589.955 ns/op
Iteration  20: 1267449.524 ns/op

# Run progress: 61.67% complete, ETA 01:39:12
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1339285497.000 ns/op
# Warmup Iteration   2: 9693697.743 ns/op
# Warmup Iteration   3: 3650663.993 ns/op
# Warmup Iteration   4: 3350066.080 ns/op
# Warmup Iteration   5: 2456368.608 ns/op
# Warmup Iteration   6: 2326735.807 ns/op
# Warmup Iteration   7: 1943261.629 ns/op
# Warmup Iteration   8: 1946210.529 ns/op
# Warmup Iteration   9: 1678309.095 ns/op
# Warmup Iteration  10: 1696386.774 ns/op
Iteration   1: 1302796.318 ns/op
Iteration   2: 1358306.898 ns/op
Iteration   3: 1339348.888 ns/op
Iteration   4: 1324898.509 ns/op
Iteration   5: 1677086.524 ns/op
Iteration   6: 1428622.750 ns/op
Iteration   7: 1381012.172 ns/op
Iteration   8: 1254787.253 ns/op
Iteration   9: 1439116.660 ns/op
Iteration  10: 1218476.655 ns/op
Iteration  11: 1078896.983 ns/op
Iteration  12: 1065429.251 ns/op
Iteration  13: 1183862.311 ns/op
Iteration  14: 1042130.978 ns/op
Iteration  15: 1240220.354 ns/op
Iteration  16: 1187652.288 ns/op
Iteration  17: 1033134.089 ns/op
Iteration  18: 1214602.387 ns/op
Iteration  19: 1032748.663 ns/op
Iteration  20: 1057546.050 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldFailDeletingDefaultProxyConfigByUuid":
  1290889.664 ±(99.9%) 95139.828 ns/op [Average]
  (min, avg, max) = (1032748.663, 1290889.664, 1725825.624), stdev = 169110.961
  CI (99.9%): [1195749.836, 1386029.492] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldFailToGetMarshalledYamlByIndex_WhenInvalidHttpCycleListIndexGiven

# Run progress: 61.75% complete, ETA 01:39:12
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1301452673.000 ns/op
# Warmup Iteration   2: 9840837.333 ns/op
# Warmup Iteration   3: 3335086.480 ns/op
# Warmup Iteration   4: 2756771.430 ns/op
# Warmup Iteration   5: 2708450.708 ns/op
# Warmup Iteration   6: 2144609.910 ns/op
# Warmup Iteration   7: 2112020.517 ns/op
# Warmup Iteration   8: 2069818.897 ns/op
# Warmup Iteration   9: 1772835.317 ns/op
# Warmup Iteration  10: 1909718.055 ns/op
Iteration   1: 1422285.881 ns/op
Iteration   2: 1523957.796 ns/op
Iteration   3: 1590075.557 ns/op
Iteration   4: 1443647.711 ns/op
Iteration   5: 1203164.906 ns/op
Iteration   6: 1361277.533 ns/op
Iteration   7: 1762969.398 ns/op
Iteration   8: 1517274.291 ns/op
Iteration   9: 1337977.582 ns/op
Iteration  10: 1094638.956 ns/op
Iteration  11: 1169219.090 ns/op
Iteration  12: 1209519.657 ns/op
Iteration  13: 1159440.064 ns/op
Iteration  14: 1147062.836 ns/op
Iteration  15: 1163495.152 ns/op
Iteration  16: 1107408.717 ns/op
Iteration  17: 1099806.701 ns/op
Iteration  18: 1181549.410 ns/op
Iteration  19: 1216280.305 ns/op
Iteration  20: 1113203.055 ns/op

# Run progress: 61.82% complete, ETA 01:39:12
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1322933752.000 ns/op
# Warmup Iteration   2: 6338416.820 ns/op
# Warmup Iteration   3: 3664038.542 ns/op
# Warmup Iteration   4: 2974179.201 ns/op
# Warmup Iteration   5: 2504239.700 ns/op
# Warmup Iteration   6: 1852785.187 ns/op
# Warmup Iteration   7: 1928468.125 ns/op
# Warmup Iteration   8: 1645489.936 ns/op
# Warmup Iteration   9: 1526364.569 ns/op
# Warmup Iteration  10: 1256003.965 ns/op
Iteration   1: 1360935.759 ns/op
Iteration   2: 1598981.415 ns/op
Iteration   3: 1369005.071 ns/op
Iteration   4: 1521998.866 ns/op
Iteration   5: 1462997.511 ns/op
Iteration   6: 1584640.049 ns/op
Iteration   7: 1366865.632 ns/op
Iteration   8: 1390905.039 ns/op
Iteration   9: 1243335.484 ns/op
Iteration  10: 1115612.429 ns/op
Iteration  11: 1038705.602 ns/op
Iteration  12: 1011832.996 ns/op
Iteration  13: 1181532.980 ns/op
Iteration  14: 1107160.510 ns/op
Iteration  15: 1037298.945 ns/op
Iteration  16: 1228106.639 ns/op
Iteration  17: 1071110.800 ns/op
Iteration  18: 983939.920 ns/op
Iteration  19: 986520.697 ns/op
Iteration  20: 1189935.459 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldFailToGetMarshalledYamlByIndex_WhenInvalidHttpCycleListIndexGiven":
  1266891.910 ±(99.9%) 110647.628 ns/op [Average]
  (min, avg, max) = (983939.920, 1266891.910, 1762969.398), stdev = 196676.062
  CI (99.9%): [1156244.282, 1377539.538] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldFailUpdatingProxyConfigByUuidWhenUuidDoNotMatch

# Run progress: 61.90% complete, ETA 01:39:13
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1306941187.000 ns/op
# Warmup Iteration   2: 9569298.274 ns/op
# Warmup Iteration   3: 3799199.918 ns/op
# Warmup Iteration   4: 3093279.426 ns/op
# Warmup Iteration   5: 3037207.205 ns/op
# Warmup Iteration   6: 2334351.708 ns/op
# Warmup Iteration   7: 2534255.962 ns/op
# Warmup Iteration   8: 2198492.433 ns/op
# Warmup Iteration   9: 1892710.174 ns/op
# Warmup Iteration  10: 1854617.474 ns/op
Iteration   1: 1613635.427 ns/op
Iteration   2: 1542634.014 ns/op
Iteration   3: 1483165.028 ns/op
Iteration   4: 1623826.519 ns/op
Iteration   5: 1427175.478 ns/op
Iteration   6: 1320214.920 ns/op
Iteration   7: 1346578.464 ns/op
Iteration   8: 1440283.997 ns/op
Iteration   9: 1220109.990 ns/op
Iteration  10: 1262750.856 ns/op
Iteration  11: 1206545.914 ns/op
Iteration  12: 1427866.348 ns/op
Iteration  13: 1403306.838 ns/op
Iteration  14: 1241556.596 ns/op
Iteration  15: 1152486.749 ns/op
Iteration  16: 1196602.617 ns/op
Iteration  17: 1544276.525 ns/op
Iteration  18: 1316270.489 ns/op
Iteration  19: 1088610.983 ns/op
Iteration  20: 1041205.977 ns/op

# Run progress: 61.97% complete, ETA 01:39:13
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1343071433.000 ns/op
# Warmup Iteration   2: 9916862.693 ns/op
# Warmup Iteration   3: 4591715.372 ns/op
# Warmup Iteration   4: 3475770.149 ns/op
# Warmup Iteration   5: 2883822.608 ns/op
# Warmup Iteration   6: 2255947.315 ns/op
# Warmup Iteration   7: 2159026.558 ns/op
# Warmup Iteration   8: 2010468.582 ns/op
# Warmup Iteration   9: 1731875.178 ns/op
# Warmup Iteration  10: 1826382.682 ns/op
Iteration   1: 1622769.989 ns/op
Iteration   2: 1264724.430 ns/op
Iteration   3: 1789706.801 ns/op
Iteration   4: 1573799.923 ns/op
Iteration   5: 1363866.631 ns/op
Iteration   6: 1493441.513 ns/op
Iteration   7: 1460825.362 ns/op
Iteration   8: 1761031.630 ns/op
Iteration   9: 1210486.414 ns/op
Iteration  10: 1500997.502 ns/op
Iteration  11: 1383507.057 ns/op
Iteration  12: 1218762.119 ns/op
Iteration  13: 1134387.244 ns/op
Iteration  14: 1367090.475 ns/op
Iteration  15: 1189610.338 ns/op
Iteration  16: 1126824.493 ns/op
Iteration  17: 1150409.431 ns/op
Iteration  18: 1323828.126 ns/op
Iteration  19: 1204645.191 ns/op
Iteration  20: 1187439.702 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldFailUpdatingProxyConfigByUuidWhenUuidDoNotMatch":
  1355681.453 ±(99.9%) 104358.907 ns/op [Average]
  (min, avg, max) = (1041205.977, 1355681.453, 1789706.801), stdev = 185497.865
  CI (99.9%): [1251322.546, 1460040.359] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldGetMarshalledYamlByIndex_WhenValidHttpCycleListIndexGiven

# Run progress: 62.05% complete, ETA 01:39:13
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1223922069.000 ns/op
# Warmup Iteration   2: 8223928.325 ns/op
# Warmup Iteration   3: 3277054.941 ns/op
# Warmup Iteration   4: 2681716.110 ns/op
# Warmup Iteration   5: 2639900.910 ns/op
# Warmup Iteration   6: 1917369.295 ns/op
# Warmup Iteration   7: 1972940.430 ns/op
# Warmup Iteration   8: 1873394.378 ns/op
# Warmup Iteration   9: 1593915.282 ns/op
# Warmup Iteration  10: 1885768.213 ns/op
Iteration   1: 1433097.004 ns/op
Iteration   2: 1375253.199 ns/op
Iteration   3: 1444278.595 ns/op
Iteration   4: 1180546.392 ns/op
Iteration   5: 1210490.504 ns/op
Iteration   6: 1554750.767 ns/op
Iteration   7: 1603377.245 ns/op
Iteration   8: 1263237.803 ns/op
Iteration   9: 1099372.088 ns/op
Iteration  10: 1174136.906 ns/op
Iteration  11: 1043848.647 ns/op
Iteration  12: 942485.347 ns/op
Iteration  13: 1200346.061 ns/op
Iteration  14: 1126440.805 ns/op
Iteration  15: 1240202.212 ns/op
Iteration  16: 1461085.384 ns/op
Iteration  17: 1390646.435 ns/op
Iteration  18: 1153298.249 ns/op
Iteration  19: 975592.536 ns/op
Iteration  20: 1160719.198 ns/op

# Run progress: 62.12% complete, ETA 01:39:13
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1313540737.000 ns/op
# Warmup Iteration   2: 8823358.716 ns/op
# Warmup Iteration   3: 3537974.452 ns/op
# Warmup Iteration   4: 2890569.683 ns/op
# Warmup Iteration   5: 2626737.168 ns/op
# Warmup Iteration   6: 1962466.441 ns/op
# Warmup Iteration   7: 1807398.458 ns/op
# Warmup Iteration   8: 1818670.547 ns/op
# Warmup Iteration   9: 1700431.990 ns/op
# Warmup Iteration  10: 1693648.132 ns/op
Iteration   1: 1283249.690 ns/op
Iteration   2: 1261198.353 ns/op
Iteration   3: 1470559.501 ns/op
Iteration   4: 1111871.789 ns/op
Iteration   5: 1431365.180 ns/op
Iteration   6: 1351681.197 ns/op
Iteration   7: 1549537.579 ns/op
Iteration   8: 1481093.277 ns/op
Iteration   9: 1363231.069 ns/op
Iteration  10: 1265113.279 ns/op
Iteration  11: 1253713.426 ns/op
Iteration  12: 1039744.775 ns/op
Iteration  13: 1159168.351 ns/op
Iteration  14: 1010579.315 ns/op
Iteration  15: 1049591.346 ns/op
Iteration  16: 1036094.233 ns/op
Iteration  17: 1130707.274 ns/op
Iteration  18: 1025080.277 ns/op
Iteration  19: 924834.835 ns/op
Iteration  20: 930506.742 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldGetMarshalledYamlByIndex_WhenValidHttpCycleListIndexGiven":
  1229053.172 ±(99.9%) 105470.821 ns/op [Average]
  (min, avg, max) = (924834.835, 1229053.172, 1603377.245), stdev = 187474.291
  CI (99.9%): [1123582.351, 1334523.992] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldMatchHttplifecycle_WhenValidIndexGiven

# Run progress: 62.20% complete, ETA 01:39:13
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1309757655.000 ns/op
# Warmup Iteration   2: 7823959.682 ns/op
# Warmup Iteration   3: 3467336.277 ns/op
# Warmup Iteration   4: 3050533.027 ns/op
# Warmup Iteration   5: 2523603.413 ns/op
# Warmup Iteration   6: 2128175.268 ns/op
# Warmup Iteration   7: 2076633.782 ns/op
# Warmup Iteration   8: 1836191.578 ns/op
# Warmup Iteration   9: 1834408.364 ns/op
# Warmup Iteration  10: 1792880.596 ns/op
Iteration   1: 1419930.990 ns/op
Iteration   2: 1438080.257 ns/op
Iteration   3: 1369512.378 ns/op
Iteration   4: 1198048.104 ns/op
Iteration   5: 1448629.307 ns/op
Iteration   6: 1421331.111 ns/op
Iteration   7: 1447497.799 ns/op
Iteration   8: 1519383.241 ns/op
Iteration   9: 1079658.825 ns/op
Iteration  10: 1197492.874 ns/op
Iteration  11: 1082788.347 ns/op
Iteration  12: 1239899.549 ns/op
Iteration  13: 1045259.315 ns/op
Iteration  14: 1411712.303 ns/op
Iteration  15: 1071405.173 ns/op
Iteration  16: 1093132.812 ns/op
Iteration  17: 1204412.972 ns/op
Iteration  18: 1057922.405 ns/op
Iteration  19: 981022.316 ns/op
Iteration  20: 981250.423 ns/op

# Run progress: 62.27% complete, ETA 01:39:12
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1313728306.000 ns/op
# Warmup Iteration   2: 5873633.906 ns/op
# Warmup Iteration   3: 3908348.086 ns/op
# Warmup Iteration   4: 2885224.550 ns/op
# Warmup Iteration   5: 2436195.732 ns/op
# Warmup Iteration   6: 2517037.799 ns/op
# Warmup Iteration   7: 2096753.820 ns/op
# Warmup Iteration   8: 2007056.074 ns/op
# Warmup Iteration   9: 2086004.696 ns/op
# Warmup Iteration  10: 1630049.156 ns/op
Iteration   1: 1413598.400 ns/op
Iteration   2: 1688627.533 ns/op
Iteration   3: 1438902.207 ns/op
Iteration   4: 1225472.535 ns/op
Iteration   5: 1406071.322 ns/op
Iteration   6: 1473499.619 ns/op
Iteration   7: 1527695.800 ns/op
Iteration   8: 1350094.985 ns/op
Iteration   9: 1555736.474 ns/op
Iteration  10: 1290878.117 ns/op
Iteration  11: 1234918.880 ns/op
Iteration  12: 1168051.333 ns/op
Iteration  13: 1071936.691 ns/op
Iteration  14: 1101635.539 ns/op
Iteration  15: 1179848.844 ns/op
Iteration  16: 1142590.293 ns/op
Iteration  17: 1174843.594 ns/op
Iteration  18: 1259069.958 ns/op
Iteration  19: 1145894.242 ns/op
Iteration  20: 1067293.428 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldMatchHttplifecycle_WhenValidIndexGiven":
  1265625.757 ±(99.9%) 101077.632 ns/op [Average]
  (min, avg, max) = (981022.316, 1265625.757, 1688627.533), stdev = 179665.402
  CI (99.9%): [1164548.125, 1366703.389] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldMatchProxyConfig_WhenUniqueProxyNameGiven

# Run progress: 62.35% complete, ETA 01:39:12
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1314006757.000 ns/op
# Warmup Iteration   2: 9384827.222 ns/op
# Warmup Iteration   3: 4328285.137 ns/op
# Warmup Iteration   4: 3098777.164 ns/op
# Warmup Iteration   5: 2766031.412 ns/op
# Warmup Iteration   6: 2214105.728 ns/op
# Warmup Iteration   7: 2236235.190 ns/op
# Warmup Iteration   8: 1932648.334 ns/op
# Warmup Iteration   9: 1952194.041 ns/op
# Warmup Iteration  10: 1621529.838 ns/op
Iteration   1: 1495228.637 ns/op
Iteration   2: 1678515.030 ns/op
Iteration   3: 1596876.108 ns/op
Iteration   4: 1332837.742 ns/op
Iteration   5: 1333440.422 ns/op
Iteration   6: 1478551.013 ns/op
Iteration   7: 1293987.637 ns/op
Iteration   8: 1317143.422 ns/op
Iteration   9: 1277125.620 ns/op
Iteration  10: 1401747.388 ns/op
Iteration  11: 1188269.007 ns/op
Iteration  12: 1130378.136 ns/op
Iteration  13: 1175193.135 ns/op
Iteration  14: 1271151.349 ns/op
Iteration  15: 1105543.852 ns/op
Iteration  16: 1289838.759 ns/op
Iteration  17: 1409913.698 ns/op
Iteration  18: 1125321.821 ns/op
Iteration  19: 1066709.114 ns/op
Iteration  20: 1476631.963 ns/op

# Run progress: 62.42% complete, ETA 01:39:12
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1300716219.000 ns/op
# Warmup Iteration   2: 8125770.403 ns/op
# Warmup Iteration   3: 3901295.447 ns/op
# Warmup Iteration   4: 2825780.384 ns/op
# Warmup Iteration   5: 2928814.617 ns/op
# Warmup Iteration   6: 2253337.646 ns/op
# Warmup Iteration   7: 2159122.534 ns/op
# Warmup Iteration   8: 2268571.626 ns/op
# Warmup Iteration   9: 1695768.264 ns/op
# Warmup Iteration  10: 1647586.271 ns/op
Iteration   1: 1654649.344 ns/op
Iteration   2: 1417199.076 ns/op
Iteration   3: 1433424.006 ns/op
Iteration   4: 1418010.565 ns/op
Iteration   5: 1216446.559 ns/op
Iteration   6: 1518230.587 ns/op
Iteration   7: 1541163.151 ns/op
Iteration   8: 1462013.609 ns/op
Iteration   9: 1388590.569 ns/op
Iteration  10: 1288318.021 ns/op
Iteration  11: 1121434.852 ns/op
Iteration  12: 1192905.902 ns/op
Iteration  13: 1075548.267 ns/op
Iteration  14: 1315973.352 ns/op
Iteration  15: 1240675.900 ns/op
Iteration  16: 1309827.709 ns/op
Iteration  17: 1181154.171 ns/op
Iteration  18: 1078492.249 ns/op
Iteration  19: 1226354.033 ns/op
Iteration  20: 1138443.970 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldMatchProxyConfig_WhenUniqueProxyNameGiven":
  1316581.494 ±(99.9%) 91789.108 ns/op [Average]
  (min, avg, max) = (1066709.114, 1316581.494, 1678515.030), stdev = 163155.059
  CI (99.9%): [1224792.386, 1408370.602] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldNotApplyProxyConfigAdditiveStrategyEmptyHeadersToHttpTransport_WhenResponseIsProxiable

# Run progress: 62.50% complete, ETA 01:39:12
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.http.StubbyHttpTransport.httpRequestFromStub(io.github.azagniotov.stubby4j.stubs.StubRequest, String)" because "this.mockStubbyHttpTransport" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldNotApplyProxyConfigAdditiveStrategyEmptyHeadersToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1212)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldNotApplyProxyConfigAdditiveStrategyEmptyHeadersToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1312)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldNotApplyProxyConfigAdditiveStrategyEmptyHeadersToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldNotApplyProxyConfigAdditiveStrategyEmptyHeadersToHttpTransport_WhenResponseIsProxiable_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldNotApplyProxyConfigAdditiveStrategyEmptyHeadersToHttpTransport_WhenResponseIsProxiable_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldNotApplyProxyConfigAdditiveStrategyEmptyHeadersToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldNotApplyProxyConfigAdditiveStrategyEmptyHeadersToHttpTransport_WhenResponseIsProxiable_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldNotApplyProxyConfigAdditiveStrategyEmptyHeadersToHttpTransport_WhenResponseIsProxiable_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 62.58% complete, ETA 01:38:54
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.http.StubbyHttpTransport.httpRequestFromStub(io.github.azagniotov.stubby4j.stubs.StubRequest, String)" because "this.mockStubbyHttpTransport" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldNotApplyProxyConfigAdditiveStrategyEmptyHeadersToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1212)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldNotApplyProxyConfigAdditiveStrategyEmptyHeadersToHttpTransport_WhenResponseIsProxiable(StubRepositoryTest.java:1312)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldNotApplyProxyConfigAdditiveStrategyEmptyHeadersToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldNotApplyProxyConfigAdditiveStrategyEmptyHeadersToHttpTransport_WhenResponseIsProxiable_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldNotApplyProxyConfigAdditiveStrategyEmptyHeadersToHttpTransport_WhenResponseIsProxiable_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldNotApplyProxyConfigAdditiveStrategyEmptyHeadersToHttpTransport_WhenResponseIsProxiable_jmhTest.benchmark_shouldNotApplyProxyConfigAdditiveStrategyEmptyHeadersToHttpTransport_WhenResponseIsProxiable_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldNotApplyProxyConfigAdditiveStrategyEmptyHeadersToHttpTransport_WhenResponseIsProxiable_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldNotMatchHttplifecycle_WhenInvalidIndexGiven

# Run progress: 62.65% complete, ETA 01:38:36
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1338026909.000 ns/op
# Warmup Iteration   2: 6659350.695 ns/op
# Warmup Iteration   3: 4124150.667 ns/op
# Warmup Iteration   4: 2793320.568 ns/op
# Warmup Iteration   5: 2758272.050 ns/op
# Warmup Iteration   6: 2278318.020 ns/op
# Warmup Iteration   7: 2095718.468 ns/op
# Warmup Iteration   8: 1948922.457 ns/op
# Warmup Iteration   9: 1934386.986 ns/op
# Warmup Iteration  10: 1917419.389 ns/op
Iteration   1: 1688198.499 ns/op
Iteration   2: 1375722.005 ns/op
Iteration   3: 1474371.417 ns/op
Iteration   4: 1444533.469 ns/op
Iteration   5: 1323848.485 ns/op
Iteration   6: 1565965.420 ns/op
Iteration   7: 1423098.417 ns/op
Iteration   8: 1437147.626 ns/op
Iteration   9: 1039262.966 ns/op
Iteration  10: 1107432.017 ns/op
Iteration  11: 1174761.880 ns/op
Iteration  12: 1169841.235 ns/op
Iteration  13: 1077183.174 ns/op
Iteration  14: 978352.953 ns/op
Iteration  15: 970859.010 ns/op
Iteration  16: 1266384.145 ns/op
Iteration  17: 1106083.645 ns/op
Iteration  18: 962412.586 ns/op
Iteration  19: 947102.969 ns/op
Iteration  20: 1017104.738 ns/op

# Run progress: 62.73% complete, ETA 01:38:35
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1366452558.000 ns/op
# Warmup Iteration   2: 8488826.672 ns/op
# Warmup Iteration   3: 3556592.479 ns/op
# Warmup Iteration   4: 2693932.941 ns/op
# Warmup Iteration   5: 2810429.197 ns/op
# Warmup Iteration   6: 2040490.955 ns/op
# Warmup Iteration   7: 2094695.998 ns/op
# Warmup Iteration   8: 1832849.748 ns/op
# Warmup Iteration   9: 1686091.379 ns/op
# Warmup Iteration  10: 1681266.476 ns/op
Iteration   1: 1205048.813 ns/op
Iteration   2: 1366022.480 ns/op
Iteration   3: 1489466.266 ns/op
Iteration   4: 1321161.061 ns/op
Iteration   5: 1411679.433 ns/op
Iteration   6: 1462099.556 ns/op
Iteration   7: 1370731.958 ns/op
Iteration   8: 1280293.619 ns/op
Iteration   9: 1037736.730 ns/op
Iteration  10: 1014949.898 ns/op
Iteration  11: 1151314.713 ns/op
Iteration  12: 1093153.179 ns/op
Iteration  13: 1179035.478 ns/op
Iteration  14: 1080142.306 ns/op
Iteration  15: 1047461.086 ns/op
Iteration  16: 1092353.383 ns/op
Iteration  17: 1297269.454 ns/op
Iteration  18: 1074560.736 ns/op
Iteration  19: 945935.918 ns/op
Iteration  20: 1099398.262 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldNotMatchHttplifecycle_WhenInvalidIndexGiven":
  1214237.025 ±(99.9%) 109233.516 ns/op [Average]
  (min, avg, max) = (945935.918, 1214237.025, 1688198.499), stdev = 194162.479
  CI (99.9%): [1105003.509, 1323470.541] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldNotUpdateStubResponseBody_WhenResponseIsNotRecordable

# Run progress: 62.80% complete, ETA 01:38:34
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "request" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepository.toStubRequest(StubRepository.java:124)
	at java.base/java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:732)
	at io.github.azagniotov.stubby4j.stubs.StubRepository.toStubRequest(StubRepository.java:123)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 62.88% complete, ETA 01:38:16
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "request" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepository.toStubRequest(StubRepository.java:124)
	at java.base/java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:732)
	at io.github.azagniotov.stubby4j.stubs.StubRepository.toStubRequest(StubRepository.java:123)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldNotUpdateStubResponseBody_WhenResponseIsRecordableButExceptionThrown

# Run progress: 62.95% complete, ETA 01:37:58
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.http.StubbyHttpTransport.httpRequestFromStub(io.github.azagniotov.stubby4j.stubs.StubRequest, String)" because "this.mockStubbyHttpTransport" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldNotUpdateStubResponseBody_WhenResponseIsRecordableButExceptionThrown(StubRepositoryTest.java:868)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldNotUpdateStubResponseBody_WhenResponseIsRecordableButExceptionThrown(StubRepositoryTest.java:1246)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldNotUpdateStubResponseBody_WhenResponseIsRecordableButExceptionThrown_jmhTest.benchmark_shouldNotUpdateStubResponseBody_WhenResponseIsRecordableButExceptionThrown_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldNotUpdateStubResponseBody_WhenResponseIsRecordableButExceptionThrown_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldNotUpdateStubResponseBody_WhenResponseIsRecordableButExceptionThrown_jmhTest.benchmark_shouldNotUpdateStubResponseBody_WhenResponseIsRecordableButExceptionThrown_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldNotUpdateStubResponseBody_WhenResponseIsRecordableButExceptionThrown_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 63.03% complete, ETA 01:37:40
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.http.StubbyHttpTransport.httpRequestFromStub(io.github.azagniotov.stubby4j.stubs.StubRequest, String)" because "this.mockStubbyHttpTransport" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldNotUpdateStubResponseBody_WhenResponseIsRecordableButExceptionThrown(StubRepositoryTest.java:868)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldNotUpdateStubResponseBody_WhenResponseIsRecordableButExceptionThrown(StubRepositoryTest.java:1246)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldNotUpdateStubResponseBody_WhenResponseIsRecordableButExceptionThrown_jmhTest.benchmark_shouldNotUpdateStubResponseBody_WhenResponseIsRecordableButExceptionThrown_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldNotUpdateStubResponseBody_WhenResponseIsRecordableButExceptionThrown_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldNotUpdateStubResponseBody_WhenResponseIsRecordableButExceptionThrown_jmhTest.benchmark_shouldNotUpdateStubResponseBody_WhenResponseIsRecordableButExceptionThrown_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldNotUpdateStubResponseBody_WhenResponseIsRecordableButExceptionThrown_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldPassDefaultProxyConfigStateToHttpTransport_WhenResponseIsProxiableButExceptionThrows

# Run progress: 63.10% complete, ETA 01:37:22
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.http.StubbyHttpTransport.httpRequestFromStub(io.github.azagniotov.stubby4j.stubs.StubRequest, String)" because "this.mockStubbyHttpTransport" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldPassDefaultProxyConfigStateToHttpTransport_WhenResponseIsProxiableButExceptionThrows(StubRepositoryTest.java:1405)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldPassDefaultProxyConfigStateToHttpTransport_WhenResponseIsProxiableButExceptionThrows(StubRepositoryTest.java:1330)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldPassDefaultProxyConfigStateToHttpTransport_WhenResponseIsProxiableButExceptionThrows_jmhTest.benchmark_shouldPassDefaultProxyConfigStateToHttpTransport_WhenResponseIsProxiableButExceptionThrows_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldPassDefaultProxyConfigStateToHttpTransport_WhenResponseIsProxiableButExceptionThrows_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldPassDefaultProxyConfigStateToHttpTransport_WhenResponseIsProxiableButExceptionThrows_jmhTest.benchmark_shouldPassDefaultProxyConfigStateToHttpTransport_WhenResponseIsProxiableButExceptionThrows_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldPassDefaultProxyConfigStateToHttpTransport_WhenResponseIsProxiableButExceptionThrows_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 63.18% complete, ETA 01:37:04
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.http.StubbyHttpTransport.httpRequestFromStub(io.github.azagniotov.stubby4j.stubs.StubRequest, String)" because "this.mockStubbyHttpTransport" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldPassDefaultProxyConfigStateToHttpTransport_WhenResponseIsProxiableButExceptionThrows(StubRepositoryTest.java:1405)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldPassDefaultProxyConfigStateToHttpTransport_WhenResponseIsProxiableButExceptionThrows(StubRepositoryTest.java:1330)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldPassDefaultProxyConfigStateToHttpTransport_WhenResponseIsProxiableButExceptionThrows_jmhTest.benchmark_shouldPassDefaultProxyConfigStateToHttpTransport_WhenResponseIsProxiableButExceptionThrows_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldPassDefaultProxyConfigStateToHttpTransport_WhenResponseIsProxiableButExceptionThrows_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldPassDefaultProxyConfigStateToHttpTransport_WhenResponseIsProxiableButExceptionThrows_jmhTest.benchmark_shouldPassDefaultProxyConfigStateToHttpTransport_WhenResponseIsProxiableButExceptionThrows_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldPassDefaultProxyConfigStateToHttpTransport_WhenResponseIsProxiableButExceptionThrows_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldRecordingUsingIncomingRequestQueryStringAndStubbedRecordableUrl

# Run progress: 63.25% complete, ETA 01:36:46
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "org.mockito.ArgumentCaptor.capture()" because "this.stringCaptor" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldRecordingUsingIncomingRequestQueryStringAndStubbedRecordableUrl(StubRepositoryTest.java:836)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldRecordingUsingIncomingRequestQueryStringAndStubbedRecordableUrl(StubRepositoryTest.java:1240)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldRecordingUsingIncomingRequestQueryStringAndStubbedRecordableUrl_jmhTest.benchmark_shouldRecordingUsingIncomingRequestQueryStringAndStubbedRecordableUrl_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldRecordingUsingIncomingRequestQueryStringAndStubbedRecordableUrl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldRecordingUsingIncomingRequestQueryStringAndStubbedRecordableUrl_jmhTest.benchmark_shouldRecordingUsingIncomingRequestQueryStringAndStubbedRecordableUrl_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldRecordingUsingIncomingRequestQueryStringAndStubbedRecordableUrl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 63.33% complete, ETA 01:36:29
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "org.mockito.ArgumentCaptor.capture()" because "this.stringCaptor" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldRecordingUsingIncomingRequestQueryStringAndStubbedRecordableUrl(StubRepositoryTest.java:836)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldRecordingUsingIncomingRequestQueryStringAndStubbedRecordableUrl(StubRepositoryTest.java:1240)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldRecordingUsingIncomingRequestQueryStringAndStubbedRecordableUrl_jmhTest.benchmark_shouldRecordingUsingIncomingRequestQueryStringAndStubbedRecordableUrl_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldRecordingUsingIncomingRequestQueryStringAndStubbedRecordableUrl_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldRecordingUsingIncomingRequestQueryStringAndStubbedRecordableUrl_jmhTest.benchmark_shouldRecordingUsingIncomingRequestQueryStringAndStubbedRecordableUrl_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldRecordingUsingIncomingRequestQueryStringAndStubbedRecordableUrl_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldUpdateProxyConfigsByUuid

# Run progress: 63.40% complete, ETA 01:36:11
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1380127746.000 ns/op
# Warmup Iteration   2: 16544677.115 ns/op
# Warmup Iteration   3: 6187617.259 ns/op
# Warmup Iteration   4: 5799183.058 ns/op
# Warmup Iteration   5: 4719360.632 ns/op
# Warmup Iteration   6: 4042360.964 ns/op
# Warmup Iteration   7: 3483534.250 ns/op
# Warmup Iteration   8: 3553623.202 ns/op
# Warmup Iteration   9: 2477123.421 ns/op
# Warmup Iteration  10: 2807535.280 ns/op
Iteration   1: 2643939.916 ns/op
Iteration   2: 1984521.111 ns/op
Iteration   3: 1914708.090 ns/op
Iteration   4: 2027666.913 ns/op
Iteration   5: 1916194.714 ns/op
Iteration   6: 1671197.428 ns/op
Iteration   7: 2164894.616 ns/op
Iteration   8: 1982430.568 ns/op
Iteration   9: 1614843.900 ns/op
Iteration  10: 1823311.029 ns/op
Iteration  11: 1639277.033 ns/op
Iteration  12: 2022015.509 ns/op
Iteration  13: 1485388.096 ns/op
Iteration  14: 1951161.873 ns/op
Iteration  15: 1749732.126 ns/op
Iteration  16: 1944339.194 ns/op
Iteration  17: 1621138.055 ns/op
Iteration  18: 1740313.809 ns/op
Iteration  19: 1671110.967 ns/op
Iteration  20: 1431632.132 ns/op

# Run progress: 63.48% complete, ETA 01:36:10
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1331267759.000 ns/op
# Warmup Iteration   2: 15322371.970 ns/op
# Warmup Iteration   3: 7438900.496 ns/op
# Warmup Iteration   4: 5591744.571 ns/op
# Warmup Iteration   5: 4377958.773 ns/op
# Warmup Iteration   6: 3961932.858 ns/op
# Warmup Iteration   7: 3218205.875 ns/op
# Warmup Iteration   8: 3008357.042 ns/op
# Warmup Iteration   9: 2599866.114 ns/op
# Warmup Iteration  10: 2770394.177 ns/op
Iteration   1: 2379089.010 ns/op
Iteration   2: 1992565.171 ns/op
Iteration   3: 2203950.606 ns/op
Iteration   4: 1903546.433 ns/op
Iteration   5: 1579511.229 ns/op
Iteration   6: 1701816.418 ns/op
Iteration   7: 2365735.080 ns/op
Iteration   8: 1711792.292 ns/op
Iteration   9: 1545152.938 ns/op
Iteration  10: 2100334.314 ns/op
Iteration  11: 1715821.350 ns/op
Iteration  12: 1737063.972 ns/op
Iteration  13: 1834513.921 ns/op
Iteration  14: 1684440.807 ns/op
Iteration  15: 1596180.241 ns/op
Iteration  16: 1536999.622 ns/op
Iteration  17: 1970301.309 ns/op
Iteration  18: 1651839.086 ns/op
Iteration  19: 1632732.486 ns/op
Iteration  20: 1744671.439 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldUpdateProxyConfigsByUuid":
  1839696.870 ±(99.9%) 147851.798 ns/op [Average]
  (min, avg, max) = (1431632.132, 1839696.870, 2643939.916), stdev = 262806.441
  CI (99.9%): [1691845.072, 1987548.668] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldUpdateStubHttpLifecycleByIndex_WhenInvalidHttpCycleListIndexGiven

# Run progress: 63.55% complete, ETA 01:36:09
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1393915461.000 ns/op
# Warmup Iteration   2: 9096725.946 ns/op
# Warmup Iteration   3: 4556041.755 ns/op
# Warmup Iteration   4: 3453043.184 ns/op
# Warmup Iteration   5: 2650529.804 ns/op
# Warmup Iteration   6: 2507535.296 ns/op
# Warmup Iteration   7: 2088948.491 ns/op
# Warmup Iteration   8: 2204260.035 ns/op
# Warmup Iteration   9: 2204035.356 ns/op
# Warmup Iteration  10: 1619417.274 ns/op
Iteration   1: 1728635.794 ns/op
Iteration   2: 1719028.292 ns/op
Iteration   3: 1468661.484 ns/op
Iteration   4: 1463020.871 ns/op
Iteration   5: 1383859.794 ns/op
Iteration   6: 1774616.433 ns/op
Iteration   7: 1567531.892 ns/op
Iteration   8: 1487516.994 ns/op
Iteration   9: 1592133.197 ns/op
Iteration  10: 1478795.819 ns/op
Iteration  11: 1229761.873 ns/op
Iteration  12: 1313579.541 ns/op
Iteration  13: 1269686.497 ns/op
Iteration  14: 1122976.844 ns/op
Iteration  15: 1152780.615 ns/op
Iteration  16: 1353737.463 ns/op
Iteration  17: 1262712.914 ns/op
Iteration  18: 1226956.450 ns/op
Iteration  19: 1108353.937 ns/op
Iteration  20: 1236509.239 ns/op

# Run progress: 63.63% complete, ETA 01:36:08
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1293783200.000 ns/op
# Warmup Iteration   2: 12132364.096 ns/op
# Warmup Iteration   3: 4719350.349 ns/op
# Warmup Iteration   4: 3227055.290 ns/op
# Warmup Iteration   5: 3177437.584 ns/op
# Warmup Iteration   6: 2636666.945 ns/op
# Warmup Iteration   7: 2511898.970 ns/op
# Warmup Iteration   8: 2291342.186 ns/op
# Warmup Iteration   9: 1986360.245 ns/op
# Warmup Iteration  10: 2168005.790 ns/op
Iteration   1: 1837694.435 ns/op
Iteration   2: 1953393.210 ns/op
Iteration   3: 1673092.900 ns/op
Iteration   4: 1679736.435 ns/op
Iteration   5: 1264504.155 ns/op
Iteration   6: 1332494.632 ns/op
Iteration   7: 1982809.857 ns/op
Iteration   8: 1527807.290 ns/op
Iteration   9: 1698506.952 ns/op
Iteration  10: 1570514.617 ns/op
Iteration  11: 1363773.766 ns/op
Iteration  12: 1281059.391 ns/op
Iteration  13: 1415340.418 ns/op
Iteration  14: 1255015.207 ns/op
Iteration  15: 1308654.949 ns/op
Iteration  16: 1451039.759 ns/op
Iteration  17: 1248595.272 ns/op
Iteration  18: 1290837.757 ns/op
Iteration  19: 1181879.924 ns/op
Iteration  20: 1529683.049 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldUpdateStubHttpLifecycleByIndex_WhenInvalidHttpCycleListIndexGiven":
  1444682.248 ±(99.9%) 127614.798 ns/op [Average]
  (min, avg, max) = (1108353.937, 1444682.248, 1982809.857), stdev = 226835.192
  CI (99.9%): [1317067.450, 1572297.046] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldUpdateStubHttpLifecycleByIndex_WhenValidHttpCycleListIndexGiven

# Run progress: 63.70% complete, ETA 01:36:07
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1361536020.000 ns/op
# Warmup Iteration   2: 10726569.147 ns/op
# Warmup Iteration   3: 4267293.502 ns/op
# Warmup Iteration   4: 3166586.418 ns/op
# Warmup Iteration   5: 2637515.471 ns/op
# Warmup Iteration   6: 2389854.041 ns/op
# Warmup Iteration   7: 2429248.354 ns/op
# Warmup Iteration   8: 2046067.278 ns/op
# Warmup Iteration   9: 2050854.117 ns/op
# Warmup Iteration  10: 2035974.424 ns/op
Iteration   1: 1651716.934 ns/op
Iteration   2: 1460738.260 ns/op
Iteration   3: 1622398.498 ns/op
Iteration   4: 1241852.665 ns/op
Iteration   5: 1337743.701 ns/op
Iteration   6: 1951149.721 ns/op
Iteration   7: 1301549.975 ns/op
Iteration   8: 1657718.624 ns/op
Iteration   9: 1383678.351 ns/op
Iteration  10: 1573278.019 ns/op
Iteration  11: 1424925.788 ns/op
Iteration  12: 1315495.758 ns/op
Iteration  13: 1131167.356 ns/op
Iteration  14: 1204239.765 ns/op
Iteration  15: 1314984.023 ns/op
Iteration  16: 1123014.723 ns/op
Iteration  17: 1210386.389 ns/op
Iteration  18: 1219804.055 ns/op
Iteration  19: 1107849.988 ns/op
Iteration  20: 1456726.799 ns/op

# Run progress: 63.78% complete, ETA 01:36:06
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1326137951.000 ns/op
# Warmup Iteration   2: 9706899.731 ns/op
# Warmup Iteration   3: 4644556.000 ns/op
# Warmup Iteration   4: 3740487.105 ns/op
# Warmup Iteration   5: 2863293.226 ns/op
# Warmup Iteration   6: 2692884.245 ns/op
# Warmup Iteration   7: 2064773.819 ns/op
# Warmup Iteration   8: 2344833.208 ns/op
# Warmup Iteration   9: 1773639.699 ns/op
# Warmup Iteration  10: 1685165.659 ns/op
Iteration   1: 1588689.944 ns/op
Iteration   2: 1331573.351 ns/op
Iteration   3: 1479346.602 ns/op
Iteration   4: 1367906.388 ns/op
Iteration   5: 1399273.278 ns/op
Iteration   6: 1402140.915 ns/op
Iteration   7: 1629162.473 ns/op
Iteration   8: 1285421.123 ns/op
Iteration   9: 1136746.374 ns/op
Iteration  10: 1420769.635 ns/op
Iteration  11: 1304084.516 ns/op
Iteration  12: 1088390.689 ns/op
Iteration  13: 1149818.634 ns/op
Iteration  14: 1354435.187 ns/op
Iteration  15: 1227041.522 ns/op
Iteration  16: 1107417.311 ns/op
Iteration  17: 1148492.148 ns/op
Iteration  18: 1160160.028 ns/op
Iteration  19: 1091469.366 ns/op
Iteration  20: 1200311.333 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldUpdateStubHttpLifecycleByIndex_WhenValidHttpCycleListIndexGiven":
  1339076.755 ±(99.9%) 110027.895 ns/op [Average]
  (min, avg, max) = (1088390.689, 1339076.755, 1951149.721), stdev = 195574.488
  CI (99.9%): [1229048.860, 1449104.651] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldUpdateStubResponseBody_WhenResponseIsRecordable

# Run progress: 63.86% complete, ETA 01:36:05
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.http.StubbyHttpTransport.httpRequestFromStub(io.github.azagniotov.stubby4j.stubs.StubRequest, String)" because "this.mockStubbyHttpTransport" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldUpdateStubResponseBody_WhenResponseIsRecordable(StubRepositoryTest.java:782)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldUpdateStubResponseBody_WhenResponseIsRecordable(StubRepositoryTest.java:1228)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldUpdateStubResponseBody_WhenResponseIsRecordable_jmhTest.benchmark_shouldUpdateStubResponseBody_WhenResponseIsRecordable_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldUpdateStubResponseBody_WhenResponseIsRecordable_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldUpdateStubResponseBody_WhenResponseIsRecordable_jmhTest.benchmark_shouldUpdateStubResponseBody_WhenResponseIsRecordable_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldUpdateStubResponseBody_WhenResponseIsRecordable_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 63.93% complete, ETA 01:35:47
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.http.StubbyHttpTransport.httpRequestFromStub(io.github.azagniotov.stubby4j.stubs.StubRequest, String)" because "this.mockStubbyHttpTransport" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldUpdateStubResponseBody_WhenResponseIsRecordable(StubRepositoryTest.java:782)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldUpdateStubResponseBody_WhenResponseIsRecordable(StubRepositoryTest.java:1228)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldUpdateStubResponseBody_WhenResponseIsRecordable_jmhTest.benchmark_shouldUpdateStubResponseBody_WhenResponseIsRecordable_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldUpdateStubResponseBody_WhenResponseIsRecordable_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldUpdateStubResponseBody_WhenResponseIsRecordable_jmhTest.benchmark_shouldUpdateStubResponseBody_WhenResponseIsRecordable_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldUpdateStubResponseBody_WhenResponseIsRecordable_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldUpdateStubsByUuid

# Run progress: 64.01% complete, ETA 01:35:30
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1349558002.000 ns/op
# Warmup Iteration   2: 15895997.609 ns/op
# Warmup Iteration   3: 8529475.890 ns/op
# Warmup Iteration   4: 7227414.106 ns/op
# Warmup Iteration   5: 5458382.875 ns/op
# Warmup Iteration   6: 5461911.984 ns/op
# Warmup Iteration   7: 4088481.282 ns/op
# Warmup Iteration   8: 4111316.848 ns/op
# Warmup Iteration   9: 3411453.388 ns/op
# Warmup Iteration  10: 3302211.353 ns/op
Iteration   1: 3203511.141 ns/op
Iteration   2: 3073699.166 ns/op
Iteration   3: 2501050.830 ns/op
Iteration   4: 2163568.983 ns/op
Iteration   5: 2449349.763 ns/op
Iteration   6: 2059456.080 ns/op
Iteration   7: 1967629.159 ns/op
Iteration   8: 2127043.601 ns/op
Iteration   9: 3254215.474 ns/op
Iteration  10: 2413431.933 ns/op
Iteration  11: 2066656.682 ns/op
Iteration  12: 2048101.812 ns/op
Iteration  13: 2433956.657 ns/op
Iteration  14: 2853204.222 ns/op
Iteration  15: 2037639.067 ns/op
Iteration  16: 2371062.005 ns/op
Iteration  17: 2176621.298 ns/op
Iteration  18: 2103334.857 ns/op
Iteration  19: 1915420.706 ns/op
Iteration  20: 2221552.324 ns/op

# Run progress: 64.08% complete, ETA 01:35:29
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
1312252289.000 ns/op
# Warmup Iteration   2: 19534737.827 ns/op
# Warmup Iteration   3: 8036482.072 ns/op
# Warmup Iteration   4: 6407600.261 ns/op
# Warmup Iteration   5: 5275819.432 ns/op
# Warmup Iteration   6: 4847013.406 ns/op
# Warmup Iteration   7: 4101893.545 ns/op
# Warmup Iteration   8: 4024236.699 ns/op
# Warmup Iteration   9: 3417729.154 ns/op
# Warmup Iteration  10: 2800342.446 ns/op
Iteration   1: 3188114.436 ns/op
Iteration   2: 2445837.049 ns/op
Iteration   3: 2394859.220 ns/op
Iteration   4: 2416274.518 ns/op
Iteration   5: 2023783.097 ns/op
Iteration   6: 2355314.005 ns/op
Iteration   7: 2290803.902 ns/op
Iteration   8: 2301394.333 ns/op
Iteration   9: 2400978.113 ns/op
Iteration  10: 2170508.143 ns/op
Iteration  11: 2099952.524 ns/op
Iteration  12: 1962904.788 ns/op
Iteration  13: 2211045.766 ns/op
Iteration  14: 1905290.808 ns/op
Iteration  15: 2829639.285 ns/op
Iteration  16: 1825702.827 ns/op
Iteration  17: 2268354.683 ns/op
Iteration  18: 1804718.396 ns/op
Iteration  19: 3375039.498 ns/op
Iteration  20: 3185196.599 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldUpdateStubsByUuid":
  2372405.444 ±(99.9%) 239692.027 ns/op [Average]
  (min, avg, max) = (1804718.396, 2372405.444, 3375039.498), stdev = 426052.368
  CI (99.9%): [2132713.416, 2612097.471] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_shouldVerifyExpectedHttpLifeCycles_WhenRefreshingStubbedData

# Run progress: 64.16% complete, ETA 01:35:28
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.yaml.YamlParser.parse(String, java.io.File)" because "this.mockYamlParser" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldVerifyExpectedHttpLifeCycles_WhenRefreshingStubbedData(StubRepositoryTest.java:697)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldVerifyExpectedHttpLifeCycles_WhenRefreshingStubbedData(StubRepositoryTest.java:1198)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldVerifyExpectedHttpLifeCycles_WhenRefreshingStubbedData_jmhTest.benchmark_shouldVerifyExpectedHttpLifeCycles_WhenRefreshingStubbedData_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldVerifyExpectedHttpLifeCycles_WhenRefreshingStubbedData_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldVerifyExpectedHttpLifeCycles_WhenRefreshingStubbedData_jmhTest.benchmark_shouldVerifyExpectedHttpLifeCycles_WhenRefreshingStubbedData_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldVerifyExpectedHttpLifeCycles_WhenRefreshingStubbedData_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 64.23% complete, ETA 01:35:10
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "io.github.azagniotov.stubby4j.yaml.YamlParser.parse(String, java.io.File)" because "this.mockYamlParser" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.shouldVerifyExpectedHttpLifeCycles_WhenRefreshingStubbedData(StubRepositoryTest.java:697)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_shouldVerifyExpectedHttpLifeCycles_WhenRefreshingStubbedData(StubRepositoryTest.java:1198)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldVerifyExpectedHttpLifeCycles_WhenRefreshingStubbedData_jmhTest.benchmark_shouldVerifyExpectedHttpLifeCycles_WhenRefreshingStubbedData_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_shouldVerifyExpectedHttpLifeCycles_WhenRefreshingStubbedData_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_shouldVerifyExpectedHttpLifeCycles_WhenRefreshingStubbedData_jmhTest.benchmark_shouldVerifyExpectedHttpLifeCycles_WhenRefreshingStubbedData_AverageTime(StubRepositoryTest__Benchmark_benchmark_shouldVerifyExpectedHttpLifeCycles_WhenRefreshingStubbedData_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamArrayHasElementsWithinUrlEncodedQuotes

# Run progress: 64.31% complete, ETA 01:34:52
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.stubbedRequestEqualsAssertingRequest_WhenQueryParamArrayHasElementsWithinUrlEncodedQuotes(StubRepositoryTest.java:893)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamArrayHasElementsWithinUrlEncodedQuotes(StubRepositoryTest.java:1252)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamArrayHasElementsWithinUrlEncodedQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamArrayHasElementsWithinUrlEncodedQuotes_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamArrayHasElementsWithinUrlEncodedQuotes_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamArrayHasElementsWithinUrlEncodedQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamArrayHasElementsWithinUrlEncodedQuotes_AverageTime(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamArrayHasElementsWithinUrlEncodedQuotes_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 64.38% complete, ETA 01:34:34
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.stubbedRequestEqualsAssertingRequest_WhenQueryParamArrayHasElementsWithinUrlEncodedQuotes(StubRepositoryTest.java:893)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamArrayHasElementsWithinUrlEncodedQuotes(StubRepositoryTest.java:1252)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamArrayHasElementsWithinUrlEncodedQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamArrayHasElementsWithinUrlEncodedQuotes_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamArrayHasElementsWithinUrlEncodedQuotes_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamArrayHasElementsWithinUrlEncodedQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamArrayHasElementsWithinUrlEncodedQuotes_AverageTime(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamArrayHasElementsWithinUrlEncodedQuotes_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedQuotes

# Run progress: 64.46% complete, ETA 01:34:17
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedQuotes(StubRepositoryTest.java:916)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedQuotes(StubRepositoryTest.java:1258)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedQuotes_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedQuotes_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedQuotes_AverageTime(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedQuotes_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 64.53% complete, ETA 01:33:59
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedQuotes(StubRepositoryTest.java:916)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedQuotes(StubRepositoryTest.java:1258)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedQuotes_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedQuotes_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedQuotes_AverageTime(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedQuotes_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedSingleQuotes

# Run progress: 64.61% complete, ETA 01:33:41
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedSingleQuotes(StubRepositoryTest.java:940)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedSingleQuotes(StubRepositoryTest.java:1264)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedSingleQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedSingleQuotes_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedSingleQuotes_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedSingleQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedSingleQuotes_AverageTime(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedSingleQuotes_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 64.68% complete, ETA 01:33:24
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedSingleQuotes(StubRepositoryTest.java:940)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedSingleQuotes(StubRepositoryTest.java:1264)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedSingleQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedSingleQuotes_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedSingleQuotes_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedSingleQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedSingleQuotes_AverageTime(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamUrlEncodedArrayHasElementsWithinUrlEncodedSingleQuotes_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedMultiplePluses

# Run progress: 64.76% complete, ETA 01:33:06
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedMultiplePluses(StubRepositoryTest.java:1012)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedMultiplePluses(StubRepositoryTest.java:1282)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedMultiplePluses_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedMultiplePluses_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedMultiplePluses_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedMultiplePluses_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedMultiplePluses_AverageTime(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedMultiplePluses_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 64.83% complete, ETA 01:32:48
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedMultiplePluses(StubRepositoryTest.java:1012)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedMultiplePluses(StubRepositoryTest.java:1282)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedMultiplePluses_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedMultiplePluses_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedMultiplePluses_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedMultiplePluses_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedMultiplePluses_AverageTime(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedMultiplePluses_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedSinglePlus

# Run progress: 64.91% complete, ETA 01:32:31
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedSinglePlus(StubRepositoryTest.java:964)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedSinglePlus(StubRepositoryTest.java:1270)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedSinglePlus_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedSinglePlus_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedSinglePlus_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedSinglePlus_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedSinglePlus_AverageTime(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedSinglePlus_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 64.98% complete, ETA 01:32:13
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedSinglePlus(StubRepositoryTest.java:964)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedSinglePlus(StubRepositoryTest.java:1270)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedSinglePlus_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedSinglePlus_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedSinglePlus_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedSinglePlus_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedSinglePlus_AverageTime(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveEncodedSinglePlus_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveMultipleRawPluses

# Run progress: 65.06% complete, ETA 01:31:56
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveMultipleRawPluses(StubRepositoryTest.java:988)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveMultipleRawPluses(StubRepositoryTest.java:1276)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveMultipleRawPluses_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveMultipleRawPluses_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveMultipleRawPluses_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveMultipleRawPluses_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveMultipleRawPluses_AverageTime(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveMultipleRawPluses_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 65.14% complete, ETA 01:31:39
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveMultipleRawPluses(StubRepositoryTest.java:988)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveMultipleRawPluses(StubRepositoryTest.java:1276)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveMultipleRawPluses_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveMultipleRawPluses_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveMultipleRawPluses_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveMultipleRawPluses_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveMultipleRawPluses_AverageTime(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValuesHaveMultipleRawPluses_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedPlusWithinUrlEncodedSingleQuotes

# Run progress: 65.21% complete, ETA 01:31:21
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedPlusWithinUrlEncodedSingleQuotes(StubRepositoryTest.java:1070)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedPlusWithinUrlEncodedSingleQuotes(StubRepositoryTest.java:1294)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedPlusWithinUrlEncodedSingleQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedPlusWithinUrlEncodedSingleQuotes_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedPlusWithinUrlEncodedSingleQuotes_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedPlusWithinUrlEncodedSingleQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedPlusWithinUrlEncodedSingleQuotes_AverageTime(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedPlusWithinUrlEncodedSingleQuotes_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 65.29% complete, ETA 01:31:04
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedPlusWithinUrlEncodedSingleQuotes(StubRepositoryTest.java:1070)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedPlusWithinUrlEncodedSingleQuotes(StubRepositoryTest.java:1294)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedPlusWithinUrlEncodedSingleQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedPlusWithinUrlEncodedSingleQuotes_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedPlusWithinUrlEncodedSingleQuotes_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedPlusWithinUrlEncodedSingleQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedPlusWithinUrlEncodedSingleQuotes_AverageTime(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedPlusWithinUrlEncodedSingleQuotes_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedSpacesWithinUrlEncodedSingleQuotes

# Run progress: 65.36% complete, ETA 01:30:47
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedSpacesWithinUrlEncodedSingleQuotes(StubRepositoryTest.java:1041)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedSpacesWithinUrlEncodedSingleQuotes(StubRepositoryTest.java:1288)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedSpacesWithinUrlEncodedSingleQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedSpacesWithinUrlEncodedSingleQuotes_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedSpacesWithinUrlEncodedSingleQuotes_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedSpacesWithinUrlEncodedSingleQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedSpacesWithinUrlEncodedSingleQuotes_AverageTime(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedSpacesWithinUrlEncodedSingleQuotes_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 65.44% complete, ETA 01:30:29
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedSpacesWithinUrlEncodedSingleQuotes(StubRepositoryTest.java:1041)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedSpacesWithinUrlEncodedSingleQuotes(StubRepositoryTest.java:1288)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedSpacesWithinUrlEncodedSingleQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedSpacesWithinUrlEncodedSingleQuotes_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedSpacesWithinUrlEncodedSingleQuotes_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedSpacesWithinUrlEncodedSingleQuotes_jmhTest.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedSpacesWithinUrlEncodedSingleQuotes_AverageTime(StubRepositoryTest__Benchmark_benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryValues_HasArrayElementsWithEncodedSpacesWithinUrlEncodedSingleQuotes_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRepositoryTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamArrayElementsHaveDifferentSpacing

# Run progress: 65.51% complete, ETA 01:30:12
# Fork: 1 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.stubbedRequestNotEqualsAssertingRequest_WhenQueryParamArrayElementsHaveDifferentSpacing(StubRepositoryTest.java:1446)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamArrayElementsHaveDifferentSpacing(StubRepositoryTest.java:1336)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamArrayElementsHaveDifferentSpacing_jmhTest.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamArrayElementsHaveDifferentSpacing_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamArrayElementsHaveDifferentSpacing_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamArrayElementsHaveDifferentSpacing_jmhTest.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamArrayElementsHaveDifferentSpacing_AverageTime(StubRepositoryTest__Benchmark_benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamArrayElementsHaveDifferentSpacing_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 65.59% complete, ETA 01:29:55
# Fork: 2 of 2
# Warmup Iteration   1: OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
<failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getPathInfo()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest.stubbedRequestNotEqualsAssertingRequest_WhenQueryParamArrayElementsHaveDifferentSpacing(StubRepositoryTest.java:1446)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:258)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubRepositoryTest$_Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamArrayElementsHaveDifferentSpacing(StubRepositoryTest.java:1336)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamArrayElementsHaveDifferentSpacing_jmhTest.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamArrayElementsHaveDifferentSpacing_avgt_jmhStub(StubRepositoryTest__Benchmark_benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamArrayElementsHaveDifferentSpacing_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubRepositoryTest__Benchmark_benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamArrayElementsHaveDifferentSpacing_jmhTest.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamArrayElementsHaveDifferentSpacing_AverageTime(StubRepositoryTest__Benchmark_benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamArrayElementsHaveDifferentSpacing_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_isNotSecured_WhenNoAuthorizationStubbed

# Run progress: 65.66% complete, ETA 01:29:38
# Fork: 1 of 2
# Warmup Iteration   1: 5356.611 ns/op
# Warmup Iteration   2: 844.130 ns/op
# Warmup Iteration   3: 528.762 ns/op
# Warmup Iteration   4: 526.034 ns/op
# Warmup Iteration   5: 527.375 ns/op
# Warmup Iteration   6: 525.505 ns/op
# Warmup Iteration   7: 526.678 ns/op
# Warmup Iteration   8: 522.730 ns/op
# Warmup Iteration   9: 529.489 ns/op
# Warmup Iteration  10: 526.327 ns/op
Iteration   1: 528.064 ns/op
Iteration   2: 525.621 ns/op
Iteration   3: 523.833 ns/op
Iteration   4: 527.907 ns/op
Iteration   5: 529.916 ns/op
Iteration   6: 528.046 ns/op
Iteration   7: 529.040 ns/op
Iteration   8: 528.080 ns/op
Iteration   9: 530.040 ns/op
Iteration  10: 530.280 ns/op
Iteration  11: 525.650 ns/op
Iteration  12: 526.345 ns/op
Iteration  13: 526.243 ns/op
Iteration  14: 525.023 ns/op
Iteration  15: 526.869 ns/op
Iteration  16: 528.323 ns/op
Iteration  17: 526.555 ns/op
Iteration  18: 526.158 ns/op
Iteration  19: 529.591 ns/op
Iteration  20: 528.689 ns/op

# Run progress: 65.74% complete, ETA 01:29:36
# Fork: 2 of 2
# Warmup Iteration   1: 5146.563 ns/op
# Warmup Iteration   2: 906.450 ns/op
# Warmup Iteration   3: 529.980 ns/op
# Warmup Iteration   4: 530.906 ns/op
# Warmup Iteration   5: 525.511 ns/op
# Warmup Iteration   6: 526.139 ns/op
# Warmup Iteration   7: 525.617 ns/op
# Warmup Iteration   8: 525.096 ns/op
# Warmup Iteration   9: 526.857 ns/op
# Warmup Iteration  10: 531.357 ns/op
Iteration   1: 529.004 ns/op
Iteration   2: 525.701 ns/op
Iteration   3: 527.575 ns/op
Iteration   4: 522.128 ns/op
Iteration   5: 524.717 ns/op
Iteration   6: 528.122 ns/op
Iteration   7: 524.234 ns/op
Iteration   8: 528.860 ns/op
Iteration   9: 525.447 ns/op
Iteration  10: 524.886 ns/op
Iteration  11: 527.975 ns/op
Iteration  12: 528.237 ns/op
Iteration  13: 525.057 ns/op
Iteration  14: 528.399 ns/op
Iteration  15: 527.337 ns/op
Iteration  16: 523.409 ns/op
Iteration  17: 528.104 ns/op
Iteration  18: 524.305 ns/op
Iteration  19: 526.428 ns/op
Iteration  20: 528.065 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_isNotSecured_WhenNoAuthorizationStubbed":
  526.957 ±(99.9%) 1.115 ns/op [Average]
  (min, avg, max) = (522.128, 526.957, 530.280), stdev = 1.981
  CI (99.9%): [525.842, 528.071] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_isSecured_WhenAuthorizationBasicStubbed

# Run progress: 65.81% complete, ETA 01:29:33
# Fork: 1 of 2
# Warmup Iteration   1: 6053.810 ns/op
# Warmup Iteration   2: 1990.879 ns/op
# Warmup Iteration   3: 709.887 ns/op
# Warmup Iteration   4: 688.156 ns/op
# Warmup Iteration   5: 692.037 ns/op
# Warmup Iteration   6: 687.431 ns/op
# Warmup Iteration   7: 692.974 ns/op
# Warmup Iteration   8: 689.329 ns/op
# Warmup Iteration   9: 690.024 ns/op
# Warmup Iteration  10: 687.269 ns/op
Iteration   1: 688.510 ns/op
Iteration   2: 689.539 ns/op
Iteration   3: 689.565 ns/op
Iteration   4: 688.707 ns/op
Iteration   5: 687.068 ns/op
Iteration   6: 694.723 ns/op
Iteration   7: 688.047 ns/op
Iteration   8: 687.752 ns/op
Iteration   9: 690.763 ns/op
Iteration  10: 688.741 ns/op
Iteration  11: 686.330 ns/op
Iteration  12: 686.473 ns/op
Iteration  13: 689.209 ns/op
Iteration  14: 690.104 ns/op
Iteration  15: 691.969 ns/op
Iteration  16: 687.744 ns/op
Iteration  17: 689.334 ns/op
Iteration  18: 688.361 ns/op
Iteration  19: 689.915 ns/op
Iteration  20: 689.614 ns/op

# Run progress: 65.89% complete, ETA 01:29:31
# Fork: 2 of 2
# Warmup Iteration   1: 6766.803 ns/op
# Warmup Iteration   2: 1647.393 ns/op
# Warmup Iteration   3: 695.913 ns/op
# Warmup Iteration   4: 688.002 ns/op
# Warmup Iteration   5: 684.838 ns/op
# Warmup Iteration   6: 687.858 ns/op
# Warmup Iteration   7: 686.152 ns/op
# Warmup Iteration   8: 685.774 ns/op
# Warmup Iteration   9: 686.669 ns/op
# Warmup Iteration  10: 686.203 ns/op
Iteration   1: 684.083 ns/op
Iteration   2: 690.749 ns/op
Iteration   3: 687.883 ns/op
Iteration   4: 686.910 ns/op
Iteration   5: 685.577 ns/op
Iteration   6: 691.167 ns/op
Iteration   7: 689.982 ns/op
Iteration   8: 684.412 ns/op
Iteration   9: 687.390 ns/op
Iteration  10: 686.302 ns/op
Iteration  11: 688.352 ns/op
Iteration  12: 685.010 ns/op
Iteration  13: 685.407 ns/op
Iteration  14: 685.943 ns/op
Iteration  15: 686.706 ns/op
Iteration  16: 685.810 ns/op
Iteration  17: 688.377 ns/op
Iteration  18: 685.077 ns/op
Iteration  19: 685.537 ns/op
Iteration  20: 686.271 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_isSecured_WhenAuthorizationBasicStubbed":
  687.985 ±(99.9%) 1.271 ns/op [Average]
  (min, avg, max) = (684.083, 687.985, 694.723), stdev = 2.260
  CI (99.9%): [686.714, 689.257] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_isSecured_WhenAuthorizationBearerStubbed

# Run progress: 65.96% complete, ETA 01:29:29
# Fork: 1 of 2
# Warmup Iteration   1: 5950.689 ns/op
# Warmup Iteration   2: 1564.919 ns/op
# Warmup Iteration   3: 764.369 ns/op
# Warmup Iteration   4: 758.743 ns/op
# Warmup Iteration   5: 754.619 ns/op
# Warmup Iteration   6: 753.613 ns/op
# Warmup Iteration   7: 755.969 ns/op
# Warmup Iteration   8: 759.814 ns/op
# Warmup Iteration   9: 760.768 ns/op
# Warmup Iteration  10: 757.352 ns/op
Iteration   1: 755.422 ns/op
Iteration   2: 760.159 ns/op
Iteration   3: 759.414 ns/op
Iteration   4: 753.193 ns/op
Iteration   5: 755.846 ns/op
Iteration   6: 754.711 ns/op
Iteration   7: 756.773 ns/op
Iteration   8: 757.758 ns/op
Iteration   9: 757.549 ns/op
Iteration  10: 758.153 ns/op
Iteration  11: 755.077 ns/op
Iteration  12: 752.953 ns/op
Iteration  13: 754.236 ns/op
Iteration  14: 755.847 ns/op
Iteration  15: 754.166 ns/op
Iteration  16: 754.773 ns/op
Iteration  17: 754.314 ns/op
Iteration  18: 759.572 ns/op
Iteration  19: 759.091 ns/op
Iteration  20: 754.831 ns/op

# Run progress: 66.04% complete, ETA 01:29:27
# Fork: 2 of 2
# Warmup Iteration   1: 5871.699 ns/op
# Warmup Iteration   2: 1510.375 ns/op
# Warmup Iteration   3: 794.811 ns/op
# Warmup Iteration   4: 752.269 ns/op
# Warmup Iteration   5: 747.070 ns/op
# Warmup Iteration   6: 750.116 ns/op
# Warmup Iteration   7: 747.281 ns/op
# Warmup Iteration   8: 751.249 ns/op
# Warmup Iteration   9: 750.734 ns/op
# Warmup Iteration  10: 748.285 ns/op
Iteration   1: 749.629 ns/op
Iteration   2: 750.774 ns/op
Iteration   3: 749.848 ns/op
Iteration   4: 750.329 ns/op
Iteration   5: 749.210 ns/op
Iteration   6: 763.113 ns/op
Iteration   7: 749.716 ns/op
Iteration   8: 753.452 ns/op
Iteration   9: 749.253 ns/op
Iteration  10: 748.689 ns/op
Iteration  11: 749.282 ns/op
Iteration  12: 748.925 ns/op
Iteration  13: 751.348 ns/op
Iteration  14: 750.155 ns/op
Iteration  15: 751.798 ns/op
Iteration  16: 751.631 ns/op
Iteration  17: 753.766 ns/op
Iteration  18: 746.544 ns/op
Iteration  19: 750.600 ns/op
Iteration  20: 748.864 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_isSecured_WhenAuthorizationBearerStubbed":
  753.519 ±(99.9%) 2.188 ns/op [Average]
  (min, avg, max) = (746.544, 753.519, 763.113), stdev = 3.889
  CI (99.9%): [751.331, 755.707] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_isSecured_WhenAuthorizationCustomStubbed

# Run progress: 66.11% complete, ETA 01:29:24
# Fork: 1 of 2
# Warmup Iteration   1: 6627.872 ns/op
# Warmup Iteration   2: 1616.443 ns/op
# Warmup Iteration   3: 868.655 ns/op
# Warmup Iteration   4: 839.539 ns/op
# Warmup Iteration   5: 841.433 ns/op
# Warmup Iteration   6: 837.782 ns/op
# Warmup Iteration   7: 841.868 ns/op
# Warmup Iteration   8: 841.340 ns/op
# Warmup Iteration   9: 842.627 ns/op
# Warmup Iteration  10: 841.899 ns/op
Iteration   1: 843.216 ns/op
Iteration   2: 843.649 ns/op
Iteration   3: 841.436 ns/op
Iteration   4: 842.153 ns/op
Iteration   5: 844.099 ns/op
Iteration   6: 851.117 ns/op
Iteration   7: 841.354 ns/op
Iteration   8: 840.492 ns/op
Iteration   9: 839.581 ns/op
Iteration  10: 840.698 ns/op
Iteration  11: 839.033 ns/op
Iteration  12: 840.723 ns/op
Iteration  13: 842.906 ns/op
Iteration  14: 839.172 ns/op
Iteration  15: 836.420 ns/op
Iteration  16: 839.323 ns/op
Iteration  17: 842.061 ns/op
Iteration  18: 839.331 ns/op
Iteration  19: 842.436 ns/op
Iteration  20: 840.495 ns/op

# Run progress: 66.19% complete, ETA 01:29:22
# Fork: 2 of 2
# Warmup Iteration   1: 6403.030 ns/op
# Warmup Iteration   2: 1801.791 ns/op
# Warmup Iteration   3: 893.969 ns/op
# Warmup Iteration   4: 850.720 ns/op
# Warmup Iteration   5: 853.094 ns/op
# Warmup Iteration   6: 850.320 ns/op
# Warmup Iteration   7: 850.311 ns/op
# Warmup Iteration   8: 849.440 ns/op
# Warmup Iteration   9: 852.238 ns/op
# Warmup Iteration  10: 854.305 ns/op
Iteration   1: 854.680 ns/op
Iteration   2: 852.803 ns/op
Iteration   3: 846.132 ns/op
Iteration   4: 848.807 ns/op
Iteration   5: 849.495 ns/op
Iteration   6: 859.732 ns/op
Iteration   7: 849.640 ns/op
Iteration   8: 846.869 ns/op
Iteration   9: 848.128 ns/op
Iteration  10: 852.090 ns/op
Iteration  11: 848.434 ns/op
Iteration  12: 847.815 ns/op
Iteration  13: 848.851 ns/op
Iteration  14: 849.023 ns/op
Iteration  15: 849.381 ns/op
Iteration  16: 849.947 ns/op
Iteration  17: 848.090 ns/op
Iteration  18: 851.078 ns/op
Iteration  19: 845.711 ns/op
Iteration  20: 849.336 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_isSecured_WhenAuthorizationCustomStubbed":
  845.643 ±(99.9%) 2.916 ns/op [Average]
  (min, avg, max) = (836.420, 845.643, 859.732), stdev = 5.183
  CI (99.9%): [842.728, 848.559] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldAddMethod_WhenGivenMethodArgumentEmpty

# Run progress: 66.27% complete, ETA 01:29:19
# Fork: 1 of 2
# Warmup Iteration   1: 7914.381 ns/op
# Warmup Iteration   2: 1575.408 ns/op
# Warmup Iteration   3: 793.099 ns/op
# Warmup Iteration   4: 753.273 ns/op
# Warmup Iteration   5: 755.698 ns/op
# Warmup Iteration   6: 757.021 ns/op
# Warmup Iteration   7: 760.474 ns/op
# Warmup Iteration   8: 754.894 ns/op
# Warmup Iteration   9: 754.616 ns/op
# Warmup Iteration  10: 759.115 ns/op
Iteration   1: 752.064 ns/op
Iteration   2: 753.939 ns/op
Iteration   3: 756.854 ns/op
Iteration   4: 754.015 ns/op
Iteration   5: 755.356 ns/op
Iteration   6: 765.450 ns/op
Iteration   7: 756.435 ns/op
Iteration   8: 753.523 ns/op
Iteration   9: 751.001 ns/op
Iteration  10: 752.204 ns/op
Iteration  11: 752.296 ns/op
Iteration  12: 752.802 ns/op
Iteration  13: 752.203 ns/op
Iteration  14: 757.427 ns/op
Iteration  15: 752.035 ns/op
Iteration  16: 757.651 ns/op
Iteration  17: 753.300 ns/op
Iteration  18: 754.105 ns/op
Iteration  19: 753.726 ns/op
Iteration  20: 753.434 ns/op

# Run progress: 66.34% complete, ETA 01:29:16
# Fork: 2 of 2
# Warmup Iteration   1: 7713.550 ns/op
# Warmup Iteration   2: 1362.221 ns/op
# Warmup Iteration   3: 775.535 ns/op
# Warmup Iteration   4: 757.536 ns/op
# Warmup Iteration   5: 756.420 ns/op
# Warmup Iteration   6: 755.373 ns/op
# Warmup Iteration   7: 752.821 ns/op
# Warmup Iteration   8: 754.895 ns/op
# Warmup Iteration   9: 753.632 ns/op
# Warmup Iteration  10: 756.820 ns/op
Iteration   1: 754.688 ns/op
Iteration   2: 757.153 ns/op
Iteration   3: 754.692 ns/op
Iteration   4: 747.936 ns/op
Iteration   5: 752.116 ns/op
Iteration   6: 756.097 ns/op
Iteration   7: 751.713 ns/op
Iteration   8: 747.670 ns/op
Iteration   9: 748.315 ns/op
Iteration  10: 757.980 ns/op
Iteration  11: 752.354 ns/op
Iteration  12: 750.271 ns/op
Iteration  13: 750.562 ns/op
Iteration  14: 756.878 ns/op
Iteration  15: 754.361 ns/op
Iteration  16: 754.793 ns/op
Iteration  17: 755.008 ns/op
Iteration  18: 753.560 ns/op
Iteration  19: 757.893 ns/op
Iteration  20: 760.324 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldAddMethod_WhenGivenMethodArgumentEmpty":
  754.105 ±(99.9%) 1.896 ns/op [Average]
  (min, avg, max) = (747.670, 754.105, 765.450), stdev = 3.371
  CI (99.9%): [752.208, 756.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldAddMethod_WhenGivenMethodArgumentNull

# Run progress: 66.42% complete, ETA 01:29:14
# Fork: 1 of 2
# Warmup Iteration   1: 7960.293 ns/op
# Warmup Iteration   2: 1173.034 ns/op
# Warmup Iteration   3: 767.918 ns/op
# Warmup Iteration   4: 767.779 ns/op
# Warmup Iteration   5: 767.650 ns/op
# Warmup Iteration   6: 766.977 ns/op
# Warmup Iteration   7: 765.937 ns/op
# Warmup Iteration   8: 765.867 ns/op
# Warmup Iteration   9: 767.192 ns/op
# Warmup Iteration  10: 765.935 ns/op
Iteration   1: 764.943 ns/op
Iteration   2: 764.161 ns/op
Iteration   3: 766.259 ns/op
Iteration   4: 762.893 ns/op
Iteration   5: 766.844 ns/op
Iteration   6: 772.847 ns/op
Iteration   7: 766.951 ns/op
Iteration   8: 762.512 ns/op
Iteration   9: 766.151 ns/op
Iteration  10: 768.406 ns/op
Iteration  11: 765.292 ns/op
Iteration  12: 765.929 ns/op
Iteration  13: 764.037 ns/op
Iteration  14: 764.091 ns/op
Iteration  15: 768.498 ns/op
Iteration  16: 775.468 ns/op
Iteration  17: 769.662 ns/op
Iteration  18: 773.889 ns/op
Iteration  19: 768.177 ns/op
Iteration  20: 768.836 ns/op

# Run progress: 66.49% complete, ETA 01:29:11
# Fork: 2 of 2
# Warmup Iteration   1: 7601.997 ns/op
# Warmup Iteration   2: 1625.574 ns/op
# Warmup Iteration   3: 765.831 ns/op
# Warmup Iteration   4: 760.724 ns/op
# Warmup Iteration   5: 762.196 ns/op
# Warmup Iteration   6: 758.166 ns/op
# Warmup Iteration   7: 764.553 ns/op
# Warmup Iteration   8: 759.257 ns/op
# Warmup Iteration   9: 761.090 ns/op
# Warmup Iteration  10: 786.307 ns/op
Iteration   1: 764.554 ns/op
Iteration   2: 760.121 ns/op
Iteration   3: 758.567 ns/op
Iteration   4: 759.591 ns/op
Iteration   5: 761.700 ns/op
Iteration   6: 760.613 ns/op
Iteration   7: 766.263 ns/op
Iteration   8: 756.811 ns/op
Iteration   9: 760.676 ns/op
Iteration  10: 760.224 ns/op
Iteration  11: 763.059 ns/op
Iteration  12: 761.496 ns/op
Iteration  13: 759.248 ns/op
Iteration  14: 763.614 ns/op
Iteration  15: 761.537 ns/op
Iteration  16: 760.601 ns/op
Iteration  17: 760.186 ns/op
Iteration  18: 760.107 ns/op
Iteration  19: 757.125 ns/op
Iteration  20: 760.135 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldAddMethod_WhenGivenMethodArgumentNull":
  764.052 ±(99.9%) 2.482 ns/op [Average]
  (min, avg, max) = (756.811, 764.052, 775.468), stdev = 4.411
  CI (99.9%): [761.570, 766.533] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldAddMethod_WhenGivenMethodArgumentSet

# Run progress: 66.57% complete, ETA 01:29:08
# Fork: 1 of 2
# Warmup Iteration   1: 7491.746 ns/op
# Warmup Iteration   2: 1061.825 ns/op
# Warmup Iteration   3: 795.630 ns/op
# Warmup Iteration   4: 794.028 ns/op
# Warmup Iteration   5: 796.246 ns/op
# Warmup Iteration   6: 792.257 ns/op
# Warmup Iteration   7: 794.624 ns/op
# Warmup Iteration   8: 790.363 ns/op
# Warmup Iteration   9: 795.902 ns/op
# Warmup Iteration  10: 795.829 ns/op
Iteration   1: 794.085 ns/op
Iteration   2: 793.405 ns/op
Iteration   3: 791.603 ns/op
Iteration   4: 795.584 ns/op
Iteration   5: 794.023 ns/op
Iteration   6: 802.901 ns/op
Iteration   7: 790.880 ns/op
Iteration   8: 789.187 ns/op
Iteration   9: 792.366 ns/op
Iteration  10: 791.419 ns/op
Iteration  11: 795.731 ns/op
Iteration  12: 790.617 ns/op
Iteration  13: 789.658 ns/op
Iteration  14: 790.862 ns/op
Iteration  15: 792.985 ns/op
Iteration  16: 789.160 ns/op
Iteration  17: 793.170 ns/op
Iteration  18: 791.895 ns/op
Iteration  19: 793.236 ns/op
Iteration  20: 791.361 ns/op

# Run progress: 66.64% complete, ETA 01:29:05
# Fork: 2 of 2
# Warmup Iteration   1: 8535.373 ns/op
# Warmup Iteration   2: 1101.567 ns/op
# Warmup Iteration   3: 798.461 ns/op
# Warmup Iteration   4: 795.937 ns/op
# Warmup Iteration   5: 798.838 ns/op
# Warmup Iteration   6: 796.994 ns/op
# Warmup Iteration   7: 795.397 ns/op
# Warmup Iteration   8: 796.825 ns/op
# Warmup Iteration   9: 798.549 ns/op
# Warmup Iteration  10: 799.754 ns/op
Iteration   1: 794.268 ns/op
Iteration   2: 797.068 ns/op
Iteration   3: 799.017 ns/op
Iteration   4: 799.575 ns/op
Iteration   5: 798.769 ns/op
Iteration   6: 804.910 ns/op
Iteration   7: 797.476 ns/op
Iteration   8: 798.958 ns/op
Iteration   9: 795.140 ns/op
Iteration  10: 800.379 ns/op
Iteration  11: 799.360 ns/op
Iteration  12: 798.299 ns/op
Iteration  13: 796.084 ns/op
Iteration  14: 799.147 ns/op
Iteration  15: 796.963 ns/op
Iteration  16: 800.431 ns/op
Iteration  17: 794.465 ns/op
Iteration  18: 795.708 ns/op
Iteration  19: 799.706 ns/op
Iteration  20: 797.633 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldAddMethod_WhenGivenMethodArgumentSet":
  795.437 ±(99.9%) 2.190 ns/op [Average]
  (min, avg, max) = (789.160, 795.437, 804.910), stdev = 3.893
  CI (99.9%): [793.247, 797.627] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldComputeRegexPatterns

# Run progress: 66.72% complete, ETA 01:29:02
# Fork: 1 of 2
# Warmup Iteration   1: 77361.485 ns/op
# Warmup Iteration   2: 20329.431 ns/op
# Warmup Iteration   3: 9371.226 ns/op
# Warmup Iteration   4: 8098.206 ns/op
# Warmup Iteration   5: 8104.834 ns/op
# Warmup Iteration   6: 8170.667 ns/op
# Warmup Iteration   7: 8024.127 ns/op
# Warmup Iteration   8: 8077.519 ns/op
# Warmup Iteration   9: 8127.934 ns/op
# Warmup Iteration  10: 8106.686 ns/op
Iteration   1: 8024.361 ns/op
Iteration   2: 8078.150 ns/op
Iteration   3: 8236.193 ns/op
Iteration   4: 8163.856 ns/op
Iteration   5: 8052.411 ns/op
Iteration   6: 8156.203 ns/op
Iteration   7: 7967.515 ns/op
Iteration   8: 8001.266 ns/op
Iteration   9: 7903.873 ns/op
Iteration  10: 8007.712 ns/op
Iteration  11: 7946.807 ns/op
Iteration  12: 7998.897 ns/op
Iteration  13: 7994.231 ns/op
Iteration  14: 8090.709 ns/op
Iteration  15: 7933.760 ns/op
Iteration  16: 7948.173 ns/op
Iteration  17: 7985.534 ns/op
Iteration  18: 7903.771 ns/op
Iteration  19: 8026.135 ns/op
Iteration  20: 7965.508 ns/op

# Run progress: 66.79% complete, ETA 01:28:59
# Fork: 2 of 2
# Warmup Iteration   1: 91255.080 ns/op
# Warmup Iteration   2: 21109.969 ns/op
# Warmup Iteration   3: 9358.613 ns/op
# Warmup Iteration   4: 8319.023 ns/op
# Warmup Iteration   5: 8148.501 ns/op
# Warmup Iteration   6: 8149.257 ns/op
# Warmup Iteration   7: 8145.896 ns/op
# Warmup Iteration   8: 8179.810 ns/op
# Warmup Iteration   9: 8176.362 ns/op
# Warmup Iteration  10: 8188.581 ns/op
Iteration   1: 8281.227 ns/op
Iteration   2: 8253.548 ns/op
Iteration   3: 8179.440 ns/op
Iteration   4: 8204.361 ns/op
Iteration   5: 8171.334 ns/op
Iteration   6: 8408.812 ns/op
Iteration   7: 8028.659 ns/op
Iteration   8: 8108.569 ns/op
Iteration   9: 8081.698 ns/op
Iteration  10: 8075.435 ns/op
Iteration  11: 8008.316 ns/op
Iteration  12: 8052.200 ns/op
Iteration  13: 8043.276 ns/op
Iteration  14: 8036.878 ns/op
Iteration  15: 8028.555 ns/op
Iteration  16: 8090.256 ns/op
Iteration  17: 8044.645 ns/op
Iteration  18: 8020.582 ns/op
Iteration  19: 8085.388 ns/op
Iteration  20: 8044.368 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldComputeRegexPatterns":
  8065.815 ±(99.9%) 60.334 ns/op [Average]
  (min, avg, max) = (7903.771, 8065.815, 8408.812), stdev = 107.243
  CI (99.9%): [8005.482, 8126.149] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindPostNotStubbed_WhenPostEmptyAndMethodPost

# Run progress: 66.87% complete, ETA 01:28:56
# Fork: 1 of 2
# Warmup Iteration   1: 3163.544 ns/op
# Warmup Iteration   2: 768.945 ns/op
# Warmup Iteration   3: 506.628 ns/op
# Warmup Iteration   4: 504.980 ns/op
# Warmup Iteration   5: 503.327 ns/op
# Warmup Iteration   6: 504.265 ns/op
# Warmup Iteration   7: 502.460 ns/op
# Warmup Iteration   8: 503.239 ns/op
# Warmup Iteration   9: 506.642 ns/op
# Warmup Iteration  10: 505.287 ns/op
Iteration   1: 504.955 ns/op
Iteration   2: 505.550 ns/op
Iteration   3: 504.058 ns/op
Iteration   4: 503.502 ns/op
Iteration   5: 501.955 ns/op
Iteration   6: 511.924 ns/op
Iteration   7: 507.528 ns/op
Iteration   8: 505.858 ns/op
Iteration   9: 504.797 ns/op
Iteration  10: 506.871 ns/op
Iteration  11: 505.742 ns/op
Iteration  12: 503.886 ns/op
Iteration  13: 508.152 ns/op
Iteration  14: 505.123 ns/op
Iteration  15: 503.132 ns/op
Iteration  16: 503.693 ns/op
Iteration  17: 506.195 ns/op
Iteration  18: 503.323 ns/op
Iteration  19: 503.836 ns/op
Iteration  20: 506.805 ns/op

# Run progress: 66.94% complete, ETA 01:28:53
# Fork: 2 of 2
# Warmup Iteration   1: 3147.628 ns/op
# Warmup Iteration   2: 735.160 ns/op
# Warmup Iteration   3: 508.190 ns/op
# Warmup Iteration   4: 505.256 ns/op
# Warmup Iteration   5: 501.435 ns/op
# Warmup Iteration   6: 503.860 ns/op
# Warmup Iteration   7: 505.351 ns/op
# Warmup Iteration   8: 503.761 ns/op
# Warmup Iteration   9: 504.011 ns/op
# Warmup Iteration  10: 505.821 ns/op
Iteration   1: 505.099 ns/op
Iteration   2: 506.105 ns/op
Iteration   3: 508.142 ns/op
Iteration   4: 503.618 ns/op
Iteration   5: 504.272 ns/op
Iteration   6: 511.525 ns/op
Iteration   7: 503.250 ns/op
Iteration   8: 502.775 ns/op
Iteration   9: 502.405 ns/op
Iteration  10: 501.276 ns/op
Iteration  11: 501.619 ns/op
Iteration  12: 503.410 ns/op
Iteration  13: 504.230 ns/op
Iteration  14: 505.073 ns/op
Iteration  15: 501.181 ns/op
Iteration  16: 507.451 ns/op
Iteration  17: 502.507 ns/op
Iteration  18: 502.659 ns/op
Iteration  19: 503.917 ns/op
Iteration  20: 503.222 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindPostNotStubbed_WhenPostEmptyAndMethodPost":
  504.766 ±(99.9%) 1.369 ns/op [Average]
  (min, avg, max) = (501.181, 504.766, 511.924), stdev = 2.433
  CI (99.9%): [503.397, 506.134] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindPostNotStubbed_WhenPostEmptyAndMethodPut

# Run progress: 67.02% complete, ETA 01:28:50
# Fork: 1 of 2
# Warmup Iteration   1: 4168.186 ns/op
# Warmup Iteration   2: 610.478 ns/op
# Warmup Iteration   3: 492.073 ns/op
# Warmup Iteration   4: 489.879 ns/op
# Warmup Iteration   5: 488.596 ns/op
# Warmup Iteration   6: 489.334 ns/op
# Warmup Iteration   7: 486.553 ns/op
# Warmup Iteration   8: 488.063 ns/op
# Warmup Iteration   9: 490.228 ns/op
# Warmup Iteration  10: 492.285 ns/op
Iteration   1: 490.319 ns/op
Iteration   2: 489.254 ns/op
Iteration   3: 490.832 ns/op
Iteration   4: 490.197 ns/op
Iteration   5: 489.477 ns/op
Iteration   6: 496.836 ns/op
Iteration   7: 489.287 ns/op
Iteration   8: 489.793 ns/op
Iteration   9: 490.530 ns/op
Iteration  10: 488.488 ns/op
Iteration  11: 487.067 ns/op
Iteration  12: 490.662 ns/op
Iteration  13: 492.340 ns/op
Iteration  14: 491.961 ns/op
Iteration  15: 490.531 ns/op
Iteration  16: 491.591 ns/op
Iteration  17: 490.224 ns/op
Iteration  18: 487.403 ns/op
Iteration  19: 489.238 ns/op
Iteration  20: 490.940 ns/op

# Run progress: 67.09% complete, ETA 01:28:47
# Fork: 2 of 2
# Warmup Iteration   1: 3531.826 ns/op
# Warmup Iteration   2: 745.922 ns/op
# Warmup Iteration   3: 493.870 ns/op
# Warmup Iteration   4: 492.593 ns/op
# Warmup Iteration   5: 492.207 ns/op
# Warmup Iteration   6: 491.949 ns/op
# Warmup Iteration   7: 491.321 ns/op
# Warmup Iteration   8: 493.642 ns/op
# Warmup Iteration   9: 490.769 ns/op
# Warmup Iteration  10: 493.608 ns/op
Iteration   1: 494.660 ns/op
Iteration   2: 493.945 ns/op
Iteration   3: 491.777 ns/op
Iteration   4: 492.114 ns/op
Iteration   5: 492.577 ns/op
Iteration   6: 494.514 ns/op
Iteration   7: 492.142 ns/op
Iteration   8: 490.902 ns/op
Iteration   9: 491.704 ns/op
Iteration  10: 491.503 ns/op
Iteration  11: 493.140 ns/op
Iteration  12: 490.904 ns/op
Iteration  13: 490.936 ns/op
Iteration  14: 493.551 ns/op
Iteration  15: 491.997 ns/op
Iteration  16: 492.841 ns/op
Iteration  17: 490.549 ns/op
Iteration  18: 494.637 ns/op
Iteration  19: 490.471 ns/op
Iteration  20: 491.742 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindPostNotStubbed_WhenPostEmptyAndMethodPut":
  491.339 ±(99.9%) 1.114 ns/op [Average]
  (min, avg, max) = (487.067, 491.339, 496.836), stdev = 1.980
  CI (99.9%): [490.225, 492.454] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindPostNotStubbed_WhenPostNullAndMethodGet

# Run progress: 67.17% complete, ETA 01:28:43
# Fork: 1 of 2
# Warmup Iteration   1: 3996.502 ns/op
# Warmup Iteration   2: 791.435 ns/op
# Warmup Iteration   3: 495.072 ns/op
# Warmup Iteration   4: 492.193 ns/op
# Warmup Iteration   5: 497.209 ns/op
# Warmup Iteration   6: 495.974 ns/op
# Warmup Iteration   7: 495.119 ns/op
# Warmup Iteration   8: 495.548 ns/op
# Warmup Iteration   9: 496.049 ns/op
# Warmup Iteration  10: 495.466 ns/op
Iteration   1: 493.640 ns/op
Iteration   2: 495.445 ns/op
Iteration   3: 494.328 ns/op
Iteration   4: 493.342 ns/op
Iteration   5: 494.300 ns/op
Iteration   6: 491.720 ns/op
Iteration   7: 493.062 ns/op
Iteration   8: 494.001 ns/op
Iteration   9: 494.456 ns/op
Iteration  10: 493.797 ns/op
Iteration  11: 496.139 ns/op
Iteration  12: 495.882 ns/op
Iteration  13: 496.430 ns/op
Iteration  14: 499.170 ns/op
Iteration  15: 494.082 ns/op
Iteration  16: 496.256 ns/op
Iteration  17: 493.764 ns/op
Iteration  18: 497.540 ns/op
Iteration  19: 498.093 ns/op
Iteration  20: 496.645 ns/op

# Run progress: 67.24% complete, ETA 01:28:40
# Fork: 2 of 2
# Warmup Iteration   1: 4050.209 ns/op
# Warmup Iteration   2: 728.339 ns/op
# Warmup Iteration   3: 499.416 ns/op
# Warmup Iteration   4: 492.032 ns/op
# Warmup Iteration   5: 493.351 ns/op
# Warmup Iteration   6: 496.124 ns/op
# Warmup Iteration   7: 497.135 ns/op
# Warmup Iteration   8: 496.664 ns/op
# Warmup Iteration   9: 496.612 ns/op
# Warmup Iteration  10: 497.600 ns/op
Iteration   1: 498.855 ns/op
Iteration   2: 494.666 ns/op
Iteration   3: 494.737 ns/op
Iteration   4: 498.128 ns/op
Iteration   5: 495.314 ns/op
Iteration   6: 492.872 ns/op
Iteration   7: 497.674 ns/op
Iteration   8: 496.071 ns/op
Iteration   9: 497.545 ns/op
Iteration  10: 497.114 ns/op
Iteration  11: 496.825 ns/op
Iteration  12: 495.965 ns/op
Iteration  13: 498.325 ns/op
Iteration  14: 493.140 ns/op
Iteration  15: 494.004 ns/op
Iteration  16: 495.232 ns/op
Iteration  17: 497.344 ns/op
Iteration  18: 495.476 ns/op
Iteration  19: 493.788 ns/op
Iteration  20: 493.637 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindPostNotStubbed_WhenPostNullAndMethodGet":
  495.470 ±(99.9%) 1.050 ns/op [Average]
  (min, avg, max) = (491.720, 495.470, 499.170), stdev = 1.867
  CI (99.9%): [494.420, 496.520] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindPostNotStubbed_WhenPostNullAndMethodPost

# Run progress: 67.32% complete, ETA 01:28:37
# Fork: 1 of 2
# Warmup Iteration   1: 3460.309 ns/op
# Warmup Iteration   2: 783.159 ns/op
# Warmup Iteration   3: 512.469 ns/op
# Warmup Iteration   4: 512.969 ns/op
# Warmup Iteration   5: 510.760 ns/op
# Warmup Iteration   6: 512.318 ns/op
# Warmup Iteration   7: 510.338 ns/op
# Warmup Iteration   8: 509.519 ns/op
# Warmup Iteration   9: 511.482 ns/op
# Warmup Iteration  10: 512.516 ns/op
Iteration   1: 513.593 ns/op
Iteration   2: 514.845 ns/op
Iteration   3: 510.862 ns/op
Iteration   4: 510.711 ns/op
Iteration   5: 513.584 ns/op
Iteration   6: 514.676 ns/op
Iteration   7: 509.698 ns/op
Iteration   8: 509.468 ns/op
Iteration   9: 509.902 ns/op
Iteration  10: 510.275 ns/op
Iteration  11: 509.664 ns/op
Iteration  12: 510.265 ns/op
Iteration  13: 512.565 ns/op
Iteration  14: 509.840 ns/op
Iteration  15: 510.215 ns/op
Iteration  16: 508.917 ns/op
Iteration  17: 511.963 ns/op
Iteration  18: 510.020 ns/op
Iteration  19: 510.197 ns/op
Iteration  20: 508.056 ns/op

# Run progress: 67.39% complete, ETA 01:28:33
# Fork: 2 of 2
# Warmup Iteration   1: 4428.115 ns/op
# Warmup Iteration   2: 723.875 ns/op
# Warmup Iteration   3: 487.093 ns/op
# Warmup Iteration   4: 489.122 ns/op
# Warmup Iteration   5: 486.245 ns/op
# Warmup Iteration   6: 486.815 ns/op
# Warmup Iteration   7: 486.587 ns/op
# Warmup Iteration   8: 485.956 ns/op
# Warmup Iteration   9: 486.915 ns/op
# Warmup Iteration  10: 486.753 ns/op
Iteration   1: 484.432 ns/op
Iteration   2: 483.037 ns/op
Iteration   3: 484.973 ns/op
Iteration   4: 487.280 ns/op
Iteration   5: 487.163 ns/op
Iteration   6: 489.001 ns/op
Iteration   7: 485.554 ns/op
Iteration   8: 484.939 ns/op
Iteration   9: 486.360 ns/op
Iteration  10: 485.091 ns/op
Iteration  11: 488.559 ns/op
Iteration  12: 485.489 ns/op
Iteration  13: 484.235 ns/op
Iteration  14: 484.702 ns/op
Iteration  15: 485.157 ns/op
Iteration  16: 483.916 ns/op
Iteration  17: 484.965 ns/op
Iteration  18: 485.492 ns/op
Iteration  19: 484.960 ns/op
Iteration  20: 485.791 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindPostNotStubbed_WhenPostNullAndMethodPost":
  498.260 ±(99.9%) 7.301 ns/op [Average]
  (min, avg, max) = (483.037, 498.260, 514.845), stdev = 12.978
  CI (99.9%): [490.959, 505.562] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindPostNotStubbed_WhenPostNullAndMethodPut

# Run progress: 67.47% complete, ETA 01:28:30
# Fork: 1 of 2
# Warmup Iteration   1: 3607.415 ns/op
# Warmup Iteration   2: 755.793 ns/op
# Warmup Iteration   3: 497.960 ns/op
# Warmup Iteration   4: 499.355 ns/op
# Warmup Iteration   5: 497.465 ns/op
# Warmup Iteration   6: 495.852 ns/op
# Warmup Iteration   7: 496.617 ns/op
# Warmup Iteration   8: 498.264 ns/op
# Warmup Iteration   9: 497.425 ns/op
# Warmup Iteration  10: 498.474 ns/op
Iteration   1: 499.807 ns/op
Iteration   2: 500.538 ns/op
Iteration   3: 496.671 ns/op
Iteration   4: 496.840 ns/op
Iteration   5: 496.131 ns/op
Iteration   6: 501.135 ns/op
Iteration   7: 497.267 ns/op
Iteration   8: 496.971 ns/op
Iteration   9: 498.598 ns/op
Iteration  10: 496.302 ns/op
Iteration  11: 498.179 ns/op
Iteration  12: 498.194 ns/op
Iteration  13: 496.198 ns/op
Iteration  14: 498.787 ns/op
Iteration  15: 497.001 ns/op
Iteration  16: 497.712 ns/op
Iteration  17: 501.052 ns/op
Iteration  18: 500.428 ns/op
Iteration  19: 496.968 ns/op
Iteration  20: 498.904 ns/op

# Run progress: 67.55% complete, ETA 01:28:26
# Fork: 2 of 2
# Warmup Iteration   1: 3389.163 ns/op
# Warmup Iteration   2: 757.312 ns/op
# Warmup Iteration   3: 522.180 ns/op
# Warmup Iteration   4: 507.614 ns/op
# Warmup Iteration   5: 518.368 ns/op
# Warmup Iteration   6: 516.161 ns/op
# Warmup Iteration   7: 511.999 ns/op
# Warmup Iteration   8: 503.425 ns/op
# Warmup Iteration   9: 514.370 ns/op
# Warmup Iteration  10: 517.009 ns/op
Iteration   1: 524.071 ns/op
Iteration   2: 512.298 ns/op
Iteration   3: 520.200 ns/op
Iteration   4: 517.202 ns/op
Iteration   5: 508.372 ns/op
Iteration   6: 512.032 ns/op
Iteration   7: 511.720 ns/op
Iteration   8: 513.847 ns/op
Iteration   9: 515.206 ns/op
Iteration  10: 512.615 ns/op
Iteration  11: 509.542 ns/op
Iteration  12: 515.231 ns/op
Iteration  13: 506.877 ns/op
Iteration  14: 517.828 ns/op
Iteration  15: 512.946 ns/op
Iteration  16: 514.893 ns/op
Iteration  17: 506.903 ns/op
Iteration  18: 512.171 ns/op
Iteration  19: 510.371 ns/op
Iteration  20: 517.141 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindPostNotStubbed_WhenPostNullAndMethodPut":
  505.879 ±(99.9%) 4.750 ns/op [Average]
  (min, avg, max) = (496.131, 505.879, 524.071), stdev = 8.442
  CI (99.9%): [501.129, 510.628] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindPostNotStubbed_WhenPostStubbedAndMethodGet

# Run progress: 67.62% complete, ETA 01:28:22
# Fork: 1 of 2
# Warmup Iteration   1: 7143.210 ns/op
# Warmup Iteration   2: 2343.147 ns/op
# Warmup Iteration   3: 1105.309 ns/op
# Warmup Iteration   4: 796.455 ns/op
# Warmup Iteration   5: 795.565 ns/op
# Warmup Iteration   6: 796.041 ns/op
# Warmup Iteration   7: 792.042 ns/op
# Warmup Iteration   8: 797.023 ns/op
# Warmup Iteration   9: 797.896 ns/op
# Warmup Iteration  10: 819.795 ns/op
Iteration   1: 798.437 ns/op
Iteration   2: 792.666 ns/op
Iteration   3: 792.598 ns/op
Iteration   4: 792.907 ns/op
Iteration   5: 792.272 ns/op
Iteration   6: 792.292 ns/op
Iteration   7: 782.843 ns/op
Iteration   8: 784.632 ns/op
Iteration   9: 787.602 ns/op
Iteration  10: 793.311 ns/op
Iteration  11: 789.040 ns/op
Iteration  12: 784.643 ns/op
Iteration  13: 786.503 ns/op
Iteration  14: 787.010 ns/op
Iteration  15: 783.660 ns/op
Iteration  16: 789.053 ns/op
Iteration  17: 786.597 ns/op
Iteration  18: 787.309 ns/op
Iteration  19: 789.740 ns/op
Iteration  20: 786.057 ns/op

# Run progress: 67.70% complete, ETA 01:28:19
# Fork: 2 of 2
# Warmup Iteration   1: 6650.900 ns/op
# Warmup Iteration   2: 1547.420 ns/op
# Warmup Iteration   3: 775.913 ns/op
# Warmup Iteration   4: 779.997 ns/op
# Warmup Iteration   5: 776.084 ns/op
# Warmup Iteration   6: 772.964 ns/op
# Warmup Iteration   7: 769.341 ns/op
# Warmup Iteration   8: 773.838 ns/op
# Warmup Iteration   9: 776.138 ns/op
# Warmup Iteration  10: 774.795 ns/op
Iteration   1: 777.555 ns/op
Iteration   2: 771.459 ns/op
Iteration   3: 774.328 ns/op
Iteration   4: 772.419 ns/op
Iteration   5: 774.232 ns/op
Iteration   6: 782.572 ns/op
Iteration   7: 773.282 ns/op
Iteration   8: 773.887 ns/op
Iteration   9: 774.385 ns/op
Iteration  10: 770.848 ns/op
Iteration  11: 772.650 ns/op
Iteration  12: 770.394 ns/op
Iteration  13: 774.614 ns/op
Iteration  14: 772.353 ns/op
Iteration  15: 772.716 ns/op
Iteration  16: 775.054 ns/op
Iteration  17: 772.826 ns/op
Iteration  18: 776.618 ns/op
Iteration  19: 780.070 ns/op
Iteration  20: 774.705 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindPostNotStubbed_WhenPostStubbedAndMethodGet":
  781.654 ±(99.9%) 4.602 ns/op [Average]
  (min, avg, max) = (770.394, 781.654, 798.437), stdev = 8.180
  CI (99.9%): [777.052, 786.255] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindRequestBodyNotStubbed_WhenJustMethodPatch

# Run progress: 67.77% complete, ETA 01:28:15
# Fork: 1 of 2
# Warmup Iteration   1: 3964.931 ns/op
# Warmup Iteration   2: 655.192 ns/op
# Warmup Iteration   3: 490.228 ns/op
# Warmup Iteration   4: 488.163 ns/op
# Warmup Iteration   5: 490.996 ns/op
# Warmup Iteration   6: 488.728 ns/op
# Warmup Iteration   7: 489.154 ns/op
# Warmup Iteration   8: 489.196 ns/op
# Warmup Iteration   9: 488.350 ns/op
# Warmup Iteration  10: 486.832 ns/op
Iteration   1: 490.334 ns/op
Iteration   2: 491.671 ns/op
Iteration   3: 488.361 ns/op
Iteration   4: 489.076 ns/op
Iteration   5: 489.542 ns/op
Iteration   6: 487.549 ns/op
Iteration   7: 483.004 ns/op
Iteration   8: 484.688 ns/op
Iteration   9: 487.402 ns/op
Iteration  10: 487.473 ns/op
Iteration  11: 485.243 ns/op
Iteration  12: 489.637 ns/op
Iteration  13: 487.768 ns/op
Iteration  14: 485.931 ns/op
Iteration  15: 486.707 ns/op
Iteration  16: 487.761 ns/op
Iteration  17: 485.985 ns/op
Iteration  18: 485.890 ns/op
Iteration  19: 488.872 ns/op
Iteration  20: 489.352 ns/op

# Run progress: 67.85% complete, ETA 01:28:11
# Fork: 2 of 2
# Warmup Iteration   1: 3916.822 ns/op
# Warmup Iteration   2: 662.727 ns/op
# Warmup Iteration   3: 503.624 ns/op
# Warmup Iteration   4: 503.767 ns/op
# Warmup Iteration   5: 499.370 ns/op
# Warmup Iteration   6: 499.704 ns/op
# Warmup Iteration   7: 502.714 ns/op
# Warmup Iteration   8: 501.631 ns/op
# Warmup Iteration   9: 503.656 ns/op
# Warmup Iteration  10: 501.855 ns/op
Iteration   1: 501.625 ns/op
Iteration   2: 502.727 ns/op
Iteration   3: 504.090 ns/op
Iteration   4: 506.298 ns/op
Iteration   5: 502.572 ns/op
Iteration   6: 509.779 ns/op
Iteration   7: 501.267 ns/op
Iteration   8: 502.060 ns/op
Iteration   9: 499.860 ns/op
Iteration  10: 499.614 ns/op
Iteration  11: 502.373 ns/op
Iteration  12: 500.877 ns/op
Iteration  13: 500.582 ns/op
Iteration  14: 503.782 ns/op
Iteration  15: 503.855 ns/op
Iteration  16: 502.477 ns/op
Iteration  17: 506.083 ns/op
Iteration  18: 503.075 ns/op
Iteration  19: 505.099 ns/op
Iteration  20: 510.000 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindRequestBodyNotStubbed_WhenJustMethodPatch":
  495.509 ±(99.9%) 4.711 ns/op [Average]
  (min, avg, max) = (483.004, 495.509, 510.000), stdev = 8.375
  CI (99.9%): [490.797, 500.220] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindRequestBodyStubbed_WhenPostStubbedAndMethodPatch

# Run progress: 67.92% complete, ETA 01:28:07
# Fork: 1 of 2
# Warmup Iteration   1: 6554.955 ns/op
# Warmup Iteration   2: 1641.364 ns/op
# Warmup Iteration   3: 768.835 ns/op
# Warmup Iteration   4: 758.492 ns/op
# Warmup Iteration   5: 759.254 ns/op
# Warmup Iteration   6: 757.615 ns/op
# Warmup Iteration   7: 755.112 ns/op
# Warmup Iteration   8: 762.666 ns/op
# Warmup Iteration   9: 758.186 ns/op
# Warmup Iteration  10: 761.228 ns/op
Iteration   1: 754.376 ns/op
Iteration   2: 762.657 ns/op
Iteration   3: 758.514 ns/op
Iteration   4: 760.096 ns/op
Iteration   5: 756.803 ns/op
Iteration   6: 769.910 ns/op
Iteration   7: 758.757 ns/op
Iteration   8: 760.338 ns/op
Iteration   9: 777.326 ns/op
Iteration  10: 762.541 ns/op
Iteration  11: 762.438 ns/op
Iteration  12: 760.547 ns/op
Iteration  13: 758.745 ns/op
Iteration  14: 759.743 ns/op
Iteration  15: 761.148 ns/op
Iteration  16: 759.149 ns/op
Iteration  17: 762.196 ns/op
Iteration  18: 756.737 ns/op
Iteration  19: 755.581 ns/op
Iteration  20: 760.445 ns/op

# Run progress: 68.00% complete, ETA 01:28:03
# Fork: 2 of 2
# Warmup Iteration   1: 7123.391 ns/op
# Warmup Iteration   2: 1372.820 ns/op
# Warmup Iteration   3: 776.593 ns/op
# Warmup Iteration   4: 762.298 ns/op
# Warmup Iteration   5: 762.999 ns/op
# Warmup Iteration   6: 761.875 ns/op
# Warmup Iteration   7: 789.082 ns/op
# Warmup Iteration   8: 765.318 ns/op
# Warmup Iteration   9: 757.218 ns/op
# Warmup Iteration  10: 766.372 ns/op
Iteration   1: 761.017 ns/op
Iteration   2: 763.611 ns/op
Iteration   3: 761.249 ns/op
Iteration   4: 758.066 ns/op
Iteration   5: 759.620 ns/op
Iteration   6: 762.847 ns/op
Iteration   7: 765.014 ns/op
Iteration   8: 764.116 ns/op
Iteration   9: 760.220 ns/op
Iteration  10: 767.646 ns/op
Iteration  11: 762.283 ns/op
Iteration  12: 765.125 ns/op
Iteration  13: 762.906 ns/op
Iteration  14: 765.155 ns/op
Iteration  15: 760.206 ns/op
Iteration  16: 760.770 ns/op
Iteration  17: 763.234 ns/op
Iteration  18: 767.850 ns/op
Iteration  19: 763.007 ns/op
Iteration  20: 774.767 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindRequestBodyStubbed_WhenPostStubbedAndMethodPatch":
  762.169 ±(99.9%) 2.563 ns/op [Average]
  (min, avg, max) = (754.376, 762.169, 777.326), stdev = 4.555
  CI (99.9%): [759.606, 764.731] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindRequestBodyStubbed_WhenPostStubbedAndMethodPost

# Run progress: 68.07% complete, ETA 01:27:59
# Fork: 1 of 2
# Warmup Iteration   1: 6443.742 ns/op
# Warmup Iteration   2: 878.113 ns/op
# Warmup Iteration   3: 639.535 ns/op
# Warmup Iteration   4: 640.274 ns/op
# Warmup Iteration   5: 637.657 ns/op
# Warmup Iteration   6: 637.512 ns/op
# Warmup Iteration   7: 639.360 ns/op
# Warmup Iteration   8: 637.265 ns/op
# Warmup Iteration   9: 640.086 ns/op
# Warmup Iteration  10: 640.830 ns/op
Iteration   1: 635.557 ns/op
Iteration   2: 634.512 ns/op
Iteration   3: 636.487 ns/op
Iteration   4: 639.426 ns/op
Iteration   5: 638.060 ns/op
Iteration   6: 639.182 ns/op
Iteration   7: 636.207 ns/op
Iteration   8: 635.649 ns/op
Iteration   9: 637.706 ns/op
Iteration  10: 635.458 ns/op
Iteration  11: 636.688 ns/op
Iteration  12: 635.888 ns/op
Iteration  13: 636.668 ns/op
Iteration  14: 636.663 ns/op
Iteration  15: 636.986 ns/op
Iteration  16: 636.012 ns/op
Iteration  17: 632.790 ns/op
Iteration  18: 634.591 ns/op
Iteration  19: 632.807 ns/op
Iteration  20: 630.825 ns/op

# Run progress: 68.15% complete, ETA 01:27:55
# Fork: 2 of 2
# Warmup Iteration   1: 5481.600 ns/op
# Warmup Iteration   2: 819.161 ns/op
# Warmup Iteration   3: 639.131 ns/op
# Warmup Iteration   4: 635.233 ns/op
# Warmup Iteration   5: 638.137 ns/op
# Warmup Iteration   6: 639.198 ns/op
# Warmup Iteration   7: 639.092 ns/op
# Warmup Iteration   8: 638.807 ns/op
# Warmup Iteration   9: 637.014 ns/op
# Warmup Iteration  10: 639.799 ns/op
Iteration   1: 639.134 ns/op
Iteration   2: 637.217 ns/op
Iteration   3: 637.537 ns/op
Iteration   4: 634.646 ns/op
Iteration   5: 637.919 ns/op
Iteration   6: 646.386 ns/op
Iteration   7: 639.264 ns/op
Iteration   8: 637.514 ns/op
Iteration   9: 633.444 ns/op
Iteration  10: 633.384 ns/op
Iteration  11: 635.979 ns/op
Iteration  12: 636.542 ns/op
Iteration  13: 633.405 ns/op
Iteration  14: 633.258 ns/op
Iteration  15: 633.262 ns/op
Iteration  16: 632.094 ns/op
Iteration  17: 636.604 ns/op
Iteration  18: 635.010 ns/op
Iteration  19: 635.548 ns/op
Iteration  20: 636.031 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindRequestBodyStubbed_WhenPostStubbedAndMethodPost":
  636.059 ±(99.9%) 1.496 ns/op [Average]
  (min, avg, max) = (630.825, 636.059, 646.386), stdev = 2.659
  CI (99.9%): [634.562, 637.555] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindRequestBodyStubbed_WhenPostStubbedAndMethodPut

# Run progress: 68.22% complete, ETA 01:27:51
# Fork: 1 of 2
# Warmup Iteration   1: 6387.071 ns/op
# Warmup Iteration   2: 1604.627 ns/op
# Warmup Iteration   3: 728.914 ns/op
# Warmup Iteration   4: 709.794 ns/op
# Warmup Iteration   5: 711.842 ns/op
# Warmup Iteration   6: 709.023 ns/op
# Warmup Iteration   7: 713.227 ns/op
# Warmup Iteration   8: 708.254 ns/op
# Warmup Iteration   9: 707.929 ns/op
# Warmup Iteration  10: 708.347 ns/op
Iteration   1: 707.820 ns/op
Iteration   2: 710.967 ns/op
Iteration   3: 711.218 ns/op
Iteration   4: 704.731 ns/op
Iteration   5: 704.572 ns/op
Iteration   6: 712.839 ns/op
Iteration   7: 715.404 ns/op
Iteration   8: 708.276 ns/op
Iteration   9: 707.495 ns/op
Iteration  10: 707.747 ns/op
Iteration  11: 711.474 ns/op
Iteration  12: 705.970 ns/op
Iteration  13: 712.171 ns/op
Iteration  14: 711.756 ns/op
Iteration  15: 711.355 ns/op
Iteration  16: 713.653 ns/op
Iteration  17: 712.516 ns/op
Iteration  18: 710.350 ns/op
Iteration  19: 708.368 ns/op
Iteration  20: 708.782 ns/op

# Run progress: 68.30% complete, ETA 01:27:47
# Fork: 2 of 2
# Warmup Iteration   1: 6663.675 ns/op
# Warmup Iteration   2: 1564.137 ns/op
# Warmup Iteration   3: 769.310 ns/op
# Warmup Iteration   4: 714.719 ns/op
# Warmup Iteration   5: 734.902 ns/op
# Warmup Iteration   6: 714.016 ns/op
# Warmup Iteration   7: 717.185 ns/op
# Warmup Iteration   8: 711.403 ns/op
# Warmup Iteration   9: 713.479 ns/op
# Warmup Iteration  10: 714.040 ns/op
Iteration   1: 710.594 ns/op
Iteration   2: 712.499 ns/op
Iteration   3: 710.980 ns/op
Iteration   4: 713.246 ns/op
Iteration   5: 710.887 ns/op
Iteration   6: 713.238 ns/op
Iteration   7: 711.238 ns/op
Iteration   8: 713.830 ns/op
Iteration   9: 709.815 ns/op
Iteration  10: 712.770 ns/op
Iteration  11: 712.800 ns/op
Iteration  12: 712.279 ns/op
Iteration  13: 707.687 ns/op
Iteration  14: 712.326 ns/op
Iteration  15: 710.764 ns/op
Iteration  16: 714.389 ns/op
Iteration  17: 712.342 ns/op
Iteration  18: 712.275 ns/op
Iteration  19: 712.879 ns/op
Iteration  20: 712.592 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindRequestBodyStubbed_WhenPostStubbedAndMethodPut":
  710.922 ±(99.9%) 1.443 ns/op [Average]
  (min, avg, max) = (704.572, 710.922, 715.404), stdev = 2.565
  CI (99.9%): [709.479, 712.365] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindTwoHashCodesEqual_WhenTwoRequestAreTheSame

# Run progress: 68.37% complete, ETA 01:27:42
# Fork: 1 of 2
# Warmup Iteration   1: 1246956.036 ns/op
# Warmup Iteration   2: 451400.583 ns/op
# Warmup Iteration   3: 362254.636 ns/op
# Warmup Iteration   4: 442433.072 ns/op
# Warmup Iteration   5: 656619.552 ns/op
# Warmup Iteration   6: 652914.590 ns/op
# Warmup Iteration   7: 652926.012 ns/op
# Warmup Iteration   8: 658681.420 ns/op
# Warmup Iteration   9: 653040.675 ns/op
# Warmup Iteration  10: 652807.061 ns/op
Iteration   1: 652548.632 ns/op
Iteration   2: 652698.740 ns/op
Iteration   3: 659088.512 ns/op
Iteration   4: 653252.700 ns/op
Iteration   5: 652902.703 ns/op
Iteration   6: 647423.559 ns/op
Iteration   7: 657850.482 ns/op
Iteration   8: 660006.128 ns/op
Iteration   9: 653020.253 ns/op
Iteration  10: 653083.870 ns/op
Iteration  11: 637532.131 ns/op
Iteration  12: 666891.957 ns/op
Iteration  13: 662085.647 ns/op
Iteration  14: 653009.795 ns/op
Iteration  15: 653282.792 ns/op
Iteration  16: 653029.662 ns/op
Iteration  17: 653229.575 ns/op
Iteration  18: 661419.187 ns/op
Iteration  19: 653225.206 ns/op
Iteration  20: 653264.702 ns/op

# Run progress: 68.45% complete, ETA 01:27:39
# Fork: 2 of 2
# Warmup Iteration   1: 1241322.109 ns/op
# Warmup Iteration   2: 443465.666 ns/op
# Warmup Iteration   3: 342772.275 ns/op
# Warmup Iteration   4: 485929.035 ns/op
# Warmup Iteration   5: 812106.436 ns/op
# Warmup Iteration   6: 653170.279 ns/op
# Warmup Iteration   7: 652653.289 ns/op
# Warmup Iteration   8: 653211.944 ns/op
# Warmup Iteration   9: 652965.670 ns/op
# Warmup Iteration  10: 658025.766 ns/op
Iteration   1: 657020.708 ns/op
Iteration   2: 651724.295 ns/op
Iteration   3: 633563.554 ns/op
Iteration   4: 674064.721 ns/op
Iteration   5: 661877.275 ns/op
Iteration   6: 652627.741 ns/op
Iteration   7: 652925.362 ns/op
Iteration   8: 653207.688 ns/op
Iteration   9: 652837.591 ns/op
Iteration  10: 642419.961 ns/op
Iteration  11: 672868.478 ns/op
Iteration  12: 652946.205 ns/op
Iteration  13: 650755.024 ns/op
Iteration  14: 655004.082 ns/op
Iteration  15: 662586.675 ns/op
Iteration  16: 650009.190 ns/op
Iteration  17: 656037.245 ns/op
Iteration  18: 643361.748 ns/op
Iteration  19: 663303.236 ns/op
Iteration  20: 666363.760 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindTwoHashCodesEqual_WhenTwoRequestAreTheSame":
  654858.769 ±(99.9%) 4513.905 ns/op [Average]
  (min, avg, max) = (633563.554, 654858.769, 674064.721), stdev = 8023.463
  CI (99.9%): [650344.864, 659372.675] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindTwoHashCodesEqual_WhenTwoRequestHaveMethodAndUrlNull

# Run progress: 68.52% complete, ETA 01:27:35
# Fork: 1 of 2
# Warmup Iteration   1: 5831.844 ns/op
# Warmup Iteration   2: 849.082 ns/op
# Warmup Iteration   3: 566.219 ns/op
# Warmup Iteration   4: 562.923 ns/op
# Warmup Iteration   5: 566.887 ns/op
# Warmup Iteration   6: 568.585 ns/op
# Warmup Iteration   7: 564.699 ns/op
# Warmup Iteration   8: 564.298 ns/op
# Warmup Iteration   9: 567.983 ns/op
# Warmup Iteration  10: 565.372 ns/op
Iteration   1: 563.303 ns/op
Iteration   2: 569.767 ns/op
Iteration   3: 567.273 ns/op
Iteration   4: 562.959 ns/op
Iteration   5: 567.490 ns/op
Iteration   6: 560.973 ns/op
Iteration   7: 566.139 ns/op
Iteration   8: 564.236 ns/op
Iteration   9: 565.448 ns/op
Iteration  10: 566.730 ns/op
Iteration  11: 569.763 ns/op
Iteration  12: 568.842 ns/op
Iteration  13: 566.723 ns/op
Iteration  14: 566.707 ns/op
Iteration  15: 566.871 ns/op
Iteration  16: 568.658 ns/op
Iteration  17: 567.708 ns/op
Iteration  18: 566.627 ns/op
Iteration  19: 566.309 ns/op
Iteration  20: 567.315 ns/op

# Run progress: 68.60% complete, ETA 01:27:31
# Fork: 2 of 2
# Warmup Iteration   1: 5494.448 ns/op
# Warmup Iteration   2: 774.407 ns/op
# Warmup Iteration   3: 568.827 ns/op
# Warmup Iteration   4: 564.094 ns/op
# Warmup Iteration   5: 563.850 ns/op
# Warmup Iteration   6: 566.995 ns/op
# Warmup Iteration   7: 565.800 ns/op
# Warmup Iteration   8: 566.182 ns/op
# Warmup Iteration   9: 566.758 ns/op
# Warmup Iteration  10: 564.330 ns/op
Iteration   1: 564.066 ns/op
Iteration   2: 564.655 ns/op
Iteration   3: 562.264 ns/op
Iteration   4: 563.274 ns/op
Iteration   5: 564.008 ns/op
Iteration   6: 564.060 ns/op
Iteration   7: 565.195 ns/op
Iteration   8: 562.866 ns/op
Iteration   9: 563.948 ns/op
Iteration  10: 562.481 ns/op
Iteration  11: 566.541 ns/op
Iteration  12: 567.735 ns/op
Iteration  13: 568.070 ns/op
Iteration  14: 564.644 ns/op
Iteration  15: 564.724 ns/op
Iteration  16: 567.184 ns/op
Iteration  17: 565.951 ns/op
Iteration  18: 568.827 ns/op
Iteration  19: 567.824 ns/op
Iteration  20: 564.212 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindTwoHashCodesEqual_WhenTwoRequestHaveMethodAndUrlNull":
  565.809 ±(99.9%) 1.233 ns/op [Average]
  (min, avg, max) = (560.973, 565.809, 569.767), stdev = 2.191
  CI (99.9%): [564.577, 567.042] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindTwoHashCodesEqual_WhenTwoRequestHaveUrlNull

# Run progress: 68.67% complete, ETA 01:27:26
# Fork: 1 of 2
# Warmup Iteration   1: 5694.146 ns/op
# Warmup Iteration   2: 947.726 ns/op
# Warmup Iteration   3: 670.534 ns/op
# Warmup Iteration   4: 669.635 ns/op
# Warmup Iteration   5: 666.816 ns/op
# Warmup Iteration   6: 667.201 ns/op
# Warmup Iteration   7: 668.160 ns/op
# Warmup Iteration   8: 667.542 ns/op
# Warmup Iteration   9: 667.897 ns/op
# Warmup Iteration  10: 668.117 ns/op
Iteration   1: 669.048 ns/op
Iteration   2: 668.866 ns/op
Iteration   3: 674.531 ns/op
Iteration   4: 670.918 ns/op
Iteration   5: 670.952 ns/op
Iteration   6: 678.777 ns/op
Iteration   7: 668.154 ns/op
Iteration   8: 669.413 ns/op
Iteration   9: 669.006 ns/op
Iteration  10: 670.070 ns/op
Iteration  11: 672.344 ns/op
Iteration  12: 665.707 ns/op
Iteration  13: 667.695 ns/op
Iteration  14: 667.939 ns/op
Iteration  15: 668.058 ns/op
Iteration  16: 668.967 ns/op
Iteration  17: 669.427 ns/op
Iteration  18: 667.001 ns/op
Iteration  19: 670.120 ns/op
Iteration  20: 669.932 ns/op

# Run progress: 68.75% complete, ETA 01:27:22
# Fork: 2 of 2
# Warmup Iteration   1: 5315.308 ns/op
# Warmup Iteration   2: 1005.344 ns/op
# Warmup Iteration   3: 665.721 ns/op
# Warmup Iteration   4: 663.775 ns/op
# Warmup Iteration   5: 665.636 ns/op
# Warmup Iteration   6: 662.652 ns/op
# Warmup Iteration   7: 663.054 ns/op
# Warmup Iteration   8: 661.789 ns/op
# Warmup Iteration   9: 664.589 ns/op
# Warmup Iteration  10: 662.014 ns/op
Iteration   1: 666.629 ns/op
Iteration   2: 660.475 ns/op
Iteration   3: 662.306 ns/op
Iteration   4: 662.485 ns/op
Iteration   5: 662.444 ns/op
Iteration   6: 669.552 ns/op
Iteration   7: 668.447 ns/op
Iteration   8: 665.393 ns/op
Iteration   9: 665.510 ns/op
Iteration  10: 668.315 ns/op
Iteration  11: 670.566 ns/op
Iteration  12: 666.283 ns/op
Iteration  13: 665.608 ns/op
Iteration  14: 666.273 ns/op
Iteration  15: 665.666 ns/op
Iteration  16: 663.378 ns/op
Iteration  17: 668.194 ns/op
Iteration  18: 668.247 ns/op
Iteration  19: 666.269 ns/op
Iteration  20: 667.409 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindTwoHashCodesEqual_WhenTwoRequestHaveUrlNull":
  667.909 ±(99.9%) 1.885 ns/op [Average]
  (min, avg, max) = (660.475, 667.909, 678.777), stdev = 3.350
  CI (99.9%): [666.025, 669.794] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetAuthorizationTypeBasic_WhenBasicAuthorizationStubbed

# Run progress: 68.83% complete, ETA 01:27:17
# Fork: 1 of 2
# Warmup Iteration   1: 6588.776 ns/op
# Warmup Iteration   2: 1298.471 ns/op
# Warmup Iteration   3: 676.479 ns/op
# Warmup Iteration   4: 653.807 ns/op
# Warmup Iteration   5: 653.872 ns/op
# Warmup Iteration   6: 652.575 ns/op
# Warmup Iteration   7: 654.715 ns/op
# Warmup Iteration   8: 654.185 ns/op
# Warmup Iteration   9: 654.348 ns/op
# Warmup Iteration  10: 651.861 ns/op
Iteration   1: 655.527 ns/op
Iteration   2: 657.502 ns/op
Iteration   3: 656.753 ns/op
Iteration   4: 654.099 ns/op
Iteration   5: 654.856 ns/op
Iteration   6: 659.300 ns/op
Iteration   7: 654.956 ns/op
Iteration   8: 650.094 ns/op
Iteration   9: 653.617 ns/op
Iteration  10: 653.587 ns/op
Iteration  11: 652.532 ns/op
Iteration  12: 654.320 ns/op
Iteration  13: 654.469 ns/op
Iteration  14: 655.724 ns/op
Iteration  15: 658.390 ns/op
Iteration  16: 653.059 ns/op
Iteration  17: 653.264 ns/op
Iteration  18: 654.107 ns/op
Iteration  19: 655.721 ns/op
Iteration  20: 657.707 ns/op

# Run progress: 68.90% complete, ETA 01:27:13
# Fork: 2 of 2
# Warmup Iteration   1: 6447.059 ns/op
# Warmup Iteration   2: 1491.838 ns/op
# Warmup Iteration   3: 699.186 ns/op
# Warmup Iteration   4: 674.496 ns/op
# Warmup Iteration   5: 674.012 ns/op
# Warmup Iteration   6: 676.676 ns/op
# Warmup Iteration   7: 675.533 ns/op
# Warmup Iteration   8: 674.422 ns/op
# Warmup Iteration   9: 675.759 ns/op
# Warmup Iteration  10: 680.573 ns/op
Iteration   1: 677.121 ns/op
Iteration   2: 674.711 ns/op
Iteration   3: 676.646 ns/op
Iteration   4: 677.464 ns/op
Iteration   5: 677.289 ns/op
Iteration   6: 683.877 ns/op
Iteration   7: 675.186 ns/op
Iteration   8: 678.539 ns/op
Iteration   9: 678.507 ns/op
Iteration  10: 674.180 ns/op
Iteration  11: 674.281 ns/op
Iteration  12: 675.944 ns/op
Iteration  13: 678.452 ns/op
Iteration  14: 676.629 ns/op
Iteration  15: 675.948 ns/op
Iteration  16: 675.494 ns/op
Iteration  17: 679.496 ns/op
Iteration  18: 675.826 ns/op
Iteration  19: 677.336 ns/op
Iteration  20: 680.197 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetAuthorizationTypeBasic_WhenBasicAuthorizationStubbed":
  666.068 ±(99.9%) 6.440 ns/op [Average]
  (min, avg, max) = (650.094, 666.068, 683.877), stdev = 11.446
  CI (99.9%): [659.628, 672.507] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetAuthorizationTypeBearer_WhenBearerAuthorizationStubbed

# Run progress: 68.98% complete, ETA 01:27:08
# Fork: 1 of 2
# Warmup Iteration   1: 6660.968 ns/op
# Warmup Iteration   2: 1442.777 ns/op
# Warmup Iteration   3: 765.392 ns/op
# Warmup Iteration   4: 742.427 ns/op
# Warmup Iteration   5: 740.425 ns/op
# Warmup Iteration   6: 738.738 ns/op
# Warmup Iteration   7: 739.808 ns/op
# Warmup Iteration   8: 738.363 ns/op
# Warmup Iteration   9: 738.509 ns/op
# Warmup Iteration  10: 741.367 ns/op
Iteration   1: 736.160 ns/op
Iteration   2: 739.276 ns/op
Iteration   3: 742.557 ns/op
Iteration   4: 742.194 ns/op
Iteration   5: 737.159 ns/op
Iteration   6: 746.387 ns/op
Iteration   7: 734.990 ns/op
Iteration   8: 737.315 ns/op
Iteration   9: 734.967 ns/op
Iteration  10: 746.507 ns/op
Iteration  11: 744.026 ns/op
Iteration  12: 736.604 ns/op
Iteration  13: 736.456 ns/op
Iteration  14: 737.975 ns/op
Iteration  15: 735.797 ns/op
Iteration  16: 737.925 ns/op
Iteration  17: 741.201 ns/op
Iteration  18: 737.196 ns/op
Iteration  19: 739.691 ns/op
Iteration  20: 739.750 ns/op

# Run progress: 69.05% complete, ETA 01:27:03
# Fork: 2 of 2
# Warmup Iteration   1: 6599.866 ns/op
# Warmup Iteration   2: 1325.823 ns/op
# Warmup Iteration   3: 738.849 ns/op
# Warmup Iteration   4: 739.629 ns/op
# Warmup Iteration   5: 739.482 ns/op
# Warmup Iteration   6: 731.601 ns/op
# Warmup Iteration   7: 733.123 ns/op
# Warmup Iteration   8: 732.198 ns/op
# Warmup Iteration   9: 738.357 ns/op
# Warmup Iteration  10: 731.063 ns/op
Iteration   1: 735.502 ns/op
Iteration   2: 731.159 ns/op
Iteration   3: 775.391 ns/op
Iteration   4: 962.024 ns/op
Iteration   5: 969.537 ns/op
Iteration   6: 973.982 ns/op
Iteration   7: 963.821 ns/op
Iteration   8: 965.337 ns/op
Iteration   9: 966.700 ns/op
Iteration  10: 967.786 ns/op
Iteration  11: 966.801 ns/op
Iteration  12: 965.014 ns/op
Iteration  13: 969.572 ns/op
Iteration  14: 965.421 ns/op
Iteration  15: 963.292 ns/op
Iteration  16: 965.211 ns/op
Iteration  17: 964.568 ns/op
Iteration  18: 961.040 ns/op
Iteration  19: 970.076 ns/op
Iteration  20: 965.941 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetAuthorizationTypeBearer_WhenBearerAuthorizationStubbed":
  836.308 ±(99.9%) 63.759 ns/op [Average]
  (min, avg, max) = (731.159, 836.308, 973.982), stdev = 113.332
  CI (99.9%): [772.549, 900.067] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetAuthorizationTypeCustom_WhenCustomAuthorizationStubbed

# Run progress: 69.13% complete, ETA 01:26:58
# Fork: 1 of 2
# Warmup Iteration   1: 6306.629 ns/op
# Warmup Iteration   2: 1474.313 ns/op
# Warmup Iteration   3: 759.578 ns/op
# Warmup Iteration   4: 731.614 ns/op
# Warmup Iteration   5: 733.549 ns/op
# Warmup Iteration   6: 733.814 ns/op
# Warmup Iteration   7: 729.977 ns/op
# Warmup Iteration   8: 733.424 ns/op
# Warmup Iteration   9: 739.985 ns/op
# Warmup Iteration  10: 734.445 ns/op
Iteration   1: 736.661 ns/op
Iteration   2: 731.823 ns/op
Iteration   3: 733.744 ns/op
Iteration   4: 737.991 ns/op
Iteration   5: 737.457 ns/op
Iteration   6: 740.534 ns/op
Iteration   7: 734.539 ns/op
Iteration   8: 735.387 ns/op
Iteration   9: 734.103 ns/op
Iteration  10: 729.222 ns/op
Iteration  11: 728.771 ns/op
Iteration  12: 732.658 ns/op
Iteration  13: 734.579 ns/op
Iteration  14: 731.357 ns/op
Iteration  15: 731.650 ns/op
Iteration  16: 731.350 ns/op
Iteration  17: 731.335 ns/op
Iteration  18: 736.150 ns/op
Iteration  19: 733.661 ns/op
Iteration  20: 731.839 ns/op

# Run progress: 69.20% complete, ETA 01:26:53
# Fork: 2 of 2
# Warmup Iteration   1: 6200.982 ns/op
# Warmup Iteration   2: 1586.580 ns/op
# Warmup Iteration   3: 766.802 ns/op
# Warmup Iteration   4: 743.245 ns/op
# Warmup Iteration   5: 741.768 ns/op
# Warmup Iteration   6: 740.671 ns/op
# Warmup Iteration   7: 743.095 ns/op
# Warmup Iteration   8: 740.287 ns/op
# Warmup Iteration   9: 742.577 ns/op
# Warmup Iteration  10: 738.737 ns/op
Iteration   1: 742.130 ns/op
Iteration   2: 743.681 ns/op
Iteration   3: 741.052 ns/op
Iteration   4: 739.790 ns/op
Iteration   5: 743.102 ns/op
Iteration   6: 744.844 ns/op
Iteration   7: 740.918 ns/op
Iteration   8: 741.707 ns/op
Iteration   9: 743.364 ns/op
Iteration  10: 740.806 ns/op
Iteration  11: 744.499 ns/op
Iteration  12: 735.166 ns/op
Iteration  13: 744.478 ns/op
Iteration  14: 742.919 ns/op
Iteration  15: 738.426 ns/op
Iteration  16: 739.676 ns/op
Iteration  17: 741.629 ns/op
Iteration  18: 740.538 ns/op
Iteration  19: 741.524 ns/op
Iteration  20: 739.033 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetAuthorizationTypeCustom_WhenCustomAuthorizationStubbed":
  737.602 ±(99.9%) 2.664 ns/op [Average]
  (min, avg, max) = (728.771, 737.602, 744.844), stdev = 4.735
  CI (99.9%): [734.939, 740.266] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetPostBody_WhenPostNotProvided_ButFileSet

# Run progress: 69.28% complete, ETA 01:26:48
# Fork: 1 of 2
# Warmup Iteration   1: 636792.697 ns/op
# Warmup Iteration   2: 209844.344 ns/op
# Warmup Iteration   3: 169113.504 ns/op
# Warmup Iteration   4: 262549.123 ns/op
# Warmup Iteration   5: 324425.620 ns/op
# Warmup Iteration   6: 328168.217 ns/op
# Warmup Iteration   7: 324546.853 ns/op
# Warmup Iteration   8: 325404.366 ns/op
# Warmup Iteration   9: 334132.951 ns/op
# Warmup Iteration  10: 326462.472 ns/op
Iteration   1: 322613.818 ns/op
Iteration   2: 321569.398 ns/op
Iteration   3: 340524.932 ns/op
Iteration   4: 326505.310 ns/op
Iteration   5: 326302.357 ns/op
Iteration   6: 326128.854 ns/op
Iteration   7: 326538.481 ns/op
Iteration   8: 344459.273 ns/op
Iteration   9: 326667.508 ns/op
Iteration  10: 317854.916 ns/op
Iteration  11: 330326.129 ns/op
Iteration  12: 331668.339 ns/op
Iteration  13: 331346.285 ns/op
Iteration  14: 326374.609 ns/op
Iteration  15: 326547.528 ns/op
Iteration  16: 326537.820 ns/op
Iteration  17: 326560.855 ns/op
Iteration  18: 333993.251 ns/op
Iteration  19: 322420.745 ns/op
Iteration  20: 335998.188 ns/op

# Run progress: 69.35% complete, ETA 01:26:44
# Fork: 2 of 2
# Warmup Iteration   1: 630259.052 ns/op
# Warmup Iteration   2: 223883.220 ns/op
# Warmup Iteration   3: 185021.559 ns/op
# Warmup Iteration   4: 217620.161 ns/op
# Warmup Iteration   5: 324573.102 ns/op
# Warmup Iteration   6: 328564.867 ns/op
# Warmup Iteration   7: 316631.329 ns/op
# Warmup Iteration   8: 336894.191 ns/op
# Warmup Iteration   9: 326097.023 ns/op
# Warmup Iteration  10: 336111.432 ns/op
Iteration   1: 326599.018 ns/op
Iteration   2: 326070.486 ns/op
Iteration   3: 325822.348 ns/op
Iteration   4: 334027.202 ns/op
Iteration   5: 326576.517 ns/op
Iteration   6: 326263.323 ns/op
Iteration   7: 342115.260 ns/op
Iteration   8: 326612.646 ns/op
Iteration   9: 331307.644 ns/op
Iteration  10: 326620.783 ns/op
Iteration  11: 323590.826 ns/op
Iteration  12: 330118.080 ns/op
Iteration  13: 325421.666 ns/op
Iteration  14: 331479.945 ns/op
Iteration  15: 326683.646 ns/op
Iteration  16: 326378.668 ns/op
Iteration  17: 326598.520 ns/op
Iteration  18: 326579.153 ns/op
Iteration  19: 329542.007 ns/op
Iteration  20: 328488.662 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetPostBody_WhenPostNotProvided_ButFileSet":
  328445.875 ±(99.9%) 2981.214 ns/op [Average]
  (min, avg, max) = (317854.916, 328445.875, 344459.273), stdev = 5299.105
  CI (99.9%): [325464.661, 331427.089] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetPostBody_WhenPostProvided_ButFileIsEmpty

# Run progress: 69.43% complete, ETA 01:26:40
# Fork: 1 of 2
# Warmup Iteration   1: 415107.790 ns/op
# Warmup Iteration   2: 148852.594 ns/op
# Warmup Iteration   3: 108720.337 ns/op
# Warmup Iteration   4: 89933.916 ns/op
# Warmup Iteration   5: 88219.947 ns/op
# Warmup Iteration   6: 70088.101 ns/op
# Warmup Iteration   7: 56132.268 ns/op
# Warmup Iteration   8: 51479.742 ns/op
# Warmup Iteration   9: 56688.756 ns/op
# Warmup Iteration  10: 51765.779 ns/op
Iteration   1: 57387.124 ns/op
Iteration   2: 57232.164 ns/op
Iteration   3: 56382.041 ns/op
Iteration   4: 65182.293 ns/op
Iteration   5: 60669.461 ns/op
Iteration   6: 59956.317 ns/op
Iteration   7: 59164.472 ns/op
Iteration   8: 57629.117 ns/op
Iteration   9: 61137.455 ns/op
Iteration  10: 61094.937 ns/op
Iteration  11: 64594.652 ns/op
Iteration  12: 61091.742 ns/op
Iteration  13: 62994.278 ns/op
Iteration  14: 62626.451 ns/op
Iteration  15: 61867.928 ns/op
Iteration  16: 63711.737 ns/op
Iteration  17: 62377.962 ns/op
Iteration  18: 63568.430 ns/op
Iteration  19: 64985.778 ns/op
Iteration  20: 63822.196 ns/op
<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)



# Run progress: 69.50% complete, ETA 01:26:42
# Fork: 2 of 2
# Warmup Iteration   1: 444350.247 ns/op
# Warmup Iteration   2: 150049.218 ns/op
# Warmup Iteration   3: 113854.603 ns/op
# Warmup Iteration   4: 99682.463 ns/op
# Warmup Iteration   5: 82893.829 ns/op
# Warmup Iteration   6: 60126.113 ns/op
# Warmup Iteration   7: 58628.170 ns/op
# Warmup Iteration   8: 60007.388 ns/op
# Warmup Iteration   9: 60493.087 ns/op
# Warmup Iteration  10: 58911.889 ns/op
Iteration   1: 59041.946 ns/op
Iteration   2: 58450.819 ns/op
Iteration   3: 60417.474 ns/op
Iteration   4: 62402.011 ns/op
Iteration   5: 60513.879 ns/op
Iteration   6: 62348.598 ns/op
Iteration   7: 58969.262 ns/op
Iteration   8: 61738.113 ns/op
Iteration   9: 62432.647 ns/op
Iteration  10: 61559.031 ns/op
Iteration  11: 61851.401 ns/op
Iteration  12: 58844.982 ns/op
Iteration  13: 61370.722 ns/op
Iteration  14: 64057.818 ns/op
Iteration  15: 60978.524 ns/op
Iteration  16: 64447.907 ns/op
Iteration  17: 64771.526 ns/op
Iteration  18: 58499.599 ns/op
Iteration  19: 63589.532 ns/op
Iteration  20: 61255.822 ns/op
<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)




Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetPostBody_WhenPostProvided_ButFileIsEmpty":
  61375.454 ±(99.9%) 1312.019 ns/op [Average]
  (min, avg, max) = (56382.041, 61375.454, 65182.293), stdev = 2332.113
  CI (99.9%): [60063.435, 62687.473] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetPostBody_WhenPostProvided_ButFileIsNull

# Run progress: 69.58% complete, ETA 01:26:45
# Fork: 1 of 2
# Warmup Iteration   1: 3583.093 ns/op
# Warmup Iteration   2: 723.531 ns/op
# Warmup Iteration   3: 507.738 ns/op
# Warmup Iteration   4: 507.515 ns/op
# Warmup Iteration   5: 507.208 ns/op
# Warmup Iteration   6: 511.111 ns/op
# Warmup Iteration   7: 505.975 ns/op
# Warmup Iteration   8: 504.237 ns/op
# Warmup Iteration   9: 506.697 ns/op
# Warmup Iteration  10: 507.473 ns/op
Iteration   1: 505.294 ns/op
Iteration   2: 504.826 ns/op
Iteration   3: 507.138 ns/op
Iteration   4: 505.638 ns/op
Iteration   5: 503.061 ns/op
Iteration   6: 510.536 ns/op
Iteration   7: 504.151 ns/op
Iteration   8: 516.392 ns/op
Iteration   9: 508.457 ns/op
Iteration  10: 507.581 ns/op
Iteration  11: 505.684 ns/op
Iteration  12: 507.388 ns/op
Iteration  13: 504.625 ns/op
Iteration  14: 504.504 ns/op
Iteration  15: 506.229 ns/op
Iteration  16: 506.558 ns/op
Iteration  17: 500.215 ns/op
Iteration  18: 503.121 ns/op
Iteration  19: 506.948 ns/op
Iteration  20: 506.260 ns/op

# Run progress: 69.65% complete, ETA 01:26:39
# Fork: 2 of 2
# Warmup Iteration   1: 3794.514 ns/op
# Warmup Iteration   2: 717.090 ns/op
# Warmup Iteration   3: 503.009 ns/op
# Warmup Iteration   4: 502.519 ns/op
# Warmup Iteration   5: 502.399 ns/op
# Warmup Iteration   6: 500.883 ns/op
# Warmup Iteration   7: 503.487 ns/op
# Warmup Iteration   8: 501.539 ns/op
# Warmup Iteration   9: 502.553 ns/op
# Warmup Iteration  10: 502.540 ns/op
Iteration   1: 504.828 ns/op
Iteration   2: 499.272 ns/op
Iteration   3: 502.204 ns/op
Iteration   4: 500.536 ns/op
Iteration   5: 499.249 ns/op
Iteration   6: 503.629 ns/op
Iteration   7: 498.996 ns/op
Iteration   8: 506.429 ns/op
Iteration   9: 500.414 ns/op
Iteration  10: 499.243 ns/op
Iteration  11: 498.698 ns/op
Iteration  12: 499.208 ns/op
Iteration  13: 499.441 ns/op
Iteration  14: 501.940 ns/op
Iteration  15: 501.044 ns/op
Iteration  16: 499.951 ns/op
Iteration  17: 497.337 ns/op
Iteration  18: 496.952 ns/op
Iteration  19: 498.937 ns/op
Iteration  20: 501.591 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetPostBody_WhenPostProvided_ButFileIsNull":
  503.363 ±(99.9%) 2.275 ns/op [Average]
  (min, avg, max) = (496.952, 503.363, 516.392), stdev = 4.045
  CI (99.9%): [501.087, 505.638] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetStubbedRequestBodyTokenNameAsFile

# Run progress: 69.73% complete, ETA 01:26:34
# Fork: 1 of 2
# Warmup Iteration   1: 637291.106 ns/op
# Warmup Iteration   2: 230148.447 ns/op
# Warmup Iteration   3: 189390.574 ns/op
# Warmup Iteration   4: 209691.465 ns/op
# Warmup Iteration   5: 452598.330 ns/op
# Warmup Iteration   6: 326334.383 ns/op
# Warmup Iteration   7: 461128.709 ns/op
# Warmup Iteration   8: 482801.888 ns/op
# Warmup Iteration   9: 326507.537 ns/op
# Warmup Iteration  10: 449236.293 ns/op
Iteration   1: 453524.461 ns/op
Iteration   2: 326014.597 ns/op
Iteration   3: 444161.714 ns/op
Iteration   4: 450669.000 ns/op
Iteration   5: 326470.944 ns/op
Iteration   6: 444825.160 ns/op
Iteration   7: 452759.582 ns/op
Iteration   8: 416467.847 ns/op
Iteration   9: 326597.577 ns/op
Iteration  10: 446107.901 ns/op
Iteration  11: 442860.948 ns/op
Iteration  12: 328646.066 ns/op
Iteration  13: 439327.529 ns/op
Iteration  14: 441516.590 ns/op
Iteration  15: 326610.596 ns/op
Iteration  16: 447136.448 ns/op
Iteration  17: 442686.143 ns/op
Iteration  18: 318625.016 ns/op
Iteration  19: 464819.940 ns/op
Iteration  20: 435652.764 ns/op

# Run progress: 69.80% complete, ETA 01:26:30
# Fork: 2 of 2
# Warmup Iteration   1: 635796.520 ns/op
# Warmup Iteration   2: 234393.880 ns/op
# Warmup Iteration   3: 348178.507 ns/op
# Warmup Iteration   4: 433548.135 ns/op
# Warmup Iteration   5: 324675.786 ns/op
# Warmup Iteration   6: 503166.116 ns/op
# Warmup Iteration   7: 449262.199 ns/op
# Warmup Iteration   8: 326582.758 ns/op
# Warmup Iteration   9: 433153.405 ns/op
# Warmup Iteration  10: 473863.500 ns/op
Iteration   1: 326557.048 ns/op
Iteration   2: 445505.634 ns/op
Iteration   3: 448068.599 ns/op
Iteration   4: 326663.096 ns/op
Iteration   5: 438518.080 ns/op
Iteration   6: 451966.729 ns/op
Iteration   7: 419421.893 ns/op
Iteration   8: 326453.635 ns/op
Iteration   9: 450261.194 ns/op
Iteration  10: 442969.101 ns/op
Iteration  11: 326561.187 ns/op
Iteration  12: 450692.216 ns/op
Iteration  13: 442479.320 ns/op
Iteration  14: 331714.488 ns/op
Iteration  15: 444541.436 ns/op
Iteration  16: 443887.268 ns/op
Iteration  17: 410247.813 ns/op
Iteration  18: 326202.423 ns/op
Iteration  19: 783762.109 ns/op
Iteration  20: 354142.880 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetStubbedRequestBodyTokenNameAsFile":
  414152.424 ±(99.9%) 45697.480 ns/op [Average]
  (min, avg, max) = (318625.016, 414152.424, 783762.109), stdev = 81227.231
  CI (99.9%): [368454.944, 459849.905] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetStubbedRequestBodyTokenNameAsPost

# Run progress: 69.88% complete, ETA 01:26:27
# Fork: 1 of 2
# Warmup Iteration   1: 5132.133 ns/op
# Warmup Iteration   2: 798.157 ns/op
# Warmup Iteration   3: 527.295 ns/op
# Warmup Iteration   4: 509.637 ns/op
# Warmup Iteration   5: 510.781 ns/op
# Warmup Iteration   6: 510.176 ns/op
# Warmup Iteration   7: 509.083 ns/op
# Warmup Iteration   8: 512.371 ns/op
# Warmup Iteration   9: 510.407 ns/op
# Warmup Iteration  10: 513.135 ns/op
Iteration   1: 510.289 ns/op
Iteration   2: 508.294 ns/op
Iteration   3: 510.093 ns/op
Iteration   4: 509.429 ns/op
Iteration   5: 509.081 ns/op
Iteration   6: 513.787 ns/op
Iteration   7: 508.613 ns/op
Iteration   8: 505.124 ns/op
Iteration   9: 506.635 ns/op
Iteration  10: 509.803 ns/op
Iteration  11: 506.698 ns/op
Iteration  12: 509.824 ns/op
Iteration  13: 510.393 ns/op
Iteration  14: 508.007 ns/op
Iteration  15: 508.108 ns/op
Iteration  16: 511.865 ns/op
Iteration  17: 516.628 ns/op
Iteration  18: 509.888 ns/op
Iteration  19: 508.447 ns/op
Iteration  20: 508.540 ns/op

# Run progress: 69.95% complete, ETA 01:26:21
# Fork: 2 of 2
# Warmup Iteration   1: 5220.143 ns/op
# Warmup Iteration   2: 846.057 ns/op
# Warmup Iteration   3: 517.189 ns/op
# Warmup Iteration   4: 521.583 ns/op
# Warmup Iteration   5: 515.157 ns/op
# Warmup Iteration   6: 517.865 ns/op
# Warmup Iteration   7: 517.451 ns/op
# Warmup Iteration   8: 518.667 ns/op
# Warmup Iteration   9: 518.065 ns/op
# Warmup Iteration  10: 517.257 ns/op
Iteration   1: 516.571 ns/op
Iteration   2: 516.319 ns/op
Iteration   3: 515.314 ns/op
Iteration   4: 516.517 ns/op
Iteration   5: 516.154 ns/op
Iteration   6: 515.454 ns/op
Iteration   7: 516.344 ns/op
Iteration   8: 517.923 ns/op
Iteration   9: 519.946 ns/op
Iteration  10: 515.293 ns/op
Iteration  11: 517.979 ns/op
Iteration  12: 519.117 ns/op
Iteration  13: 516.208 ns/op
Iteration  14: 519.877 ns/op
Iteration  15: 516.986 ns/op
Iteration  16: 518.380 ns/op
Iteration  17: 514.094 ns/op
Iteration  18: 517.544 ns/op
Iteration  19: 521.446 ns/op
Iteration  20: 515.836 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetStubbedRequestBodyTokenNameAsPost":
  513.321 ±(99.9%) 2.511 ns/op [Average]
  (min, avg, max) = (505.124, 513.321, 521.446), stdev = 4.464
  CI (99.9%): [510.810, 515.832] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldMatchExpectedToStringOutput_WhenActualRequestHasAllNullFields

# Run progress: 70.03% complete, ETA 01:26:16
# Fork: 1 of 2
# Warmup Iteration   1: 4393.928 ns/op
# Warmup Iteration   2: 1255.882 ns/op
# Warmup Iteration   3: 646.712 ns/op
# Warmup Iteration   4: 630.176 ns/op
# Warmup Iteration   5: 628.405 ns/op
# Warmup Iteration   6: 628.963 ns/op
# Warmup Iteration   7: 626.747 ns/op
# Warmup Iteration   8: 631.311 ns/op
# Warmup Iteration   9: 630.454 ns/op
# Warmup Iteration  10: 632.289 ns/op
Iteration   1: 633.800 ns/op
Iteration   2: 631.565 ns/op
Iteration   3: 629.776 ns/op
Iteration   4: 631.439 ns/op
Iteration   5: 629.523 ns/op
Iteration   6: 637.876 ns/op
Iteration   7: 627.747 ns/op
Iteration   8: 629.669 ns/op
Iteration   9: 630.262 ns/op
Iteration  10: 627.435 ns/op
Iteration  11: 632.945 ns/op
Iteration  12: 635.149 ns/op
Iteration  13: 633.344 ns/op
Iteration  14: 631.275 ns/op
Iteration  15: 629.175 ns/op
Iteration  16: 628.784 ns/op
Iteration  17: 628.098 ns/op
Iteration  18: 629.138 ns/op
Iteration  19: 629.917 ns/op
Iteration  20: 626.626 ns/op

# Run progress: 70.11% complete, ETA 01:26:10
# Fork: 2 of 2
# Warmup Iteration   1: 4842.225 ns/op
# Warmup Iteration   2: 1230.431 ns/op
# Warmup Iteration   3: 623.549 ns/op
# Warmup Iteration   4: 613.387 ns/op
# Warmup Iteration   5: 614.198 ns/op
# Warmup Iteration   6: 615.302 ns/op
# Warmup Iteration   7: 614.685 ns/op
# Warmup Iteration   8: 615.066 ns/op
# Warmup Iteration   9: 614.344 ns/op
# Warmup Iteration  10: 616.541 ns/op
Iteration   1: 616.988 ns/op
Iteration   2: 617.840 ns/op
Iteration   3: 614.748 ns/op
Iteration   4: 616.408 ns/op
Iteration   5: 613.553 ns/op
Iteration   6: 609.201 ns/op
Iteration   7: 612.372 ns/op
Iteration   8: 613.288 ns/op
Iteration   9: 617.472 ns/op
Iteration  10: 613.023 ns/op
Iteration  11: 614.024 ns/op
Iteration  12: 614.290 ns/op
Iteration  13: 615.536 ns/op
Iteration  14: 614.463 ns/op
Iteration  15: 610.589 ns/op
Iteration  16: 614.281 ns/op
Iteration  17: 615.292 ns/op
Iteration  18: 613.769 ns/op
Iteration  19: 610.289 ns/op
Iteration  20: 615.255 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldMatchExpectedToStringOutput_WhenActualRequestHasAllNullFields":
  622.406 ±(99.9%) 4.924 ns/op [Average]
  (min, avg, max) = (609.201, 622.406, 637.876), stdev = 8.752
  CI (99.9%): [617.482, 627.329] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldMatchExpectedToStringOutput_WhenActualRequestHasNullBody

# Run progress: 70.18% complete, ETA 01:26:04
# Fork: 1 of 2
# Warmup Iteration   1: 9562.860 ns/op
# Warmup Iteration   2: 3348.982 ns/op
# Warmup Iteration   3: 1625.808 ns/op
# Warmup Iteration   4: 1478.175 ns/op
# Warmup Iteration   5: 1485.374 ns/op
# Warmup Iteration   6: 1481.925 ns/op
# Warmup Iteration   7: 1476.419 ns/op
# Warmup Iteration   8: 1475.122 ns/op
# Warmup Iteration   9: 1477.605 ns/op
# Warmup Iteration  10: 1477.540 ns/op
Iteration   1: 1479.665 ns/op
Iteration   2: 1468.151 ns/op
Iteration   3: 1467.187 ns/op
Iteration   4: 1481.016 ns/op
Iteration   5: 1483.181 ns/op
Iteration   6: 1478.074 ns/op
Iteration   7: 1471.226 ns/op
Iteration   8: 1476.299 ns/op
Iteration   9: 1478.680 ns/op
Iteration  10: 1481.221 ns/op
Iteration  11: 1479.562 ns/op
Iteration  12: 1473.993 ns/op
Iteration  13: 1487.675 ns/op
Iteration  14: 1480.753 ns/op
Iteration  15: 1480.186 ns/op
Iteration  16: 1479.049 ns/op
Iteration  17: 1486.216 ns/op
Iteration  18: 1476.212 ns/op
Iteration  19: 1473.015 ns/op
Iteration  20: 1473.585 ns/op

# Run progress: 70.26% complete, ETA 01:25:59
# Fork: 2 of 2
# Warmup Iteration   1: 10693.868 ns/op
# Warmup Iteration   2: 2218.757 ns/op
# Warmup Iteration   3: 1494.871 ns/op
# Warmup Iteration   4: 1489.203 ns/op
# Warmup Iteration   5: 1491.719 ns/op
# Warmup Iteration   6: 1493.718 ns/op
# Warmup Iteration   7: 1483.925 ns/op
# Warmup Iteration   8: 1488.561 ns/op
# Warmup Iteration   9: 1486.846 ns/op
# Warmup Iteration  10: 1487.904 ns/op
Iteration   1: 1504.739 ns/op
Iteration   2: 1487.630 ns/op
Iteration   3: 1490.132 ns/op
Iteration   4: 1493.722 ns/op
Iteration   5: 1484.553 ns/op
Iteration   6: 1513.401 ns/op
Iteration   7: 1487.219 ns/op
Iteration   8: 1492.444 ns/op
Iteration   9: 1484.322 ns/op
Iteration  10: 1488.138 ns/op
Iteration  11: 1485.137 ns/op
Iteration  12: 1480.578 ns/op
Iteration  13: 1487.389 ns/op
Iteration  14: 1488.920 ns/op
Iteration  15: 1481.754 ns/op
Iteration  16: 1485.942 ns/op
Iteration  17: 1491.019 ns/op
Iteration  18: 1485.626 ns/op
Iteration  19: 1487.621 ns/op
Iteration  20: 1480.296 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldMatchExpectedToStringOutput_WhenActualRequestHasNullBody":
  1483.388 ±(99.9%) 4.929 ns/op [Average]
  (min, avg, max) = (1467.187, 1483.388, 1513.401), stdev = 8.761
  CI (99.9%): [1478.459, 1488.317] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldMatchExpectedToStringOutput_WhenActualRequestHasNullHeaderValue

# Run progress: 70.33% complete, ETA 01:25:53
# Fork: 1 of 2
# Warmup Iteration   1: 9622.720 ns/op
# Warmup Iteration   2: 3327.078 ns/op
# Warmup Iteration   3: 1668.125 ns/op
# Warmup Iteration   4: 1511.354 ns/op
# Warmup Iteration   5: 1503.834 ns/op
# Warmup Iteration   6: 1493.444 ns/op
# Warmup Iteration   7: 1491.198 ns/op
# Warmup Iteration   8: 1505.716 ns/op
# Warmup Iteration   9: 1507.069 ns/op
# Warmup Iteration  10: 1503.444 ns/op
Iteration   1: 1498.540 ns/op
Iteration   2: 1491.006 ns/op
Iteration   3: 1499.648 ns/op
Iteration   4: 1498.448 ns/op
Iteration   5: 1499.683 ns/op
Iteration   6: 1513.242 ns/op
Iteration   7: 1504.557 ns/op
Iteration   8: 1498.253 ns/op
Iteration   9: 1505.152 ns/op
Iteration  10: 1499.440 ns/op
Iteration  11: 1498.653 ns/op
Iteration  12: 1500.299 ns/op
Iteration  13: 1499.767 ns/op
Iteration  14: 1508.891 ns/op
Iteration  15: 1499.115 ns/op
Iteration  16: 1508.017 ns/op
Iteration  17: 1501.707 ns/op
Iteration  18: 1497.006 ns/op
Iteration  19: 1495.898 ns/op
Iteration  20: 1494.125 ns/op

# Run progress: 70.41% complete, ETA 01:25:47
# Fork: 2 of 2
# Warmup Iteration   1: 10513.860 ns/op
# Warmup Iteration   2: 2337.410 ns/op
# Warmup Iteration   3: 1517.668 ns/op
# Warmup Iteration   4: 1519.737 ns/op
# Warmup Iteration   5: 1515.020 ns/op
# Warmup Iteration   6: 1514.027 ns/op
# Warmup Iteration   7: 1518.304 ns/op
# Warmup Iteration   8: 1518.305 ns/op
# Warmup Iteration   9: 1512.007 ns/op
# Warmup Iteration  10: 1517.853 ns/op
Iteration   1: 1510.703 ns/op
Iteration   2: 1518.168 ns/op
Iteration   3: 1510.885 ns/op
Iteration   4: 1508.546 ns/op
Iteration   5: 1507.076 ns/op
Iteration   6: 1535.889 ns/op
Iteration   7: 1509.063 ns/op
Iteration   8: 1504.749 ns/op
Iteration   9: 1506.309 ns/op
Iteration  10: 1509.427 ns/op
Iteration  11: 1504.537 ns/op
Iteration  12: 1504.842 ns/op
Iteration  13: 1515.498 ns/op
Iteration  14: 1504.989 ns/op
Iteration  15: 1500.009 ns/op
Iteration  16: 1503.650 ns/op
Iteration  17: 1509.752 ns/op
Iteration  18: 1506.243 ns/op
Iteration  19: 1501.461 ns/op
Iteration  20: 1502.537 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldMatchExpectedToStringOutput_WhenActualRequestHasNullHeaderValue":
  1504.645 ±(99.9%) 4.349 ns/op [Average]
  (min, avg, max) = (1491.006, 1504.645, 1535.889), stdev = 7.731
  CI (99.9%): [1500.295, 1508.994] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldMatchExpectedToStringOutput_WhenActualRequestHasTheSameOutput

# Run progress: 70.48% complete, ETA 01:25:41
# Fork: 1 of 2
# Warmup Iteration   1: 10829.040 ns/op
# Warmup Iteration   2: 2326.855 ns/op
# Warmup Iteration   3: 1474.432 ns/op
# Warmup Iteration   4: 1475.568 ns/op
# Warmup Iteration   5: 1478.522 ns/op
# Warmup Iteration   6: 1473.800 ns/op
# Warmup Iteration   7: 1482.365 ns/op
# Warmup Iteration   8: 1475.067 ns/op
# Warmup Iteration   9: 1475.761 ns/op
# Warmup Iteration  10: 1484.306 ns/op
Iteration   1: 1465.114 ns/op
Iteration   2: 1478.668 ns/op
Iteration   3: 1478.028 ns/op
Iteration   4: 1481.330 ns/op
Iteration   5: 1478.631 ns/op
Iteration   6: 1506.831 ns/op
Iteration   7: 1485.690 ns/op
Iteration   8: 1480.601 ns/op
Iteration   9: 1480.011 ns/op
Iteration  10: 1473.311 ns/op
Iteration  11: 1474.693 ns/op
Iteration  12: 1471.260 ns/op
Iteration  13: 1479.583 ns/op
Iteration  14: 1486.357 ns/op
Iteration  15: 1484.814 ns/op
Iteration  16: 1478.327 ns/op
Iteration  17: 1485.094 ns/op
Iteration  18: 1481.634 ns/op
Iteration  19: 1475.490 ns/op
Iteration  20: 1478.050 ns/op

# Run progress: 70.56% complete, ETA 01:25:35
# Fork: 2 of 2
# Warmup Iteration   1: 11393.466 ns/op
# Warmup Iteration   2: 2344.787 ns/op
# Warmup Iteration   3: 1520.560 ns/op
# Warmup Iteration   4: 1519.789 ns/op
# Warmup Iteration   5: 1522.449 ns/op
# Warmup Iteration   6: 1525.195 ns/op
# Warmup Iteration   7: 1519.900 ns/op
# Warmup Iteration   8: 1526.196 ns/op
# Warmup Iteration   9: 1522.783 ns/op
# Warmup Iteration  10: 1514.948 ns/op
Iteration   1: 1511.748 ns/op
Iteration   2: 1519.328 ns/op
Iteration   3: 1513.603 ns/op
Iteration   4: 1515.590 ns/op
Iteration   5: 1519.942 ns/op
Iteration   6: 1528.570 ns/op
Iteration   7: 1525.600 ns/op
Iteration   8: 1517.840 ns/op
Iteration   9: 1524.490 ns/op
Iteration  10: 1517.678 ns/op
Iteration  11: 1525.151 ns/op
Iteration  12: 1518.443 ns/op
Iteration  13: 1523.527 ns/op
Iteration  14: 1523.104 ns/op
Iteration  15: 1532.525 ns/op
Iteration  16: 1528.042 ns/op
Iteration  17: 1528.181 ns/op
Iteration  18: 1523.407 ns/op
Iteration  19: 1513.612 ns/op
Iteration  20: 1520.183 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldMatchExpectedToStringOutput_WhenActualRequestHasTheSameOutput":
  1500.852 ±(99.9%) 12.405 ns/op [Average]
  (min, avg, max) = (1465.114, 1500.852, 1532.525), stdev = 22.049
  CI (99.9%): [1488.447, 1513.257] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldNotFindTwoHashCodesEqual_WhenTwoRequestHaveDifferentAmdNullPostBody

# Run progress: 70.63% complete, ETA 01:25:29
# Fork: 1 of 2
# Warmup Iteration   1: 8934.564 ns/op
# Warmup Iteration   2: 2316.394 ns/op
# Warmup Iteration   3: 1171.706 ns/op
# Warmup Iteration   4: 1164.770 ns/op
# Warmup Iteration   5: 1166.798 ns/op
# Warmup Iteration   6: 1170.503 ns/op
# Warmup Iteration   7: 1164.978 ns/op
# Warmup Iteration   8: 1165.492 ns/op
# Warmup Iteration   9: 1167.548 ns/op
# Warmup Iteration  10: 1166.080 ns/op
Iteration   1: 1173.249 ns/op
Iteration   2: 1169.848 ns/op
Iteration   3: 1167.013 ns/op
Iteration   4: 1162.533 ns/op
Iteration   5: 1165.312 ns/op
Iteration   6: 1177.797 ns/op
Iteration   7: 1161.703 ns/op
Iteration   8: 1163.952 ns/op
Iteration   9: 1170.494 ns/op
Iteration  10: 1164.862 ns/op
Iteration  11: 1165.381 ns/op
Iteration  12: 1164.713 ns/op
Iteration  13: 1161.862 ns/op
Iteration  14: 1171.237 ns/op
Iteration  15: 1160.789 ns/op
Iteration  16: 1171.159 ns/op
Iteration  17: 1170.617 ns/op
Iteration  18: 1165.724 ns/op
Iteration  19: 1162.938 ns/op
Iteration  20: 1161.177 ns/op

# Run progress: 70.71% complete, ETA 01:25:23
# Fork: 2 of 2
# Warmup Iteration   1: 8963.546 ns/op
# Warmup Iteration   2: 2196.473 ns/op
# Warmup Iteration   3: 1207.629 ns/op
# Warmup Iteration   4: 1171.503 ns/op
# Warmup Iteration   5: 1173.573 ns/op
# Warmup Iteration   6: 1179.482 ns/op
# Warmup Iteration   7: 1178.720 ns/op
# Warmup Iteration   8: 1170.990 ns/op
# Warmup Iteration   9: 1174.585 ns/op
# Warmup Iteration  10: 1173.872 ns/op
Iteration   1: 1167.675 ns/op
Iteration   2: 1169.641 ns/op
Iteration   3: 1173.780 ns/op
Iteration   4: 1168.475 ns/op
Iteration   5: 1176.605 ns/op
Iteration   6: 1185.070 ns/op
Iteration   7: 1162.725 ns/op
Iteration   8: 1164.527 ns/op
Iteration   9: 1160.954 ns/op
Iteration  10: 1165.366 ns/op
Iteration  11: 1161.770 ns/op
Iteration  12: 1165.760 ns/op
Iteration  13: 1159.734 ns/op
Iteration  14: 1163.153 ns/op
Iteration  15: 1162.538 ns/op
Iteration  16: 1168.700 ns/op
Iteration  17: 1163.326 ns/op
Iteration  18: 1163.382 ns/op
Iteration  19: 1165.417 ns/op
Iteration  20: 1159.688 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldNotFindTwoHashCodesEqual_WhenTwoRequestHaveDifferentAmdNullPostBody":
  1166.516 ±(99.9%) 3.047 ns/op [Average]
  (min, avg, max) = (1159.688, 1166.516, 1185.070), stdev = 5.417
  CI (99.9%): [1163.469, 1169.564] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldNotFindTwoHashCodesEqual_WhenTwoRequestHaveDifferentHeaderValue

# Run progress: 70.78% complete, ETA 01:25:17
# Fork: 1 of 2
# Warmup Iteration   1: 9185.518 ns/op
# Warmup Iteration   2: 2157.404 ns/op
# Warmup Iteration   3: 1189.335 ns/op
# Warmup Iteration   4: 1152.956 ns/op
# Warmup Iteration   5: 1151.818 ns/op
# Warmup Iteration   6: 1154.929 ns/op
# Warmup Iteration   7: 1151.086 ns/op
# Warmup Iteration   8: 1156.912 ns/op
# Warmup Iteration   9: 1154.783 ns/op
# Warmup Iteration  10: 1156.717 ns/op
Iteration   1: 1159.277 ns/op
Iteration   2: 1154.100 ns/op
Iteration   3: 1157.682 ns/op
Iteration   4: 1148.156 ns/op
Iteration   5: 1160.221 ns/op
Iteration   6: 1159.277 ns/op
Iteration   7: 1160.753 ns/op
Iteration   8: 1160.770 ns/op
Iteration   9: 1159.346 ns/op
Iteration  10: 1160.400 ns/op
Iteration  11: 1156.062 ns/op
Iteration  12: 1155.753 ns/op
Iteration  13: 1158.198 ns/op
Iteration  14: 1161.225 ns/op
Iteration  15: 1158.127 ns/op
Iteration  16: 1152.945 ns/op
Iteration  17: 1150.328 ns/op
Iteration  18: 1152.327 ns/op
Iteration  19: 1154.676 ns/op
Iteration  20: 1165.023 ns/op

# Run progress: 70.86% complete, ETA 01:25:11
# Fork: 2 of 2
# Warmup Iteration   1: 8506.421 ns/op
# Warmup Iteration   2: 2145.668 ns/op
# Warmup Iteration   3: 1196.697 ns/op
# Warmup Iteration   4: 1157.547 ns/op
# Warmup Iteration   5: 1155.329 ns/op
# Warmup Iteration   6: 1154.165 ns/op
# Warmup Iteration   7: 1159.506 ns/op
# Warmup Iteration   8: 1157.533 ns/op
# Warmup Iteration   9: 1154.248 ns/op
# Warmup Iteration  10: 1156.719 ns/op
Iteration   1: 1157.691 ns/op
Iteration   2: 1163.289 ns/op
Iteration   3: 1160.110 ns/op
Iteration   4: 1159.553 ns/op
Iteration   5: 1159.995 ns/op
Iteration   6: 1172.458 ns/op
Iteration   7: 1155.082 ns/op
Iteration   8: 1157.965 ns/op
Iteration   9: 1153.257 ns/op
Iteration  10: 1156.742 ns/op
Iteration  11: 1157.455 ns/op
Iteration  12: 1167.966 ns/op
Iteration  13: 1161.807 ns/op
Iteration  14: 1158.719 ns/op
Iteration  15: 1163.830 ns/op
Iteration  16: 1155.743 ns/op
Iteration  17: 1155.852 ns/op
Iteration  18: 1157.927 ns/op
Iteration  19: 1157.115 ns/op
Iteration  20: 1152.783 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldNotFindTwoHashCodesEqual_WhenTwoRequestHaveDifferentHeaderValue":
  1158.250 ±(99.9%) 2.554 ns/op [Average]
  (min, avg, max) = (1148.156, 1158.250, 1172.458), stdev = 4.540
  CI (99.9%): [1155.696, 1160.804] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldNotStage_WhenConfigurablePropertyPresentButFieldValueMissing

# Run progress: 70.93% complete, ETA 01:25:05
# Fork: 1 of 2
# Warmup Iteration   1: 1411.568 ns/op
# Warmup Iteration   2: 419.833 ns/op
# Warmup Iteration   3: 381.453 ns/op
# Warmup Iteration   4: 384.379 ns/op
# Warmup Iteration   5: 382.401 ns/op
# Warmup Iteration   6: 383.185 ns/op
# Warmup Iteration   7: 381.692 ns/op
# Warmup Iteration   8: 383.040 ns/op
# Warmup Iteration   9: 381.294 ns/op
# Warmup Iteration  10: 382.058 ns/op
Iteration   1: 382.994 ns/op
Iteration   2: 382.637 ns/op
Iteration   3: 381.914 ns/op
Iteration   4: 381.788 ns/op
Iteration   5: 381.790 ns/op
Iteration   6: 381.727 ns/op
Iteration   7: 381.911 ns/op
Iteration   8: 380.597 ns/op
Iteration   9: 382.056 ns/op
Iteration  10: 381.422 ns/op
Iteration  11: 383.695 ns/op
Iteration  12: 382.963 ns/op
Iteration  13: 383.707 ns/op
Iteration  14: 383.069 ns/op
Iteration  15: 383.637 ns/op
Iteration  16: 382.990 ns/op
Iteration  17: 381.637 ns/op
Iteration  18: 382.286 ns/op
Iteration  19: 382.291 ns/op
Iteration  20: 381.356 ns/op

# Run progress: 71.01% complete, ETA 01:24:59
# Fork: 2 of 2
# Warmup Iteration   1: 1511.399 ns/op
# Warmup Iteration   2: 423.935 ns/op
# Warmup Iteration   3: 378.676 ns/op
# Warmup Iteration   4: 380.404 ns/op
# Warmup Iteration   5: 381.644 ns/op
# Warmup Iteration   6: 378.665 ns/op
# Warmup Iteration   7: 378.749 ns/op
# Warmup Iteration   8: 383.308 ns/op
# Warmup Iteration   9: 380.975 ns/op
# Warmup Iteration  10: 382.773 ns/op
Iteration   1: 379.896 ns/op
Iteration   2: 377.325 ns/op
Iteration   3: 379.768 ns/op
Iteration   4: 379.320 ns/op
Iteration   5: 381.229 ns/op
Iteration   6: 382.474 ns/op
Iteration   7: 380.373 ns/op
Iteration   8: 383.804 ns/op
Iteration   9: 379.697 ns/op
Iteration  10: 378.521 ns/op
Iteration  11: 378.742 ns/op
Iteration  12: 378.296 ns/op
Iteration  13: 379.273 ns/op
Iteration  14: 380.856 ns/op
Iteration  15: 378.902 ns/op
Iteration  16: 379.749 ns/op
Iteration  17: 377.642 ns/op
Iteration  18: 379.907 ns/op
Iteration  19: 376.797 ns/op
Iteration  20: 378.263 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldNotStage_WhenConfigurablePropertyPresentButFieldValueMissing":
  380.933 ±(99.9%) 1.086 ns/op [Average]
  (min, avg, max) = (376.797, 380.933, 383.804), stdev = 1.930
  CI (99.9%): [379.847, 382.018] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldStage_WhenConfigurablePropertyAndFieldValuePresent

# Run progress: 71.08% complete, ETA 01:24:52
# Fork: 1 of 2
# Warmup Iteration   1: 2404.675 ns/op
# Warmup Iteration   2: 501.459 ns/op
# Warmup Iteration   3: 443.278 ns/op
# Warmup Iteration   4: 443.833 ns/op
# Warmup Iteration   5: 443.086 ns/op
# Warmup Iteration   6: 441.059 ns/op
# Warmup Iteration   7: 438.650 ns/op
# Warmup Iteration   8: 443.185 ns/op
# Warmup Iteration   9: 440.853 ns/op
# Warmup Iteration  10: 440.403 ns/op
Iteration   1: 440.019 ns/op
Iteration   2: 442.738 ns/op
Iteration   3: 440.944 ns/op
Iteration   4: 443.222 ns/op
Iteration   5: 443.284 ns/op
Iteration   6: 440.265 ns/op
Iteration   7: 443.081 ns/op
Iteration   8: 442.358 ns/op
Iteration   9: 440.024 ns/op
Iteration  10: 441.721 ns/op
Iteration  11: 443.458 ns/op
Iteration  12: 442.763 ns/op
Iteration  13: 443.017 ns/op
Iteration  14: 441.346 ns/op
Iteration  15: 440.308 ns/op
Iteration  16: 441.112 ns/op
Iteration  17: 442.072 ns/op
Iteration  18: 443.971 ns/op
Iteration  19: 444.808 ns/op
Iteration  20: 443.654 ns/op

# Run progress: 71.16% complete, ETA 01:24:46
# Fork: 2 of 2
# Warmup Iteration   1: 3080.052 ns/op
# Warmup Iteration   2: 509.567 ns/op
# Warmup Iteration   3: 439.002 ns/op
# Warmup Iteration   4: 438.677 ns/op
# Warmup Iteration   5: 436.945 ns/op
# Warmup Iteration   6: 435.976 ns/op
# Warmup Iteration   7: 436.699 ns/op
# Warmup Iteration   8: 435.834 ns/op
# Warmup Iteration   9: 436.746 ns/op
# Warmup Iteration  10: 435.730 ns/op
Iteration   1: 435.616 ns/op
Iteration   2: 437.672 ns/op
Iteration   3: 437.790 ns/op
Iteration   4: 435.578 ns/op
Iteration   5: 434.229 ns/op
Iteration   6: 437.498 ns/op
Iteration   7: 434.778 ns/op
Iteration   8: 435.402 ns/op
Iteration   9: 434.870 ns/op
Iteration  10: 434.352 ns/op
Iteration  11: 438.964 ns/op
Iteration  12: 436.260 ns/op
Iteration  13: 435.035 ns/op
Iteration  14: 437.132 ns/op
Iteration  15: 437.275 ns/op
Iteration  16: 435.237 ns/op
Iteration  17: 434.824 ns/op
Iteration  18: 436.463 ns/op
Iteration  19: 436.654 ns/op
Iteration  20: 436.004 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldStage_WhenConfigurablePropertyAndFieldValuePresent":
  439.145 ±(99.9%) 1.904 ns/op [Average]
  (min, avg, max) = (434.229, 439.145, 444.808), stdev = 3.384
  CI (99.9%): [437.241, 441.049] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldfindStubRequestEqual_WhenComparedToDifferentObjectWithSameProperties

# Run progress: 71.23% complete, ETA 01:24:40
# Fork: 1 of 2
# Warmup Iteration   1: 715144.361 ns/op
# Warmup Iteration   2: 372486.418 ns/op
# Warmup Iteration   3: 324866.747 ns/op
# Warmup Iteration   4: 120229.942 ns/op
# Warmup Iteration   5: 179600.327 ns/op
# Warmup Iteration   6: 117748.988 ns/op
# Warmup Iteration   7: 105957.839 ns/op
# Warmup Iteration   8: 138005.470 ns/op
# Warmup Iteration   9: 142150.563 ns/op
# Warmup Iteration  10: 120615.128 ns/op
Iteration   1: 167297.958 ns/op
Iteration   2: 123017.629 ns/op
Iteration   3: 110932.109 ns/op
Iteration   4: 125576.386 ns/op
Iteration   5: 162671.262 ns/op
Iteration   6: 142500.848 ns/op
Iteration   7: 124864.261 ns/op
Iteration   8: 146184.764 ns/op
Iteration   9: 139183.062 ns/op
Iteration  10: 133726.829 ns/op
Iteration  11: 115714.697 ns/op
Iteration  12: 136732.046 ns/op
Iteration  13: 120280.776 ns/op
Iteration  14: 137432.017 ns/op
Iteration  15: 141123.686 ns/op
Iteration  16: 134391.815 ns/op
Iteration  17: 128538.826 ns/op
Iteration  18: 139068.546 ns/op
Iteration  19: 156678.942 ns/op
Iteration  20: 148909.199 ns/op

# Run progress: 71.31% complete, ETA 01:24:34
# Fork: 2 of 2
# Warmup Iteration   1: 1159609.152 ns/op
# Warmup Iteration   2: 248116.442 ns/op
# Warmup Iteration   3: 138300.423 ns/op
# Warmup Iteration   4: 113137.347 ns/op
# Warmup Iteration   5: 107139.462 ns/op
# Warmup Iteration   6: 206008.603 ns/op
# Warmup Iteration   7: 177038.361 ns/op
# Warmup Iteration   8: 246297.052 ns/op
# Warmup Iteration   9: 125503.903 ns/op
# Warmup Iteration  10: 144718.081 ns/op
Iteration   1: 146996.940 ns/op
Iteration   2: 128737.867 ns/op
Iteration   3: 118097.377 ns/op
Iteration   4: 138929.024 ns/op
Iteration   5: 151440.588 ns/op
Iteration   6: 145567.699 ns/op
Iteration   7: 136239.615 ns/op
Iteration   8: 139665.496 ns/op
Iteration   9: 115802.141 ns/op
Iteration  10: 142464.695 ns/op
Iteration  11: 116884.612 ns/op
Iteration  12: 107233.592 ns/op
Iteration  13: 168341.813 ns/op
Iteration  14: 141441.050 ns/op
Iteration  15: 129892.521 ns/op
Iteration  16: 116099.205 ns/op
Iteration  17: 151167.560 ns/op
Iteration  18: 118213.796 ns/op
Iteration  19: 146334.588 ns/op
Iteration  20: 129403.753 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldfindStubRequestEqual_WhenComparedToDifferentObjectWithSameProperties":
  135594.490 ±(99.9%) 8507.831 ns/op [Average]
  (min, avg, max) = (107233.592, 135594.490, 168341.813), stdev = 15122.662
  CI (99.9%): [127086.659, 144102.321] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldfindStubRequestEqual_WhenComparedToSameIdentity

# Run progress: 71.39% complete, ETA 01:24:29
# Fork: 1 of 2
# Warmup Iteration   1: 3466.701 ns/op
# Warmup Iteration   2: 672.926 ns/op
# Warmup Iteration   3: 497.563 ns/op
# Warmup Iteration   4: 497.775 ns/op
# Warmup Iteration   5: 497.188 ns/op
# Warmup Iteration   6: 495.528 ns/op
# Warmup Iteration   7: 497.163 ns/op
# Warmup Iteration   8: 497.023 ns/op
# Warmup Iteration   9: 498.244 ns/op
# Warmup Iteration  10: 495.914 ns/op
Iteration   1: 499.018 ns/op
Iteration   2: 498.016 ns/op
Iteration   3: 494.476 ns/op
Iteration   4: 497.722 ns/op
Iteration   5: 495.116 ns/op
Iteration   6: 499.728 ns/op
Iteration   7: 496.780 ns/op
Iteration   8: 498.588 ns/op
Iteration   9: 497.180 ns/op
Iteration  10: 495.546 ns/op
Iteration  11: 495.880 ns/op
Iteration  12: 494.899 ns/op
Iteration  13: 493.978 ns/op
Iteration  14: 493.841 ns/op
Iteration  15: 495.809 ns/op
Iteration  16: 496.468 ns/op
Iteration  17: 496.602 ns/op
Iteration  18: 497.670 ns/op
Iteration  19: 496.294 ns/op
Iteration  20: 497.489 ns/op

# Run progress: 71.46% complete, ETA 01:24:22
# Fork: 2 of 2
# Warmup Iteration   1: 3844.790 ns/op
# Warmup Iteration   2: 651.071 ns/op
# Warmup Iteration   3: 498.805 ns/op
# Warmup Iteration   4: 498.111 ns/op
# Warmup Iteration   5: 495.732 ns/op
# Warmup Iteration   6: 497.432 ns/op
# Warmup Iteration   7: 496.472 ns/op
# Warmup Iteration   8: 496.229 ns/op
# Warmup Iteration   9: 499.234 ns/op
# Warmup Iteration  10: 498.098 ns/op
Iteration   1: 495.790 ns/op
Iteration   2: 498.841 ns/op
Iteration   3: 498.519 ns/op
Iteration   4: 497.065 ns/op
Iteration   5: 497.305 ns/op
Iteration   6: 496.622 ns/op
Iteration   7: 497.350 ns/op
Iteration   8: 494.272 ns/op
Iteration   9: 492.792 ns/op
Iteration  10: 494.000 ns/op
Iteration  11: 495.989 ns/op
Iteration  12: 498.015 ns/op
Iteration  13: 494.789 ns/op
Iteration  14: 494.076 ns/op
Iteration  15: 495.649 ns/op
Iteration  16: 494.613 ns/op
Iteration  17: 497.451 ns/op
Iteration  18: 494.773 ns/op
Iteration  19: 494.327 ns/op
Iteration  20: 493.503 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldfindStubRequestEqual_WhenComparedToSameIdentity":
  496.171 ±(99.9%) 0.975 ns/op [Average]
  (min, avg, max) = (492.792, 496.171, 499.728), stdev = 1.734
  CI (99.9%): [495.196, 497.147] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldfindStubRequestEqual_WhenComparedToSameInstanceClass

# Run progress: 71.54% complete, ETA 01:24:16
# Fork: 1 of 2
# Warmup Iteration   1: 83081.283 ns/op
# Warmup Iteration   2: 69823.032 ns/op
# Warmup Iteration   3: 60144.330 ns/op
# Warmup Iteration   4: 28683.133 ns/op
# Warmup Iteration   5: 31993.670 ns/op
# Warmup Iteration   6: 23103.846 ns/op
# Warmup Iteration   7: 33285.593 ns/op
# Warmup Iteration   8: 30381.633 ns/op
# Warmup Iteration   9: 31437.088 ns/op
# Warmup Iteration  10: 30729.912 ns/op
Iteration   1: 35240.085 ns/op
Iteration   2: 28748.604 ns/op
Iteration   3: 30011.931 ns/op
Iteration   4: 34446.997 ns/op
Iteration   5: 31761.353 ns/op
Iteration   6: 36147.101 ns/op
Iteration   7: 37310.040 ns/op
Iteration   8: 35778.980 ns/op
Iteration   9: 32398.350 ns/op
Iteration  10: 29548.268 ns/op
Iteration  11: 43478.418 ns/op
Iteration  12: 35106.627 ns/op
Iteration  13: 32695.872 ns/op
Iteration  14: 36003.657 ns/op
Iteration  15: 35445.808 ns/op
Iteration  16: 34415.738 ns/op
Iteration  17: 36777.513 ns/op
Iteration  18: 34746.633 ns/op
Iteration  19: 28835.579 ns/op
Iteration  20: 34147.042 ns/op

# Run progress: 71.61% complete, ETA 01:24:10
# Fork: 2 of 2
# Warmup Iteration   1: 233227.309 ns/op
# Warmup Iteration   2: 50053.616 ns/op
# Warmup Iteration   3: 62910.580 ns/op
# Warmup Iteration   4: 26252.580 ns/op
# Warmup Iteration   5: 17838.835 ns/op
# Warmup Iteration   6: 28625.625 ns/op
# Warmup Iteration   7: 32214.267 ns/op
# Warmup Iteration   8: 32767.048 ns/op
# Warmup Iteration   9: 35509.491 ns/op
# Warmup Iteration  10: 31273.747 ns/op
Iteration   1: 33529.731 ns/op
Iteration   2: 28739.175 ns/op
Iteration   3: 35829.620 ns/op
Iteration   4: 33643.760 ns/op
Iteration   5: 37122.465 ns/op
Iteration   6: 35597.638 ns/op
Iteration   7: 28182.779 ns/op
Iteration   8: 34072.131 ns/op
Iteration   9: 36202.209 ns/op
Iteration  10: 34941.938 ns/op
Iteration  11: 36605.121 ns/op
Iteration  12: 33881.285 ns/op
Iteration  13: 33353.895 ns/op
Iteration  14: 31952.763 ns/op
Iteration  15: 32840.804 ns/op
Iteration  16: 31553.883 ns/op
Iteration  17: 30882.304 ns/op
Iteration  18: 35255.047 ns/op
Iteration  19: 34728.275 ns/op
Iteration  20: 28895.882 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldfindStubRequestEqual_WhenComparedToSameInstanceClass":
  33771.383 ±(99.9%) 1716.689 ns/op [Average]
  (min, avg, max) = (28182.779, 33771.383, 43478.418), stdev = 3051.413
  CI (99.9%): [32054.693, 35488.072] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldfindStubRequestNotEqual_WhenComparedToDifferentInstanceClass

# Run progress: 71.69% complete, ETA 01:24:04
# Fork: 1 of 2
# Warmup Iteration   1: 4806.843 ns/op
# Warmup Iteration   2: 970.745 ns/op
# Warmup Iteration   3: 569.523 ns/op
# Warmup Iteration   4: 549.397 ns/op
# Warmup Iteration   5: 553.176 ns/op
# Warmup Iteration   6: 553.332 ns/op
# Warmup Iteration   7: 550.874 ns/op
# Warmup Iteration   8: 552.607 ns/op
# Warmup Iteration   9: 552.625 ns/op
# Warmup Iteration  10: 551.785 ns/op
Iteration   1: 553.612 ns/op
Iteration   2: 552.281 ns/op
Iteration   3: 554.110 ns/op
Iteration   4: 553.540 ns/op
Iteration   5: 548.481 ns/op
Iteration   6: 559.345 ns/op
Iteration   7: 548.633 ns/op
Iteration   8: 549.363 ns/op
Iteration   9: 546.512 ns/op
Iteration  10: 550.510 ns/op
Iteration  11: 551.201 ns/op
Iteration  12: 550.068 ns/op
Iteration  13: 550.200 ns/op
Iteration  14: 551.363 ns/op
Iteration  15: 551.937 ns/op
Iteration  16: 547.574 ns/op
Iteration  17: 549.599 ns/op
Iteration  18: 550.559 ns/op
Iteration  19: 547.744 ns/op
Iteration  20: 549.530 ns/op

# Run progress: 71.76% complete, ETA 01:23:57
# Fork: 2 of 2
# Warmup Iteration   1: 5299.767 ns/op
# Warmup Iteration   2: 815.737 ns/op
# Warmup Iteration   3: 549.850 ns/op
# Warmup Iteration   4: 548.629 ns/op
# Warmup Iteration   5: 549.067 ns/op
# Warmup Iteration   6: 550.559 ns/op
# Warmup Iteration   7: 547.074 ns/op
# Warmup Iteration   8: 549.366 ns/op
# Warmup Iteration   9: 546.897 ns/op
# Warmup Iteration  10: 550.569 ns/op
Iteration   1: 554.853 ns/op
Iteration   2: 552.939 ns/op
Iteration   3: 548.671 ns/op
Iteration   4: 550.598 ns/op
Iteration   5: 550.706 ns/op
Iteration   6: 549.554 ns/op
Iteration   7: 551.811 ns/op
Iteration   8: 550.982 ns/op
Iteration   9: 546.317 ns/op
Iteration  10: 547.725 ns/op
Iteration  11: 553.698 ns/op
Iteration  12: 548.825 ns/op
Iteration  13: 550.392 ns/op
Iteration  14: 551.810 ns/op
Iteration  15: 553.619 ns/op
Iteration  16: 550.918 ns/op
Iteration  17: 548.327 ns/op
Iteration  18: 551.550 ns/op
Iteration  19: 547.623 ns/op
Iteration  20: 548.080 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldfindStubRequestNotEqual_WhenComparedToDifferentInstanceClass":
  550.629 ±(99.9%) 1.452 ns/op [Average]
  (min, avg, max) = (546.317, 550.629, 559.345), stdev = 2.582
  CI (99.9%): [549.177, 552.081] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldfindStubRequestNotEqual_WhenComparedToNull

# Run progress: 71.84% complete, ETA 01:23:51
# Fork: 1 of 2
# Warmup Iteration   1: 3904.986 ns/op
# Warmup Iteration   2: 627.921 ns/op
# Warmup Iteration   3: 500.435 ns/op
# Warmup Iteration   4: 497.525 ns/op
# Warmup Iteration   5: 498.977 ns/op
# Warmup Iteration   6: 498.939 ns/op
# Warmup Iteration   7: 497.734 ns/op
# Warmup Iteration   8: 499.017 ns/op
# Warmup Iteration   9: 497.995 ns/op
# Warmup Iteration  10: 497.980 ns/op
Iteration   1: 499.430 ns/op
Iteration   2: 495.880 ns/op
Iteration   3: 495.689 ns/op
Iteration   4: 497.392 ns/op
Iteration   5: 496.835 ns/op
Iteration   6: 502.863 ns/op
Iteration   7: 497.249 ns/op
Iteration   8: 496.395 ns/op
Iteration   9: 495.136 ns/op
Iteration  10: 499.697 ns/op
Iteration  11: 501.389 ns/op
Iteration  12: 498.687 ns/op
Iteration  13: 498.546 ns/op
Iteration  14: 497.442 ns/op
Iteration  15: 499.658 ns/op
Iteration  16: 496.167 ns/op
Iteration  17: 499.336 ns/op
Iteration  18: 497.705 ns/op
Iteration  19: 497.001 ns/op
Iteration  20: 499.118 ns/op

# Run progress: 71.91% complete, ETA 01:23:44
# Fork: 2 of 2
# Warmup Iteration   1: 3702.039 ns/op
# Warmup Iteration   2: 683.824 ns/op
# Warmup Iteration   3: 497.120 ns/op
# Warmup Iteration   4: 496.340 ns/op
# Warmup Iteration   5: 498.586 ns/op
# Warmup Iteration   6: 499.698 ns/op
# Warmup Iteration   7: 495.450 ns/op
# Warmup Iteration   8: 497.988 ns/op
# Warmup Iteration   9: 498.648 ns/op
# Warmup Iteration  10: 497.669 ns/op
Iteration   1: 495.113 ns/op
Iteration   2: 498.138 ns/op
Iteration   3: 497.651 ns/op
Iteration   4: 494.058 ns/op
Iteration   5: 498.465 ns/op
Iteration   6: 497.822 ns/op
Iteration   7: 496.278 ns/op
Iteration   8: 495.511 ns/op
Iteration   9: 495.771 ns/op
Iteration  10: 496.845 ns/op
Iteration  11: 494.775 ns/op
Iteration  12: 492.228 ns/op
Iteration  13: 497.924 ns/op
Iteration  14: 493.913 ns/op
Iteration  15: 496.472 ns/op
Iteration  16: 495.724 ns/op
Iteration  17: 493.822 ns/op
Iteration  18: 494.238 ns/op
Iteration  19: 494.169 ns/op
Iteration  20: 496.236 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldfindStubRequestNotEqual_WhenComparedToNull":
  496.919 ±(99.9%) 1.224 ns/op [Average]
  (min, avg, max) = (492.228, 496.919, 502.863), stdev = 2.176
  CI (99.9%): [495.695, 498.143] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenAllHeadersStubbedCamelCased

# Run progress: 71.99% complete, ETA 01:23:37
# Fork: 1 of 2
# Warmup Iteration   1: 824304.860 ns/op
# Warmup Iteration   2: 420079.373 ns/op
# Warmup Iteration   3: 180239.576 ns/op
# Warmup Iteration   4: 131908.682 ns/op
# Warmup Iteration   5: 110882.372 ns/op
# Warmup Iteration   6: 107302.504 ns/op
# Warmup Iteration   7: 108275.011 ns/op
# Warmup Iteration   8: 90002.616 ns/op
# Warmup Iteration   9: 99857.502 ns/op
# Warmup Iteration  10: 97165.852 ns/op
Iteration   1: 89910.993 ns/op
Iteration   2: 109892.751 ns/op
Iteration   3: 86218.582 ns/op
Iteration   4: 100427.843 ns/op
Iteration   5: 90233.756 ns/op
Iteration   6: 97592.248 ns/op
Iteration   7: 92436.808 ns/op
Iteration   8: 91590.352 ns/op
Iteration   9: 111423.412 ns/op
Iteration  10: 104576.774 ns/op
Iteration  11: 120329.449 ns/op
Iteration  12: 109009.624 ns/op
Iteration  13: 103885.623 ns/op
Iteration  14: 100126.923 ns/op
Iteration  15: 103833.376 ns/op
Iteration  16: 108098.321 ns/op
Iteration  17: 128255.367 ns/op
Iteration  18: 95935.567 ns/op
Iteration  19: 125489.162 ns/op
Iteration  20: 100868.453 ns/op

# Run progress: 72.06% complete, ETA 01:23:31
# Fork: 2 of 2
# Warmup Iteration   1: 1045479.452 ns/op
# Warmup Iteration   2: 546340.182 ns/op
# Warmup Iteration   3: 346910.181 ns/op
# Warmup Iteration   4: 119445.966 ns/op
# Warmup Iteration   5: 110217.507 ns/op
# Warmup Iteration   6: 99493.677 ns/op
# Warmup Iteration   7: 93268.848 ns/op
# Warmup Iteration   8: 104694.390 ns/op
# Warmup Iteration   9: 102943.081 ns/op
# Warmup Iteration  10: 91873.394 ns/op
Iteration   1: 94605.083 ns/op
Iteration   2: 103385.410 ns/op
Iteration   3: 96935.477 ns/op
Iteration   4: 90177.785 ns/op
Iteration   5: 98848.867 ns/op
Iteration   6: 100951.644 ns/op
Iteration   7: 88488.896 ns/op
Iteration   8: 103794.070 ns/op
Iteration   9: 101177.375 ns/op
Iteration  10: 104315.055 ns/op
Iteration  11: 111391.316 ns/op
Iteration  12: 92903.661 ns/op
Iteration  13: 99297.480 ns/op
Iteration  14: 105574.183 ns/op
Iteration  15: 108753.191 ns/op
Iteration  16: 105719.312 ns/op
Iteration  17: 100712.628 ns/op
Iteration  18: 112764.865 ns/op
Iteration  19: 115866.695 ns/op
Iteration  20: 131855.966 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenAllHeadersStubbedCamelCased":
  103441.359 ±(99.9%) 5988.102 ns/op [Average]
  (min, avg, max) = (86218.582, 103441.359, 131855.966), stdev = 10643.845
  CI (99.9%): [97453.257, 109429.460] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenAllHeadersSubmittedCamelCased

# Run progress: 72.14% complete, ETA 01:23:24
# Fork: 1 of 2
# Warmup Iteration   1: 996895.124 ns/op
# Warmup Iteration   2: 574440.968 ns/op
# Warmup Iteration   3: 522386.227 ns/op
# Warmup Iteration   4: 191787.606 ns/op
# Warmup Iteration   5: 103856.133 ns/op
# Warmup Iteration   6: 104619.070 ns/op
# Warmup Iteration   7: 99197.097 ns/op
# Warmup Iteration   8: 94930.089 ns/op
# Warmup Iteration   9: 116445.270 ns/op
# Warmup Iteration  10: 89510.525 ns/op
Iteration   1: 103176.872 ns/op
Iteration   2: 96186.222 ns/op
Iteration   3: 105483.009 ns/op
Iteration   4: 90872.447 ns/op
Iteration   5: 94578.359 ns/op
Iteration   6: 107614.894 ns/op
Iteration   7: 100192.735 ns/op
Iteration   8: 96924.425 ns/op
Iteration   9: 110636.537 ns/op
Iteration  10: 114432.842 ns/op
Iteration  11: 120874.785 ns/op
Iteration  12: 83129.727 ns/op
Iteration  13: 105383.417 ns/op
Iteration  14: 93515.993 ns/op
Iteration  15: 108608.212 ns/op
Iteration  16: 104937.115 ns/op
Iteration  17: 119891.559 ns/op
Iteration  18: 97860.594 ns/op
Iteration  19: 113866.530 ns/op
Iteration  20: 87531.224 ns/op

# Run progress: 72.21% complete, ETA 01:23:18
# Fork: 2 of 2
# Warmup Iteration   1: 988888.828 ns/op
# Warmup Iteration   2: 568631.333 ns/op
# Warmup Iteration   3: 250627.948 ns/op
# Warmup Iteration   4: 125861.113 ns/op
# Warmup Iteration   5: 88543.207 ns/op
# Warmup Iteration   6: 103569.922 ns/op
# Warmup Iteration   7: 156337.487 ns/op
# Warmup Iteration   8: 126370.316 ns/op
# Warmup Iteration   9: 128773.764 ns/op
# Warmup Iteration  10: 111272.118 ns/op
Iteration   1: 112515.078 ns/op
Iteration   2: 98526.092 ns/op
Iteration   3: 86892.232 ns/op
Iteration   4: 106924.213 ns/op
Iteration   5: 97318.617 ns/op
Iteration   6: 102382.790 ns/op
Iteration   7: 102825.906 ns/op
Iteration   8: 107698.836 ns/op
Iteration   9: 105932.793 ns/op
Iteration  10: 121274.084 ns/op
Iteration  11: 89173.174 ns/op
Iteration  12: 102188.938 ns/op
Iteration  13: 93964.132 ns/op
Iteration  14: 102623.113 ns/op
Iteration  15: 99686.745 ns/op
Iteration  16: 122463.711 ns/op
Iteration  17: 113371.744 ns/op
Iteration  18: 101000.363 ns/op
Iteration  19: 125544.101 ns/op
Iteration  20: 95976.615 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenAllHeadersSubmittedCamelCased":
  103599.519 ±(99.9%) 5797.058 ns/op [Average]
  (min, avg, max) = (83129.727, 103599.519, 125544.101), stdev = 10304.266
  CI (99.9%): [97802.461, 109396.578] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenAllHttpHeadersMatch

# Run progress: 72.29% complete, ETA 01:23:11
# Fork: 1 of 2
# Warmup Iteration   1: 962507.674 ns/op
# Warmup Iteration   2: 441436.061 ns/op
# Warmup Iteration   3: 344177.131 ns/op
# Warmup Iteration   4: 189073.471 ns/op
# Warmup Iteration   5: 122360.409 ns/op
# Warmup Iteration   6: 101458.313 ns/op
# Warmup Iteration   7: 104471.266 ns/op
# Warmup Iteration   8: 97982.198 ns/op
# Warmup Iteration   9: 129169.369 ns/op
# Warmup Iteration  10: 121747.380 ns/op
Iteration   1: 110858.413 ns/op
Iteration   2: 107125.941 ns/op
Iteration   3: 120648.262 ns/op
Iteration   4: 96403.542 ns/op
Iteration   5: 102931.314 ns/op
Iteration   6: 93158.645 ns/op
Iteration   7: 102594.351 ns/op
Iteration   8: 115331.155 ns/op
Iteration   9: 110245.512 ns/op
Iteration  10: 118527.492 ns/op
Iteration  11: 116839.496 ns/op
Iteration  12: 116187.635 ns/op
Iteration  13: 108811.394 ns/op
Iteration  14: 115488.232 ns/op
Iteration  15: 104896.546 ns/op
Iteration  16: 108334.776 ns/op
Iteration  17: 113942.177 ns/op
Iteration  18: 115797.639 ns/op
Iteration  19: 105831.058 ns/op
Iteration  20: 91600.712 ns/op

# Run progress: 72.36% complete, ETA 01:23:05
# Fork: 2 of 2
# Warmup Iteration   1: 1169509.263 ns/op
# Warmup Iteration   2: 519282.035 ns/op
# Warmup Iteration   3: 447725.441 ns/op
# Warmup Iteration   4: 146141.179 ns/op
# Warmup Iteration   5: 120399.426 ns/op
# Warmup Iteration   6: 102246.144 ns/op
# Warmup Iteration   7: 88022.163 ns/op
# Warmup Iteration   8: 94082.700 ns/op
# Warmup Iteration   9: 95261.394 ns/op
# Warmup Iteration  10: 103728.499 ns/op
Iteration   1: 107618.684 ns/op
Iteration   2: 91003.657 ns/op
Iteration   3: 115990.157 ns/op
Iteration   4: 97134.061 ns/op
Iteration   5: 114760.003 ns/op
Iteration   6: 103298.683 ns/op
Iteration   7: 116879.151 ns/op
Iteration   8: 117485.991 ns/op
Iteration   9: 91723.936 ns/op
Iteration  10: 135173.303 ns/op
Iteration  11: 119503.685 ns/op
Iteration  12: 102472.555 ns/op
Iteration  13: 105002.510 ns/op
Iteration  14: 91510.692 ns/op
Iteration  15: 91263.504 ns/op
Iteration  16: 92811.567 ns/op
Iteration  17: 90458.526 ns/op
Iteration  18: 88036.153 ns/op
Iteration  19: 89694.094 ns/op
Iteration  20: 88031.795 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenAllHttpHeadersMatch":
  105635.175 ±(99.9%) 6503.332 ns/op [Average]
  (min, avg, max) = (88031.795, 105635.175, 135173.303), stdev = 11559.666
  CI (99.9%): [99131.843, 112138.507] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenAllQueryParamsMatch

# Run progress: 72.44% complete, ETA 01:22:58
# Fork: 1 of 2
# Warmup Iteration   1: 905017.431 ns/op
# Warmup Iteration   2: 468183.722 ns/op
# Warmup Iteration   3: 242798.971 ns/op
# Warmup Iteration   4: 99378.221 ns/op
# Warmup Iteration   5: 96435.835 ns/op
# Warmup Iteration   6: 86956.184 ns/op
# Warmup Iteration   7: 103511.647 ns/op
# Warmup Iteration   8: 129432.361 ns/op
# Warmup Iteration   9: 125360.774 ns/op
# Warmup Iteration  10: 102204.773 ns/op
Iteration   1: 105770.064 ns/op
Iteration   2: 98878.910 ns/op
Iteration   3: 103276.155 ns/op
Iteration   4: 106183.806 ns/op
Iteration   5: 109970.576 ns/op
Iteration   6: 95205.738 ns/op
Iteration   7: 112576.339 ns/op
Iteration   8: 113192.250 ns/op
Iteration   9: 108020.121 ns/op
Iteration  10: 129777.649 ns/op
Iteration  11: 103945.020 ns/op
Iteration  12: 89977.932 ns/op
Iteration  13: 96894.955 ns/op
Iteration  14: 118688.329 ns/op
Iteration  15: 116745.514 ns/op
Iteration  16: 105103.228 ns/op
Iteration  17: 93218.284 ns/op
Iteration  18: 108503.822 ns/op
Iteration  19: 99354.012 ns/op
Iteration  20: 91749.962 ns/op

# Run progress: 72.52% complete, ETA 01:22:51
# Fork: 2 of 2
# Warmup Iteration   1: 808078.409 ns/op
# Warmup Iteration   2: 283218.379 ns/op
# Warmup Iteration   3: 147152.515 ns/op
# Warmup Iteration   4: 98275.521 ns/op
# Warmup Iteration   5: 101334.219 ns/op
# Warmup Iteration   6: 142413.066 ns/op
# Warmup Iteration   7: 134003.454 ns/op
# Warmup Iteration   8: 122244.088 ns/op
# Warmup Iteration   9: 118682.432 ns/op
# Warmup Iteration  10: 107451.508 ns/op
Iteration   1: 120953.504 ns/op
Iteration   2: 110210.549 ns/op
Iteration   3: 89277.807 ns/op
Iteration   4: 80118.462 ns/op
Iteration   5: 116132.978 ns/op
Iteration   6: 97264.187 ns/op
Iteration   7: 120560.143 ns/op
Iteration   8: 108379.083 ns/op
Iteration   9: 96502.401 ns/op
Iteration  10: 107321.465 ns/op
Iteration  11: 105477.885 ns/op
Iteration  12: 98822.015 ns/op
Iteration  13: 84966.151 ns/op
Iteration  14: 108359.823 ns/op
Iteration  15: 108887.065 ns/op
Iteration  16: 95719.113 ns/op
Iteration  17: 103602.196 ns/op
Iteration  18: 121393.400 ns/op
Iteration  19: 106130.200 ns/op
Iteration  20: 110440.126 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenAllQueryParamsMatch":
  104938.781 ±(99.9%) 5978.041 ns/op [Average]
  (min, avg, max) = (80118.462, 104938.781, 129777.649), stdev = 10625.963
  CI (99.9%): [98960.739, 110916.822] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenAllStubbedHeadersMatch

# Run progress: 72.59% complete, ETA 01:22:45
# Fork: 1 of 2
# Warmup Iteration   1: 648833.719 ns/op
# Warmup Iteration   2: 409075.060 ns/op
# Warmup Iteration   3: 338366.958 ns/op
# Warmup Iteration   4: 321043.619 ns/op
# Warmup Iteration   5: 111946.171 ns/op
# Warmup Iteration   6: 127080.720 ns/op
# Warmup Iteration   7: 102446.074 ns/op
# Warmup Iteration   8: 98776.272 ns/op
# Warmup Iteration   9: 131830.783 ns/op
# Warmup Iteration  10: 112280.744 ns/op
Iteration   1: 114672.866 ns/op
Iteration   2: 88203.570 ns/op
Iteration   3: 104922.975 ns/op
Iteration   4: 104932.315 ns/op
Iteration   5: 106162.460 ns/op
Iteration   6: 97506.723 ns/op
Iteration   7: 111034.146 ns/op
Iteration   8: 110154.520 ns/op
Iteration   9: 93607.710 ns/op
Iteration  10: 99891.301 ns/op
Iteration  11: 86939.425 ns/op
Iteration  12: 96358.648 ns/op
Iteration  13: 123274.210 ns/op
Iteration  14: 113633.268 ns/op
Iteration  15: 105340.336 ns/op
Iteration  16: 100143.231 ns/op
Iteration  17: 104164.091 ns/op
Iteration  18: 120033.208 ns/op
Iteration  19: 116727.841 ns/op
Iteration  20: 93161.015 ns/op

# Run progress: 72.67% complete, ETA 01:22:38
# Fork: 2 of 2
# Warmup Iteration   1: 1071753.005 ns/op
# Warmup Iteration   2: 361524.513 ns/op
# Warmup Iteration   3: 518056.467 ns/op
# Warmup Iteration   4: 161003.202 ns/op
# Warmup Iteration   5: 118250.761 ns/op
# Warmup Iteration   6: 105826.451 ns/op
# Warmup Iteration   7: 101766.665 ns/op
# Warmup Iteration   8: 115570.796 ns/op
# Warmup Iteration   9: 104111.161 ns/op
# Warmup Iteration  10: 116438.871 ns/op
Iteration   1: 96103.583 ns/op
Iteration   2: 96129.075 ns/op
Iteration   3: 109632.556 ns/op
Iteration   4: 114160.804 ns/op
Iteration   5: 116446.269 ns/op
Iteration   6: 110285.251 ns/op
Iteration   7: 117265.060 ns/op
Iteration   8: 114140.920 ns/op
Iteration   9: 113294.728 ns/op
Iteration  10: 114464.957 ns/op
Iteration  11: 116011.476 ns/op
Iteration  12: 120436.553 ns/op
Iteration  13: 117909.011 ns/op
Iteration  14: 118586.395 ns/op
Iteration  15: 114115.638 ns/op
Iteration  16: 115290.137 ns/op
Iteration  17: 111323.912 ns/op
Iteration  18: 120283.644 ns/op
Iteration  19: 130389.112 ns/op
Iteration  20: 113875.488 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenAllStubbedHeadersMatch":
  109275.211 ±(99.9%) 5675.908 ns/op [Average]
  (min, avg, max) = (86939.425, 109275.211, 130389.112), stdev = 10088.922
  CI (99.9%): [103599.302, 114951.119] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenComplexJsonPostRegexStubbedAndJsonPosted

# Run progress: 72.74% complete, ETA 01:22:31
# Fork: 1 of 2
# Warmup Iteration   1: 1777343.153 ns/op
# Warmup Iteration   2: 737661.418 ns/op
# Warmup Iteration   3: 720299.719 ns/op
# Warmup Iteration   4: 549604.463 ns/op
# Warmup Iteration   5: 374886.983 ns/op
# Warmup Iteration   6: 360426.335 ns/op
# Warmup Iteration   7: 173085.688 ns/op
# Warmup Iteration   8: 153030.177 ns/op
# Warmup Iteration   9: 167948.895 ns/op
# Warmup Iteration  10: 143388.201 ns/op
Iteration   1: 107766.028 ns/op
Iteration   2: 153196.253 ns/op
Iteration   3: 153347.514 ns/op
Iteration   4: 152645.905 ns/op
Iteration   5: 148595.156 ns/op
Iteration   6: 140748.685 ns/op
Iteration   7: 124549.062 ns/op
Iteration   8: 126003.956 ns/op
Iteration   9: 152909.373 ns/op
Iteration  10: 144721.151 ns/op
Iteration  11: 140147.490 ns/op
Iteration  12: 136616.709 ns/op
Iteration  13: 170392.653 ns/op
Iteration  14: 141384.375 ns/op
Iteration  15: 163582.985 ns/op
Iteration  16: 167760.926 ns/op
Iteration  17: 155594.032 ns/op
Iteration  18: 179282.853 ns/op
Iteration  19: 170574.726 ns/op
Iteration  20: 150147.879 ns/op

# Run progress: 72.82% complete, ETA 01:22:24
# Fork: 2 of 2
# Warmup Iteration   1: 1871273.570 ns/op
# Warmup Iteration   2: 695399.687 ns/op
# Warmup Iteration   3: 647939.899 ns/op
# Warmup Iteration   4: 424111.502 ns/op
# Warmup Iteration   5: 186376.586 ns/op
# Warmup Iteration   6: 228225.439 ns/op
# Warmup Iteration   7: 247215.906 ns/op
# Warmup Iteration   8: 217780.054 ns/op
# Warmup Iteration   9: 128144.487 ns/op
# Warmup Iteration  10: 197273.633 ns/op
Iteration   1: 156485.013 ns/op
Iteration   2: 149593.392 ns/op
Iteration   3: 155007.862 ns/op
Iteration   4: 159540.152 ns/op
Iteration   5: 165319.176 ns/op
Iteration   6: 147792.230 ns/op
Iteration   7: 121321.041 ns/op
Iteration   8: 122965.196 ns/op
Iteration   9: 144236.947 ns/op
Iteration  10: 155619.446 ns/op
Iteration  11: 143793.516 ns/op
Iteration  12: 152397.725 ns/op
Iteration  13: 158725.800 ns/op
Iteration  14: 145477.006 ns/op
Iteration  15: 147871.841 ns/op
Iteration  16: 162394.124 ns/op
Iteration  17: 135211.096 ns/op
Iteration  18: 140297.368 ns/op
Iteration  19: 133262.109 ns/op
Iteration  20: 136282.158 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenComplexJsonPostRegexStubbedAndJsonPosted":
  147839.023 ±(99.9%) 8377.218 ns/op [Average]
  (min, avg, max) = (107766.028, 147839.023, 179282.853), stdev = 14890.497
  CI (99.9%): [139461.805, 156216.241] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenComplexUrlRegexified_ButGoodAssertionUrlConfigured

# Run progress: 72.89% complete, ETA 01:22:17
# Fork: 1 of 2
# Warmup Iteration   1: 1708641.206 ns/op
# Warmup Iteration   2: 515650.770 ns/op
# Warmup Iteration   3: 318922.919 ns/op
# Warmup Iteration   4: 183519.678 ns/op
# Warmup Iteration   5: 154277.493 ns/op
# Warmup Iteration   6: 204617.782 ns/op
# Warmup Iteration   7: 266393.255 ns/op
# Warmup Iteration   8: 251397.186 ns/op
# Warmup Iteration   9: 234623.384 ns/op
# Warmup Iteration  10: 170464.584 ns/op
Iteration   1: 187425.390 ns/op
Iteration   2: 203010.489 ns/op
Iteration   3: 206591.459 ns/op
Iteration   4: 182414.028 ns/op
Iteration   5: 172441.464 ns/op
Iteration   6: 203589.837 ns/op
Iteration   7: 182504.740 ns/op
Iteration   8: 186950.388 ns/op
Iteration   9: 216995.531 ns/op
Iteration  10: 225924.988 ns/op
Iteration  11: 204838.975 ns/op
Iteration  12: 189539.963 ns/op
Iteration  13: 205399.099 ns/op
Iteration  14: 165322.034 ns/op
Iteration  15: 208715.864 ns/op
Iteration  16: 190983.311 ns/op
Iteration  17: 166782.980 ns/op
Iteration  18: 200615.939 ns/op
Iteration  19: 176341.949 ns/op
Iteration  20: 192864.291 ns/op

# Run progress: 72.97% complete, ETA 01:22:10
# Fork: 2 of 2
# Warmup Iteration   1: 1808335.078 ns/op
# Warmup Iteration   2: 306161.310 ns/op
# Warmup Iteration   3: 270182.809 ns/op
# Warmup Iteration   4: 209077.074 ns/op
# Warmup Iteration   5: 210703.184 ns/op
# Warmup Iteration   6: 175893.701 ns/op
# Warmup Iteration   7: 330143.351 ns/op
# Warmup Iteration   8: 267219.578 ns/op
# Warmup Iteration   9: 266641.077 ns/op
# Warmup Iteration  10: 221743.056 ns/op
Iteration   1: 241505.172 ns/op
Iteration   2: 174729.826 ns/op
Iteration   3: 184913.253 ns/op
Iteration   4: 179587.001 ns/op
Iteration   5: 189308.831 ns/op
Iteration   6: 209627.742 ns/op
Iteration   7: 221577.257 ns/op
Iteration   8: 223520.956 ns/op
Iteration   9: 225361.901 ns/op
Iteration  10: 227542.862 ns/op
Iteration  11: 212369.356 ns/op
Iteration  12: 231158.788 ns/op
Iteration  13: 181783.677 ns/op
Iteration  14: 183178.987 ns/op
Iteration  15: 226844.967 ns/op
Iteration  16: 214253.516 ns/op
Iteration  17: 173558.465 ns/op
Iteration  18: 168515.785 ns/op
Iteration  19: 196402.993 ns/op
Iteration  20: 207424.860 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenComplexUrlRegexified_ButGoodAssertionUrlConfigured":
  198560.473 ±(99.9%) 11372.657 ns/op [Average]
  (min, avg, max) = (165322.034, 198560.473, 241505.172), stdev = 20214.887
  CI (99.9%): [187187.816, 209933.129] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenEmptyUrlStubbed_AndEmptyUrlSubmitted

# Run progress: 73.04% complete, ETA 01:22:03
# Fork: 1 of 2
# Warmup Iteration   1: 264845.342 ns/op
# Warmup Iteration   2: 105561.671 ns/op
# Warmup Iteration   3: 56519.583 ns/op
# Warmup Iteration   4: 56559.600 ns/op
# Warmup Iteration   5: 40944.390 ns/op
# Warmup Iteration   6: 66876.349 ns/op
# Warmup Iteration   7: 59100.695 ns/op
# Warmup Iteration   8: 57446.278 ns/op
# Warmup Iteration   9: 62579.460 ns/op
# Warmup Iteration  10: 68057.361 ns/op
Iteration   1: 53929.671 ns/op
Iteration   2: 55904.996 ns/op
Iteration   3: 62209.053 ns/op
Iteration   4: 56909.374 ns/op
Iteration   5: 76458.002 ns/op
Iteration   6: 51802.059 ns/op
Iteration   7: 93125.290 ns/op
Iteration   8: 63829.050 ns/op
Iteration   9: 58323.646 ns/op
Iteration  10: 62289.387 ns/op
Iteration  11: 60537.057 ns/op
Iteration  12: 61476.728 ns/op
Iteration  13: 58943.243 ns/op
Iteration  14: 77607.434 ns/op
Iteration  15: 53276.161 ns/op
Iteration  16: 67392.044 ns/op
Iteration  17: 62625.408 ns/op
Iteration  18: 65986.994 ns/op
Iteration  19: 67856.799 ns/op
Iteration  20: 74613.294 ns/op

# Run progress: 73.12% complete, ETA 01:21:56
# Fork: 2 of 2
# Warmup Iteration   1: 386588.513 ns/op
# Warmup Iteration   2: 119655.496 ns/op
# Warmup Iteration   3: 79859.326 ns/op
# Warmup Iteration   4: 56120.985 ns/op
# Warmup Iteration   5: 84989.875 ns/op
# Warmup Iteration   6: 49824.449 ns/op
# Warmup Iteration   7: 48463.987 ns/op
# Warmup Iteration   8: 72500.973 ns/op
# Warmup Iteration   9: 59033.028 ns/op
# Warmup Iteration  10: 62617.783 ns/op
Iteration   1: 61495.758 ns/op
Iteration   2: 55852.848 ns/op
Iteration   3: 74743.142 ns/op
Iteration   4: 56229.880 ns/op
Iteration   5: 77454.975 ns/op
Iteration   6: 64515.015 ns/op
Iteration   7: 71469.920 ns/op
Iteration   8: 58720.638 ns/op
Iteration   9: 72044.084 ns/op
Iteration  10: 63878.758 ns/op
Iteration  11: 64741.242 ns/op
Iteration  12: 57564.619 ns/op
Iteration  13: 76085.105 ns/op
Iteration  14: 62497.423 ns/op
Iteration  15: 58807.961 ns/op
Iteration  16: 50660.542 ns/op
Iteration  17: 66521.384 ns/op
Iteration  18: 63916.951 ns/op
Iteration  19: 69605.134 ns/op
Iteration  20: 54863.561 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenEmptyUrlStubbed_AndEmptyUrlSubmitted":
  64169.116 ±(99.9%) 4926.194 ns/op [Average]
  (min, avg, max) = (50660.542, 64169.116, 93125.290), stdev = 8756.306
  CI (99.9%): [59242.922, 69095.310] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenHeaderRegexIsMatching

# Run progress: 73.19% complete, ETA 01:21:50
# Fork: 1 of 2
# Warmup Iteration   1: 1266591.566 ns/op
# Warmup Iteration   2: 441625.164 ns/op
# Warmup Iteration   3: 415889.955 ns/op
# Warmup Iteration   4: 144453.788 ns/op
# Warmup Iteration   5: 106142.126 ns/op
# Warmup Iteration   6: 99157.369 ns/op
# Warmup Iteration   7: 90343.738 ns/op
# Warmup Iteration   8: 116675.245 ns/op
# Warmup Iteration   9: 121174.619 ns/op
# Warmup Iteration  10: 94485.803 ns/op
Iteration   1: 95403.333 ns/op
Iteration   2: 106122.208 ns/op
Iteration   3: 106858.691 ns/op
Iteration   4: 94645.435 ns/op
Iteration   5: 109302.532 ns/op
Iteration   6: 98865.698 ns/op
Iteration   7: 111899.505 ns/op
Iteration   8: 113058.685 ns/op
Iteration   9: 93589.741 ns/op
Iteration  10: 100154.697 ns/op
Iteration  11: 97994.114 ns/op
Iteration  12: 112038.114 ns/op
Iteration  13: 122222.989 ns/op
Iteration  14: 101016.087 ns/op
Iteration  15: 123339.488 ns/op
Iteration  16: 101928.538 ns/op
Iteration  17: 108524.487 ns/op
Iteration  18: 91973.719 ns/op
Iteration  19: 102712.490 ns/op
Iteration  20: 97383.626 ns/op

# Run progress: 73.27% complete, ETA 01:21:42
# Fork: 2 of 2
# Warmup Iteration   1: 913021.907 ns/op
# Warmup Iteration   2: 536741.132 ns/op
# Warmup Iteration   3: 293972.982 ns/op
# Warmup Iteration   4: 138742.609 ns/op
# Warmup Iteration   5: 124555.036 ns/op
# Warmup Iteration   6: 99132.004 ns/op
# Warmup Iteration   7: 84927.039 ns/op
# Warmup Iteration   8: 100036.958 ns/op
# Warmup Iteration   9: 98840.388 ns/op
# Warmup Iteration  10: 106458.048 ns/op
Iteration   1: 121799.805 ns/op
Iteration   2: 121050.085 ns/op
Iteration   3: 99976.555 ns/op
Iteration   4: 124491.951 ns/op
Iteration   5: 106903.838 ns/op
Iteration   6: 121780.023 ns/op
Iteration   7: 104856.593 ns/op
Iteration   8: 110741.976 ns/op
Iteration   9: 99750.357 ns/op
Iteration  10: 117186.949 ns/op
Iteration  11: 113944.625 ns/op
Iteration  12: 113704.313 ns/op
Iteration  13: 103209.596 ns/op
Iteration  14: 123424.636 ns/op
Iteration  15: 90821.832 ns/op
Iteration  16: 103592.758 ns/op
Iteration  17: 86085.764 ns/op
Iteration  18: 106235.122 ns/op
Iteration  19: 90847.549 ns/op
Iteration  20: 85820.288 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenHeaderRegexIsMatching":
  105881.470 ±(99.9%) 6087.116 ns/op [Average]
  (min, avg, max) = (85820.288, 105881.470, 124491.951), stdev = 10819.843
  CI (99.9%): [99794.354, 111968.586] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenJsonPostRegexStubbedAndJsonPosted

# Run progress: 73.34% complete, ETA 01:21:35
# Fork: 1 of 2
# Warmup Iteration   1: 1482642.576 ns/op
# Warmup Iteration   2: 624709.553 ns/op
# Warmup Iteration   3: 517669.860 ns/op
# Warmup Iteration   4: 714703.065 ns/op
# Warmup Iteration   5: 465435.275 ns/op
# Warmup Iteration   6: 332278.046 ns/op
# Warmup Iteration   7: 192718.973 ns/op
# Warmup Iteration   8: 158156.254 ns/op
# Warmup Iteration   9: 155254.230 ns/op
# Warmup Iteration  10: 148389.830 ns/op
Iteration   1: 136730.839 ns/op
Iteration   2: 110528.059 ns/op
Iteration   3: 147722.438 ns/op
Iteration   4: 141807.669 ns/op
Iteration   5: 132908.175 ns/op
Iteration   6: 130183.068 ns/op
Iteration   7: 164144.904 ns/op
Iteration   8: 141853.678 ns/op
Iteration   9: 146865.939 ns/op
Iteration  10: 135631.770 ns/op
Iteration  11: 123927.949 ns/op
Iteration  12: 148440.792 ns/op
Iteration  13: 144312.000 ns/op
Iteration  14: 164713.136 ns/op
Iteration  15: 144914.495 ns/op
Iteration  16: 131434.133 ns/op
Iteration  17: 153844.492 ns/op
Iteration  18: 151290.173 ns/op
Iteration  19: 139074.190 ns/op
Iteration  20: 162813.661 ns/op

# Run progress: 73.42% complete, ETA 01:21:28
# Fork: 2 of 2
# Warmup Iteration   1: 1662409.988 ns/op
# Warmup Iteration   2: 742114.239 ns/op
# Warmup Iteration   3: 913157.429 ns/op
# Warmup Iteration   4: 753614.858 ns/op
# Warmup Iteration   5: 597484.158 ns/op
# Warmup Iteration   6: 175267.636 ns/op
# Warmup Iteration   7: 171480.963 ns/op
# Warmup Iteration   8: 146838.417 ns/op
# Warmup Iteration   9: 133960.034 ns/op
# Warmup Iteration  10: 93094.200 ns/op
Iteration   1: 144153.181 ns/op
Iteration   2: 142360.690 ns/op
Iteration   3: 122742.442 ns/op
Iteration   4: 125407.279 ns/op
Iteration   5: 114836.217 ns/op
Iteration   6: 144479.142 ns/op
Iteration   7: 131677.560 ns/op
Iteration   8: 128056.449 ns/op
Iteration   9: 146048.077 ns/op
Iteration  10: 119607.902 ns/op
Iteration  11: 133050.856 ns/op
Iteration  12: 124506.711 ns/op
Iteration  13: 125041.234 ns/op
Iteration  14: 125037.296 ns/op
Iteration  15: 131575.552 ns/op
Iteration  16: 126788.480 ns/op
Iteration  17: 141693.286 ns/op
Iteration  18: 144083.496 ns/op
Iteration  19: 134113.246 ns/op
Iteration  20: 154004.471 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenJsonPostRegexStubbedAndJsonPosted":
  137810.128 ±(99.9%) 7279.477 ns/op [Average]
  (min, avg, max) = (110528.059, 137810.128, 164713.136), stdev = 12939.263
  CI (99.9%): [130530.651, 145089.605] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenMethodStubbed_ButLowerCasedMethodSubmitted

# Run progress: 73.49% complete, ETA 01:21:21
# Fork: 1 of 2
# Warmup Iteration   1: 438315.883 ns/op
# Warmup Iteration   2: 102658.312 ns/op
# Warmup Iteration   3: 105571.353 ns/op
# Warmup Iteration   4: 53207.489 ns/op
# Warmup Iteration   5: 67374.170 ns/op
# Warmup Iteration   6: 48330.586 ns/op
# Warmup Iteration   7: 78783.953 ns/op
# Warmup Iteration   8: 65341.886 ns/op
# Warmup Iteration   9: 76387.357 ns/op
# Warmup Iteration  10: 69687.858 ns/op
Iteration   1: 55954.984 ns/op
Iteration   2: 60154.848 ns/op
Iteration   3: 76039.955 ns/op
Iteration   4: 68782.508 ns/op
Iteration   5: 54518.694 ns/op
Iteration   6: 64335.935 ns/op
Iteration   7: 70530.461 ns/op
Iteration   8: 73874.271 ns/op
Iteration   9: 80342.603 ns/op
Iteration  10: 59505.349 ns/op
Iteration  11: 79453.412 ns/op
Iteration  12: 67493.681 ns/op
Iteration  13: 72031.813 ns/op
Iteration  14: 56648.318 ns/op
Iteration  15: 66156.536 ns/op
Iteration  16: 72296.079 ns/op
Iteration  17: 55767.934 ns/op
Iteration  18: 82195.940 ns/op
Iteration  19: 65584.728 ns/op
Iteration  20: 72455.042 ns/op

# Run progress: 73.57% complete, ETA 01:21:14
# Fork: 2 of 2
# Warmup Iteration   1: 305476.337 ns/op
# Warmup Iteration   2: 352016.680 ns/op
# Warmup Iteration   3: 116858.366 ns/op
# Warmup Iteration   4: 72687.867 ns/op
# Warmup Iteration   5: 63970.445 ns/op
# Warmup Iteration   6: 63641.902 ns/op
# Warmup Iteration   7: 51352.393 ns/op
# Warmup Iteration   8: 62776.662 ns/op
# Warmup Iteration   9: 67757.669 ns/op
# Warmup Iteration  10: 76428.599 ns/op
Iteration   1: 71341.156 ns/op
Iteration   2: 52640.045 ns/op
Iteration   3: 71982.513 ns/op
Iteration   4: 81216.297 ns/op
Iteration   5: 63502.953 ns/op
Iteration   6: 55319.395 ns/op
Iteration   7: 94300.570 ns/op
Iteration   8: 56689.749 ns/op
Iteration   9: 81702.735 ns/op
Iteration  10: 71198.980 ns/op
Iteration  11: 61706.093 ns/op
Iteration  12: 65847.641 ns/op
Iteration  13: 61297.295 ns/op
Iteration  14: 69335.354 ns/op
Iteration  15: 60586.774 ns/op
Iteration  16: 87830.534 ns/op
Iteration  17: 72519.367 ns/op
Iteration  18: 69095.660 ns/op
Iteration  19: 72045.880 ns/op
Iteration  20: 63362.303 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenMethodStubbed_ButLowerCasedMethodSubmitted":
  68441.110 ±(99.9%) 5431.282 ns/op [Average]
  (min, avg, max) = (52640.045, 68441.110, 94300.570), stdev = 9654.099
  CI (99.9%): [63009.827, 73872.392] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenNoHeadersWereStubbed_ButHeadersWereSetToAssert

# Run progress: 73.64% complete, ETA 01:21:06
# Fork: 1 of 2
# Warmup Iteration   1: 567179.526 ns/op
# Warmup Iteration   2: 275091.246 ns/op
# Warmup Iteration   3: 84672.977 ns/op
# Warmup Iteration   4: 77815.686 ns/op
# Warmup Iteration   5: 68694.203 ns/op
# Warmup Iteration   6: 56480.422 ns/op
# Warmup Iteration   7: 53392.889 ns/op
# Warmup Iteration   8: 82062.080 ns/op
# Warmup Iteration   9: 80250.139 ns/op
# Warmup Iteration  10: 77257.210 ns/op
Iteration   1: 60710.900 ns/op
Iteration   2: 56497.147 ns/op
Iteration   3: 60897.433 ns/op
Iteration   4: 67940.718 ns/op
Iteration   5: 76321.614 ns/op
Iteration   6: 62131.085 ns/op
Iteration   7: 54148.410 ns/op
Iteration   8: 63535.482 ns/op
Iteration   9: 68162.643 ns/op
Iteration  10: 68029.743 ns/op
Iteration  11: 68573.172 ns/op
Iteration  12: 74506.613 ns/op
Iteration  13: 59881.714 ns/op
Iteration  14: 64275.252 ns/op
Iteration  15: 59528.797 ns/op
Iteration  16: 71138.040 ns/op
Iteration  17: 76121.683 ns/op
Iteration  18: 63388.943 ns/op
Iteration  19: 65782.233 ns/op
Iteration  20: 67642.130 ns/op

# Run progress: 73.72% complete, ETA 01:20:59
# Fork: 2 of 2
# Warmup Iteration   1: 634238.615 ns/op
# Warmup Iteration   2: 185832.262 ns/op
# Warmup Iteration   3: 106868.351 ns/op
# Warmup Iteration   4: 55543.375 ns/op
# Warmup Iteration   5: 68499.190 ns/op
# Warmup Iteration   6: 51108.149 ns/op
# Warmup Iteration   7: 78919.577 ns/op
# Warmup Iteration   8: 62658.140 ns/op
# Warmup Iteration   9: 54653.521 ns/op
# Warmup Iteration  10: 84119.726 ns/op
Iteration   1: 80647.757 ns/op
Iteration   2: 57904.388 ns/op
Iteration   3: 89685.390 ns/op
Iteration   4: 60747.970 ns/op
Iteration   5: 75456.071 ns/op
Iteration   6: 79454.322 ns/op
Iteration   7: 81072.615 ns/op
Iteration   8: 59540.922 ns/op
Iteration   9: 89435.272 ns/op
Iteration  10: 71633.151 ns/op
Iteration  11: 70538.926 ns/op
Iteration  12: 81248.837 ns/op
Iteration  13: 57190.437 ns/op
Iteration  14: 81773.440 ns/op
Iteration  15: 65607.086 ns/op
Iteration  16: 71889.481 ns/op
Iteration  17: 75916.862 ns/op
Iteration  18: 77917.069 ns/op
Iteration  19: 60598.283 ns/op
Iteration  20: 70031.090 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenNoHeadersWereStubbed_ButHeadersWereSetToAssert":
  69187.578 ±(99.9%) 5101.853 ns/op [Average]
  (min, avg, max) = (54148.410, 69187.578, 89685.390), stdev = 9068.539
  CI (99.9%): [64085.725, 74289.431] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenNoMethodStubbed_ButMethodSubmitted

# Run progress: 73.80% complete, ETA 01:20:52
# Fork: 1 of 2
# Warmup Iteration   1: 345480.444 ns/op
# Warmup Iteration   2: 116208.642 ns/op
# Warmup Iteration   3: 153504.903 ns/op
# Warmup Iteration   4: 28745.404 ns/op
# Warmup Iteration   5: 26783.711 ns/op
# Warmup Iteration   6: 55697.060 ns/op
# Warmup Iteration   7: 41940.960 ns/op
# Warmup Iteration   8: 36645.652 ns/op
# Warmup Iteration   9: 36042.059 ns/op
# Warmup Iteration  10: 32182.361 ns/op
Iteration   1: 32031.200 ns/op
Iteration   2: 36249.527 ns/op
Iteration   3: 31738.497 ns/op
Iteration   4: 42057.936 ns/op
Iteration   5: 33047.673 ns/op
Iteration   6: 28145.560 ns/op
Iteration   7: 34070.485 ns/op
Iteration   8: 34838.360 ns/op
Iteration   9: 30473.090 ns/op
Iteration  10: 34344.295 ns/op
Iteration  11: 32386.801 ns/op
Iteration  12: 33598.400 ns/op
Iteration  13: 28368.922 ns/op
Iteration  14: 34392.612 ns/op
Iteration  15: 32454.057 ns/op
Iteration  16: 32724.697 ns/op
Iteration  17: 30638.980 ns/op
Iteration  18: 28350.576 ns/op
Iteration  19: 37568.670 ns/op
Iteration  20: 37877.979 ns/op

# Run progress: 73.87% complete, ETA 01:20:44
# Fork: 2 of 2
# Warmup Iteration   1: 335354.854 ns/op
# Warmup Iteration   2: 74028.411 ns/op
# Warmup Iteration   3: 63607.725 ns/op
# Warmup Iteration   4: 36272.763 ns/op
# Warmup Iteration   5: 27813.701 ns/op
# Warmup Iteration   6: 26300.792 ns/op
# Warmup Iteration   7: 35000.145 ns/op
# Warmup Iteration   8: 47212.438 ns/op
# Warmup Iteration   9: 38552.917 ns/op
# Warmup Iteration  10: 34172.478 ns/op
Iteration   1: 30429.785 ns/op
Iteration   2: 34742.152 ns/op
Iteration   3: 32690.394 ns/op
Iteration   4: 32254.910 ns/op
Iteration   5: 31487.074 ns/op
Iteration   6: 32070.388 ns/op
Iteration   7: 34574.216 ns/op
Iteration   8: 29434.020 ns/op
Iteration   9: 37045.697 ns/op
Iteration  10: 30561.173 ns/op
Iteration  11: 36136.956 ns/op
Iteration  12: 34587.052 ns/op
Iteration  13: 38626.761 ns/op
Iteration  14: 37602.144 ns/op
Iteration  15: 31059.790 ns/op
Iteration  16: 30889.638 ns/op
Iteration  17: 37178.057 ns/op
Iteration  18: 37777.498 ns/op
Iteration  19: 35685.696 ns/op
Iteration  20: 30245.360 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenNoMethodStubbed_ButMethodSubmitted":
  33510.927 ±(99.9%) 1794.473 ns/op [Average]
  (min, avg, max) = (28145.560, 33510.927, 42057.936), stdev = 3189.674
  CI (99.9%): [31716.454, 35305.400] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenNoPostBodyWasStubbed_ButPostBodyWasSubmitted

# Run progress: 73.95% complete, ETA 01:20:37
# Fork: 1 of 2
# Warmup Iteration   1: 342015.698 ns/op
# Warmup Iteration   2: 232895.996 ns/op
# Warmup Iteration   3: 83224.894 ns/op
# Warmup Iteration   4: 59407.376 ns/op
# Warmup Iteration   5: 56029.772 ns/op
# Warmup Iteration   6: 47191.654 ns/op
# Warmup Iteration   7: 117198.708 ns/op
# Warmup Iteration   8: 65052.511 ns/op
# Warmup Iteration   9: 66215.969 ns/op
# Warmup Iteration  10: 60694.353 ns/op
Iteration   1: 70205.804 ns/op
Iteration   2: 65515.742 ns/op
Iteration   3: 62160.589 ns/op
Iteration   4: 56368.481 ns/op
Iteration   5: 53789.868 ns/op
Iteration   6: 67594.994 ns/op
Iteration   7: 74834.830 ns/op
Iteration   8: 75630.639 ns/op
Iteration   9: 56172.198 ns/op
Iteration  10: 66375.193 ns/op
Iteration  11: 82775.171 ns/op
Iteration  12: 60192.134 ns/op
Iteration  13: 52519.139 ns/op
Iteration  14: 76537.983 ns/op
Iteration  15: 67137.558 ns/op
Iteration  16: 52384.802 ns/op
Iteration  17: 73318.517 ns/op
Iteration  18: 73035.534 ns/op
Iteration  19: 72069.368 ns/op
Iteration  20: 71736.153 ns/op

# Run progress: 74.02% complete, ETA 01:20:30
# Fork: 2 of 2
# Warmup Iteration   1: 671548.961 ns/op
# Warmup Iteration   2: 108583.873 ns/op
# Warmup Iteration   3: 62292.487 ns/op
# Warmup Iteration   4: 63434.021 ns/op
# Warmup Iteration   5: 44210.508 ns/op
# Warmup Iteration   6: 73611.608 ns/op
# Warmup Iteration   7: 145892.413 ns/op
# Warmup Iteration   8: 70604.209 ns/op
# Warmup Iteration   9: 69218.020 ns/op
# Warmup Iteration  10: 76980.778 ns/op
Iteration   1: 60165.474 ns/op
Iteration   2: 64206.976 ns/op
Iteration   3: 67939.595 ns/op
Iteration   4: 70274.203 ns/op
Iteration   5: 51147.796 ns/op
Iteration   6: 73270.583 ns/op
Iteration   7: 67397.346 ns/op
Iteration   8: 71114.098 ns/op
Iteration   9: 70975.411 ns/op
Iteration  10: 63562.150 ns/op
Iteration  11: 58662.442 ns/op
Iteration  12: 64642.581 ns/op
Iteration  13: 66368.722 ns/op
Iteration  14: 68812.943 ns/op
Iteration  15: 73131.469 ns/op
Iteration  16: 53998.007 ns/op
Iteration  17: 68302.183 ns/op
Iteration  18: 54833.754 ns/op
Iteration  19: 78268.381 ns/op
Iteration  20: 72134.151 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenNoPostBodyWasStubbed_ButPostBodyWasSubmitted":
  66239.074 ±(99.9%) 4484.445 ns/op [Average]
  (min, avg, max) = (51147.796, 66239.074, 82775.171), stdev = 7971.098
  CI (99.9%): [61754.629, 70723.519] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenNoQueryParamsWereStubbed_ButQueryParamsWereSetToAssert

# Run progress: 74.10% complete, ETA 01:20:22
# Fork: 1 of 2
# Warmup Iteration   1: 350289.489 ns/op
# Warmup Iteration   2: 375556.542 ns/op
# Warmup Iteration   3: 131451.679 ns/op
# Warmup Iteration   4: 67051.503 ns/op
# Warmup Iteration   5: 59851.989 ns/op
# Warmup Iteration   6: 61478.899 ns/op
# Warmup Iteration   7: 91653.412 ns/op
# Warmup Iteration   8: 69348.701 ns/op
# Warmup Iteration   9: 73963.697 ns/op
# Warmup Iteration  10: 74468.097 ns/op
Iteration   1: 64889.788 ns/op
Iteration   2: 61782.894 ns/op
Iteration   3: 60253.317 ns/op
Iteration   4: 61021.019 ns/op
Iteration   5: 64782.449 ns/op
Iteration   6: 69839.665 ns/op
Iteration   7: 61006.133 ns/op
Iteration   8: 64250.016 ns/op
Iteration   9: 74449.060 ns/op
Iteration  10: 56331.572 ns/op
Iteration  11: 67607.541 ns/op
Iteration  12: 59703.616 ns/op
Iteration  13: 60636.556 ns/op
Iteration  14: 67015.045 ns/op
Iteration  15: 69401.683 ns/op
Iteration  16: 71105.899 ns/op
Iteration  17: 63489.072 ns/op
Iteration  18: 60359.976 ns/op
Iteration  19: 53103.677 ns/op
Iteration  20: 73250.515 ns/op

# Run progress: 74.17% complete, ETA 01:20:15
# Fork: 2 of 2
# Warmup Iteration   1: 462860.148 ns/op
# Warmup Iteration   2: 206590.465 ns/op
# Warmup Iteration   3: 93358.790 ns/op
# Warmup Iteration   4: 63259.341 ns/op
# Warmup Iteration   5: 55104.623 ns/op
# Warmup Iteration   6: 66543.025 ns/op
# Warmup Iteration   7: 85848.441 ns/op
# Warmup Iteration   8: 69153.079 ns/op
# Warmup Iteration   9: 56833.811 ns/op
# Warmup Iteration  10: 63006.133 ns/op
Iteration   1: 59245.393 ns/op
Iteration   2: 61772.921 ns/op
Iteration   3: 68943.237 ns/op
Iteration   4: 71224.632 ns/op
Iteration   5: 68286.062 ns/op
Iteration   6: 74739.354 ns/op
Iteration   7: 64550.206 ns/op
Iteration   8: 59763.241 ns/op
Iteration   9: 64459.000 ns/op
Iteration  10: 60538.898 ns/op
Iteration  11: 62537.372 ns/op
Iteration  12: 76467.829 ns/op
Iteration  13: 66723.592 ns/op
Iteration  14: 58143.313 ns/op
Iteration  15: 76433.239 ns/op
Iteration  16: 58872.147 ns/op
Iteration  17: 68848.512 ns/op
Iteration  18: 62815.405 ns/op
Iteration  19: 70300.395 ns/op
Iteration  20: 67782.842 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenNoQueryParamsWereStubbed_ButQueryParamsWereSetToAssert":
  65168.177 ±(99.9%) 3200.999 ns/op [Average]
  (min, avg, max) = (53103.677, 65168.177, 76467.829), stdev = 5689.774
  CI (99.9%): [61967.178, 68369.176] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenNullUrlStubbed_AndNullUrlSubmitted

# Run progress: 74.25% complete, ETA 01:20:07
# Fork: 1 of 2
# Warmup Iteration   1: 275709.782 ns/op
# Warmup Iteration   2: 96690.285 ns/op
# Warmup Iteration   3: 55956.915 ns/op
# Warmup Iteration   4: 46922.613 ns/op
# Warmup Iteration   5: 86382.764 ns/op
# Warmup Iteration   6: 64812.702 ns/op
# Warmup Iteration   7: 66290.073 ns/op
# Warmup Iteration   8: 59007.037 ns/op
# Warmup Iteration   9: 64255.349 ns/op
# Warmup Iteration  10: 78070.386 ns/op
Iteration   1: 71656.627 ns/op
Iteration   2: 74555.323 ns/op
Iteration   3: 67215.463 ns/op
Iteration   4: 69160.599 ns/op
Iteration   5: 63780.405 ns/op
Iteration   6: 66564.724 ns/op
Iteration   7: 57759.320 ns/op
Iteration   8: 58120.763 ns/op
Iteration   9: 64670.056 ns/op
Iteration  10: 59180.452 ns/op
Iteration  11: 67015.095 ns/op
Iteration  12: 76117.570 ns/op
Iteration  13: 61237.708 ns/op
Iteration  14: 54339.983 ns/op
Iteration  15: 65248.149 ns/op
Iteration  16: 73222.104 ns/op
Iteration  17: 72769.267 ns/op
Iteration  18: 62920.785 ns/op
Iteration  19: 64011.780 ns/op
Iteration  20: 65451.315 ns/op

# Run progress: 74.32% complete, ETA 01:19:59
# Fork: 2 of 2
# Warmup Iteration   1: 407464.310 ns/op
# Warmup Iteration   2: 91325.721 ns/op
# Warmup Iteration   3: 66582.694 ns/op
# Warmup Iteration   4: 51591.510 ns/op
# Warmup Iteration   5: 49489.520 ns/op
# Warmup Iteration   6: 68386.659 ns/op
# Warmup Iteration   7: 78726.852 ns/op
# Warmup Iteration   8: 63425.322 ns/op
# Warmup Iteration   9: 67869.839 ns/op
# Warmup Iteration  10: 75306.458 ns/op
Iteration   1: 67067.860 ns/op
Iteration   2: 73173.935 ns/op
Iteration   3: 52252.031 ns/op
Iteration   4: 77335.077 ns/op
Iteration   5: 60332.172 ns/op
Iteration   6: 64812.819 ns/op
Iteration   7: 63907.630 ns/op
Iteration   8: 65311.249 ns/op
Iteration   9: 57402.561 ns/op
Iteration  10: 64423.841 ns/op
Iteration  11: 66826.746 ns/op
Iteration  12: 64610.553 ns/op
Iteration  13: 67578.173 ns/op
Iteration  14: 63856.545 ns/op
Iteration  15: 55237.366 ns/op
Iteration  16: 82005.881 ns/op
Iteration  17: 64863.492 ns/op
Iteration  18: 54611.962 ns/op
Iteration  19: 57031.585 ns/op
Iteration  20: 60222.236 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenNullUrlStubbed_AndNullUrlSubmitted":
  64946.530 ±(99.9%) 3759.402 ns/op [Average]
  (min, avg, max) = (52252.031, 64946.530, 82005.881), stdev = 6682.333
  CI (99.9%): [61187.128, 68705.932] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenNullUrlStubbed_ButUrlSubmitted

# Run progress: 74.40% complete, ETA 01:19:51
# Fork: 1 of 2
# Warmup Iteration   1: 265437.470 ns/op
# Warmup Iteration   2: 259257.977 ns/op
# Warmup Iteration   3: 203956.072 ns/op
# Warmup Iteration   4: 97436.742 ns/op
# Warmup Iteration   5: 83584.546 ns/op
# Warmup Iteration   6: 54079.940 ns/op
# Warmup Iteration   7: 58207.470 ns/op
# Warmup Iteration   8: 61220.350 ns/op
# Warmup Iteration   9: 68403.236 ns/op
# Warmup Iteration  10: 61158.765 ns/op
Iteration   1: 79880.184 ns/op
Iteration   2: 75772.982 ns/op
Iteration   3: 63656.549 ns/op
Iteration   4: 65938.979 ns/op
Iteration   5: 71314.975 ns/op
Iteration   6: 61091.281 ns/op
Iteration   7: 78849.982 ns/op
Iteration   8: 73357.166 ns/op
Iteration   9: 66919.943 ns/op
Iteration  10: 73921.318 ns/op
Iteration  11: 68209.865 ns/op
Iteration  12: 62301.556 ns/op
Iteration  13: 66526.664 ns/op
Iteration  14: 69940.711 ns/op
Iteration  15: 64306.137 ns/op
Iteration  16: 61182.793 ns/op
Iteration  17: 62398.617 ns/op
Iteration  18: 76556.501 ns/op
Iteration  19: 58516.145 ns/op
Iteration  20: 60182.934 ns/op

# Run progress: 74.47% complete, ETA 01:19:44
# Fork: 2 of 2
# Warmup Iteration   1: 243483.435 ns/op
# Warmup Iteration   2: 288258.275 ns/op
# Warmup Iteration   3: 80107.837 ns/op
# Warmup Iteration   4: 85128.161 ns/op
# Warmup Iteration   5: 56775.711 ns/op
# Warmup Iteration   6: 45383.940 ns/op
# Warmup Iteration   7: 67073.499 ns/op
# Warmup Iteration   8: 73251.239 ns/op
# Warmup Iteration   9: 70030.017 ns/op
# Warmup Iteration  10: 75404.262 ns/op
Iteration   1: 71902.233 ns/op
Iteration   2: 71845.023 ns/op
Iteration   3: 65494.604 ns/op
Iteration   4: 64261.044 ns/op
Iteration   5: 64424.193 ns/op
Iteration   6: 72494.265 ns/op
Iteration   7: 70258.664 ns/op
Iteration   8: 74026.913 ns/op
Iteration   9: 66792.615 ns/op
Iteration  10: 70114.722 ns/op
Iteration  11: 72008.376 ns/op
Iteration  12: 54514.790 ns/op
Iteration  13: 84599.649 ns/op
Iteration  14: 53486.303 ns/op
Iteration  15: 62515.716 ns/op
Iteration  16: 70284.221 ns/op
Iteration  17: 53066.086 ns/op
Iteration  18: 73812.323 ns/op
Iteration  19: 67330.135 ns/op
Iteration  20: 67280.781 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenNullUrlStubbed_ButUrlSubmitted":
  67783.448 ±(99.9%) 3953.712 ns/op [Average]
  (min, avg, max) = (53066.086, 67783.448, 84599.649), stdev = 7027.719
  CI (99.9%): [63829.737, 71737.160] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPlainPostRegexStubbedAndPlainTextPosted

# Run progress: 74.55% complete, ETA 01:19:36
# Fork: 1 of 2
# Warmup Iteration   1: 778597.654 ns/op
# Warmup Iteration   2: 598563.829 ns/op
# Warmup Iteration   3: 190775.002 ns/op
# Warmup Iteration   4: 94243.572 ns/op
# Warmup Iteration   5: 88514.580 ns/op
# Warmup Iteration   6: 105931.670 ns/op
# Warmup Iteration   7: 87441.213 ns/op
# Warmup Iteration   8: 110288.588 ns/op
# Warmup Iteration   9: 107923.262 ns/op
# Warmup Iteration  10: 112160.198 ns/op
Iteration   1: 112731.105 ns/op
Iteration   2: 101093.110 ns/op
Iteration   3: 122095.128 ns/op
Iteration   4: 97344.088 ns/op
Iteration   5: 110913.222 ns/op
Iteration   6: 115562.307 ns/op
Iteration   7: 109240.815 ns/op
Iteration   8: 103769.416 ns/op
Iteration   9: 107317.053 ns/op
Iteration  10: 92796.667 ns/op
Iteration  11: 112725.309 ns/op
Iteration  12: 103346.796 ns/op
Iteration  13: 100651.522 ns/op
Iteration  14: 93842.813 ns/op
Iteration  15: 107107.190 ns/op
Iteration  16: 115932.687 ns/op
Iteration  17: 114564.140 ns/op
Iteration  18: 88934.651 ns/op
Iteration  19: 103813.220 ns/op
Iteration  20: 115514.612 ns/op

# Run progress: 74.62% complete, ETA 01:19:28
# Fork: 2 of 2
# Warmup Iteration   1: 1017327.124 ns/op
# Warmup Iteration   2: 389622.881 ns/op
# Warmup Iteration   3: 469893.811 ns/op
# Warmup Iteration   4: 134387.641 ns/op
# Warmup Iteration   5: 111584.468 ns/op
# Warmup Iteration   6: 113012.900 ns/op
# Warmup Iteration   7: 103828.738 ns/op
# Warmup Iteration   8: 87430.615 ns/op
# Warmup Iteration   9: 145137.061 ns/op
# Warmup Iteration  10: 99774.327 ns/op
Iteration   1: 120921.245 ns/op
Iteration   2: 96444.440 ns/op
Iteration   3: 94137.002 ns/op
Iteration   4: 116542.807 ns/op
Iteration   5: 109041.427 ns/op
Iteration   6: 102386.807 ns/op
Iteration   7: 87036.585 ns/op
Iteration   8: 93047.770 ns/op
Iteration   9: 104498.752 ns/op
Iteration  10: 99264.496 ns/op
Iteration  11: 102326.101 ns/op
Iteration  12: 114395.409 ns/op
Iteration  13: 108153.910 ns/op
Iteration  14: 97523.860 ns/op
Iteration  15: 94255.490 ns/op
Iteration  16: 88098.260 ns/op
Iteration  17: 89429.463 ns/op
Iteration  18: 93276.599 ns/op
Iteration  19: 109194.860 ns/op
Iteration  20: 101907.446 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPlainPostRegexStubbedAndPlainTextPosted":
  103779.465 ±(99.9%) 5365.323 ns/op [Average]
  (min, avg, max) = (87036.585, 103779.465, 122095.128), stdev = 9536.856
  CI (99.9%): [98414.142, 109144.787] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingAnyPostWithoutNewLineCharacter

# Run progress: 74.70% complete, ETA 01:19:20
# Fork: 1 of 2
# Warmup Iteration   1: 801354.401 ns/op
# Warmup Iteration   2: 560687.633 ns/op
# Warmup Iteration   3: 383363.641 ns/op
# Warmup Iteration   4: 112324.621 ns/op
# Warmup Iteration   5: 104975.674 ns/op
# Warmup Iteration   6: 102296.104 ns/op
# Warmup Iteration   7: 111074.674 ns/op
# Warmup Iteration   8: 159634.760 ns/op
# Warmup Iteration   9: 106978.021 ns/op
# Warmup Iteration  10: 117372.356 ns/op
Iteration   1: 96627.829 ns/op
Iteration   2: 100179.735 ns/op
Iteration   3: 88338.908 ns/op
Iteration   4: 100072.111 ns/op
Iteration   5: 98888.175 ns/op
Iteration   6: 111764.202 ns/op
Iteration   7: 101745.022 ns/op
Iteration   8: 91731.446 ns/op
Iteration   9: 96221.036 ns/op
Iteration  10: 106762.767 ns/op
Iteration  11: 107651.274 ns/op
Iteration  12: 107486.662 ns/op
Iteration  13: 89294.046 ns/op
Iteration  14: 107777.274 ns/op
Iteration  15: 106913.303 ns/op
Iteration  16: 101911.533 ns/op
Iteration  17: 106264.999 ns/op
Iteration  18: 96105.862 ns/op
Iteration  19: 97924.153 ns/op
Iteration  20: 109416.232 ns/op

# Run progress: 74.77% complete, ETA 01:19:12
# Fork: 2 of 2
# Warmup Iteration   1: 1031897.775 ns/op
# Warmup Iteration   2: 525746.997 ns/op
# Warmup Iteration   3: 284390.507 ns/op
# Warmup Iteration   4: 113850.521 ns/op
# Warmup Iteration   5: 105605.228 ns/op
# Warmup Iteration   6: 96435.848 ns/op
# Warmup Iteration   7: 103315.989 ns/op
# Warmup Iteration   8: 129906.929 ns/op
# Warmup Iteration   9: 99687.742 ns/op
# Warmup Iteration  10: 95799.398 ns/op
Iteration   1: 91740.370 ns/op
Iteration   2: 98170.331 ns/op
Iteration   3: 102520.525 ns/op
Iteration   4: 90780.401 ns/op
Iteration   5: 87641.026 ns/op
Iteration   6: 98324.658 ns/op
Iteration   7: 105080.631 ns/op
Iteration   8: 104579.826 ns/op
Iteration   9: 112346.930 ns/op
Iteration  10: 101272.560 ns/op
Iteration  11: 89763.174 ns/op
Iteration  12: 98529.726 ns/op
Iteration  13: 105441.700 ns/op
Iteration  14: 101448.411 ns/op
Iteration  15: 97986.206 ns/op
Iteration  16: 95493.963 ns/op
Iteration  17: 97255.941 ns/op
Iteration  18: 100012.557 ns/op
Iteration  19: 98779.101 ns/op
Iteration  20: 96696.570 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingAnyPostWithoutNewLineCharacter":
  99923.529 ±(99.9%) 3613.609 ns/op [Average]
  (min, avg, max) = (87641.026, 99923.529, 112346.930), stdev = 6423.187
  CI (99.9%): [96309.920, 103537.139] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingPostWithCarriageReturnChar

# Run progress: 74.85% complete, ETA 01:19:03
# Fork: 1 of 2
# Warmup Iteration   1: 710558.562 ns/op
# Warmup Iteration   2: 492066.377 ns/op
# Warmup Iteration   3: 187241.925 ns/op
# Warmup Iteration   4: 96398.971 ns/op
# Warmup Iteration   5: 112230.988 ns/op
# Warmup Iteration   6: 137665.332 ns/op
# Warmup Iteration   7: 135487.551 ns/op
# Warmup Iteration   8: 112854.192 ns/op
# Warmup Iteration   9: 114271.450 ns/op
# Warmup Iteration  10: 104317.528 ns/op
Iteration   1: 163831.401 ns/op
Iteration   2: 113095.170 ns/op
Iteration   3: 128634.858 ns/op
Iteration   4: 126512.306 ns/op
Iteration   5: 106199.233 ns/op
Iteration   6: 103133.509 ns/op
Iteration   7: 122151.525 ns/op
Iteration   8: 153646.561 ns/op
Iteration   9: 119702.972 ns/op
Iteration  10: 127315.880 ns/op
Iteration  11: 135307.963 ns/op
Iteration  12: 129124.359 ns/op
Iteration  13: 124272.342 ns/op
Iteration  14: 153294.269 ns/op
Iteration  15: 131919.184 ns/op
Iteration  16: 135514.410 ns/op
Iteration  17: 124703.013 ns/op
Iteration  18: 112118.560 ns/op
Iteration  19: 142345.542 ns/op
Iteration  20: 156399.802 ns/op

# Run progress: 74.92% complete, ETA 01:18:55
# Fork: 2 of 2
# Warmup Iteration   1: 1183836.438 ns/op
# Warmup Iteration   2: 252203.118 ns/op
# Warmup Iteration   3: 143805.107 ns/op
# Warmup Iteration   4: 100946.968 ns/op
# Warmup Iteration   5: 112076.681 ns/op
# Warmup Iteration   6: 188659.705 ns/op
# Warmup Iteration   7: 125707.822 ns/op
# Warmup Iteration   8: 134704.372 ns/op
# Warmup Iteration   9: 123628.261 ns/op
# Warmup Iteration  10: 147494.126 ns/op
Iteration   1: 138593.453 ns/op
Iteration   2: 132277.420 ns/op
Iteration   3: 127401.525 ns/op
Iteration   4: 137960.858 ns/op
Iteration   5: 115819.419 ns/op
Iteration   6: 155848.968 ns/op
Iteration   7: 126300.521 ns/op
Iteration   8: 105058.716 ns/op
Iteration   9: 129049.397 ns/op
Iteration  10: 132240.109 ns/op
Iteration  11: 113405.943 ns/op
Iteration  12: 135601.906 ns/op
Iteration  13: 128072.250 ns/op
Iteration  14: 118738.138 ns/op
Iteration  15: 154733.411 ns/op
Iteration  16: 122512.414 ns/op
Iteration  17: 100475.021 ns/op
Iteration  18: 150206.507 ns/op
Iteration  19: 120236.799 ns/op
Iteration  20: 127702.317 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingPostWithCarriageReturnChar":
  129536.449 ±(99.9%) 8752.510 ns/op [Average]
  (min, avg, max) = (100475.021, 129536.449, 163831.401), stdev = 15557.578
  CI (99.9%): [120783.939, 138288.958] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingPostWithCarriageReturnLinefeedChars

# Run progress: 75.00% complete, ETA 01:18:48
# Fork: 1 of 2
# Warmup Iteration   1: 1138944.652 ns/op
# Warmup Iteration   2: 423567.246 ns/op
# Warmup Iteration   3: 186114.000 ns/op
# Warmup Iteration   4: 98103.184 ns/op
# Warmup Iteration   5: 119786.112 ns/op
# Warmup Iteration   6: 156988.454 ns/op
# Warmup Iteration   7: 104169.993 ns/op
# Warmup Iteration   8: 167821.627 ns/op
# Warmup Iteration   9: 112104.908 ns/op
# Warmup Iteration  10: 116839.102 ns/op
Iteration   1: 145734.142 ns/op
Iteration   2: 134974.284 ns/op
Iteration   3: 114005.445 ns/op
Iteration   4: 134139.683 ns/op
Iteration   5: 142716.444 ns/op
Iteration   6: 128121.144 ns/op
Iteration   7: 130262.620 ns/op
Iteration   8: 134152.147 ns/op
Iteration   9: 121269.958 ns/op
Iteration  10: 134013.444 ns/op
Iteration  11: 115889.872 ns/op
Iteration  12: 139217.371 ns/op
Iteration  13: 112332.304 ns/op
Iteration  14: 166683.697 ns/op
Iteration  15: 129766.093 ns/op
Iteration  16: 140617.191 ns/op
Iteration  17: 116298.021 ns/op
Iteration  18: 165068.545 ns/op
Iteration  19: 109733.654 ns/op
Iteration  20: 160169.067 ns/op

# Run progress: 75.08% complete, ETA 01:18:39
# Fork: 2 of 2
# Warmup Iteration   1: 1109692.927 ns/op
# Warmup Iteration   2: 538697.084 ns/op
# Warmup Iteration   3: 206095.926 ns/op
# Warmup Iteration   4: 110360.358 ns/op
# Warmup Iteration   5: 101766.369 ns/op
# Warmup Iteration   6: 135456.423 ns/op
# Warmup Iteration   7: 119694.617 ns/op
# Warmup Iteration   8: 122677.889 ns/op
# Warmup Iteration   9: 134464.613 ns/op
# Warmup Iteration  10: 131561.474 ns/op
Iteration   1: 135117.501 ns/op
Iteration   2: 133214.226 ns/op
Iteration   3: 125003.801 ns/op
Iteration   4: 139211.861 ns/op
Iteration   5: 143145.005 ns/op
Iteration   6: 137267.097 ns/op
Iteration   7: 131348.755 ns/op
Iteration   8: 114419.320 ns/op
Iteration   9: 130433.369 ns/op
Iteration  10: 135490.285 ns/op
Iteration  11: 129607.355 ns/op
Iteration  12: 123613.792 ns/op
Iteration  13: 122046.616 ns/op
Iteration  14: 125036.856 ns/op
Iteration  15: 132367.297 ns/op
Iteration  16: 134469.546 ns/op
Iteration  17: 126582.787 ns/op
Iteration  18: 119221.605 ns/op
Iteration  19: 119294.225 ns/op
Iteration  20: 138585.472 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingPostWithCarriageReturnLinefeedChars":
  131766.047 ±(99.9%) 7321.928 ns/op [Average]
  (min, avg, max) = (109733.654, 131766.047, 166683.697), stdev = 13014.720
  CI (99.9%): [124444.119, 139087.975] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingPostWithLinefeedChar

# Run progress: 75.15% complete, ETA 01:18:31
# Fork: 1 of 2
# Warmup Iteration   1: 732649.624 ns/op
# Warmup Iteration   2: 505260.820 ns/op
# Warmup Iteration   3: 503446.892 ns/op
# Warmup Iteration   4: 266418.053 ns/op
# Warmup Iteration   5: 133622.660 ns/op
# Warmup Iteration   6: 101964.190 ns/op
# Warmup Iteration   7: 147064.036 ns/op
# Warmup Iteration   8: 182115.002 ns/op
# Warmup Iteration   9: 123103.021 ns/op
# Warmup Iteration  10: 122451.850 ns/op
Iteration   1: 142094.756 ns/op
Iteration   2: 112604.368 ns/op
Iteration   3: 140266.456 ns/op
Iteration   4: 137592.025 ns/op
Iteration   5: 129535.894 ns/op
Iteration   6: 146725.403 ns/op
Iteration   7: 133416.037 ns/op
Iteration   8: 147862.948 ns/op
Iteration   9: 136658.217 ns/op
Iteration  10: 137386.571 ns/op
Iteration  11: 132656.169 ns/op
Iteration  12: 149181.149 ns/op
Iteration  13: 131339.569 ns/op
Iteration  14: 130687.516 ns/op
Iteration  15: 149736.047 ns/op
Iteration  16: 140648.622 ns/op
Iteration  17: 126341.347 ns/op
Iteration  18: 128386.822 ns/op
Iteration  19: 131202.562 ns/op
Iteration  20: 138372.727 ns/op

# Run progress: 75.23% complete, ETA 01:18:23
# Fork: 2 of 2
# Warmup Iteration   1: 1104967.366 ns/op
# Warmup Iteration   2: 434744.992 ns/op
# Warmup Iteration   3: 322859.632 ns/op
# Warmup Iteration   4: 179332.400 ns/op
# Warmup Iteration   5: 129993.271 ns/op
# Warmup Iteration   6: 121777.895 ns/op
# Warmup Iteration   7: 111668.129 ns/op
# Warmup Iteration   8: 191592.922 ns/op
# Warmup Iteration   9: 146877.353 ns/op
# Warmup Iteration  10: 121973.617 ns/op
Iteration   1: 110803.168 ns/op
Iteration   2: 161273.788 ns/op
Iteration   3: 131569.604 ns/op
Iteration   4: 121836.661 ns/op
Iteration   5: 129932.062 ns/op
Iteration   6: 133486.230 ns/op
Iteration   7: 140137.376 ns/op
Iteration   8: 140079.564 ns/op
Iteration   9: 134008.224 ns/op
Iteration  10: 136287.294 ns/op
Iteration  11: 120382.382 ns/op
Iteration  12: 133197.018 ns/op
Iteration  13: 134779.307 ns/op
Iteration  14: 129307.993 ns/op
Iteration  15: 151159.418 ns/op
Iteration  16: 133680.602 ns/op
Iteration  17: 126399.137 ns/op
Iteration  18: 144727.825 ns/op
Iteration  19: 142343.855 ns/op
Iteration  20: 139855.904 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingPostWithLinefeedChar":
  135448.565 ±(99.9%) 5594.216 ns/op [Average]
  (min, avg, max) = (110803.168, 135448.565, 161273.788), stdev = 9943.714
  CI (99.9%): [129854.349, 141042.782] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingPostWithSystemLineChar

# Run progress: 75.30% complete, ETA 01:18:14
# Fork: 1 of 2
# Warmup Iteration   1: 1194280.435 ns/op
# Warmup Iteration   2: 523374.835 ns/op
# Warmup Iteration   3: 543759.542 ns/op
# Warmup Iteration   4: 141255.050 ns/op
# Warmup Iteration   5: 114670.639 ns/op
# Warmup Iteration   6: 107866.283 ns/op
# Warmup Iteration   7: 167901.533 ns/op
# Warmup Iteration   8: 117460.379 ns/op
# Warmup Iteration   9: 108591.900 ns/op
# Warmup Iteration  10: 149087.451 ns/op
Iteration   1: 115490.555 ns/op
Iteration   2: 155345.718 ns/op
Iteration   3: 134529.066 ns/op
Iteration   4: 141236.939 ns/op
Iteration   5: 130330.177 ns/op
Iteration   6: 118285.242 ns/op
Iteration   7: 104638.321 ns/op
Iteration   8: 141894.871 ns/op
Iteration   9: 135135.787 ns/op
Iteration  10: 145354.433 ns/op
Iteration  11: 114972.905 ns/op
Iteration  12: 156533.945 ns/op
Iteration  13: 133797.024 ns/op
Iteration  14: 131283.963 ns/op
Iteration  15: 140969.368 ns/op
Iteration  16: 133817.937 ns/op
Iteration  17: 135598.080 ns/op
Iteration  18: 103882.416 ns/op
Iteration  19: 149597.931 ns/op
Iteration  20: 101389.789 ns/op

# Run progress: 75.38% complete, ETA 01:18:06
# Fork: 2 of 2
# Warmup Iteration   1: 1311664.702 ns/op
# Warmup Iteration   2: 497982.070 ns/op
# Warmup Iteration   3: 238263.357 ns/op
# Warmup Iteration   4: 97890.737 ns/op
# Warmup Iteration   5: 100218.853 ns/op
# Warmup Iteration   6: 143060.600 ns/op
# Warmup Iteration   7: 124477.312 ns/op
# Warmup Iteration   8: 152195.203 ns/op
# Warmup Iteration   9: 120714.546 ns/op
# Warmup Iteration  10: 127160.192 ns/op
Iteration   1: 124955.795 ns/op
Iteration   2: 135364.800 ns/op
Iteration   3: 113336.363 ns/op
Iteration   4: 160420.547 ns/op
Iteration   5: 116070.807 ns/op
Iteration   6: 112445.953 ns/op
Iteration   7: 166642.372 ns/op
Iteration   8: 110974.602 ns/op
Iteration   9: 140733.294 ns/op
Iteration  10: 141690.376 ns/op
Iteration  11: 138506.886 ns/op
Iteration  12: 112456.563 ns/op
Iteration  13: 105556.797 ns/op
Iteration  14: 117875.395 ns/op
Iteration  15: 119799.819 ns/op
Iteration  16: 106125.632 ns/op
Iteration  17: 105426.787 ns/op
Iteration  18: 124401.015 ns/op
Iteration  19: 111534.207 ns/op
Iteration  20: 117445.355 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingPostWithSystemLineChar":
  127646.196 ±(99.9%) 9705.767 ns/op [Average]
  (min, avg, max) = (101389.789, 127646.196, 166642.372), stdev = 17251.992
  CI (99.9%): [117940.429, 137351.962] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingSingleLinePost

# Run progress: 75.45% complete, ETA 01:17:58
# Fork: 1 of 2
# Warmup Iteration   1: 638245.374 ns/op
# Warmup Iteration   2: 484159.616 ns/op
# Warmup Iteration   3: 268597.507 ns/op
# Warmup Iteration   4: 94604.854 ns/op
# Warmup Iteration   5: 85825.858 ns/op
# Warmup Iteration   6: 84888.374 ns/op
# Warmup Iteration   7: 148958.930 ns/op
# Warmup Iteration   8: 120243.345 ns/op
# Warmup Iteration   9: 112354.805 ns/op
# Warmup Iteration  10: 95743.335 ns/op
Iteration   1: 88006.029 ns/op
Iteration   2: 87359.927 ns/op
Iteration   3: 113187.486 ns/op
Iteration   4: 100778.243 ns/op
Iteration   5: 115809.524 ns/op
Iteration   6: 97173.064 ns/op
Iteration   7: 101773.190 ns/op
Iteration   8: 86126.554 ns/op
Iteration   9: 99216.211 ns/op
Iteration  10: 90814.334 ns/op
Iteration  11: 88697.021 ns/op
Iteration  12: 92602.309 ns/op
Iteration  13: 108962.559 ns/op
Iteration  14: 91038.417 ns/op
Iteration  15: 88142.963 ns/op
Iteration  16: 107779.116 ns/op
Iteration  17: 97697.932 ns/op
Iteration  18: 92448.430 ns/op
Iteration  19: 95201.924 ns/op
Iteration  20: 101608.481 ns/op

# Run progress: 75.53% complete, ETA 01:17:49
# Fork: 2 of 2
# Warmup Iteration   1: 755435.726 ns/op
# Warmup Iteration   2: 559186.482 ns/op
# Warmup Iteration   3: 138369.541 ns/op
# Warmup Iteration   4: 111585.076 ns/op
# Warmup Iteration   5: 95937.891 ns/op
# Warmup Iteration   6: 75177.564 ns/op
# Warmup Iteration   7: 128137.783 ns/op
# Warmup Iteration   8: 143148.434 ns/op
# Warmup Iteration   9: 129219.032 ns/op
# Warmup Iteration  10: 105694.470 ns/op
Iteration   1: 119041.902 ns/op
Iteration   2: 99486.840 ns/op
Iteration   3: 108806.636 ns/op
Iteration   4: 111351.749 ns/op
Iteration   5: 115208.810 ns/op
Iteration   6: 93867.003 ns/op
Iteration   7: 88467.363 ns/op
Iteration   8: 100964.612 ns/op
Iteration   9: 95992.147 ns/op
Iteration  10: 114515.434 ns/op
Iteration  11: 87731.684 ns/op
Iteration  12: 90673.438 ns/op
Iteration  13: 116818.772 ns/op
Iteration  14: 113972.718 ns/op
Iteration  15: 114603.059 ns/op
Iteration  16: 97235.295 ns/op
Iteration  17: 86806.762 ns/op
Iteration  18: 116310.968 ns/op
Iteration  19: 102950.066 ns/op
Iteration  20: 107300.789 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingSingleLinePost":
  100663.244 ±(99.9%) 5885.841 ns/op [Average]
  (min, avg, max) = (86126.554, 100663.244, 119041.902), stdev = 10462.077
  CI (99.9%): [94777.403, 106549.085] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingSubsectionOfMultiLineJsonPost

# Run progress: 75.60% complete, ETA 01:17:41
# Fork: 1 of 2
# Warmup Iteration   1: 988564.907 ns/op
# Warmup Iteration   2: 471283.343 ns/op
# Warmup Iteration   3: 192950.407 ns/op
# Warmup Iteration   4: 98708.577 ns/op
# Warmup Iteration   5: 88330.771 ns/op
# Warmup Iteration   6: 74714.597 ns/op
# Warmup Iteration   7: 108796.958 ns/op
# Warmup Iteration   8: 86825.714 ns/op
# Warmup Iteration   9: 104012.434 ns/op
# Warmup Iteration  10: 110956.423 ns/op
Iteration   1: 115867.194 ns/op
Iteration   2: 117447.737 ns/op
Iteration   3: 126163.466 ns/op
Iteration   4: 81911.408 ns/op
Iteration   5: 101015.018 ns/op
Iteration   6: 120332.204 ns/op
Iteration   7: 106559.101 ns/op
Iteration   8: 110582.015 ns/op
Iteration   9: 109042.273 ns/op
Iteration  10: 96599.042 ns/op
Iteration  11: 89171.371 ns/op
Iteration  12: 103648.946 ns/op
Iteration  13: 105892.943 ns/op
Iteration  14: 104635.441 ns/op
Iteration  15: 105356.408 ns/op
Iteration  16: 105652.928 ns/op
Iteration  17: 114403.829 ns/op
Iteration  18: 90631.741 ns/op
Iteration  19: 99687.819 ns/op
Iteration  20: 92988.544 ns/op

# Run progress: 75.68% complete, ETA 01:17:32
# Fork: 2 of 2
# Warmup Iteration   1: 899920.819 ns/op
# Warmup Iteration   2: 513786.916 ns/op
# Warmup Iteration   3: 534164.158 ns/op
# Warmup Iteration   4: 183175.900 ns/op
# Warmup Iteration   5: 113813.735 ns/op
# Warmup Iteration   6: 95508.586 ns/op
# Warmup Iteration   7: 92844.578 ns/op
# Warmup Iteration   8: 125918.240 ns/op
# Warmup Iteration   9: 119236.184 ns/op
# Warmup Iteration  10: 113736.989 ns/op
Iteration   1: 112462.773 ns/op
Iteration   2: 88309.091 ns/op
Iteration   3: 104699.576 ns/op
Iteration   4: 91177.431 ns/op
Iteration   5: 115242.760 ns/op
Iteration   6: 118908.153 ns/op
Iteration   7: 113904.665 ns/op
Iteration   8: 104860.830 ns/op
Iteration   9: 98273.648 ns/op
Iteration  10: 111000.958 ns/op
Iteration  11: 101194.097 ns/op
Iteration  12: 93314.977 ns/op
Iteration  13: 110491.129 ns/op
Iteration  14: 102947.642 ns/op
Iteration  15: 83402.568 ns/op
Iteration  16: 108007.086 ns/op
Iteration  17: 96225.226 ns/op
Iteration  18: 99545.956 ns/op
Iteration  19: 85422.310 ns/op
Iteration  20: 108003.991 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingSubsectionOfMultiLineJsonPost":
  103624.607 ±(99.9%) 5986.040 ns/op [Average]
  (min, avg, max) = (81911.408, 103624.607, 126163.466), stdev = 10640.181
  CI (99.9%): [97638.567, 109610.648] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamIsArray

# Run progress: 75.75% complete, ETA 01:17:23
# Fork: 1 of 2
# Warmup Iteration   1: 665000.307 ns/op
# Warmup Iteration   2: 359106.128 ns/op
# Warmup Iteration   3: 212342.085 ns/op
# Warmup Iteration   4: 101399.228 ns/op
# Warmup Iteration   5: 90867.979 ns/op
# Warmup Iteration   6: 97061.784 ns/op
# Warmup Iteration   7: 136026.745 ns/op
# Warmup Iteration   8: 98516.711 ns/op
# Warmup Iteration   9: 91777.343 ns/op
# Warmup Iteration  10: 95899.759 ns/op
Iteration   1: 100726.644 ns/op
Iteration   2: 106935.295 ns/op
Iteration   3: 103657.538 ns/op
Iteration   4: 98588.783 ns/op
Iteration   5: 103558.310 ns/op
Iteration   6: 101332.873 ns/op
Iteration   7: 112557.240 ns/op
Iteration   8: 91546.536 ns/op
Iteration   9: 86508.047 ns/op
Iteration  10: 98597.655 ns/op
Iteration  11: 87293.544 ns/op
Iteration  12: 95752.426 ns/op
Iteration  13: 96020.647 ns/op
Iteration  14: 90016.945 ns/op
Iteration  15: 99729.006 ns/op
Iteration  16: 117514.764 ns/op
Iteration  17: 111464.494 ns/op
Iteration  18: 105120.582 ns/op
Iteration  19: 92935.053 ns/op
Iteration  20: 114278.786 ns/op

# Run progress: 75.83% complete, ETA 01:17:14
# Fork: 2 of 2
# Warmup Iteration   1: 827807.108 ns/op
# Warmup Iteration   2: 410907.828 ns/op
# Warmup Iteration   3: 177680.769 ns/op
# Warmup Iteration   4: 112201.038 ns/op
# Warmup Iteration   5: 85436.919 ns/op
# Warmup Iteration   6: 102231.831 ns/op
# Warmup Iteration   7: 93999.184 ns/op
# Warmup Iteration   8: 98344.399 ns/op
# Warmup Iteration   9: 117347.152 ns/op
# Warmup Iteration  10: 104066.104 ns/op
Iteration   1: 86901.804 ns/op
Iteration   2: 108959.792 ns/op
Iteration   3: 116839.631 ns/op
Iteration   4: 95333.480 ns/op
Iteration   5: 96558.755 ns/op
Iteration   6: 97775.924 ns/op
Iteration   7: 104043.958 ns/op
Iteration   8: 120717.008 ns/op
Iteration   9: 103710.108 ns/op
Iteration  10: 94344.043 ns/op
Iteration  11: 121648.442 ns/op
Iteration  12: 87718.992 ns/op
Iteration  13: 119933.608 ns/op
Iteration  14: 104760.478 ns/op
Iteration  15: 90174.154 ns/op
Iteration  16: 100365.290 ns/op
Iteration  17: 105498.674 ns/op
Iteration  18: 93891.245 ns/op
Iteration  19: 96858.880 ns/op
Iteration  20: 103993.093 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamIsArray":
  101604.063 ±(99.9%) 5477.329 ns/op [Average]
  (min, avg, max) = (86508.047, 101604.063, 121648.442), stdev = 9735.947
  CI (99.9%): [96126.735, 107081.392] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamRegexIsMatching

# Run progress: 75.90% complete, ETA 01:17:06
# Fork: 1 of 2
# Warmup Iteration   1: 632405.541 ns/op
# Warmup Iteration   2: 588596.738 ns/op
# Warmup Iteration   3: 542770.908 ns/op
# Warmup Iteration   4: 204483.905 ns/op
# Warmup Iteration   5: 91261.392 ns/op
# Warmup Iteration   6: 90846.524 ns/op
# Warmup Iteration   7: 136512.733 ns/op
# Warmup Iteration   8: 149005.535 ns/op
# Warmup Iteration   9: 129683.938 ns/op
# Warmup Iteration  10: 106225.032 ns/op
Iteration   1: 107002.324 ns/op
Iteration   2: 123609.735 ns/op
Iteration   3: 116954.622 ns/op
Iteration   4: 119749.595 ns/op
Iteration   5: 113584.331 ns/op
Iteration   6: 106317.617 ns/op
Iteration   7: 123278.948 ns/op
Iteration   8: 91548.621 ns/op
Iteration   9: 94521.628 ns/op
Iteration  10: 111006.875 ns/op
Iteration  11: 100702.003 ns/op
Iteration  12: 114547.799 ns/op
Iteration  13: 102249.565 ns/op
Iteration  14: 115346.523 ns/op
Iteration  15: 96230.274 ns/op
Iteration  16: 93555.969 ns/op
Iteration  17: 102710.244 ns/op
Iteration  18: 95435.008 ns/op
Iteration  19: 98683.950 ns/op
Iteration  20: 101651.774 ns/op

# Run progress: 75.98% complete, ETA 01:16:57
# Fork: 2 of 2
# Warmup Iteration   1: 469314.605 ns/op
# Warmup Iteration   2: 639661.536 ns/op
# Warmup Iteration   3: 432545.927 ns/op
# Warmup Iteration   4: 122814.159 ns/op
# Warmup Iteration   5: 94257.057 ns/op
# Warmup Iteration   6: 74774.801 ns/op
# Warmup Iteration   7: 145714.478 ns/op
# Warmup Iteration   8: 121139.661 ns/op
# Warmup Iteration   9: 109175.375 ns/op
# Warmup Iteration  10: 104006.980 ns/op
Iteration   1: 127761.908 ns/op
Iteration   2: 88238.056 ns/op
Iteration   3: 102913.163 ns/op
Iteration   4: 102844.408 ns/op
Iteration   5: 101621.736 ns/op
Iteration   6: 113660.980 ns/op
Iteration   7: 108522.557 ns/op
Iteration   8: 110497.599 ns/op
Iteration   9: 85141.608 ns/op
Iteration  10: 88722.383 ns/op
Iteration  11: 118810.993 ns/op
Iteration  12: 87802.491 ns/op
Iteration  13: 91068.941 ns/op
Iteration  14: 90682.739 ns/op
Iteration  15: 87817.905 ns/op
Iteration  16: 103060.807 ns/op
Iteration  17: 89247.052 ns/op
Iteration  18: 111152.439 ns/op
Iteration  19: 135668.100 ns/op
Iteration  20: 122796.279 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamRegexIsMatching":
  104917.989 ±(99.9%) 7179.300 ns/op [Average]
  (min, avg, max) = (85141.608, 104917.989, 135668.100), stdev = 12761.199
  CI (99.9%): [97738.689, 112097.289] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamsInDifferentOrder

# Run progress: 76.05% complete, ETA 01:16:48
# Fork: 1 of 2
# Warmup Iteration   1: 1015903.148 ns/op
# Warmup Iteration   2: 406897.165 ns/op
# Warmup Iteration   3: 136966.928 ns/op
# Warmup Iteration   4: 100352.183 ns/op
# Warmup Iteration   5: 92166.389 ns/op
# Warmup Iteration   6: 100051.597 ns/op
# Warmup Iteration   7: 143653.965 ns/op
# Warmup Iteration   8: 122856.371 ns/op
# Warmup Iteration   9: 108688.191 ns/op
# Warmup Iteration  10: 84132.879 ns/op
Iteration   1: 100201.745 ns/op
Iteration   2: 129425.784 ns/op
Iteration   3: 105315.130 ns/op
Iteration   4: 135748.720 ns/op
Iteration   5: 93941.097 ns/op
Iteration   6: 111377.254 ns/op
Iteration   7: 124254.966 ns/op
Iteration   8: 112139.556 ns/op
Iteration   9: 108772.395 ns/op
Iteration  10: 92396.852 ns/op
Iteration  11: 94997.098 ns/op
Iteration  12: 89608.981 ns/op
Iteration  13: 91890.516 ns/op
Iteration  14: 91930.052 ns/op
Iteration  15: 93001.987 ns/op
Iteration  16: 94275.145 ns/op
Iteration  17: 114081.864 ns/op
Iteration  18: 102052.718 ns/op
Iteration  19: 111714.766 ns/op
Iteration  20: 106176.602 ns/op

# Run progress: 76.13% complete, ETA 01:16:39
# Fork: 2 of 2
# Warmup Iteration   1: 732141.233 ns/op
# Warmup Iteration   2: 386666.991 ns/op
# Warmup Iteration   3: 162795.065 ns/op
# Warmup Iteration   4: 86258.098 ns/op
# Warmup Iteration   5: 85769.741 ns/op
# Warmup Iteration   6: 85514.771 ns/op
# Warmup Iteration   7: 127355.719 ns/op
# Warmup Iteration   8: 99427.348 ns/op
# Warmup Iteration   9: 100979.945 ns/op
# Warmup Iteration  10: 113864.746 ns/op
Iteration   1: 111253.289 ns/op
Iteration   2: 96307.300 ns/op
Iteration   3: 95956.871 ns/op
Iteration   4: 111399.904 ns/op
Iteration   5: 97750.476 ns/op
Iteration   6: 93836.868 ns/op
Iteration   7: 114032.637 ns/op
Iteration   8: 90109.202 ns/op
Iteration   9: 102280.420 ns/op
Iteration  10: 84030.523 ns/op
Iteration  11: 87641.588 ns/op
Iteration  12: 126443.936 ns/op
Iteration  13: 90051.768 ns/op
Iteration  14: 94018.110 ns/op
Iteration  15: 116905.860 ns/op
Iteration  16: 99901.007 ns/op
Iteration  17: 102286.808 ns/op
Iteration  18: 91289.877 ns/op
Iteration  19: 121258.175 ns/op
Iteration  20: 114546.252 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamsInDifferentOrder":
  103615.102 ±(99.9%) 7156.764 ns/op [Average]
  (min, avg, max) = (84030.523, 103615.102, 135748.720), stdev = 12721.142
  CI (99.9%): [96458.338, 110771.867] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenRegexifiedUrlBeginsWithRegexSign_ItsProcessedAsRegex

# Run progress: 76.20% complete, ETA 01:16:30
# Fork: 1 of 2
# Warmup Iteration   1: 540732.129 ns/op
# Warmup Iteration   2: 224081.002 ns/op
# Warmup Iteration   3: 142814.518 ns/op
# Warmup Iteration   4: 85225.018 ns/op
# Warmup Iteration   5: 53967.787 ns/op
# Warmup Iteration   6: 47332.756 ns/op
# Warmup Iteration   7: 62824.046 ns/op
# Warmup Iteration   8: 85127.246 ns/op
# Warmup Iteration   9: 67282.783 ns/op
# Warmup Iteration  10: 64719.444 ns/op
Iteration   1: 76524.574 ns/op
Iteration   2: 59345.639 ns/op
Iteration   3: 66748.479 ns/op
Iteration   4: 50754.820 ns/op
Iteration   5: 73097.189 ns/op
Iteration   6: 59117.500 ns/op
Iteration   7: 59947.277 ns/op
Iteration   8: 77928.411 ns/op
Iteration   9: 74916.698 ns/op
Iteration  10: 60943.156 ns/op
Iteration  11: 81528.794 ns/op
Iteration  12: 65189.803 ns/op
Iteration  13: 69327.481 ns/op
Iteration  14: 77629.011 ns/op
Iteration  15: 58924.770 ns/op
Iteration  16: 54693.918 ns/op
Iteration  17: 74438.234 ns/op
Iteration  18: 61254.371 ns/op
Iteration  19: 82849.361 ns/op
Iteration  20: 65529.667 ns/op

# Run progress: 76.28% complete, ETA 01:16:21
# Fork: 2 of 2
# Warmup Iteration   1: 410651.716 ns/op
# Warmup Iteration   2: 244211.862 ns/op
# Warmup Iteration   3: 97104.588 ns/op
# Warmup Iteration   4: 57849.862 ns/op
# Warmup Iteration   5: 53078.265 ns/op
# Warmup Iteration   6: 56037.901 ns/op
# Warmup Iteration   7: 69411.266 ns/op
# Warmup Iteration   8: 63105.156 ns/op
# Warmup Iteration   9: 66777.270 ns/op
# Warmup Iteration  10: 81254.809 ns/op
Iteration   1: 62968.184 ns/op
Iteration   2: 67060.658 ns/op
Iteration   3: 65088.148 ns/op
Iteration   4: 82528.124 ns/op
Iteration   5: 61331.914 ns/op
Iteration   6: 76818.600 ns/op
Iteration   7: 62685.177 ns/op
Iteration   8: 81218.014 ns/op
Iteration   9: 74571.624 ns/op
Iteration  10: 58147.729 ns/op
Iteration  11: 78881.780 ns/op
Iteration  12: 63019.449 ns/op
Iteration  13: 69524.071 ns/op
Iteration  14: 58318.340 ns/op
Iteration  15: 59770.150 ns/op
Iteration  16: 72535.777 ns/op
Iteration  17: 79438.799 ns/op
Iteration  18: 70576.541 ns/op
Iteration  19: 63266.699 ns/op
Iteration  20: 66727.339 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenRegexifiedUrlBeginsWithRegexSign_ItsProcessedAsRegex":
  68129.157 ±(99.9%) 4826.521 ns/op [Average]
  (min, avg, max) = (50754.820, 68129.157, 82849.361), stdev = 8579.137
  CI (99.9%): [63302.636, 72955.678] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenRegexifiedUrlDoesNotBeginWithRegexSign_ItsNotProcessedAsRegex

# Run progress: 76.36% complete, ETA 01:16:13
# Fork: 1 of 2
# Warmup Iteration   1: 619755.642 ns/op
# Warmup Iteration   2: 309552.730 ns/op
# Warmup Iteration   3: 301936.925 ns/op
# Warmup Iteration   4: 87703.272 ns/op
# Warmup Iteration   5: 69018.299 ns/op
# Warmup Iteration   6: 62665.769 ns/op
# Warmup Iteration   7: 56385.172 ns/op
# Warmup Iteration   8: 51786.406 ns/op
# Warmup Iteration   9: 111027.192 ns/op
# Warmup Iteration  10: 71404.940 ns/op
Iteration   1: 71998.777 ns/op
Iteration   2: 79055.213 ns/op
Iteration   3: 73673.136 ns/op
Iteration   4: 57811.739 ns/op
Iteration   5: 60646.018 ns/op
Iteration   6: 63213.654 ns/op
Iteration   7: 66071.829 ns/op
Iteration   8: 56096.179 ns/op
Iteration   9: 72918.582 ns/op
Iteration  10: 86227.706 ns/op
Iteration  11: 76765.899 ns/op
Iteration  12: 61792.666 ns/op
Iteration  13: 72148.263 ns/op
Iteration  14: 62477.765 ns/op
Iteration  15: 75067.724 ns/op
Iteration  16: 69866.848 ns/op
Iteration  17: 58753.224 ns/op
Iteration  18: 73740.397 ns/op
Iteration  19: 75821.976 ns/op
Iteration  20: 66837.928 ns/op

# Run progress: 76.43% complete, ETA 01:16:03
# Fork: 2 of 2
# Warmup Iteration   1: 580547.339 ns/op
# Warmup Iteration   2: 326487.887 ns/op
# Warmup Iteration   3: 184768.266 ns/op
# Warmup Iteration   4: 68997.885 ns/op
# Warmup Iteration   5: 53576.481 ns/op
# Warmup Iteration   6: 41794.083 ns/op
# Warmup Iteration   7: 73645.772 ns/op
# Warmup Iteration   8: 74354.500 ns/op
# Warmup Iteration   9: 64515.382 ns/op
# Warmup Iteration  10: 63648.801 ns/op
Iteration   1: 68878.786 ns/op
Iteration   2: 62482.667 ns/op
Iteration   3: 63558.779 ns/op
Iteration   4: 68731.250 ns/op
Iteration   5: 61624.734 ns/op
Iteration   6: 60809.597 ns/op
Iteration   7: 65011.410 ns/op
Iteration   8: 55969.211 ns/op
Iteration   9: 76677.203 ns/op
Iteration  10: 68178.503 ns/op
Iteration  11: 55667.770 ns/op
Iteration  12: 68662.826 ns/op
Iteration  13: 76137.750 ns/op
Iteration  14: 56176.821 ns/op
Iteration  15: 74555.041 ns/op
Iteration  16: 71056.755 ns/op
Iteration  17: 63542.323 ns/op
Iteration  18: 75582.862 ns/op
Iteration  19: 68634.848 ns/op
Iteration  20: 63240.039 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenRegexifiedUrlDoesNotBeginWithRegexSign_ItsNotProcessedAsRegex":
  67654.117 ±(99.9%) 4157.508 ns/op [Average]
  (min, avg, max) = (55667.770, 67654.117, 86227.706), stdev = 7389.967
  CI (99.9%): [63496.610, 71811.625] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenRootUrlsEquals

# Run progress: 76.51% complete, ETA 01:15:55
# Fork: 1 of 2
# Warmup Iteration   1: 495456.636 ns/op
# Warmup Iteration   2: 310902.882 ns/op
# Warmup Iteration   3: 91283.196 ns/op
# Warmup Iteration   4: 88212.174 ns/op
# Warmup Iteration   5: 66455.683 ns/op
# Warmup Iteration   6: 57461.533 ns/op
# Warmup Iteration   7: 79521.169 ns/op
# Warmup Iteration   8: 115899.275 ns/op
# Warmup Iteration   9: 111299.232 ns/op
# Warmup Iteration  10: 94439.692 ns/op
Iteration   1: 91850.951 ns/op
Iteration   2: 68475.917 ns/op
Iteration   3: 65108.086 ns/op
Iteration   4: 75940.407 ns/op
Iteration   5: 59094.443 ns/op
Iteration   6: 65806.344 ns/op
Iteration   7: 64985.793 ns/op
Iteration   8: 67238.233 ns/op
Iteration   9: 53965.107 ns/op
Iteration  10: 62143.782 ns/op
Iteration  11: 62324.163 ns/op
Iteration  12: 57513.260 ns/op
Iteration  13: 68479.305 ns/op
Iteration  14: 61450.343 ns/op
Iteration  15: 63833.128 ns/op
Iteration  16: 64259.882 ns/op
Iteration  17: 78360.047 ns/op
Iteration  18: 65773.199 ns/op
Iteration  19: 59367.401 ns/op
Iteration  20: 61894.367 ns/op

# Run progress: 76.58% complete, ETA 01:15:45
# Fork: 2 of 2
# Warmup Iteration   1: 346044.798 ns/op
# Warmup Iteration   2: 145608.278 ns/op
# Warmup Iteration   3: 129570.882 ns/op
# Warmup Iteration   4: 56422.149 ns/op
# Warmup Iteration   5: 56629.759 ns/op
# Warmup Iteration   6: 59575.777 ns/op
# Warmup Iteration   7: 50233.925 ns/op
# Warmup Iteration   8: 82332.543 ns/op
# Warmup Iteration   9: 62252.668 ns/op
# Warmup Iteration  10: 61545.784 ns/op
Iteration   1: 59609.549 ns/op
Iteration   2: 57182.098 ns/op
Iteration   3: 58504.826 ns/op
Iteration   4: 56761.664 ns/op
Iteration   5: 56067.917 ns/op
Iteration   6: 59736.215 ns/op
Iteration   7: 55831.076 ns/op
Iteration   8: 85119.233 ns/op
Iteration   9: 57048.191 ns/op
Iteration  10: 84776.978 ns/op
Iteration  11: 62997.444 ns/op
Iteration  12: 75289.430 ns/op
Iteration  13: 47322.665 ns/op
Iteration  14: 81110.697 ns/op
Iteration  15: 66268.961 ns/op
Iteration  16: 70076.506 ns/op
Iteration  17: 62495.367 ns/op
Iteration  18: 59817.502 ns/op
Iteration  19: 71938.081 ns/op
Iteration  20: 65214.478 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenRootUrlsEquals":
  65275.826 ±(99.9%) 5231.227 ns/op [Average]
  (min, avg, max) = (47322.665, 65275.826, 91850.951), stdev = 9298.501
  CI (99.9%): [60044.599, 70507.053] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStaticUrlHasRegexifiedQueryString

# Run progress: 76.66% complete, ETA 01:15:36
# Fork: 1 of 2
# Warmup Iteration   1: 2586929.000 ns/op
# Warmup Iteration   2: 1413051.486 ns/op
# Warmup Iteration   3: 579608.817 ns/op
# Warmup Iteration   4: 279962.018 ns/op
# Warmup Iteration   5: 232436.102 ns/op
# Warmup Iteration   6: 237555.064 ns/op
# Warmup Iteration   7: 344135.063 ns/op
# Warmup Iteration   8: 538484.653 ns/op
# Warmup Iteration   9: 285338.070 ns/op
# Warmup Iteration  10: 291792.073 ns/op
Iteration   1: 258383.661 ns/op
Iteration   2: 339702.327 ns/op
Iteration   3: 279734.167 ns/op
Iteration   4: 254551.508 ns/op
Iteration   5: 311724.424 ns/op
Iteration   6: 281650.171 ns/op
Iteration   7: 328564.367 ns/op
Iteration   8: 249719.436 ns/op
Iteration   9: 281573.060 ns/op
Iteration  10: 316546.872 ns/op
Iteration  11: 372777.984 ns/op
Iteration  12: 369025.114 ns/op
Iteration  13: 272655.579 ns/op
Iteration  14: 373898.696 ns/op
Iteration  15: 358498.314 ns/op
Iteration  16: 319744.524 ns/op
Iteration  17: 323895.286 ns/op
Iteration  18: 309655.220 ns/op
Iteration  19: 258793.549 ns/op
Iteration  20: 256647.765 ns/op

# Run progress: 76.73% complete, ETA 01:15:27
# Fork: 2 of 2
# Warmup Iteration   1: 3182867.854 ns/op
# Warmup Iteration   2: 849573.747 ns/op
# Warmup Iteration   3: 408257.930 ns/op
# Warmup Iteration   4: 238956.417 ns/op
# Warmup Iteration   5: 382436.806 ns/op
# Warmup Iteration   6: 371746.946 ns/op
# Warmup Iteration   7: 370194.374 ns/op
# Warmup Iteration   8: 445184.736 ns/op
# Warmup Iteration   9: 304373.425 ns/op
# Warmup Iteration  10: 266802.466 ns/op
Iteration   1: 265420.580 ns/op
Iteration   2: 343346.445 ns/op
Iteration   3: 294370.049 ns/op
Iteration   4: 333861.520 ns/op
Iteration   5: 343170.720 ns/op
Iteration   6: 297230.212 ns/op
Iteration   7: 341401.138 ns/op
Iteration   8: 323709.581 ns/op
Iteration   9: 283656.566 ns/op
Iteration  10: 244786.348 ns/op
Iteration  11: 307542.087 ns/op
Iteration  12: 251807.532 ns/op
Iteration  13: 312275.053 ns/op
Iteration  14: 263754.693 ns/op
Iteration  15: 258317.951 ns/op
Iteration  16: 307566.443 ns/op
Iteration  17: 300869.298 ns/op
Iteration  18: 349613.933 ns/op
Iteration  19: 305531.261 ns/op
Iteration  20: 294214.229 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStaticUrlHasRegexifiedQueryString":
  303504.692 ±(99.9%) 20920.388 ns/op [Average]
  (min, avg, max) = (244786.348, 303504.692, 373898.696), stdev = 37185.971
  CI (99.9%): [282584.304, 324425.080] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedRootUrlStartsWithRegex_ButSubmittedUrlRoot

# Run progress: 76.81% complete, ETA 01:15:18
# Fork: 1 of 2
# Warmup Iteration   1: 549996.693 ns/op
# Warmup Iteration   2: 326373.656 ns/op
# Warmup Iteration   3: 261729.584 ns/op
# Warmup Iteration   4: 83477.961 ns/op
# Warmup Iteration   5: 81824.166 ns/op
# Warmup Iteration   6: 51069.401 ns/op
# Warmup Iteration   7: 44409.773 ns/op
# Warmup Iteration   8: 52197.721 ns/op
# Warmup Iteration   9: 84454.643 ns/op
# Warmup Iteration  10: 73002.894 ns/op
Iteration   1: 68784.855 ns/op
Iteration   2: 70896.543 ns/op
Iteration   3: 57506.713 ns/op
Iteration   4: 60322.835 ns/op
Iteration   5: 65967.651 ns/op
Iteration   6: 59194.811 ns/op
Iteration   7: 82820.764 ns/op
Iteration   8: 79690.919 ns/op
Iteration   9: 47168.796 ns/op
Iteration  10: 66846.234 ns/op
Iteration  11: 88439.578 ns/op
Iteration  12: 64675.654 ns/op
Iteration  13: 75361.442 ns/op
Iteration  14: 57604.283 ns/op
Iteration  15: 69839.861 ns/op
Iteration  16: 62981.704 ns/op
Iteration  17: 62716.215 ns/op
Iteration  18: 83686.586 ns/op
Iteration  19: 61092.284 ns/op
Iteration  20: 74988.794 ns/op

# Run progress: 76.88% complete, ETA 01:15:08
# Fork: 2 of 2
# Warmup Iteration   1: 613997.845 ns/op
# Warmup Iteration   2: 306960.632 ns/op
# Warmup Iteration   3: 193874.469 ns/op
# Warmup Iteration   4: 59406.117 ns/op
# Warmup Iteration   5: 40025.083 ns/op
# Warmup Iteration   6: 94566.131 ns/op
# Warmup Iteration   7: 84769.354 ns/op
# Warmup Iteration   8: 89733.155 ns/op
# Warmup Iteration   9: 67022.879 ns/op
# Warmup Iteration  10: 63522.740 ns/op
Iteration   1: 64901.177 ns/op
Iteration   2: 82223.140 ns/op
Iteration   3: 69948.136 ns/op
Iteration   4: 71530.632 ns/op
Iteration   5: 60942.666 ns/op
Iteration   6: 71070.973 ns/op
Iteration   7: 57460.818 ns/op
Iteration   8: 67984.306 ns/op
Iteration   9: 65263.682 ns/op
Iteration  10: 73562.553 ns/op
Iteration  11: 55905.013 ns/op
Iteration  12: 56406.667 ns/op
Iteration  13: 53993.749 ns/op
Iteration  14: 72695.932 ns/op
Iteration  15: 71340.646 ns/op
Iteration  16: 68820.841 ns/op
Iteration  17: 71927.955 ns/op
Iteration  18: 58490.148 ns/op
Iteration  19: 49828.086 ns/op
Iteration  20: 73540.144 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedRootUrlStartsWithRegex_ButSubmittedUrlRoot":
  66960.595 ±(99.9%) 5262.718 ns/op [Average]
  (min, avg, max) = (47168.796, 66960.595, 88439.578), stdev = 9354.477
  CI (99.9%): [61697.877, 72223.313] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlHasOptionalTrailingSlash_ButNoSlashSubmitted

# Run progress: 76.96% complete, ETA 01:15:00
# Fork: 1 of 2
# Warmup Iteration   1: 581350.561 ns/op
# Warmup Iteration   2: 304408.173 ns/op
# Warmup Iteration   3: 144110.922 ns/op
# Warmup Iteration   4: 65089.186 ns/op
# Warmup Iteration   5: 61516.540 ns/op
# Warmup Iteration   6: 50694.799 ns/op
# Warmup Iteration   7: 59375.799 ns/op
# Warmup Iteration   8: 61815.187 ns/op
# Warmup Iteration   9: 68819.818 ns/op
# Warmup Iteration  10: 55037.639 ns/op
Iteration   1: 73982.198 ns/op
Iteration   2: 71926.899 ns/op
Iteration   3: 77014.400 ns/op
Iteration   4: 67102.150 ns/op
Iteration   5: 71168.618 ns/op
Iteration   6: 59455.624 ns/op
Iteration   7: 74148.535 ns/op
Iteration   8: 68769.069 ns/op
Iteration   9: 71322.038 ns/op
Iteration  10: 67759.224 ns/op
Iteration  11: 64237.323 ns/op
Iteration  12: 81335.971 ns/op
Iteration  13: 73132.510 ns/op
Iteration  14: 75500.717 ns/op
Iteration  15: 69984.964 ns/op
Iteration  16: 76981.917 ns/op
Iteration  17: 66299.598 ns/op
Iteration  18: 67702.997 ns/op
Iteration  19: 71837.943 ns/op
Iteration  20: 69201.407 ns/op

# Run progress: 77.03% complete, ETA 01:14:50
# Fork: 2 of 2
# Warmup Iteration   1: 441917.558 ns/op
# Warmup Iteration   2: 181339.773 ns/op
# Warmup Iteration   3: 71636.214 ns/op
# Warmup Iteration   4: 68288.193 ns/op
# Warmup Iteration   5: 54366.227 ns/op
# Warmup Iteration   6: 69919.176 ns/op
# Warmup Iteration   7: 93345.808 ns/op
# Warmup Iteration   8: 87641.874 ns/op
# Warmup Iteration   9: 60995.706 ns/op
# Warmup Iteration  10: 64463.073 ns/op
Iteration   1: 62970.944 ns/op
Iteration   2: 65514.387 ns/op
Iteration   3: 72791.885 ns/op
Iteration   4: 74452.489 ns/op
Iteration   5: 85559.223 ns/op
Iteration   6: 76713.063 ns/op
Iteration   7: 67565.084 ns/op
Iteration   8: 69531.294 ns/op
Iteration   9: 70197.449 ns/op
Iteration  10: 67108.439 ns/op
Iteration  11: 66410.768 ns/op
Iteration  12: 76156.876 ns/op
Iteration  13: 68060.888 ns/op
Iteration  14: 66570.291 ns/op
Iteration  15: 73340.558 ns/op
Iteration  16: 58941.839 ns/op
Iteration  17: 77405.820 ns/op
Iteration  18: 70178.201 ns/op
Iteration  19: 73848.911 ns/op
Iteration  20: 76635.478 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlHasOptionalTrailingSlash_ButNoSlashSubmitted":
  70970.450 ±(99.9%) 3072.701 ns/op [Average]
  (min, avg, max) = (58941.839, 70970.450, 85559.223), stdev = 5461.723
  CI (99.9%): [67897.749, 74043.151] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlHasOptionalTrailingSlash_ButSlashSubmitted

# Run progress: 77.11% complete, ETA 01:14:40
# Fork: 1 of 2
# Warmup Iteration   1: 442053.686 ns/op
# Warmup Iteration   2: 337684.531 ns/op
# Warmup Iteration   3: 122433.113 ns/op
# Warmup Iteration   4: 79167.403 ns/op
# Warmup Iteration   5: 64434.817 ns/op
# Warmup Iteration   6: 47721.784 ns/op
# Warmup Iteration   7: 53598.903 ns/op
# Warmup Iteration   8: 63103.297 ns/op
# Warmup Iteration   9: 64381.402 ns/op
# Warmup Iteration  10: 78471.920 ns/op
Iteration   1: 75187.694 ns/op
Iteration   2: 60403.396 ns/op
Iteration   3: 73591.470 ns/op
Iteration   4: 67915.426 ns/op
Iteration   5: 74288.549 ns/op
Iteration   6: 59573.462 ns/op
Iteration   7: 74881.040 ns/op
Iteration   8: 72516.070 ns/op
Iteration   9: 73079.711 ns/op
Iteration  10: 58700.339 ns/op
Iteration  11: 76386.050 ns/op
Iteration  12: 63542.114 ns/op
Iteration  13: 71343.854 ns/op
Iteration  14: 57351.516 ns/op
Iteration  15: 66029.379 ns/op
Iteration  16: 64852.625 ns/op
Iteration  17: 67292.506 ns/op
Iteration  18: 76875.602 ns/op
Iteration  19: 72751.285 ns/op
Iteration  20: 56387.375 ns/op

# Run progress: 77.18% complete, ETA 01:14:31
# Fork: 2 of 2
# Warmup Iteration   1: 359451.995 ns/op
# Warmup Iteration   2: 96496.103 ns/op
# Warmup Iteration   3: 64030.464 ns/op
# Warmup Iteration   4: 56192.441 ns/op
# Warmup Iteration   5: 59852.923 ns/op
# Warmup Iteration   6: 72060.116 ns/op
# Warmup Iteration   7: 106844.096 ns/op
# Warmup Iteration   8: 58454.797 ns/op
# Warmup Iteration   9: 72848.024 ns/op
# Warmup Iteration  10: 62992.356 ns/op
Iteration   1: 55673.999 ns/op
Iteration   2: 62652.098 ns/op
Iteration   3: 52585.883 ns/op
Iteration   4: 74463.034 ns/op
Iteration   5: 58066.153 ns/op
Iteration   6: 71695.199 ns/op
Iteration   7: 73376.900 ns/op
Iteration   8: 68721.943 ns/op
Iteration   9: 79401.999 ns/op
Iteration  10: 75366.583 ns/op
Iteration  11: 61150.239 ns/op
Iteration  12: 87190.198 ns/op
Iteration  13: 80819.484 ns/op
Iteration  14: 70077.813 ns/op
Iteration  15: 63703.215 ns/op
Iteration  16: 62878.093 ns/op
Iteration  17: 59783.372 ns/op
Iteration  18: 65091.704 ns/op
Iteration  19: 67475.819 ns/op
Iteration  20: 71493.125 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlHasOptionalTrailingSlash_ButSlashSubmitted":
  68115.408 ±(99.9%) 4412.273 ns/op [Average]
  (min, avg, max) = (52585.883, 68115.408, 87190.198), stdev = 7842.811
  CI (99.9%): [63703.135, 72527.680] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlRegexAnythingAround_AndUrlsEqual

# Run progress: 77.26% complete, ETA 01:14:22
# Fork: 1 of 2
# Warmup Iteration   1: 624593.257 ns/op
# Warmup Iteration   2: 255608.194 ns/op
# Warmup Iteration   3: 196346.572 ns/op
# Warmup Iteration   4: 88691.338 ns/op
# Warmup Iteration   5: 54428.030 ns/op
# Warmup Iteration   6: 55873.960 ns/op
# Warmup Iteration   7: 57477.360 ns/op
# Warmup Iteration   8: 60889.265 ns/op
# Warmup Iteration   9: 68984.208 ns/op
# Warmup Iteration  10: 67133.928 ns/op
Iteration   1: 74067.020 ns/op
Iteration   2: 60734.597 ns/op
Iteration   3: 78333.222 ns/op
Iteration   4: 71322.721 ns/op
Iteration   5: 75688.964 ns/op
Iteration   6: 60093.700 ns/op
Iteration   7: 62815.912 ns/op
Iteration   8: 55280.779 ns/op
Iteration   9: 84629.151 ns/op
Iteration  10: 71928.886 ns/op
Iteration  11: 66110.264 ns/op
Iteration  12: 57699.718 ns/op
Iteration  13: 65021.733 ns/op
Iteration  14: 84667.984 ns/op
Iteration  15: 56348.100 ns/op
Iteration  16: 72289.145 ns/op
Iteration  17: 71995.462 ns/op
Iteration  18: 74754.143 ns/op
Iteration  19: 60929.847 ns/op
Iteration  20: 74511.369 ns/op

# Run progress: 77.33% complete, ETA 01:14:12
# Fork: 2 of 2
# Warmup Iteration   1: 388793.991 ns/op
# Warmup Iteration   2: 248764.721 ns/op
# Warmup Iteration   3: 91421.069 ns/op
# Warmup Iteration   4: 63363.842 ns/op
# Warmup Iteration   5: 50460.544 ns/op
# Warmup Iteration   6: 63136.027 ns/op
# Warmup Iteration   7: 68127.410 ns/op
# Warmup Iteration   8: 65871.133 ns/op
# Warmup Iteration   9: 62226.400 ns/op
# Warmup Iteration  10: 79588.414 ns/op
Iteration   1: 73507.407 ns/op
Iteration   2: 67472.046 ns/op
Iteration   3: 58311.264 ns/op
Iteration   4: 65091.991 ns/op
Iteration   5: 70578.213 ns/op
Iteration   6: 57996.466 ns/op
Iteration   7: 62853.705 ns/op
Iteration   8: 70037.801 ns/op
Iteration   9: 78222.064 ns/op
Iteration  10: 71023.945 ns/op
Iteration  11: 73829.839 ns/op
Iteration  12: 60607.065 ns/op
Iteration  13: 71450.761 ns/op
Iteration  14: 74270.259 ns/op
Iteration  15: 60414.493 ns/op
Iteration  16: 63531.694 ns/op
Iteration  17: 68679.190 ns/op
Iteration  18: 64471.431 ns/op
Iteration  19: 81608.783 ns/op
Iteration  20: 72728.479 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlRegexAnythingAround_AndUrlsEqual":
  68647.740 ±(99.9%) 4338.317 ns/op [Average]
  (min, avg, max) = (55280.779, 68647.740, 84667.984), stdev = 7711.355
  CI (99.9%): [64309.423, 72986.058] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlRegexBeginsWith

# Run progress: 77.41% complete, ETA 01:14:03
# Fork: 1 of 2
# Warmup Iteration   1: 648648.858 ns/op
# Warmup Iteration   2: 385575.494 ns/op
# Warmup Iteration   3: 360384.903 ns/op
# Warmup Iteration   4: 74465.411 ns/op
# Warmup Iteration   5: 49576.622 ns/op
# Warmup Iteration   6: 70646.981 ns/op
# Warmup Iteration   7: 90471.410 ns/op
# Warmup Iteration   8: 71408.606 ns/op
# Warmup Iteration   9: 63026.544 ns/op
# Warmup Iteration  10: 64907.031 ns/op
Iteration   1: 68891.017 ns/op
Iteration   2: 66470.699 ns/op
Iteration   3: 63412.986 ns/op
Iteration   4: 59680.887 ns/op
Iteration   5: 62295.878 ns/op
Iteration   6: 61068.008 ns/op
Iteration   7: 70414.364 ns/op
Iteration   8: 68967.425 ns/op
Iteration   9: 65369.656 ns/op
Iteration  10: 83506.301 ns/op
Iteration  11: 68115.592 ns/op
Iteration  12: 70549.466 ns/op
Iteration  13: 62264.679 ns/op
Iteration  14: 70018.225 ns/op
Iteration  15: 74373.311 ns/op
Iteration  16: 75854.558 ns/op
Iteration  17: 66332.117 ns/op
Iteration  18: 73055.884 ns/op
Iteration  19: 66142.506 ns/op
Iteration  20: 64787.184 ns/op

# Run progress: 77.48% complete, ETA 01:13:53
# Fork: 2 of 2
# Warmup Iteration   1: 430259.161 ns/op
# Warmup Iteration   2: 241302.550 ns/op
# Warmup Iteration   3: 179932.754 ns/op
# Warmup Iteration   4: 77526.252 ns/op
# Warmup Iteration   5: 63216.135 ns/op
# Warmup Iteration   6: 63373.609 ns/op
# Warmup Iteration   7: 65186.669 ns/op
# Warmup Iteration   8: 90041.720 ns/op
# Warmup Iteration   9: 68949.066 ns/op
# Warmup Iteration  10: 80584.226 ns/op
Iteration   1: 75661.775 ns/op
Iteration   2: 60840.479 ns/op
Iteration   3: 69824.345 ns/op
Iteration   4: 62733.761 ns/op
Iteration   5: 67090.208 ns/op
Iteration   6: 73375.709 ns/op
Iteration   7: 73059.797 ns/op
Iteration   8: 65905.613 ns/op
Iteration   9: 61507.761 ns/op
Iteration  10: 71591.907 ns/op
Iteration  11: 61182.224 ns/op
Iteration  12: 56758.110 ns/op
Iteration  13: 82114.424 ns/op
Iteration  14: 58498.793 ns/op
Iteration  15: 74398.132 ns/op
Iteration  16: 63654.204 ns/op
Iteration  17: 83951.083 ns/op
Iteration  18: 66436.432 ns/op
Iteration  19: 59340.529 ns/op
Iteration  20: 63647.493 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlRegexBeginsWith":
  67828.588 ±(99.9%) 3761.688 ns/op [Average]
  (min, avg, max) = (56758.110, 67828.588, 83951.083), stdev = 6686.398
  CI (99.9%): [64066.900, 71590.276] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlRegexEndsWith_AndSubmittedUrlHasExtraBeggining

# Run progress: 77.56% complete, ETA 01:13:43
# Fork: 1 of 2
# Warmup Iteration   1: 291896.471 ns/op
# Warmup Iteration   2: 211773.314 ns/op
# Warmup Iteration   3: 95862.159 ns/op
# Warmup Iteration   4: 66375.844 ns/op
# Warmup Iteration   5: 57015.033 ns/op
# Warmup Iteration   6: 60918.961 ns/op
# Warmup Iteration   7: 93169.894 ns/op
# Warmup Iteration   8: 108911.998 ns/op
# Warmup Iteration   9: 72067.342 ns/op
# Warmup Iteration  10: 70662.936 ns/op
Iteration   1: 68537.685 ns/op
Iteration   2: 72078.060 ns/op
Iteration   3: 69016.528 ns/op
Iteration   4: 60632.526 ns/op
Iteration   5: 72944.456 ns/op
Iteration   6: 62018.145 ns/op
Iteration   7: 61047.471 ns/op
Iteration   8: 64233.798 ns/op
Iteration   9: 60655.298 ns/op
Iteration  10: 63414.007 ns/op
Iteration  11: 60116.036 ns/op
Iteration  12: 57953.753 ns/op
Iteration  13: 80338.266 ns/op
Iteration  14: 78352.038 ns/op
Iteration  15: 68039.070 ns/op
Iteration  16: 67121.086 ns/op
Iteration  17: 76175.945 ns/op
Iteration  18: 66894.088 ns/op
Iteration  19: 59806.172 ns/op
Iteration  20: 70495.198 ns/op

# Run progress: 77.64% complete, ETA 01:13:33
# Fork: 2 of 2
# Warmup Iteration   1: 598228.658 ns/op
# Warmup Iteration   2: 293414.282 ns/op
# Warmup Iteration   3: 135681.205 ns/op
# Warmup Iteration   4: 51790.644 ns/op
# Warmup Iteration   5: 66196.867 ns/op
# Warmup Iteration   6: 81160.318 ns/op
# Warmup Iteration   7: 65330.969 ns/op
# Warmup Iteration   8: 52776.538 ns/op
# Warmup Iteration   9: 62531.648 ns/op
# Warmup Iteration  10: 69040.176 ns/op
Iteration   1: 61263.961 ns/op
Iteration   2: 80012.110 ns/op
Iteration   3: 65239.630 ns/op
Iteration   4: 63715.338 ns/op
Iteration   5: 60800.935 ns/op
Iteration   6: 66548.459 ns/op
Iteration   7: 71785.834 ns/op
Iteration   8: 68108.173 ns/op
Iteration   9: 65586.639 ns/op
Iteration  10: 57303.494 ns/op
Iteration  11: 65606.789 ns/op
Iteration  12: 63262.180 ns/op
Iteration  13: 75240.272 ns/op
Iteration  14: 61117.514 ns/op
Iteration  15: 64915.985 ns/op
Iteration  16: 53212.604 ns/op
Iteration  17: 70651.539 ns/op
Iteration  18: 73049.699 ns/op
Iteration  19: 69473.975 ns/op
Iteration  20: 79817.149 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlRegexEndsWith_AndSubmittedUrlHasExtraBeggining":
  66914.548 ±(99.9%) 3738.494 ns/op [Average]
  (min, avg, max) = (53212.604, 66914.548, 80338.266), stdev = 6645.169
  CI (99.9%): [63176.054, 70653.041] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlRegexExact_AndUrlsEqual

# Run progress: 77.71% complete, ETA 01:13:23
# Fork: 1 of 2
# Warmup Iteration   1: 601579.186 ns/op
# Warmup Iteration   2: 136346.539 ns/op
# Warmup Iteration   3: 101923.602 ns/op
# Warmup Iteration   4: 51809.526 ns/op
# Warmup Iteration   5: 52101.538 ns/op
# Warmup Iteration   6: 51672.949 ns/op
# Warmup Iteration   7: 81851.510 ns/op
# Warmup Iteration   8: 64989.616 ns/op
# Warmup Iteration   9: 54622.908 ns/op
# Warmup Iteration  10: 64444.464 ns/op
Iteration   1: 80924.048 ns/op
Iteration   2: 73051.897 ns/op
Iteration   3: 73717.953 ns/op
Iteration   4: 57809.013 ns/op
Iteration   5: 66489.059 ns/op
Iteration   6: 58088.136 ns/op
Iteration   7: 83113.776 ns/op
Iteration   8: 70984.048 ns/op
Iteration   9: 64700.088 ns/op
Iteration  10: 63744.910 ns/op
Iteration  11: 73779.213 ns/op
Iteration  12: 55446.700 ns/op
Iteration  13: 69280.556 ns/op
Iteration  14: 84338.127 ns/op
Iteration  15: 54406.791 ns/op
Iteration  16: 79772.042 ns/op
Iteration  17: 71098.980 ns/op
Iteration  18: 70550.749 ns/op
Iteration  19: 60587.719 ns/op
Iteration  20: 72126.141 ns/op

# Run progress: 77.79% complete, ETA 01:13:14
# Fork: 2 of 2
# Warmup Iteration   1: 605178.363 ns/op
# Warmup Iteration   2: 136990.822 ns/op
# Warmup Iteration   3: 72420.661 ns/op
# Warmup Iteration   4: 69492.091 ns/op
# Warmup Iteration   5: 52148.555 ns/op
# Warmup Iteration   6: 51026.187 ns/op
# Warmup Iteration   7: 70995.470 ns/op
# Warmup Iteration   8: 53442.239 ns/op
# Warmup Iteration   9: 75291.129 ns/op
# Warmup Iteration  10: 64886.358 ns/op
Iteration   1: 66992.696 ns/op
Iteration   2: 65571.297 ns/op
Iteration   3: 71831.343 ns/op
Iteration   4: 58208.217 ns/op
Iteration   5: 104365.878 ns/op
Iteration   6: 67080.003 ns/op
Iteration   7: 63613.753 ns/op
Iteration   8: 65871.545 ns/op
Iteration   9: 59800.092 ns/op
Iteration  10: 60948.490 ns/op
Iteration  11: 76870.971 ns/op
Iteration  12: 53858.669 ns/op
Iteration  13: 76943.964 ns/op
Iteration  14: 62975.155 ns/op
Iteration  15: 58398.503 ns/op
Iteration  16: 64556.829 ns/op
Iteration  17: 57485.468 ns/op
Iteration  18: 77284.695 ns/op
Iteration  19: 70427.458 ns/op
Iteration  20: 55265.705 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlRegexExact_AndUrlsEqual":
  68059.017 ±(99.9%) 5698.344 ns/op [Average]
  (min, avg, max) = (53858.669, 68059.017, 104365.878), stdev = 10128.802
  CI (99.9%): [62360.673, 73757.361] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlRegexGroups_AndUrlsEqual

# Run progress: 77.86% complete, ETA 01:13:04
# Fork: 1 of 2
# Warmup Iteration   1: 492220.644 ns/op
# Warmup Iteration   2: 153783.621 ns/op
# Warmup Iteration   3: 237741.124 ns/op
# Warmup Iteration   4: 64967.245 ns/op
# Warmup Iteration   5: 56437.665 ns/op
# Warmup Iteration   6: 52576.722 ns/op
# Warmup Iteration   7: 56249.650 ns/op
# Warmup Iteration   8: 71091.063 ns/op
# Warmup Iteration   9: 73885.908 ns/op
# Warmup Iteration  10: 81290.236 ns/op
Iteration   1: 73988.698 ns/op
Iteration   2: 75480.831 ns/op
Iteration   3: 71752.586 ns/op
Iteration   4: 75795.542 ns/op
Iteration   5: 76895.387 ns/op
Iteration   6: 70954.166 ns/op
Iteration   7: 55466.987 ns/op
Iteration   8: 71884.900 ns/op
Iteration   9: 66686.149 ns/op
Iteration  10: 69698.765 ns/op
Iteration  11: 65181.709 ns/op
Iteration  12: 62633.115 ns/op
Iteration  13: 60773.843 ns/op
Iteration  14: 62997.167 ns/op
Iteration  15: 75895.631 ns/op
Iteration  16: 61285.985 ns/op
Iteration  17: 74426.302 ns/op
Iteration  18: 70783.334 ns/op
Iteration  19: 59330.093 ns/op
Iteration  20: 65426.932 ns/op

# Run progress: 77.94% complete, ETA 01:12:54
# Fork: 2 of 2
# Warmup Iteration   1: 486051.826 ns/op
# Warmup Iteration   2: 311945.574 ns/op
# Warmup Iteration   3: 191208.161 ns/op
# Warmup Iteration   4: 70858.632 ns/op
# Warmup Iteration   5: 50959.562 ns/op
# Warmup Iteration   6: 44354.830 ns/op
# Warmup Iteration   7: 76226.203 ns/op
# Warmup Iteration   8: 59991.972 ns/op
# Warmup Iteration   9: 67813.636 ns/op
# Warmup Iteration  10: 63489.882 ns/op
Iteration   1: 77183.837 ns/op
Iteration   2: 60228.015 ns/op
Iteration   3: 78528.349 ns/op
Iteration   4: 75372.100 ns/op
Iteration   5: 68607.687 ns/op
Iteration   6: 61971.911 ns/op
Iteration   7: 68593.410 ns/op
Iteration   8: 72170.673 ns/op
Iteration   9: 72281.411 ns/op
Iteration  10: 59557.191 ns/op
Iteration  11: 76073.367 ns/op
Iteration  12: 73318.981 ns/op
Iteration  13: 64550.258 ns/op
Iteration  14: 62287.480 ns/op
Iteration  15: 78794.089 ns/op
Iteration  16: 67849.535 ns/op
Iteration  17: 63424.543 ns/op
Iteration  18: 58617.732 ns/op
Iteration  19: 76370.693 ns/op
Iteration  20: 75503.616 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlRegexGroups_AndUrlsEqual":
  68965.575 ±(99.9%) 3703.568 ns/op [Average]
  (min, avg, max) = (55466.987, 68965.575, 78794.089), stdev = 6583.089
  CI (99.9%): [65262.007, 72669.143] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenThereLargeSetupOfStubbedProperties

# Run progress: 78.01% complete, ETA 01:12:44
# Fork: 1 of 2
# Warmup Iteration   1: 1447330.483 ns/op
# Warmup Iteration   2: 925352.805 ns/op
# Warmup Iteration   3: 686815.894 ns/op
# Warmup Iteration   4: 275231.007 ns/op
# Warmup Iteration   5: 197673.818 ns/op
# Warmup Iteration   6: 171071.066 ns/op
# Warmup Iteration   7: 165252.268 ns/op
# Warmup Iteration   8: 147612.949 ns/op
# Warmup Iteration   9: 166963.866 ns/op
# Warmup Iteration  10: 202281.682 ns/op
Iteration   1: 153864.116 ns/op
Iteration   2: 185526.651 ns/op
Iteration   3: 193457.456 ns/op
Iteration   4: 192929.992 ns/op
Iteration   5: 176373.609 ns/op
Iteration   6: 177246.026 ns/op
Iteration   7: 163391.733 ns/op
Iteration   8: 155864.833 ns/op
Iteration   9: 157755.441 ns/op
Iteration  10: 203481.108 ns/op
Iteration  11: 199442.570 ns/op
Iteration  12: 164515.704 ns/op
Iteration  13: 174914.664 ns/op
Iteration  14: 186185.614 ns/op
Iteration  15: 161246.242 ns/op
Iteration  16: 185352.192 ns/op
Iteration  17: 170073.087 ns/op
Iteration  18: 177284.389 ns/op
Iteration  19: 191385.950 ns/op
Iteration  20: 198240.651 ns/op

# Run progress: 78.09% complete, ETA 01:12:34
# Fork: 2 of 2
# Warmup Iteration   1: 1766680.588 ns/op
# Warmup Iteration   2: 866079.818 ns/op
# Warmup Iteration   3: 335699.475 ns/op
# Warmup Iteration   4: 204665.044 ns/op
# Warmup Iteration   5: 171989.797 ns/op
# Warmup Iteration   6: 172713.383 ns/op
# Warmup Iteration   7: 214086.977 ns/op
# Warmup Iteration   8: 150351.152 ns/op
# Warmup Iteration   9: 160407.768 ns/op
# Warmup Iteration  10: 166073.475 ns/op
Iteration   1: 175984.859 ns/op
Iteration   2: 201466.527 ns/op
Iteration   3: 189478.570 ns/op
Iteration   4: 164681.312 ns/op
Iteration   5: 175876.311 ns/op
Iteration   6: 165850.908 ns/op
Iteration   7: 196681.442 ns/op
Iteration   8: 202138.487 ns/op
Iteration   9: 182150.769 ns/op
Iteration  10: 164171.964 ns/op
Iteration  11: 163830.287 ns/op
Iteration  12: 157501.456 ns/op
Iteration  13: 162107.224 ns/op
Iteration  14: 182889.988 ns/op
Iteration  15: 158882.492 ns/op
Iteration  16: 161065.019 ns/op
Iteration  17: 170866.096 ns/op
Iteration  18: 172007.445 ns/op
Iteration  19: 174882.525 ns/op
Iteration  20: 186297.273 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenThereLargeSetupOfStubbedProperties":
  176933.575 ±(99.9%) 8255.330 ns/op [Average]
  (min, avg, max) = (153864.116, 176933.575, 203481.108), stdev = 14673.842
  CI (99.9%): [168678.245, 185188.905] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenThereLargeSetupOfStubbedProperties_ButNotAllHeadersSetToAssert

# Run progress: 78.16% complete, ETA 01:12:24
# Fork: 1 of 2
# Warmup Iteration   1: 9608368.629 ns/op
# Warmup Iteration   2: 3474084.115 ns/op
# Warmup Iteration   3: 2441397.924 ns/op
# Warmup Iteration   4: 2230844.296 ns/op
# Warmup Iteration   5: 1978575.061 ns/op
# Warmup Iteration   6: 1699135.358 ns/op
# Warmup Iteration   7: 1608163.170 ns/op
# Warmup Iteration   8: 1425790.761 ns/op
# Warmup Iteration   9: 1317030.721 ns/op
# Warmup Iteration  10: 1014394.342 ns/op
Iteration   1: 987556.716 ns/op
Iteration   2: 1052347.118 ns/op
Iteration   3: 1047195.356 ns/op
Iteration   4: 1027984.338 ns/op
Iteration   5: 1047767.581 ns/op
Iteration   6: 1074135.601 ns/op
Iteration   7: 1089518.686 ns/op
Iteration   8: 1135562.814 ns/op
Iteration   9: 1186797.598 ns/op
Iteration  10: 1016211.552 ns/op
Iteration  11: 953677.115 ns/op
Iteration  12: 854610.495 ns/op
Iteration  13: 839356.457 ns/op
Iteration  14: 825469.590 ns/op
Iteration  15: 816895.142 ns/op
Iteration  16: 874888.814 ns/op
Iteration  17: 919553.162 ns/op
Iteration  18: 884682.656 ns/op
Iteration  19: 839155.904 ns/op
Iteration  20: 814004.836 ns/op

# Run progress: 78.24% complete, ETA 01:12:13
# Fork: 2 of 2
# Warmup Iteration   1: 10445857.646 ns/op
# Warmup Iteration   2: 2997897.934 ns/op
# Warmup Iteration   3: 2309286.638 ns/op
# Warmup Iteration   4: 2217857.049 ns/op
# Warmup Iteration   5: 1726896.924 ns/op
# Warmup Iteration   6: 1576509.849 ns/op
# Warmup Iteration   7: 1513127.312 ns/op
# Warmup Iteration   8: 1430320.437 ns/op
# Warmup Iteration   9: 1073335.826 ns/op
# Warmup Iteration  10: 1135628.217 ns/op
Iteration   1: 1185497.472 ns/op
Iteration   2: 1102187.524 ns/op
Iteration   3: 1066014.061 ns/op
Iteration   4: 946794.890 ns/op
Iteration   5: 1021266.060 ns/op
Iteration   6: 968900.293 ns/op
Iteration   7: 973483.266 ns/op
Iteration   8: 973371.053 ns/op
Iteration   9: 958516.046 ns/op
Iteration  10: 1026175.832 ns/op
Iteration  11: 976216.849 ns/op
Iteration  12: 1109211.950 ns/op
Iteration  13: 789400.212 ns/op
Iteration  14: 810180.400 ns/op
Iteration  15: 769751.922 ns/op
Iteration  16: 859786.049 ns/op
Iteration  17: 763541.913 ns/op
Iteration  18: 839497.435 ns/op
Iteration  19: 814290.766 ns/op
Iteration  20: 815335.067 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenThereLargeSetupOfStubbedProperties_ButNotAllHeadersSetToAssert":
  951419.765 ±(99.9%) 67587.854 ns/op [Average]
  (min, avg, max) = (763541.913, 951419.765, 1186797.598), stdev = 120137.351
  CI (99.9%): [883831.911, 1019007.619] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlConditionallyRegexified_ButGoodAssertionUrlConfigured

# Run progress: 78.31% complete, ETA 01:12:02
# Fork: 1 of 2
# Warmup Iteration   1: 2606155.513 ns/op
# Warmup Iteration   2: 1108205.533 ns/op
# Warmup Iteration   3: 427917.396 ns/op
# Warmup Iteration   4: 301876.062 ns/op
# Warmup Iteration   5: 250928.735 ns/op
# Warmup Iteration   6: 311846.177 ns/op
# Warmup Iteration   7: 361393.380 ns/op
# Warmup Iteration   8: 341473.316 ns/op
# Warmup Iteration   9: 365084.815 ns/op
# Warmup Iteration  10: 364478.153 ns/op
Iteration   1: 337999.691 ns/op
Iteration   2: 357037.255 ns/op
Iteration   3: 354854.329 ns/op
Iteration   4: 308939.041 ns/op
Iteration   5: 342990.206 ns/op
Iteration   6: 293477.585 ns/op
Iteration   7: 279598.870 ns/op
Iteration   8: 369718.279 ns/op
Iteration   9: 263178.925 ns/op
Iteration  10: 349878.851 ns/op
Iteration  11: 343252.884 ns/op
Iteration  12: 316440.910 ns/op
Iteration  13: 443551.415 ns/op
Iteration  14: 366698.940 ns/op
Iteration  15: 356673.128 ns/op
Iteration  16: 303056.241 ns/op
Iteration  17: 302230.988 ns/op
Iteration  18: 305707.678 ns/op
Iteration  19: 337102.297 ns/op
Iteration  20: 306359.229 ns/op

# Run progress: 78.39% complete, ETA 01:11:52
# Fork: 2 of 2
# Warmup Iteration   1: 2694745.067 ns/op
# Warmup Iteration   2: 1367230.931 ns/op
# Warmup Iteration   3: 603654.284 ns/op
# Warmup Iteration   4: 280317.110 ns/op
# Warmup Iteration   5: 221111.881 ns/op
# Warmup Iteration   6: 409285.863 ns/op
# Warmup Iteration   7: 332940.234 ns/op
# Warmup Iteration   8: 360041.296 ns/op
# Warmup Iteration   9: 356369.733 ns/op
# Warmup Iteration  10: 272093.063 ns/op
Iteration   1: 339738.075 ns/op
Iteration   2: 473100.021 ns/op
Iteration   3: 300625.880 ns/op
Iteration   4: 360296.069 ns/op
Iteration   5: 399867.550 ns/op
Iteration   6: 298888.431 ns/op
Iteration   7: 348015.662 ns/op
Iteration   8: 304030.032 ns/op
Iteration   9: 406115.704 ns/op
Iteration  10: 409948.207 ns/op
Iteration  11: 360170.539 ns/op
Iteration  12: 285542.250 ns/op
Iteration  13: 361241.252 ns/op
Iteration  14: 423631.953 ns/op
Iteration  15: 376134.080 ns/op
Iteration  16: 282527.913 ns/op
Iteration  17: 302651.349 ns/op
Iteration  18: 292828.445 ns/op
Iteration  19: 315063.335 ns/op
Iteration  20: 354979.771 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlConditionallyRegexified_ButGoodAssertionUrlConfigured":
  340853.581 ±(99.9%) 26572.907 ns/op [Average]
  (min, avg, max) = (263178.925, 340853.581, 473100.021), stdev = 47233.320
  CI (99.9%): [314280.674, 367426.489] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlConditionallyRegexified_ButGoodAssertionUrlConfigured_v2

# Run progress: 78.46% complete, ETA 01:11:42
# Fork: 1 of 2
# Warmup Iteration   1: 1478922.871 ns/op
# Warmup Iteration   2: 582145.268 ns/op
# Warmup Iteration   3: 604446.892 ns/op
# Warmup Iteration   4: 496839.822 ns/op
# Warmup Iteration   5: 276938.518 ns/op
# Warmup Iteration   6: 239169.849 ns/op
# Warmup Iteration   7: 225320.596 ns/op
# Warmup Iteration   8: 348314.641 ns/op
# Warmup Iteration   9: 260336.908 ns/op
# Warmup Iteration  10: 232423.978 ns/op
Iteration   1: 313682.089 ns/op
Iteration   2: 289844.151 ns/op
Iteration   3: 254700.335 ns/op
Iteration   4: 273405.283 ns/op
Iteration   5: 257193.636 ns/op
Iteration   6: 270882.724 ns/op
Iteration   7: 244939.640 ns/op
Iteration   8: 278892.316 ns/op
Iteration   9: 270638.260 ns/op
Iteration  10: 253095.590 ns/op
Iteration  11: 319821.208 ns/op
Iteration  12: 234673.419 ns/op
Iteration  13: 268866.694 ns/op
Iteration  14: 264614.226 ns/op
Iteration  15: 255881.799 ns/op
Iteration  16: 317471.637 ns/op
Iteration  17: 258109.181 ns/op
Iteration  18: 318994.383 ns/op
Iteration  19: 244163.676 ns/op
Iteration  20: 248334.786 ns/op

# Run progress: 78.54% complete, ETA 01:11:32
# Fork: 2 of 2
# Warmup Iteration   1: 2087578.710 ns/op
# Warmup Iteration   2: 1171396.566 ns/op
# Warmup Iteration   3: 1532909.479 ns/op
# Warmup Iteration   4: 332978.795 ns/op
# Warmup Iteration   5: 248355.503 ns/op
# Warmup Iteration   6: 222802.348 ns/op
# Warmup Iteration   7: 374362.555 ns/op
# Warmup Iteration   8: 361016.668 ns/op
# Warmup Iteration   9: 245795.869 ns/op
# Warmup Iteration  10: 243725.910 ns/op
Iteration   1: 320925.628 ns/op
Iteration   2: 271799.912 ns/op
Iteration   3: 262192.641 ns/op
Iteration   4: 294575.290 ns/op
Iteration   5: 248455.226 ns/op
Iteration   6: 279526.216 ns/op
Iteration   7: 279377.381 ns/op
Iteration   8: 258694.504 ns/op
Iteration   9: 297938.011 ns/op
Iteration  10: 249521.101 ns/op
Iteration  11: 282313.242 ns/op
Iteration  12: 280717.566 ns/op
Iteration  13: 251318.820 ns/op
Iteration  14: 234775.609 ns/op
Iteration  15: 278522.096 ns/op
Iteration  16: 284082.535 ns/op
Iteration  17: 319823.237 ns/op
Iteration  18: 233693.459 ns/op
Iteration  19: 267436.588 ns/op
Iteration  20: 255674.020 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlConditionallyRegexified_ButGoodAssertionUrlConfigured_v2":
  272239.203 ±(99.9%) 14177.849 ns/op [Average]
  (min, avg, max) = (233693.459, 272239.203, 320925.628), stdev = 25201.114
  CI (99.9%): [258061.354, 286417.052] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlNotStubbed_ButUrlSubmitted

# Run progress: 78.61% complete, ETA 01:11:21
# Fork: 1 of 2
# Warmup Iteration   1: 436957.452 ns/op
# Warmup Iteration   2: 117529.491 ns/op
# Warmup Iteration   3: 103713.794 ns/op
# Warmup Iteration   4: 76208.477 ns/op
# Warmup Iteration   5: 37095.233 ns/op
# Warmup Iteration   6: 65796.135 ns/op
# Warmup Iteration   7: 62263.479 ns/op
# Warmup Iteration   8: 62063.587 ns/op
# Warmup Iteration   9: 56522.007 ns/op
# Warmup Iteration  10: 69374.040 ns/op
Iteration   1: 63761.700 ns/op
Iteration   2: 69765.997 ns/op
Iteration   3: 54850.290 ns/op
Iteration   4: 68868.034 ns/op
Iteration   5: 69849.278 ns/op
Iteration   6: 62004.497 ns/op
Iteration   7: 58026.932 ns/op
Iteration   8: 78265.950 ns/op
Iteration   9: 71950.127 ns/op
Iteration  10: 64501.994 ns/op
Iteration  11: 61018.576 ns/op
Iteration  12: 61525.467 ns/op
Iteration  13: 75526.373 ns/op
Iteration  14: 66813.605 ns/op
Iteration  15: 72559.618 ns/op
Iteration  16: 53898.707 ns/op
Iteration  17: 65358.667 ns/op
Iteration  18: 70070.877 ns/op
Iteration  19: 70785.767 ns/op
Iteration  20: 68284.225 ns/op

# Run progress: 78.69% complete, ETA 01:11:11
# Fork: 2 of 2
# Warmup Iteration   1: 268540.521 ns/op
# Warmup Iteration   2: 84686.709 ns/op
# Warmup Iteration   3: 62407.638 ns/op
# Warmup Iteration   4: 48945.449 ns/op
# Warmup Iteration   5: 55231.811 ns/op
# Warmup Iteration   6: 55630.422 ns/op
# Warmup Iteration   7: 71653.430 ns/op
# Warmup Iteration   8: 69705.642 ns/op
# Warmup Iteration   9: 49619.777 ns/op
# Warmup Iteration  10: 61613.566 ns/op
Iteration   1: 69245.167 ns/op
Iteration   2: 62234.127 ns/op
Iteration   3: 65026.971 ns/op
Iteration   4: 80018.907 ns/op
Iteration   5: 69659.265 ns/op
Iteration   6: 70617.066 ns/op
Iteration   7: 52376.915 ns/op
Iteration   8: 70832.809 ns/op
Iteration   9: 70187.335 ns/op
Iteration  10: 78310.419 ns/op
Iteration  11: 62264.930 ns/op
Iteration  12: 75464.978 ns/op
Iteration  13: 68114.258 ns/op
Iteration  14: 67468.966 ns/op
Iteration  15: 66343.062 ns/op
Iteration  16: 65840.073 ns/op
Iteration  17: 75027.891 ns/op
Iteration  18: 69056.825 ns/op
Iteration  19: 63809.529 ns/op
Iteration  20: 76989.447 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlNotStubbed_ButUrlSubmitted":
  67664.391 ±(99.9%) 3665.795 ns/op [Average]
  (min, avg, max) = (52376.915, 67664.391, 80018.907), stdev = 6515.948
  CI (99.9%): [63998.595, 71330.186] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlPartiallyRegexified_ButGoodAssertionUrlConfigured

# Run progress: 78.77% complete, ETA 01:11:01
# Fork: 1 of 2
# Warmup Iteration   1: 365879.291 ns/op
# Warmup Iteration   2: 348771.208 ns/op
# Warmup Iteration   3: 440302.848 ns/op
# Warmup Iteration   4: 126055.758 ns/op
# Warmup Iteration   5: 88972.349 ns/op
# Warmup Iteration   6: 69623.996 ns/op
# Warmup Iteration   7: 38048.682 ns/op
# Warmup Iteration   8: 64263.543 ns/op
# Warmup Iteration   9: 65275.924 ns/op
# Warmup Iteration  10: 78570.470 ns/op
Iteration   1: 62150.709 ns/op
Iteration   2: 68719.732 ns/op
Iteration   3: 74376.229 ns/op
Iteration   4: 55293.061 ns/op
Iteration   5: 63496.714 ns/op
Iteration   6: 61978.459 ns/op
Iteration   7: 61617.860 ns/op
Iteration   8: 64567.508 ns/op
Iteration   9: 88011.468 ns/op
Iteration  10: 76464.907 ns/op
Iteration  11: 57371.212 ns/op
Iteration  12: 54171.531 ns/op
Iteration  13: 62413.927 ns/op
Iteration  14: 75430.369 ns/op
Iteration  15: 69292.762 ns/op
Iteration  16: 72467.974 ns/op
Iteration  17: 67328.208 ns/op
Iteration  18: 55633.313 ns/op
Iteration  19: 67127.271 ns/op
Iteration  20: 69946.801 ns/op

# Run progress: 78.84% complete, ETA 01:10:50
# Fork: 2 of 2
# Warmup Iteration   1: 416059.641 ns/op
# Warmup Iteration   2: 282555.371 ns/op
# Warmup Iteration   3: 83290.708 ns/op
# Warmup Iteration   4: 66199.132 ns/op
# Warmup Iteration   5: 54531.761 ns/op
# Warmup Iteration   6: 42228.654 ns/op
# Warmup Iteration   7: 72385.419 ns/op
# Warmup Iteration   8: 60042.976 ns/op
# Warmup Iteration   9: 59104.079 ns/op
# Warmup Iteration  10: 78844.657 ns/op
Iteration   1: 63339.269 ns/op
Iteration   2: 78200.605 ns/op
Iteration   3: 69087.875 ns/op
Iteration   4: 73083.596 ns/op
Iteration   5: 55541.624 ns/op
Iteration   6: 69663.030 ns/op
Iteration   7: 78471.463 ns/op
Iteration   8: 95262.978 ns/op
Iteration   9: 70295.435 ns/op
Iteration  10: 70681.746 ns/op
Iteration  11: 70886.955 ns/op
Iteration  12: 66700.462 ns/op
Iteration  13: 72430.509 ns/op
Iteration  14: 72240.540 ns/op
Iteration  15: 66443.818 ns/op
Iteration  16: 70146.171 ns/op
Iteration  17: 60790.961 ns/op
Iteration  18: 77648.137 ns/op
Iteration  19: 61224.789 ns/op
Iteration  20: 66602.103 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlPartiallyRegexified_ButGoodAssertionUrlConfigured":
  68415.052 ±(99.9%) 4771.212 ns/op [Average]
  (min, avg, max) = (54171.531, 68415.052, 95262.978), stdev = 8480.825
  CI (99.9%): [63643.840, 73186.264] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlRegexifiedDoesNotAccommodateForQueryString

# Run progress: 78.92% complete, ETA 01:10:40
# Fork: 1 of 2
# Warmup Iteration   1: 944367.742 ns/op
# Warmup Iteration   2: 534896.197 ns/op
# Warmup Iteration   3: 313714.138 ns/op
# Warmup Iteration   4: 163713.134 ns/op
# Warmup Iteration   5: 157746.309 ns/op
# Warmup Iteration   6: 196129.928 ns/op
# Warmup Iteration   7: 327423.867 ns/op
# Warmup Iteration   8: 181670.473 ns/op
# Warmup Iteration   9: 223102.003 ns/op
# Warmup Iteration  10: 182315.116 ns/op
Iteration   1: 244813.309 ns/op
Iteration   2: 220767.826 ns/op
Iteration   3: 189077.744 ns/op
Iteration   4: 220279.546 ns/op
Iteration   5: 203813.683 ns/op
Iteration   6: 218279.892 ns/op
Iteration   7: 224891.426 ns/op
Iteration   8: 227944.250 ns/op
Iteration   9: 160239.174 ns/op
Iteration  10: 262466.960 ns/op
Iteration  11: 168766.303 ns/op
Iteration  12: 233100.786 ns/op
Iteration  13: 195463.480 ns/op
Iteration  14: 220410.621 ns/op
Iteration  15: 194901.125 ns/op
Iteration  16: 174893.011 ns/op
Iteration  17: 172478.794 ns/op
Iteration  18: 205380.005 ns/op
Iteration  19: 194288.701 ns/op
Iteration  20: 214818.213 ns/op

# Run progress: 78.99% complete, ETA 01:10:30
# Fork: 2 of 2
# Warmup Iteration   1: 1917144.296 ns/op
# Warmup Iteration   2: 759161.264 ns/op
# Warmup Iteration   3: 269654.745 ns/op
# Warmup Iteration   4: 173047.950 ns/op
# Warmup Iteration   5: 179549.389 ns/op
# Warmup Iteration   6: 278890.492 ns/op
# Warmup Iteration   7: 290414.298 ns/op
# Warmup Iteration   8: 233354.759 ns/op
# Warmup Iteration   9: 200978.213 ns/op
# Warmup Iteration  10: 201703.709 ns/op
Iteration   1: 188503.956 ns/op
Iteration   2: 193954.614 ns/op
Iteration   3: 202134.027 ns/op
Iteration   4: 233625.615 ns/op
Iteration   5: 213034.724 ns/op
Iteration   6: 227084.626 ns/op
Iteration   7: 218365.294 ns/op
Iteration   8: 215066.143 ns/op
Iteration   9: 184516.789 ns/op
Iteration  10: 172164.115 ns/op
Iteration  11: 192408.853 ns/op
Iteration  12: 199541.230 ns/op
Iteration  13: 184675.043 ns/op
Iteration  14: 227349.937 ns/op
Iteration  15: 216827.093 ns/op
Iteration  16: 203408.438 ns/op
Iteration  17: 198649.857 ns/op
Iteration  18: 191484.329 ns/op
Iteration  19: 229710.791 ns/op
Iteration  20: 182698.208 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlRegexifiedDoesNotAccommodateForQueryString":
  205556.963 ±(99.9%) 12595.510 ns/op [Average]
  (min, avg, max) = (160239.174, 205556.963, 262466.960), stdev = 22388.507
  CI (99.9%): [192961.454, 218152.473] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlRegexified_ButGoodAssertionUrlConfigured

# Run progress: 79.07% complete, ETA 01:10:19
# Fork: 1 of 2
# Warmup Iteration   1: 662537.535 ns/op
# Warmup Iteration   2: 290225.573 ns/op
# Warmup Iteration   3: 116953.496 ns/op
# Warmup Iteration   4: 60867.598 ns/op
# Warmup Iteration   5: 44915.076 ns/op
# Warmup Iteration   6: 55625.715 ns/op
# Warmup Iteration   7: 116504.647 ns/op
# Warmup Iteration   8: 60066.282 ns/op
# Warmup Iteration   9: 60111.628 ns/op
# Warmup Iteration  10: 50278.998 ns/op
Iteration   1: 78236.860 ns/op
Iteration   2: 64347.749 ns/op
Iteration   3: 67666.165 ns/op
Iteration   4: 62481.358 ns/op
Iteration   5: 56461.926 ns/op
Iteration   6: 80033.417 ns/op
Iteration   7: 82744.188 ns/op
Iteration   8: 77105.206 ns/op
Iteration   9: 63089.451 ns/op
Iteration  10: 69790.354 ns/op
Iteration  11: 71073.290 ns/op
Iteration  12: 72797.576 ns/op
Iteration  13: 77316.701 ns/op
Iteration  14: 64470.408 ns/op
Iteration  15: 66585.968 ns/op
Iteration  16: 69796.165 ns/op
Iteration  17: 70297.681 ns/op
Iteration  18: 72172.340 ns/op
Iteration  19: 70363.369 ns/op
Iteration  20: 75545.800 ns/op

# Run progress: 79.14% complete, ETA 01:10:09
# Fork: 2 of 2
# Warmup Iteration   1: 606364.459 ns/op
# Warmup Iteration   2: 262534.351 ns/op
# Warmup Iteration   3: 259341.418 ns/op
# Warmup Iteration   4: 68434.260 ns/op
# Warmup Iteration   5: 53609.450 ns/op
# Warmup Iteration   6: 61031.330 ns/op
# Warmup Iteration   7: 78751.946 ns/op
# Warmup Iteration   8: 73363.717 ns/op
# Warmup Iteration   9: 63332.783 ns/op
# Warmup Iteration  10: 61580.925 ns/op
Iteration   1: 62644.332 ns/op
Iteration   2: 63530.810 ns/op
Iteration   3: 65136.758 ns/op
Iteration   4: 69214.156 ns/op
Iteration   5: 67656.618 ns/op
Iteration   6: 58453.491 ns/op
Iteration   7: 60231.887 ns/op
Iteration   8: 59181.697 ns/op
Iteration   9: 61857.669 ns/op
Iteration  10: 64114.639 ns/op
Iteration  11: 72975.931 ns/op
Iteration  12: 74256.573 ns/op
Iteration  13: 60454.658 ns/op
Iteration  14: 65603.849 ns/op
Iteration  15: 57456.792 ns/op
Iteration  16: 68579.050 ns/op
Iteration  17: 54999.273 ns/op
Iteration  18: 56819.723 ns/op
Iteration  19: 73426.364 ns/op
Iteration  20: 88256.318 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlRegexified_ButGoodAssertionUrlConfigured":
  67930.664 ±(99.9%) 4309.642 ns/op [Average]
  (min, avg, max) = (54999.273, 67930.664, 88256.318), stdev = 7660.384
  CI (99.9%): [63621.022, 72240.306] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlsEquals

# Run progress: 79.22% complete, ETA 01:09:58
# Fork: 1 of 2
# Warmup Iteration   1: 653430.933 ns/op
# Warmup Iteration   2: 149179.088 ns/op
# Warmup Iteration   3: 77736.194 ns/op
# Warmup Iteration   4: 49210.927 ns/op
# Warmup Iteration   5: 41821.227 ns/op
# Warmup Iteration   6: 74068.299 ns/op
# Warmup Iteration   7: 87997.074 ns/op
# Warmup Iteration   8: 67085.265 ns/op
# Warmup Iteration   9: 69940.009 ns/op
# Warmup Iteration  10: 73239.307 ns/op
Iteration   1: 70833.020 ns/op
Iteration   2: 56039.730 ns/op
Iteration   3: 84823.995 ns/op
Iteration   4: 63501.196 ns/op
Iteration   5: 73397.590 ns/op
Iteration   6: 70443.305 ns/op
Iteration   7: 74141.382 ns/op
Iteration   8: 66835.829 ns/op
Iteration   9: 71559.677 ns/op
Iteration  10: 68366.683 ns/op
Iteration  11: 69033.586 ns/op
Iteration  12: 62122.953 ns/op
Iteration  13: 80394.512 ns/op
Iteration  14: 74814.506 ns/op
Iteration  15: 70128.921 ns/op
Iteration  16: 60167.682 ns/op
Iteration  17: 61412.957 ns/op
Iteration  18: 59028.916 ns/op
Iteration  19: 70320.748 ns/op
Iteration  20: 61557.614 ns/op

# Run progress: 79.29% complete, ETA 01:09:48
# Fork: 2 of 2
# Warmup Iteration   1: 358947.982 ns/op
# Warmup Iteration   2: 279427.079 ns/op
# Warmup Iteration   3: 108325.936 ns/op
# Warmup Iteration   4: 64386.278 ns/op
# Warmup Iteration   5: 58123.081 ns/op
# Warmup Iteration   6: 55218.995 ns/op
# Warmup Iteration   7: 105130.230 ns/op
# Warmup Iteration   8: 91731.826 ns/op
# Warmup Iteration   9: 74096.535 ns/op
# Warmup Iteration  10: 66405.005 ns/op
Iteration   1: 73885.295 ns/op
Iteration   2: 71002.253 ns/op
Iteration   3: 68361.708 ns/op
Iteration   4: 69012.876 ns/op
Iteration   5: 64350.880 ns/op
Iteration   6: 75609.012 ns/op
Iteration   7: 70554.097 ns/op
Iteration   8: 61789.655 ns/op
Iteration   9: 66419.920 ns/op
Iteration  10: 69740.455 ns/op
Iteration  11: 77161.573 ns/op
Iteration  12: 62689.360 ns/op
Iteration  13: 60135.268 ns/op
Iteration  14: 68539.240 ns/op
Iteration  15: 75075.203 ns/op
Iteration  16: 65331.755 ns/op
Iteration  17: 73057.149 ns/op
Iteration  18: 69049.857 ns/op
Iteration  19: 66010.978 ns/op
Iteration  20: 62688.727 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlsEquals":
  68484.752 ±(99.9%) 3443.591 ns/op [Average]
  (min, avg, max) = (56039.730, 68484.752, 84823.995), stdev = 6120.980
  CI (99.9%): [65041.161, 71928.342] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenComplexUrlRegexified_ButBadAssertionUrlConfigured

# Run progress: 79.37% complete, ETA 01:09:37
# Fork: 1 of 2
# Warmup Iteration   1: 1565634.959 ns/op
# Warmup Iteration   2: 476863.988 ns/op
# Warmup Iteration   3: 223120.769 ns/op
# Warmup Iteration   4: 160989.620 ns/op
# Warmup Iteration   5: 186402.024 ns/op
# Warmup Iteration   6: 201756.507 ns/op
# Warmup Iteration   7: 188084.063 ns/op
# Warmup Iteration   8: 196866.901 ns/op
# Warmup Iteration   9: 203509.179 ns/op
# Warmup Iteration  10: 174608.951 ns/op
Iteration   1: 175320.834 ns/op
Iteration   2: 198560.951 ns/op
Iteration   3: 207534.314 ns/op
Iteration   4: 198644.178 ns/op
Iteration   5: 247386.038 ns/op
Iteration   6: 183910.556 ns/op
Iteration   7: 216623.943 ns/op
Iteration   8: 197906.744 ns/op
Iteration   9: 186788.655 ns/op
Iteration  10: 173091.550 ns/op
Iteration  11: 209063.831 ns/op
Iteration  12: 182607.710 ns/op
Iteration  13: 193156.279 ns/op
Iteration  14: 181392.096 ns/op
Iteration  15: 188043.749 ns/op
Iteration  16: 189015.837 ns/op
Iteration  17: 192301.292 ns/op
Iteration  18: 216876.090 ns/op
Iteration  19: 197790.549 ns/op
Iteration  20: 193754.096 ns/op

# Run progress: 79.44% complete, ETA 01:09:26
# Fork: 2 of 2
# Warmup Iteration   1: 1117388.001 ns/op
# Warmup Iteration   2: 830553.340 ns/op
# Warmup Iteration   3: 332132.754 ns/op
# Warmup Iteration   4: 205027.060 ns/op
# Warmup Iteration   5: 180697.647 ns/op
# Warmup Iteration   6: 206659.845 ns/op
# Warmup Iteration   7: 190785.023 ns/op
# Warmup Iteration   8: 193745.630 ns/op
# Warmup Iteration   9: 223365.584 ns/op
# Warmup Iteration  10: 214005.253 ns/op
Iteration   1: 202615.522 ns/op
Iteration   2: 207515.432 ns/op
Iteration   3: 179688.517 ns/op
Iteration   4: 210482.763 ns/op
Iteration   5: 199157.505 ns/op
Iteration   6: 184386.732 ns/op
Iteration   7: 189593.497 ns/op
Iteration   8: 189861.248 ns/op
Iteration   9: 186320.412 ns/op
Iteration  10: 196982.996 ns/op
Iteration  11: 220379.746 ns/op
Iteration  12: 207913.764 ns/op
Iteration  13: 204156.832 ns/op
Iteration  14: 189066.922 ns/op
Iteration  15: 210051.131 ns/op
Iteration  16: 195107.700 ns/op
Iteration  17: 193553.734 ns/op
Iteration  18: 192387.664 ns/op
Iteration  19: 204641.615 ns/op
Iteration  20: 181817.025 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenComplexUrlRegexified_ButBadAssertionUrlConfigured":
  196886.251 ±(99.9%) 7968.351 ns/op [Average]
  (min, avg, max) = (173091.550, 196886.251, 247386.038), stdev = 14163.737
  CI (99.9%): [188917.900, 204854.602] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenDifferentHttpMethod

# Run progress: 79.52% complete, ETA 01:09:15
# Fork: 1 of 2
# Warmup Iteration   1: 539167.714 ns/op
# Warmup Iteration   2: 78885.596 ns/op
# Warmup Iteration   3: 51882.221 ns/op
# Warmup Iteration   4: 55237.486 ns/op
# Warmup Iteration   5: 79639.205 ns/op
# Warmup Iteration   6: 86946.599 ns/op
# Warmup Iteration   7: 79581.648 ns/op
# Warmup Iteration   8: 82258.844 ns/op
# Warmup Iteration   9: 76009.971 ns/op
# Warmup Iteration  10: 76430.414 ns/op
Iteration   1: 73504.009 ns/op
Iteration   2: 60114.257 ns/op
Iteration   3: 80281.703 ns/op
Iteration   4: 74268.494 ns/op
Iteration   5: 63580.669 ns/op
Iteration   6: 58069.710 ns/op
Iteration   7: 61741.022 ns/op
Iteration   8: 70069.000 ns/op
Iteration   9: 63742.692 ns/op
Iteration  10: 57666.276 ns/op
Iteration  11: 67878.664 ns/op
Iteration  12: 69551.761 ns/op
Iteration  13: 60440.369 ns/op
Iteration  14: 55369.861 ns/op
Iteration  15: 61405.809 ns/op
Iteration  16: 54214.354 ns/op
Iteration  17: 78100.446 ns/op
Iteration  18: 56597.280 ns/op
Iteration  19: 98207.871 ns/op
Iteration  20: 72403.185 ns/op

# Run progress: 79.59% complete, ETA 01:09:04
# Fork: 2 of 2
# Warmup Iteration   1: 607695.987 ns/op
# Warmup Iteration   2: 125819.695 ns/op
# Warmup Iteration   3: 86073.652 ns/op
# Warmup Iteration   4: 63170.383 ns/op
# Warmup Iteration   5: 46628.878 ns/op
# Warmup Iteration   6: 70930.723 ns/op
# Warmup Iteration   7: 90831.221 ns/op
# Warmup Iteration   8: 72605.425 ns/op
# Warmup Iteration   9: 66722.635 ns/op
# Warmup Iteration  10: 64061.839 ns/op
Iteration   1: 67395.555 ns/op
Iteration   2: 60315.017 ns/op
Iteration   3: 65190.759 ns/op
Iteration   4: 74071.160 ns/op
Iteration   5: 68043.976 ns/op
Iteration   6: 66393.760 ns/op
Iteration   7: 53572.415 ns/op
Iteration   8: 81415.942 ns/op
Iteration   9: 73110.701 ns/op
Iteration  10: 71347.917 ns/op
Iteration  11: 57856.645 ns/op
Iteration  12: 67766.582 ns/op
Iteration  13: 59844.476 ns/op
Iteration  14: 58746.268 ns/op
Iteration  15: 74075.362 ns/op
Iteration  16: 61311.376 ns/op
Iteration  17: 63666.755 ns/op
Iteration  18: 78560.808 ns/op
Iteration  19: 57577.530 ns/op
Iteration  20: 63508.967 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenDifferentHttpMethod":
  66524.485 ±(99.9%) 5117.233 ns/op [Average]
  (min, avg, max) = (53572.415, 66524.485, 98207.871), stdev = 9095.877
  CI (99.9%): [61407.252, 71641.718] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenDifferentPostBody

# Run progress: 79.67% complete, ETA 01:08:53
# Fork: 1 of 2
# Warmup Iteration   1: 709951.486 ns/op
# Warmup Iteration   2: 560692.877 ns/op
# Warmup Iteration   3: 132923.852 ns/op
# Warmup Iteration   4: 84693.745 ns/op
# Warmup Iteration   5: 130835.506 ns/op
# Warmup Iteration   6: 139651.197 ns/op
# Warmup Iteration   7: 110971.886 ns/op
# Warmup Iteration   8: 100104.603 ns/op
# Warmup Iteration   9: 123078.245 ns/op
# Warmup Iteration  10: 113056.032 ns/op
Iteration   1: 95249.823 ns/op
Iteration   2: 125352.184 ns/op
Iteration   3: 113188.698 ns/op
Iteration   4: 102907.862 ns/op
Iteration   5: 103574.828 ns/op
Iteration   6: 93051.239 ns/op
Iteration   7: 91496.332 ns/op
Iteration   8: 107399.481 ns/op
Iteration   9: 105468.197 ns/op
Iteration  10: 120914.631 ns/op
Iteration  11: 100943.395 ns/op
Iteration  12: 94469.503 ns/op
Iteration  13: 129673.476 ns/op
Iteration  14: 96081.294 ns/op
Iteration  15: 93101.128 ns/op
Iteration  16: 115368.674 ns/op
Iteration  17: 110816.190 ns/op
Iteration  18: 107984.748 ns/op
Iteration  19: 112070.028 ns/op
Iteration  20: 117365.648 ns/op

# Run progress: 79.74% complete, ETA 01:08:42
# Fork: 2 of 2
# Warmup Iteration   1: 929470.985 ns/op
# Warmup Iteration   2: 555421.739 ns/op
# Warmup Iteration   3: 486747.990 ns/op
# Warmup Iteration   4: 86643.466 ns/op
# Warmup Iteration   5: 76088.152 ns/op
# Warmup Iteration   6: 73609.010 ns/op
# Warmup Iteration   7: 97448.486 ns/op
# Warmup Iteration   8: 117835.583 ns/op
# Warmup Iteration   9: 113946.105 ns/op
# Warmup Iteration  10: 114419.487 ns/op
Iteration   1: 111673.194 ns/op
Iteration   2: 89921.526 ns/op
Iteration   3: 91374.527 ns/op
Iteration   4: 103316.360 ns/op
Iteration   5: 85612.674 ns/op
Iteration   6: 121128.497 ns/op
Iteration   7: 88348.959 ns/op
Iteration   8: 116415.201 ns/op
Iteration   9: 91557.109 ns/op
Iteration  10: 107016.107 ns/op
Iteration  11: 106999.138 ns/op
Iteration  12: 98420.051 ns/op
Iteration  13: 98112.631 ns/op
Iteration  14: 104343.389 ns/op
Iteration  15: 108826.096 ns/op
Iteration  16: 78472.582 ns/op
Iteration  17: 87451.857 ns/op
Iteration  18: 100954.002 ns/op
Iteration  19: 91581.015 ns/op
Iteration  20: 107588.023 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenDifferentPostBody":
  103139.757 ±(99.9%) 6590.705 ns/op [Average]
  (min, avg, max) = (78472.582, 103139.757, 129673.476), stdev = 11714.973
  CI (99.9%): [96549.052, 109730.463] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenDifferentUri

# Run progress: 79.82% complete, ETA 01:08:31
# Fork: 1 of 2
# Warmup Iteration   1: 324080.455 ns/op
# Warmup Iteration   2: 135434.670 ns/op
# Warmup Iteration   3: 149839.543 ns/op
# Warmup Iteration   4: 82155.357 ns/op
# Warmup Iteration   5: 43218.923 ns/op
# Warmup Iteration   6: 23623.283 ns/op
# Warmup Iteration   7: 28504.876 ns/op
# Warmup Iteration   8: 29647.498 ns/op
# Warmup Iteration   9: 34542.795 ns/op
# Warmup Iteration  10: 33716.005 ns/op
Iteration   1: 40777.723 ns/op
Iteration   2: 39570.071 ns/op
Iteration   3: 31734.152 ns/op
Iteration   4: 30933.286 ns/op
Iteration   5: 32958.948 ns/op
Iteration   6: 34581.935 ns/op
Iteration   7: 37876.921 ns/op
Iteration   8: 41996.916 ns/op
Iteration   9: 35583.222 ns/op
Iteration  10: 31338.197 ns/op
Iteration  11: 37192.777 ns/op
Iteration  12: 28476.156 ns/op
Iteration  13: 47015.986 ns/op
Iteration  14: 32616.956 ns/op
Iteration  15: 46786.149 ns/op
Iteration  16: 32042.009 ns/op
Iteration  17: 40936.959 ns/op
Iteration  18: 39558.101 ns/op
Iteration  19: 37101.218 ns/op
Iteration  20: 31632.168 ns/op

# Run progress: 79.89% complete, ETA 01:08:20
# Fork: 2 of 2
# Warmup Iteration   1: 231931.451 ns/op
# Warmup Iteration   2: 184465.857 ns/op
# Warmup Iteration   3: 147077.067 ns/op
# Warmup Iteration   4: 49484.570 ns/op
# Warmup Iteration   5: 30290.775 ns/op
# Warmup Iteration   6: 27370.367 ns/op
# Warmup Iteration   7: 22533.967 ns/op
# Warmup Iteration   8: 40367.118 ns/op
# Warmup Iteration   9: 31832.724 ns/op
# Warmup Iteration  10: 36117.437 ns/op
Iteration   1: 43906.971 ns/op
Iteration   2: 32089.672 ns/op
Iteration   3: 42761.364 ns/op
Iteration   4: 37445.365 ns/op
Iteration   5: 31910.448 ns/op
Iteration   6: 43684.435 ns/op
Iteration   7: 39877.300 ns/op
Iteration   8: 35097.680 ns/op
Iteration   9: 28049.024 ns/op
Iteration  10: 39419.795 ns/op
Iteration  11: 37063.456 ns/op
Iteration  12: 33186.078 ns/op
Iteration  13: 32225.847 ns/op
Iteration  14: 44230.047 ns/op
Iteration  15: 32005.610 ns/op
Iteration  16: 40750.757 ns/op
Iteration  17: 31858.620 ns/op
Iteration  18: 33410.916 ns/op
Iteration  19: 38517.735 ns/op
Iteration  20: 37826.543 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenDifferentUri":
  36650.688 ±(99.9%) 2806.512 ns/op [Average]
  (min, avg, max) = (28049.024, 36650.688, 47015.986), stdev = 4988.572
  CI (99.9%): [33844.176, 39457.199] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenHeaderRegexDoesNotMatch

# Run progress: 79.97% complete, ETA 01:08:09
# Fork: 1 of 2
# Warmup Iteration   1: 659863.070 ns/op
# Warmup Iteration   2: 428677.720 ns/op
# Warmup Iteration   3: 412145.178 ns/op
# Warmup Iteration   4: 289425.644 ns/op
# Warmup Iteration   5: 128324.445 ns/op
# Warmup Iteration   6: 89877.752 ns/op
# Warmup Iteration   7: 87330.657 ns/op
# Warmup Iteration   8: 91484.847 ns/op
# Warmup Iteration   9: 106919.194 ns/op
# Warmup Iteration  10: 116131.744 ns/op
Iteration   1: 118522.557 ns/op
Iteration   2: 109671.405 ns/op
Iteration   3: 91163.973 ns/op
Iteration   4: 110046.360 ns/op
Iteration   5: 106047.373 ns/op
Iteration   6: 95504.586 ns/op
Iteration   7: 114723.946 ns/op
Iteration   8: 116267.244 ns/op
Iteration   9: 110979.984 ns/op
Iteration  10: 112070.446 ns/op
Iteration  11: 111544.465 ns/op
Iteration  12: 98084.183 ns/op
Iteration  13: 114962.962 ns/op
Iteration  14: 116730.830 ns/op
Iteration  15: 113024.964 ns/op
Iteration  16: 113906.251 ns/op
Iteration  17: 86848.307 ns/op
Iteration  18: 127275.204 ns/op
Iteration  19: 85594.446 ns/op
Iteration  20: 112058.324 ns/op

# Run progress: 80.05% complete, ETA 01:07:58
# Fork: 2 of 2
# Warmup Iteration   1: 1144503.794 ns/op
# Warmup Iteration   2: 746767.160 ns/op
# Warmup Iteration   3: 253516.307 ns/op
# Warmup Iteration   4: 107141.160 ns/op
# Warmup Iteration   5: 97938.099 ns/op
# Warmup Iteration   6: 92329.235 ns/op
# Warmup Iteration   7: 96675.553 ns/op
# Warmup Iteration   8: 112719.217 ns/op
# Warmup Iteration   9: 110458.785 ns/op
# Warmup Iteration  10: 99261.946 ns/op
Iteration   1: 101643.614 ns/op
Iteration   2: 86119.302 ns/op
Iteration   3: 119928.155 ns/op
Iteration   4: 106276.353 ns/op
Iteration   5: 105645.045 ns/op
Iteration   6: 112039.407 ns/op
Iteration   7: 125342.477 ns/op
Iteration   8: 109461.458 ns/op
Iteration   9: 95746.896 ns/op
Iteration  10: 93953.064 ns/op
Iteration  11: 94286.423 ns/op
Iteration  12: 101461.251 ns/op
Iteration  13: 91184.648 ns/op
Iteration  14: 106990.028 ns/op
Iteration  15: 114018.010 ns/op
Iteration  16: 100764.736 ns/op
Iteration  17: 96675.894 ns/op
Iteration  18: 92747.792 ns/op
Iteration  19: 101487.663 ns/op
Iteration  20: 109039.462 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenHeaderRegexDoesNotMatch":
  105745.987 ±(99.9%) 6025.803 ns/op [Average]
  (min, avg, max) = (85594.446, 105745.987, 127275.204), stdev = 10710.860
  CI (99.9%): [99720.184, 111771.790] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenHeadersWereStubbed_ButNoHeadersSetToAssert

# Run progress: 80.12% complete, ETA 01:07:47
# Fork: 1 of 2
# Warmup Iteration   1: 926690.127 ns/op
# Warmup Iteration   2: 392639.131 ns/op
# Warmup Iteration   3: 192209.317 ns/op
# Warmup Iteration   4: 98352.610 ns/op
# Warmup Iteration   5: 103712.605 ns/op
# Warmup Iteration   6: 88299.910 ns/op
# Warmup Iteration   7: 102422.981 ns/op
# Warmup Iteration   8: 113263.185 ns/op
# Warmup Iteration   9: 114382.652 ns/op
# Warmup Iteration  10: 115037.477 ns/op
Iteration   1: 95862.858 ns/op
Iteration   2: 90027.633 ns/op
Iteration   3: 93145.284 ns/op
Iteration   4: 125599.792 ns/op
Iteration   5: 98859.546 ns/op
Iteration   6: 104346.231 ns/op
Iteration   7: 108958.554 ns/op
Iteration   8: 112049.859 ns/op
Iteration   9: 103477.791 ns/op
Iteration  10: 77693.477 ns/op
Iteration  11: 109554.967 ns/op
Iteration  12: 94675.653 ns/op
Iteration  13: 108815.807 ns/op
Iteration  14: 96559.598 ns/op
Iteration  15: 103013.887 ns/op
Iteration  16: 106337.427 ns/op
Iteration  17: 96730.536 ns/op
Iteration  18: 111863.610 ns/op
Iteration  19: 111470.484 ns/op
Iteration  20: 108814.974 ns/op

# Run progress: 80.20% complete, ETA 01:07:35
# Fork: 2 of 2
# Warmup Iteration   1: 578666.672 ns/op
# Warmup Iteration   2: 416893.644 ns/op
# Warmup Iteration   3: 175975.484 ns/op
# Warmup Iteration   4: 105876.476 ns/op
# Warmup Iteration   5: 95828.609 ns/op
# Warmup Iteration   6: 73669.834 ns/op
# Warmup Iteration   7: 183451.423 ns/op
# Warmup Iteration   8: 120101.450 ns/op
# Warmup Iteration   9: 99041.840 ns/op
# Warmup Iteration  10: 104740.603 ns/op
Iteration   1: 121353.902 ns/op
Iteration   2: 96647.901 ns/op
Iteration   3: 91843.790 ns/op
Iteration   4: 94943.658 ns/op
Iteration   5: 90001.952 ns/op
Iteration   6: 88051.193 ns/op
Iteration   7: 104345.001 ns/op
Iteration   8: 106421.167 ns/op
Iteration   9: 100451.698 ns/op
Iteration  10: 90688.818 ns/op
Iteration  11: 92779.441 ns/op
Iteration  12: 92587.918 ns/op
Iteration  13: 107254.841 ns/op
Iteration  14: 99422.910 ns/op
Iteration  15: 103829.224 ns/op
Iteration  16: 108904.911 ns/op
Iteration  17: 98909.824 ns/op
Iteration  18: 101357.954 ns/op
Iteration  19: 126221.234 ns/op
Iteration  20: 106132.186 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenHeadersWereStubbed_ButNoHeadersSetToAssert":
  102000.187 ±(99.9%) 5672.287 ns/op [Average]
  (min, avg, max) = (77693.477, 102000.187, 126221.234), stdev = 10082.485
  CI (99.9%): [96327.900, 107672.474] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenMethodStubbed_ButNoMethodSubmitted

# Run progress: 80.27% complete, ETA 01:07:24
# Fork: 1 of 2
# Warmup Iteration   1: 547341.383 ns/op
# Warmup Iteration   2: 132914.402 ns/op
# Warmup Iteration   3: 72546.152 ns/op
# Warmup Iteration   4: 64974.316 ns/op
# Warmup Iteration   5: 45144.822 ns/op
# Warmup Iteration   6: 62770.109 ns/op
# Warmup Iteration   7: 70551.826 ns/op
# Warmup Iteration   8: 50989.890 ns/op
# Warmup Iteration   9: 59866.723 ns/op
# Warmup Iteration  10: 63814.542 ns/op
Iteration   1: 57120.381 ns/op
Iteration   2: 61171.391 ns/op
Iteration   3: 63037.958 ns/op
Iteration   4: 74139.427 ns/op
Iteration   5: 61595.172 ns/op
Iteration   6: 68677.533 ns/op
Iteration   7: 67359.887 ns/op
Iteration   8: 72627.010 ns/op
Iteration   9: 62819.616 ns/op
Iteration  10: 71808.847 ns/op
Iteration  11: 67533.272 ns/op
Iteration  12: 51214.567 ns/op
Iteration  13: 71356.592 ns/op
Iteration  14: 70722.216 ns/op
Iteration  15: 69476.469 ns/op
Iteration  16: 68404.788 ns/op
Iteration  17: 67866.444 ns/op
Iteration  18: 72832.090 ns/op
Iteration  19: 61131.340 ns/op
Iteration  20: 75361.228 ns/op

# Run progress: 80.35% complete, ETA 01:07:13
# Fork: 2 of 2
# Warmup Iteration   1: 596214.018 ns/op
# Warmup Iteration   2: 273537.683 ns/op
# Warmup Iteration   3: 224313.103 ns/op
# Warmup Iteration   4: 55702.874 ns/op
# Warmup Iteration   5: 48589.156 ns/op
# Warmup Iteration   6: 67507.897 ns/op
# Warmup Iteration   7: 75079.235 ns/op
# Warmup Iteration   8: 65715.941 ns/op
# Warmup Iteration   9: 67405.677 ns/op
# Warmup Iteration  10: 64656.523 ns/op
Iteration   1: 58107.154 ns/op
Iteration   2: 58882.123 ns/op
Iteration   3: 67099.691 ns/op
Iteration   4: 51977.787 ns/op
Iteration   5: 83474.906 ns/op
Iteration   6: 60916.779 ns/op
Iteration   7: 55218.812 ns/op
Iteration   8: 78988.352 ns/op
Iteration   9: 73666.410 ns/op
Iteration  10: 70479.443 ns/op
Iteration  11: 68807.403 ns/op
Iteration  12: 65476.617 ns/op
Iteration  13: 75160.965 ns/op
Iteration  14: 58477.032 ns/op
Iteration  15: 71155.591 ns/op
Iteration  16: 69766.181 ns/op
Iteration  17: 60142.329 ns/op
Iteration  18: 55588.407 ns/op
Iteration  19: 67736.954 ns/op
Iteration  20: 70049.928 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenMethodStubbed_ButNoMethodSubmitted":
  66435.727 ±(99.9%) 4122.812 ns/op [Average]
  (min, avg, max) = (51214.567, 66435.727, 83474.906), stdev = 7328.296
  CI (99.9%): [62312.915, 70558.540] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenNotAllHeadersSetToAssert

# Run progress: 80.42% complete, ETA 01:07:02
# Fork: 1 of 2
# Warmup Iteration   1: 679291.571 ns/op
# Warmup Iteration   2: 400048.793 ns/op
# Warmup Iteration   3: 280511.278 ns/op
# Warmup Iteration   4: 119564.324 ns/op
# Warmup Iteration   5: 101588.973 ns/op
# Warmup Iteration   6: 82636.658 ns/op
# Warmup Iteration   7: 105281.607 ns/op
# Warmup Iteration   8: 91175.092 ns/op
# Warmup Iteration   9: 110546.275 ns/op
# Warmup Iteration  10: 120660.362 ns/op
Iteration   1: 104226.273 ns/op
Iteration   2: 121053.165 ns/op
Iteration   3: 98131.376 ns/op
Iteration   4: 99314.793 ns/op
Iteration   5: 100741.890 ns/op
Iteration   6: 108761.959 ns/op
Iteration   7: 109638.841 ns/op
Iteration   8: 115349.895 ns/op
Iteration   9: 109912.905 ns/op
Iteration  10: 100354.316 ns/op
Iteration  11: 84033.627 ns/op
Iteration  12: 94387.421 ns/op
Iteration  13: 92433.784 ns/op
Iteration  14: 95747.364 ns/op
Iteration  15: 89769.914 ns/op
Iteration  16: 105008.328 ns/op
Iteration  17: 106525.024 ns/op
Iteration  18: 115074.027 ns/op
Iteration  19: 98388.783 ns/op
Iteration  20: 108163.340 ns/op

# Run progress: 80.50% complete, ETA 01:06:50
# Fork: 2 of 2
# Warmup Iteration   1: 614931.092 ns/op
# Warmup Iteration   2: 324615.011 ns/op
# Warmup Iteration   3: 208561.447 ns/op
# Warmup Iteration   4: 115306.015 ns/op
# Warmup Iteration   5: 91412.535 ns/op
# Warmup Iteration   6: 86292.241 ns/op
# Warmup Iteration   7: 148680.585 ns/op
# Warmup Iteration   8: 153538.012 ns/op
# Warmup Iteration   9: 106287.239 ns/op
# Warmup Iteration  10: 107249.863 ns/op
Iteration   1: 116301.865 ns/op
Iteration   2: 113670.674 ns/op
Iteration   3: 112162.571 ns/op
Iteration   4: 96535.672 ns/op
Iteration   5: 115531.128 ns/op
Iteration   6: 99126.727 ns/op
Iteration   7: 101215.875 ns/op
Iteration   8: 109818.174 ns/op
Iteration   9: 121362.460 ns/op
Iteration  10: 110016.340 ns/op
Iteration  11: 110775.290 ns/op
Iteration  12: 100129.403 ns/op
Iteration  13: 104126.607 ns/op
Iteration  14: 103182.741 ns/op
Iteration  15: 107801.017 ns/op
Iteration  16: 82239.686 ns/op
Iteration  17: 95055.940 ns/op
Iteration  18: 98868.215 ns/op
Iteration  19: 114580.815 ns/op
Iteration  20: 98781.124 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenNotAllHeadersSetToAssert":
  104207.484 ±(99.9%) 5222.046 ns/op [Average]
  (min, avg, max) = (82239.686, 104207.484, 121362.460), stdev = 9282.182
  CI (99.9%): [98985.438, 109429.530] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenNotAllQueryParamsSetToAssert

# Run progress: 80.57% complete, ETA 01:06:39
# Fork: 1 of 2
# Warmup Iteration   1: 689241.162 ns/op
# Warmup Iteration   2: 272160.716 ns/op
# Warmup Iteration   3: 135357.546 ns/op
# Warmup Iteration   4: 94415.409 ns/op
# Warmup Iteration   5: 80395.805 ns/op
# Warmup Iteration   6: 104794.545 ns/op
# Warmup Iteration   7: 150170.379 ns/op
# Warmup Iteration   8: 138725.694 ns/op
# Warmup Iteration   9: 113751.321 ns/op
# Warmup Iteration  10: 97915.405 ns/op
Iteration   1: 92504.814 ns/op
Iteration   2: 91795.528 ns/op
Iteration   3: 107144.087 ns/op
Iteration   4: 96825.017 ns/op
Iteration   5: 84680.027 ns/op
Iteration   6: 108018.581 ns/op
Iteration   7: 101348.100 ns/op
Iteration   8: 92461.372 ns/op
Iteration   9: 121596.415 ns/op
Iteration  10: 110622.129 ns/op
Iteration  11: 116334.761 ns/op
Iteration  12: 100652.029 ns/op
Iteration  13: 105096.873 ns/op
Iteration  14: 93256.021 ns/op
Iteration  15: 98922.233 ns/op
Iteration  16: 96760.221 ns/op
Iteration  17: 106640.453 ns/op
Iteration  18: 100323.993 ns/op
Iteration  19: 97983.149 ns/op
Iteration  20: 107645.560 ns/op

# Run progress: 80.65% complete, ETA 01:06:27
# Fork: 2 of 2
# Warmup Iteration   1: 576948.618 ns/op
# Warmup Iteration   2: 398241.430 ns/op
# Warmup Iteration   3: 156484.407 ns/op
# Warmup Iteration   4: 114084.284 ns/op
# Warmup Iteration   5: 92907.036 ns/op
# Warmup Iteration   6: 90365.515 ns/op
# Warmup Iteration   7: 133386.541 ns/op
# Warmup Iteration   8: 90813.674 ns/op
# Warmup Iteration   9: 92365.056 ns/op
# Warmup Iteration  10: 89324.804 ns/op
Iteration   1: 102445.113 ns/op
Iteration   2: 97068.311 ns/op
Iteration   3: 95904.281 ns/op
Iteration   4: 90337.357 ns/op
Iteration   5: 92064.816 ns/op
Iteration   6: 94545.176 ns/op
Iteration   7: 109091.559 ns/op
Iteration   8: 101991.869 ns/op
Iteration   9: 96986.742 ns/op
Iteration  10: 103686.348 ns/op
Iteration  11: 121175.515 ns/op
Iteration  12: 105245.158 ns/op
Iteration  13: 87685.137 ns/op
Iteration  14: 101207.241 ns/op
Iteration  15: 113950.337 ns/op
Iteration  16: 102763.538 ns/op
Iteration  17: 95804.684 ns/op
Iteration  18: 107799.855 ns/op
Iteration  19: 98482.763 ns/op
Iteration  20: 107097.650 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenNotAllQueryParamsSetToAssert":
  101398.620 ±(99.9%) 4757.933 ns/op [Average]
  (min, avg, max) = (84680.027, 101398.620, 121596.415), stdev = 8457.222
  CI (99.9%): [96640.687, 106156.553] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenPostBodyWasStubbed_ButNoPostBodySubmitted

# Run progress: 80.72% complete, ETA 01:06:16
# Fork: 1 of 2
# Warmup Iteration   1: 401417.778 ns/op
# Warmup Iteration   2: 207256.968 ns/op
# Warmup Iteration   3: 480620.567 ns/op
# Warmup Iteration   4: 148205.073 ns/op
# Warmup Iteration   5: 103835.114 ns/op
# Warmup Iteration   6: 81392.745 ns/op
# Warmup Iteration   7: 85593.510 ns/op
# Warmup Iteration   8: 118247.512 ns/op
# Warmup Iteration   9: 107981.348 ns/op
# Warmup Iteration  10: 107540.612 ns/op
Iteration   1: 107727.374 ns/op
Iteration   2: 115388.363 ns/op
Iteration   3: 87972.275 ns/op
Iteration   4: 96382.193 ns/op
Iteration   5: 116514.526 ns/op
Iteration   6: 107846.300 ns/op
Iteration   7: 103777.787 ns/op
Iteration   8: 89345.251 ns/op
Iteration   9: 105634.329 ns/op
Iteration  10: 102432.707 ns/op
Iteration  11: 87904.591 ns/op
Iteration  12: 101302.504 ns/op
Iteration  13: 102507.352 ns/op
Iteration  14: 96205.501 ns/op
Iteration  15: 101204.145 ns/op
Iteration  16: 92259.898 ns/op
Iteration  17: 97630.600 ns/op
Iteration  18: 101729.111 ns/op
Iteration  19: 112449.578 ns/op
Iteration  20: 108427.322 ns/op

# Run progress: 80.80% complete, ETA 01:06:04
# Fork: 2 of 2
# Warmup Iteration   1: 444860.821 ns/op
# Warmup Iteration   2: 301950.233 ns/op
# Warmup Iteration   3: 136990.381 ns/op
# Warmup Iteration   4: 96735.718 ns/op
# Warmup Iteration   5: 66899.510 ns/op
# Warmup Iteration   6: 127736.286 ns/op
# Warmup Iteration   7: 90069.662 ns/op
# Warmup Iteration   8: 103023.569 ns/op
# Warmup Iteration   9: 104457.800 ns/op
# Warmup Iteration  10: 115096.606 ns/op
Iteration   1: 90801.992 ns/op
Iteration   2: 103095.574 ns/op
Iteration   3: 114631.590 ns/op
Iteration   4: 106129.767 ns/op
Iteration   5: 108820.042 ns/op
Iteration   6: 103468.337 ns/op
Iteration   7: 108974.454 ns/op
Iteration   8: 108094.904 ns/op
Iteration   9: 106638.730 ns/op
Iteration  10: 114645.640 ns/op
Iteration  11: 107153.495 ns/op
Iteration  12: 109917.712 ns/op
Iteration  13: 99732.723 ns/op
Iteration  14: 84158.207 ns/op
Iteration  15: 81748.678 ns/op
Iteration  16: 100906.783 ns/op
Iteration  17: 90335.481 ns/op
Iteration  18: 91662.015 ns/op
Iteration  19: 88031.629 ns/op
Iteration  20: 91675.303 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenPostBodyWasStubbed_ButNoPostBodySubmitted":
  101131.619 ±(99.9%) 5188.937 ns/op [Average]
  (min, avg, max) = (81748.678, 101131.619, 116514.526), stdev = 9223.332
  CI (99.9%): [95942.682, 106320.556] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamsMismatch

# Run progress: 80.87% complete, ETA 01:05:53
# Fork: 1 of 2
# Warmup Iteration   1: 952087.905 ns/op
# Warmup Iteration   2: 461286.267 ns/op
# Warmup Iteration   3: 497997.026 ns/op
# Warmup Iteration   4: 203292.415 ns/op
# Warmup Iteration   5: 114397.691 ns/op
# Warmup Iteration   6: 93638.724 ns/op
# Warmup Iteration   7: 90944.210 ns/op
# Warmup Iteration   8: 87129.420 ns/op
# Warmup Iteration   9: 105605.410 ns/op
# Warmup Iteration  10: 98749.516 ns/op
Iteration   1: 95537.277 ns/op
Iteration   2: 92514.584 ns/op
Iteration   3: 107058.134 ns/op
Iteration   4: 97219.047 ns/op
Iteration   5: 92722.537 ns/op
Iteration   6: 97125.142 ns/op
Iteration   7: 101705.973 ns/op
Iteration   8: 107009.628 ns/op
Iteration   9: 86166.277 ns/op
Iteration  10: 93021.488 ns/op
Iteration  11: 105401.029 ns/op
Iteration  12: 105753.002 ns/op
Iteration  13: 91859.422 ns/op
Iteration  14: 91268.082 ns/op
Iteration  15: 98827.010 ns/op
Iteration  16: 114383.530 ns/op
Iteration  17: 104323.773 ns/op
Iteration  18: 125997.265 ns/op
Iteration  19: 105976.113 ns/op
Iteration  20: 114099.425 ns/op

# Run progress: 80.95% complete, ETA 01:05:41
# Fork: 2 of 2
# Warmup Iteration   1: 553135.866 ns/op
# Warmup Iteration   2: 314319.857 ns/op
# Warmup Iteration   3: 114646.741 ns/op
# Warmup Iteration   4: 79078.722 ns/op
# Warmup Iteration   5: 89876.369 ns/op
# Warmup Iteration   6: 106163.144 ns/op
# Warmup Iteration   7: 103765.929 ns/op
# Warmup Iteration   8: 101515.448 ns/op
# Warmup Iteration   9: 132800.668 ns/op
# Warmup Iteration  10: 110097.457 ns/op
Iteration   1: 108256.197 ns/op
Iteration   2: 92199.969 ns/op
Iteration   3: 125303.160 ns/op
Iteration   4: 91997.357 ns/op
Iteration   5: 83046.540 ns/op
Iteration   6: 105144.775 ns/op
Iteration   7: 126230.864 ns/op
Iteration   8: 90087.096 ns/op
Iteration   9: 90558.657 ns/op
Iteration  10: 85520.492 ns/op
Iteration  11: 110454.641 ns/op
Iteration  12: 121993.236 ns/op
Iteration  13: 86725.665 ns/op
Iteration  14: 94429.699 ns/op
Iteration  15: 133377.356 ns/op
Iteration  16: 109497.739 ns/op
Iteration  17: 103221.940 ns/op
Iteration  18: 88975.464 ns/op
Iteration  19: 98163.105 ns/op
Iteration  20: 122461.681 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamsMismatch":
  102390.359 ±(99.9%) 7250.129 ns/op [Average]
  (min, avg, max) = (83046.540, 102390.359, 133377.356), stdev = 12887.099
  CI (99.9%): [95140.230, 109640.489] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamsWereStubbed_ButNoQueryParamsWereSetToAssert

# Run progress: 81.02% complete, ETA 01:05:29
# Fork: 1 of 2
# Warmup Iteration   1: 691618.959 ns/op
# Warmup Iteration   2: 144770.111 ns/op
# Warmup Iteration   3: 109867.678 ns/op
# Warmup Iteration   4: 84599.597 ns/op
# Warmup Iteration   5: 93910.224 ns/op
# Warmup Iteration   6: 87284.735 ns/op
# Warmup Iteration   7: 139397.090 ns/op
# Warmup Iteration   8: 85896.312 ns/op
# Warmup Iteration   9: 109258.350 ns/op
# Warmup Iteration  10: 84950.244 ns/op
Iteration   1: 92948.745 ns/op
Iteration   2: 95676.889 ns/op
Iteration   3: 85816.198 ns/op
Iteration   4: 91073.555 ns/op
Iteration   5: 93430.708 ns/op
Iteration   6: 101706.451 ns/op
Iteration   7: 83449.039 ns/op
Iteration   8: 98072.273 ns/op
Iteration   9: 102903.805 ns/op
Iteration  10: 114413.887 ns/op
Iteration  11: 117650.525 ns/op
Iteration  12: 93844.173 ns/op
Iteration  13: 115025.016 ns/op
Iteration  14: 77233.911 ns/op
Iteration  15: 95682.478 ns/op
Iteration  16: 102571.683 ns/op
Iteration  17: 101571.942 ns/op
Iteration  18: 103693.469 ns/op
Iteration  19: 82206.647 ns/op
Iteration  20: 101730.617 ns/op

# Run progress: 81.10% complete, ETA 01:05:18
# Fork: 2 of 2
# Warmup Iteration   1: 615858.791 ns/op
# Warmup Iteration   2: 158595.894 ns/op
# Warmup Iteration   3: 133483.603 ns/op
# Warmup Iteration   4: 122631.313 ns/op
# Warmup Iteration   5: 95750.122 ns/op
# Warmup Iteration   6: 74940.904 ns/op
# Warmup Iteration   7: 117802.730 ns/op
# Warmup Iteration   8: 117033.813 ns/op
# Warmup Iteration   9: 86930.298 ns/op
# Warmup Iteration  10: 106256.170 ns/op
Iteration   1: 86098.953 ns/op
Iteration   2: 103505.312 ns/op
Iteration   3: 80074.024 ns/op
Iteration   4: 99356.382 ns/op
Iteration   5: 91743.496 ns/op
Iteration   6: 112015.215 ns/op
Iteration   7: 117632.095 ns/op
Iteration   8: 109407.997 ns/op
Iteration   9: 105791.933 ns/op
Iteration  10: 115518.126 ns/op
Iteration  11: 102941.530 ns/op
Iteration  12: 111720.235 ns/op
Iteration  13: 108539.411 ns/op
Iteration  14: 86030.417 ns/op
Iteration  15: 99862.550 ns/op
Iteration  16: 100538.684 ns/op
Iteration  17: 107057.210 ns/op
Iteration  18: 95604.583 ns/op
Iteration  19: 110049.353 ns/op
Iteration  20: 79419.300 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamsWereStubbed_ButNoQueryParamsWereSetToAssert":
  99340.221 ±(99.9%) 6256.661 ns/op [Average]
  (min, avg, max) = (77233.911, 99340.221, 117650.525), stdev = 11121.210
  CI (99.9%): [93083.559, 105596.882] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenSomeHeadersMismatches

# Run progress: 81.17% complete, ETA 01:05:06
# Fork: 1 of 2
# Warmup Iteration   1: 935096.323 ns/op
# Warmup Iteration   2: 228820.455 ns/op
# Warmup Iteration   3: 154584.710 ns/op
# Warmup Iteration   4: 114833.116 ns/op
# Warmup Iteration   5: 100542.800 ns/op
# Warmup Iteration   6: 95169.593 ns/op
# Warmup Iteration   7: 96204.766 ns/op
# Warmup Iteration   8: 94592.320 ns/op
# Warmup Iteration   9: 85667.932 ns/op
# Warmup Iteration  10: 102663.391 ns/op
Iteration   1: 103264.301 ns/op
Iteration   2: 92046.977 ns/op
Iteration   3: 122690.356 ns/op
Iteration   4: 103896.762 ns/op
Iteration   5: 93559.927 ns/op
Iteration   6: 97001.971 ns/op
Iteration   7: 116415.854 ns/op
Iteration   8: 107977.968 ns/op
Iteration   9: 126148.417 ns/op
Iteration  10: 109401.876 ns/op
Iteration  11: 107331.299 ns/op
Iteration  12: 104856.488 ns/op
Iteration  13: 90937.346 ns/op
Iteration  14: 99018.843 ns/op
Iteration  15: 96286.235 ns/op
Iteration  16: 99730.503 ns/op
Iteration  17: 105725.810 ns/op
Iteration  18: 112120.516 ns/op
Iteration  19: 94753.685 ns/op
Iteration  20: 90789.689 ns/op

# Run progress: 81.25% complete, ETA 01:04:54
# Fork: 2 of 2
# Warmup Iteration   1: 868657.671 ns/op
# Warmup Iteration   2: 583982.583 ns/op
# Warmup Iteration   3: 309793.013 ns/op
# Warmup Iteration   4: 103063.153 ns/op
# Warmup Iteration   5: 93684.762 ns/op
# Warmup Iteration   6: 92520.761 ns/op
# Warmup Iteration   7: 95345.776 ns/op
# Warmup Iteration   8: 84120.274 ns/op
# Warmup Iteration   9: 122134.995 ns/op
# Warmup Iteration  10: 113010.333 ns/op
Iteration   1: 99746.618 ns/op
Iteration   2: 116608.574 ns/op
Iteration   3: 104396.712 ns/op
Iteration   4: 101579.503 ns/op
Iteration   5: 98129.525 ns/op
Iteration   6: 105294.629 ns/op
Iteration   7: 91101.840 ns/op
Iteration   8: 86188.055 ns/op
Iteration   9: 104358.497 ns/op
Iteration  10: 90546.531 ns/op
Iteration  11: 92242.057 ns/op
Iteration  12: 102370.843 ns/op
Iteration  13: 101108.090 ns/op
Iteration  14: 110780.171 ns/op
Iteration  15: 110947.050 ns/op
Iteration  16: 115404.675 ns/op
Iteration  17: 120935.587 ns/op
Iteration  18: 97443.514 ns/op
Iteration  19: 115082.748 ns/op
Iteration  20: 103018.079 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenSomeHeadersMismatches":
  103530.953 ±(99.9%) 5447.573 ns/op [Average]
  (min, avg, max) = (86188.055, 103530.953, 126148.417), stdev = 9683.056
  CI (99.9%): [98083.380, 108978.526] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenStubbedUrlHasRequiredTrailingSlash_ButNoSlashSubmitted

# Run progress: 81.33% complete, ETA 01:04:42
# Fork: 1 of 2
# Warmup Iteration   1: 232717.164 ns/op
# Warmup Iteration   2: 93383.383 ns/op
# Warmup Iteration   3: 64706.904 ns/op
# Warmup Iteration   4: 29129.389 ns/op
# Warmup Iteration   5: 18814.849 ns/op
# Warmup Iteration   6: 30079.283 ns/op
# Warmup Iteration   7: 32176.416 ns/op
# Warmup Iteration   8: 35143.562 ns/op
# Warmup Iteration   9: 37038.536 ns/op
# Warmup Iteration  10: 30256.281 ns/op
Iteration   1: 34815.661 ns/op
Iteration   2: 33864.592 ns/op
Iteration   3: 33352.445 ns/op
Iteration   4: 32688.787 ns/op
Iteration   5: 34450.673 ns/op
Iteration   6: 33729.762 ns/op
Iteration   7: 33768.816 ns/op
Iteration   8: 35291.010 ns/op
Iteration   9: 38822.226 ns/op
Iteration  10: 30425.768 ns/op
Iteration  11: 36831.969 ns/op
Iteration  12: 37835.202 ns/op
Iteration  13: 31590.348 ns/op
Iteration  14: 27243.374 ns/op
Iteration  15: 38595.087 ns/op
Iteration  16: 34125.873 ns/op
Iteration  17: 38049.877 ns/op
Iteration  18: 37469.302 ns/op
Iteration  19: 41911.730 ns/op
Iteration  20: 34743.689 ns/op

# Run progress: 81.40% complete, ETA 01:04:30
# Fork: 2 of 2
# Warmup Iteration   1: 267414.390 ns/op
# Warmup Iteration   2: 182310.367 ns/op
# Warmup Iteration   3: 73672.152 ns/op
# Warmup Iteration   4: 29672.076 ns/op
# Warmup Iteration   5: 38077.737 ns/op
# Warmup Iteration   6: 29948.035 ns/op
# Warmup Iteration   7: 37822.370 ns/op
# Warmup Iteration   8: 35855.749 ns/op
# Warmup Iteration   9: 40063.275 ns/op
# Warmup Iteration  10: 32204.225 ns/op
Iteration   1: 37161.992 ns/op
Iteration   2: 36122.751 ns/op
Iteration   3: 35772.776 ns/op
Iteration   4: 32929.856 ns/op
Iteration   5: 39803.611 ns/op
Iteration   6: 29367.023 ns/op
Iteration   7: 36167.512 ns/op
Iteration   8: 30742.740 ns/op
Iteration   9: 40055.672 ns/op
Iteration  10: 32852.367 ns/op
Iteration  11: 35928.956 ns/op
Iteration  12: 30650.541 ns/op
Iteration  13: 35296.366 ns/op
Iteration  14: 36868.206 ns/op
Iteration  15: 37140.886 ns/op
Iteration  16: 36025.777 ns/op
Iteration  17: 44616.391 ns/op
Iteration  18: 33589.031 ns/op
Iteration  19: 34706.212 ns/op
Iteration  20: 37945.384 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenStubbedUrlHasRequiredTrailingSlash_ButNoSlashSubmitted":
  35333.756 ±(99.9%) 1914.384 ns/op [Average]
  (min, avg, max) = (27243.374, 35333.756, 44616.391), stdev = 3402.817
  CI (99.9%): [33419.372, 37248.141] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenStubbedUrlRegexBeginsWith_AndSubmittedUrlWrong

# Run progress: 81.48% complete, ETA 01:04:18
# Fork: 1 of 2
# Warmup Iteration   1: 232586.018 ns/op
# Warmup Iteration   2: 132925.447 ns/op
# Warmup Iteration   3: 51193.324 ns/op
# Warmup Iteration   4: 26992.014 ns/op
# Warmup Iteration   5: 34358.171 ns/op
# Warmup Iteration   6: 46421.014 ns/op
# Warmup Iteration   7: 42559.573 ns/op
# Warmup Iteration   8: 35978.942 ns/op
# Warmup Iteration   9: 34628.780 ns/op
# Warmup Iteration  10: 40937.848 ns/op
Iteration   1: 34174.802 ns/op
Iteration   2: 41984.796 ns/op
Iteration   3: 35962.631 ns/op
Iteration   4: 35619.333 ns/op
Iteration   5: 37214.834 ns/op
Iteration   6: 30474.695 ns/op
Iteration   7: 36776.755 ns/op
Iteration   8: 40265.725 ns/op
Iteration   9: 36329.152 ns/op
Iteration  10: 35779.106 ns/op
Iteration  11: 39196.900 ns/op
Iteration  12: 38824.140 ns/op
Iteration  13: 29764.518 ns/op
Iteration  14: 34155.618 ns/op
Iteration  15: 38541.727 ns/op
Iteration  16: 33068.641 ns/op
Iteration  17: 32804.789 ns/op
Iteration  18: 32751.184 ns/op
Iteration  19: 38125.450 ns/op
Iteration  20: 30727.348 ns/op

# Run progress: 81.55% complete, ETA 01:04:06
# Fork: 2 of 2
# Warmup Iteration   1: 345594.727 ns/op
# Warmup Iteration   2: 76753.863 ns/op
# Warmup Iteration   3: 87860.870 ns/op
# Warmup Iteration   4: 92906.236 ns/op
# Warmup Iteration   5: 37725.307 ns/op
# Warmup Iteration   6: 37358.380 ns/op
# Warmup Iteration   7: 32185.011 ns/op
# Warmup Iteration   8: 27014.593 ns/op
# Warmup Iteration   9: 32881.241 ns/op
# Warmup Iteration  10: 26187.966 ns/op
Iteration   1: 34777.988 ns/op
Iteration   2: 31031.429 ns/op
Iteration   3: 31150.689 ns/op
Iteration   4: 34593.847 ns/op
Iteration   5: 36870.228 ns/op
Iteration   6: 34808.772 ns/op
Iteration   7: 35970.368 ns/op
Iteration   8: 36335.723 ns/op
Iteration   9: 31719.220 ns/op
Iteration  10: 40980.606 ns/op
Iteration  11: 32724.669 ns/op
Iteration  12: 33229.462 ns/op
Iteration  13: 32023.219 ns/op
Iteration  14: 35867.790 ns/op
Iteration  15: 36232.320 ns/op
Iteration  16: 39441.922 ns/op
Iteration  17: 36625.188 ns/op
Iteration  18: 36714.815 ns/op
Iteration  19: 30137.009 ns/op
Iteration  20: 36450.076 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenStubbedUrlRegexBeginsWith_AndSubmittedUrlWrong":
  35255.687 ±(99.9%) 1745.493 ns/op [Average]
  (min, avg, max) = (29764.518, 35255.687, 41984.796), stdev = 3102.613
  CI (99.9%): [33510.194, 37001.181] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenSubmittedUrlLonger

# Run progress: 81.63% complete, ETA 01:03:54
# Fork: 1 of 2
# Warmup Iteration   1: 312662.731 ns/op
# Warmup Iteration   2: 97766.556 ns/op
# Warmup Iteration   3: 48409.712 ns/op
# Warmup Iteration   4: 41133.560 ns/op
# Warmup Iteration   5: 33264.035 ns/op
# Warmup Iteration   6: 24480.165 ns/op
# Warmup Iteration   7: 27443.023 ns/op
# Warmup Iteration   8: 35943.821 ns/op
# Warmup Iteration   9: 36155.934 ns/op
# Warmup Iteration  10: 35677.536 ns/op
Iteration   1: 33898.416 ns/op
Iteration   2: 37194.194 ns/op
Iteration   3: 32253.364 ns/op
Iteration   4: 30269.777 ns/op
Iteration   5: 28646.702 ns/op
Iteration   6: 32000.813 ns/op
Iteration   7: 30441.760 ns/op
Iteration   8: 33808.942 ns/op
Iteration   9: 30721.161 ns/op
Iteration  10: 34302.934 ns/op
Iteration  11: 32898.159 ns/op
Iteration  12: 27367.411 ns/op
Iteration  13: 39535.340 ns/op
Iteration  14: 35878.040 ns/op
Iteration  15: 29795.332 ns/op
Iteration  16: 28875.295 ns/op
Iteration  17: 37319.657 ns/op
Iteration  18: 32666.305 ns/op
Iteration  19: 38964.957 ns/op
Iteration  20: 37244.247 ns/op

# Run progress: 81.70% complete, ETA 01:03:42
# Fork: 2 of 2
# Warmup Iteration   1: 298482.660 ns/op
# Warmup Iteration   2: 218040.032 ns/op
# Warmup Iteration   3: 121687.292 ns/op
# Warmup Iteration   4: 40164.702 ns/op
# Warmup Iteration   5: 38216.469 ns/op
# Warmup Iteration   6: 27131.091 ns/op
# Warmup Iteration   7: 27490.623 ns/op
# Warmup Iteration   8: 30884.851 ns/op
# Warmup Iteration   9: 38842.928 ns/op
# Warmup Iteration  10: 38115.501 ns/op
Iteration   1: 33344.264 ns/op
Iteration   2: 31567.067 ns/op
Iteration   3: 37807.374 ns/op
Iteration   4: 29088.246 ns/op
Iteration   5: 31305.889 ns/op
Iteration   6: 37554.518 ns/op
Iteration   7: 35949.324 ns/op
Iteration   8: 40070.408 ns/op
Iteration   9: 31606.200 ns/op
Iteration  10: 38003.192 ns/op
Iteration  11: 33341.459 ns/op
Iteration  12: 35719.478 ns/op
Iteration  13: 35078.134 ns/op
Iteration  14: 40477.806 ns/op
Iteration  15: 29805.186 ns/op
Iteration  16: 31021.182 ns/op
Iteration  17: 28914.208 ns/op
Iteration  18: 31778.099 ns/op
Iteration  19: 30341.617 ns/op
Iteration  20: 30372.743 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenSubmittedUrlLonger":
  33430.730 ±(99.9%) 2012.970 ns/op [Average]
  (min, avg, max) = (27367.411, 33430.730, 40477.806), stdev = 3578.052
  CI (99.9%): [31417.760, 35443.699] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenSubmittedUrlShorter

# Run progress: 81.78% complete, ETA 01:03:30
# Fork: 1 of 2
# Warmup Iteration   1: 286105.440 ns/op
# Warmup Iteration   2: 59262.416 ns/op
# Warmup Iteration   3: 115564.949 ns/op
# Warmup Iteration   4: 40238.531 ns/op
# Warmup Iteration   5: 22766.924 ns/op
# Warmup Iteration   6: 23545.403 ns/op
# Warmup Iteration   7: 32397.434 ns/op
# Warmup Iteration   8: 36835.713 ns/op
# Warmup Iteration   9: 34651.706 ns/op
# Warmup Iteration  10: 34963.709 ns/op
Iteration   1: 37318.032 ns/op
Iteration   2: 35844.339 ns/op
Iteration   3: 39026.712 ns/op
Iteration   4: 38258.627 ns/op
Iteration   5: 35561.420 ns/op
Iteration   6: 36894.469 ns/op
Iteration   7: 39374.638 ns/op
Iteration   8: 31837.390 ns/op
Iteration   9: 32901.810 ns/op
Iteration  10: 34359.802 ns/op
Iteration  11: 33881.912 ns/op
Iteration  12: 35113.692 ns/op
Iteration  13: 39681.961 ns/op
Iteration  14: 32851.924 ns/op
Iteration  15: 31120.779 ns/op
Iteration  16: 35315.559 ns/op
Iteration  17: 31318.193 ns/op
Iteration  18: 32629.217 ns/op
Iteration  19: 31722.388 ns/op
Iteration  20: 36603.546 ns/op

# Run progress: 81.85% complete, ETA 01:03:18
# Fork: 2 of 2
# Warmup Iteration   1: 282470.301 ns/op
# Warmup Iteration   2: 169674.300 ns/op
# Warmup Iteration   3: 98707.390 ns/op
# Warmup Iteration   4: 36641.848 ns/op
# Warmup Iteration   5: 22500.441 ns/op
# Warmup Iteration   6: 25612.539 ns/op
# Warmup Iteration   7: 27469.816 ns/op
# Warmup Iteration   8: 37855.574 ns/op
# Warmup Iteration   9: 40788.451 ns/op
# Warmup Iteration  10: 31870.474 ns/op
Iteration   1: 31837.303 ns/op
Iteration   2: 29527.767 ns/op
Iteration   3: 43906.005 ns/op
Iteration   4: 31773.656 ns/op
Iteration   5: 31268.838 ns/op
Iteration   6: 34562.612 ns/op
Iteration   7: 32703.830 ns/op
Iteration   8: 27367.113 ns/op
Iteration   9: 41319.142 ns/op
Iteration  10: 33917.829 ns/op
Iteration  11: 36177.279 ns/op
Iteration  12: 29947.073 ns/op
Iteration  13: 51930.970 ns/op
Iteration  14: 31216.608 ns/op
Iteration  15: 36321.097 ns/op
Iteration  16: 30929.968 ns/op
Iteration  17: 44755.861 ns/op
Iteration  18: 31457.966 ns/op
Iteration  19: 43196.297 ns/op
Iteration  20: 29799.201 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenSubmittedUrlShorter":
  35138.321 ±(99.9%) 2764.957 ns/op [Average]
  (min, avg, max) = (27367.113, 35138.321, 51930.970), stdev = 4914.709
  CI (99.9%): [32373.363, 37903.278] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenUrlRegexifiedAccomodatesForQueryString_ButBadAssertionUrlConfigured

# Run progress: 81.93% complete, ETA 01:03:06
# Fork: 1 of 2
# Warmup Iteration   1: 734583.579 ns/op
# Warmup Iteration   2: 541122.904 ns/op
# Warmup Iteration   3: 277726.528 ns/op
# Warmup Iteration   4: 137339.798 ns/op
# Warmup Iteration   5: 105415.347 ns/op
# Warmup Iteration   6: 76911.469 ns/op
# Warmup Iteration   7: 95793.663 ns/op
# Warmup Iteration   8: 102635.325 ns/op
# Warmup Iteration   9: 100214.833 ns/op
# Warmup Iteration  10: 98449.187 ns/op
Iteration   1: 98068.209 ns/op
Iteration   2: 108550.618 ns/op
Iteration   3: 106248.851 ns/op
Iteration   4: 107351.056 ns/op
Iteration   5: 109485.297 ns/op
Iteration   6: 103177.957 ns/op
Iteration   7: 114569.041 ns/op
Iteration   8: 97169.534 ns/op
Iteration   9: 93587.540 ns/op
Iteration  10: 91331.395 ns/op
Iteration  11: 97199.237 ns/op
Iteration  12: 93158.837 ns/op
Iteration  13: 105529.121 ns/op
Iteration  14: 89877.127 ns/op
Iteration  15: 97768.338 ns/op
Iteration  16: 98820.904 ns/op
Iteration  17: 95842.107 ns/op
Iteration  18: 107797.809 ns/op
Iteration  19: 119971.743 ns/op
Iteration  20: 103532.350 ns/op

# Run progress: 82.00% complete, ETA 01:02:53
# Fork: 2 of 2
# Warmup Iteration   1: 775247.838 ns/op
# Warmup Iteration   2: 474738.781 ns/op
# Warmup Iteration   3: 466920.516 ns/op
# Warmup Iteration   4: 137660.187 ns/op
# Warmup Iteration   5: 102780.227 ns/op
# Warmup Iteration   6: 89513.501 ns/op
# Warmup Iteration   7: 91591.373 ns/op
# Warmup Iteration   8: 105682.248 ns/op
# Warmup Iteration   9: 102234.653 ns/op
# Warmup Iteration  10: 99402.392 ns/op
Iteration   1: 101118.050 ns/op
Iteration   2: 92173.981 ns/op
Iteration   3: 105678.702 ns/op
Iteration   4: 106347.343 ns/op
Iteration   5: 96794.730 ns/op
Iteration   6: 99638.915 ns/op
Iteration   7: 96766.203 ns/op
Iteration   8: 99302.376 ns/op
Iteration   9: 113375.608 ns/op
Iteration  10: 94215.961 ns/op
Iteration  11: 95993.298 ns/op
Iteration  12: 98450.096 ns/op
Iteration  13: 101435.256 ns/op
Iteration  14: 92355.415 ns/op
Iteration  15: 112505.885 ns/op
Iteration  16: 105411.804 ns/op
Iteration  17: 100882.029 ns/op
Iteration  18: 106486.925 ns/op
Iteration  19: 109195.857 ns/op
Iteration  20: 108035.740 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenUrlRegexifiedAccomodatesForQueryString_ButBadAssertionUrlConfigured":
  101880.031 ±(99.9%) 4002.540 ns/op [Average]
  (min, avg, max) = (89877.127, 101880.031, 119971.743), stdev = 7114.511
  CI (99.9%): [97877.492, 105882.571] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenUrlRegexifiedHasQueryString

# Run progress: 82.08% complete, ETA 01:02:41
# Fork: 1 of 2
# Warmup Iteration   1: 1048954.828 ns/op
# Warmup Iteration   2: 496597.259 ns/op
# Warmup Iteration   3: 223810.233 ns/op
# Warmup Iteration   4: 115823.565 ns/op
# Warmup Iteration   5: 84283.843 ns/op
# Warmup Iteration   6: 95609.071 ns/op
# Warmup Iteration   7: 101680.959 ns/op
# Warmup Iteration   8: 116261.089 ns/op
# Warmup Iteration   9: 98507.205 ns/op
# Warmup Iteration  10: 95608.276 ns/op
Iteration   1: 102846.710 ns/op
Iteration   2: 117044.591 ns/op
Iteration   3: 112716.013 ns/op
Iteration   4: 101868.851 ns/op
Iteration   5: 91063.983 ns/op
Iteration   6: 101469.125 ns/op
Iteration   7: 96456.090 ns/op
Iteration   8: 94998.652 ns/op
Iteration   9: 109720.711 ns/op
Iteration  10: 94694.178 ns/op
Iteration  11: 100531.865 ns/op
Iteration  12: 108292.543 ns/op
Iteration  13: 99749.788 ns/op
Iteration  14: 95381.884 ns/op
Iteration  15: 108128.161 ns/op
Iteration  16: 92758.605 ns/op
Iteration  17: 108963.470 ns/op
Iteration  18: 117117.182 ns/op
Iteration  19: 104644.537 ns/op
Iteration  20: 111233.206 ns/op

# Run progress: 82.15% complete, ETA 01:02:29
# Fork: 2 of 2
# Warmup Iteration   1: 925987.375 ns/op
# Warmup Iteration   2: 273791.658 ns/op
# Warmup Iteration   3: 189356.601 ns/op
# Warmup Iteration   4: 106399.458 ns/op
# Warmup Iteration   5: 86334.756 ns/op
# Warmup Iteration   6: 91793.562 ns/op
# Warmup Iteration   7: 112953.341 ns/op
# Warmup Iteration   8: 100730.626 ns/op
# Warmup Iteration   9: 98024.023 ns/op
# Warmup Iteration  10: 94578.025 ns/op
Iteration   1: 101709.080 ns/op
Iteration   2: 97171.719 ns/op
Iteration   3: 103544.996 ns/op
Iteration   4: 117923.928 ns/op
Iteration   5: 114889.570 ns/op
Iteration   6: 117355.828 ns/op
Iteration   7: 96226.956 ns/op
Iteration   8: 98658.862 ns/op
Iteration   9: 119689.089 ns/op
Iteration  10: 116658.597 ns/op
Iteration  11: 89382.028 ns/op
Iteration  12: 113821.546 ns/op
Iteration  13: 115398.397 ns/op
Iteration  14: 100903.756 ns/op
Iteration  15: 100567.759 ns/op
Iteration  16: 110403.676 ns/op
Iteration  17: 101936.024 ns/op
Iteration  18: 100210.072 ns/op
Iteration  19: 109727.240 ns/op
Iteration  20: 105546.507 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenUrlRegexifiedHasQueryString":
  105035.144 ±(99.9%) 4724.413 ns/op [Average]
  (min, avg, max) = (89382.028, 105035.144, 119689.089), stdev = 8397.639
  CI (99.9%): [100310.732, 109759.557] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenUrlRegexifiedWithStaticQueryString

# Run progress: 82.23% complete, ETA 01:02:16
# Fork: 1 of 2
# Warmup Iteration   1: 955850.767 ns/op
# Warmup Iteration   2: 473713.230 ns/op
# Warmup Iteration   3: 169793.853 ns/op
# Warmup Iteration   4: 130136.114 ns/op
# Warmup Iteration   5: 90304.027 ns/op
# Warmup Iteration   6: 91811.473 ns/op
# Warmup Iteration   7: 95628.446 ns/op
# Warmup Iteration   8: 99638.031 ns/op
# Warmup Iteration   9: 99447.181 ns/op
# Warmup Iteration  10: 116009.407 ns/op
Iteration   1: 97986.143 ns/op
Iteration   2: 96051.087 ns/op
Iteration   3: 106768.981 ns/op
Iteration   4: 94217.167 ns/op
Iteration   5: 103992.232 ns/op
Iteration   6: 86612.751 ns/op
Iteration   7: 109247.502 ns/op
Iteration   8: 91772.029 ns/op
Iteration   9: 95967.927 ns/op
Iteration  10: 113229.742 ns/op
Iteration  11: 109670.314 ns/op
Iteration  12: 111626.779 ns/op
Iteration  13: 110644.902 ns/op
Iteration  14: 110506.290 ns/op
Iteration  15: 94091.362 ns/op
Iteration  16: 105244.567 ns/op
Iteration  17: 98898.881 ns/op
Iteration  18: 107756.682 ns/op
Iteration  19: 100659.820 ns/op
Iteration  20: 112471.444 ns/op

# Run progress: 82.30% complete, ETA 01:02:04
# Fork: 2 of 2
# Warmup Iteration   1: 729729.366 ns/op
# Warmup Iteration   2: 502498.594 ns/op
# Warmup Iteration   3: 173873.145 ns/op
# Warmup Iteration   4: 116915.841 ns/op
# Warmup Iteration   5: 82873.690 ns/op
# Warmup Iteration   6: 85064.729 ns/op
# Warmup Iteration   7: 120528.352 ns/op
# Warmup Iteration   8: 102369.472 ns/op
# Warmup Iteration   9: 91515.266 ns/op
# Warmup Iteration  10: 110276.494 ns/op
Iteration   1: 113180.058 ns/op
Iteration   2: 91510.977 ns/op
Iteration   3: 107466.102 ns/op
Iteration   4: 96697.789 ns/op
Iteration   5: 85858.650 ns/op
Iteration   6: 103583.417 ns/op
Iteration   7: 104080.576 ns/op
Iteration   8: 95596.434 ns/op
Iteration   9: 100210.861 ns/op
Iteration  10: 116705.418 ns/op
Iteration  11: 103952.520 ns/op
Iteration  12: 122771.411 ns/op
Iteration  13: 101890.766 ns/op
Iteration  14: 122902.333 ns/op
Iteration  15: 86138.580 ns/op
Iteration  16: 98063.729 ns/op
Iteration  17: 104261.539 ns/op
Iteration  18: 95078.575 ns/op
Iteration  19: 102884.110 ns/op
Iteration  20: 104215.443 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenUrlRegexifiedWithStaticQueryString":
  102861.647 ±(99.9%) 5104.142 ns/op [Average]
  (min, avg, max) = (85858.650, 102861.647, 122902.333), stdev = 9072.607
  CI (99.9%): [97757.505, 107965.789] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenUrlRegexified_ButBadAssertionUrlConfigured

# Run progress: 82.38% complete, ETA 01:01:52
# Fork: 1 of 2
# Warmup Iteration   1: 252297.591 ns/op
# Warmup Iteration   2: 114601.801 ns/op
# Warmup Iteration   3: 127449.054 ns/op
# Warmup Iteration   4: 78826.590 ns/op
# Warmup Iteration   5: 37009.035 ns/op
# Warmup Iteration   6: 27325.982 ns/op
# Warmup Iteration   7: 23206.547 ns/op
# Warmup Iteration   8: 34552.844 ns/op
# Warmup Iteration   9: 31244.161 ns/op
# Warmup Iteration  10: 29302.152 ns/op
Iteration   1: 41387.938 ns/op
Iteration   2: 34734.651 ns/op
Iteration   3: 28991.981 ns/op
Iteration   4: 39941.461 ns/op
Iteration   5: 37674.349 ns/op
Iteration   6: 31862.360 ns/op
Iteration   7: 43526.652 ns/op
Iteration   8: 41601.490 ns/op
Iteration   9: 37809.295 ns/op
Iteration  10: 34584.644 ns/op
Iteration  11: 42299.985 ns/op
Iteration  12: 33347.320 ns/op
Iteration  13: 32285.561 ns/op
Iteration  14: 30684.094 ns/op
Iteration  15: 30314.948 ns/op
Iteration  16: 36393.492 ns/op
Iteration  17: 34337.281 ns/op
Iteration  18: 33690.712 ns/op
Iteration  19: 31172.170 ns/op
Iteration  20: 37255.773 ns/op

# Run progress: 82.45% complete, ETA 01:01:39
# Fork: 2 of 2
# Warmup Iteration   1: 246412.820 ns/op
# Warmup Iteration   2: 145623.199 ns/op
# Warmup Iteration   3: 66954.570 ns/op
# Warmup Iteration   4: 40398.504 ns/op
# Warmup Iteration   5: 34297.829 ns/op
# Warmup Iteration   6: 27414.903 ns/op
# Warmup Iteration   7: 27306.986 ns/op
# Warmup Iteration   8: 35719.294 ns/op
# Warmup Iteration   9: 34848.750 ns/op
# Warmup Iteration  10: 34511.434 ns/op
Iteration   1: 34798.890 ns/op
Iteration   2: 32679.210 ns/op
Iteration   3: 35977.847 ns/op
Iteration   4: 32692.645 ns/op
Iteration   5: 38670.326 ns/op
Iteration   6: 37400.360 ns/op
Iteration   7: 33503.412 ns/op
Iteration   8: 31955.224 ns/op
Iteration   9: 37005.626 ns/op
Iteration  10: 37686.358 ns/op
Iteration  11: 32484.278 ns/op
Iteration  12: 34016.690 ns/op
Iteration  13: 30910.103 ns/op
Iteration  14: 31688.985 ns/op
Iteration  15: 35551.206 ns/op
Iteration  16: 34874.356 ns/op
Iteration  17: 36076.125 ns/op
Iteration  18: 37489.582 ns/op
Iteration  19: 29697.605 ns/op
Iteration  20: 36596.712 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenUrlRegexified_ButBadAssertionUrlConfigured":
  35141.292 ±(99.9%) 2007.841 ns/op [Average]
  (min, avg, max) = (28991.981, 35141.292, 43526.652), stdev = 3568.935
  CI (99.9%): [33133.452, 37149.133] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenUrlStubbed_ButNoUrlSubmitted

# Run progress: 82.53% complete, ETA 01:01:27
# Fork: 1 of 2
# Warmup Iteration   1: 94627.890 ns/op
# Warmup Iteration   2: 89546.314 ns/op
# Warmup Iteration   3: 84039.100 ns/op
# Warmup Iteration   4: 87045.942 ns/op
# Warmup Iteration   5: 31395.288 ns/op
# Warmup Iteration   6: 29826.433 ns/op
# Warmup Iteration   7: 29026.756 ns/op
# Warmup Iteration   8: 31736.740 ns/op
# Warmup Iteration   9: 32480.764 ns/op
# Warmup Iteration  10: 31054.217 ns/op
Iteration   1: 36461.864 ns/op
Iteration   2: 35100.043 ns/op
Iteration   3: 37690.780 ns/op
Iteration   4: 37749.652 ns/op
Iteration   5: 34763.628 ns/op
Iteration   6: 28795.233 ns/op
Iteration   7: 35535.809 ns/op
Iteration   8: 34168.341 ns/op
Iteration   9: 30357.954 ns/op
Iteration  10: 35104.514 ns/op
Iteration  11: 30970.819 ns/op
Iteration  12: 29617.434 ns/op
Iteration  13: 35209.508 ns/op
Iteration  14: 31097.839 ns/op
Iteration  15: 32024.186 ns/op
Iteration  16: 32175.865 ns/op
Iteration  17: 42113.671 ns/op
Iteration  18: 32495.351 ns/op
Iteration  19: 29946.024 ns/op
Iteration  20: 30122.578 ns/op

# Run progress: 82.61% complete, ETA 01:01:15
# Fork: 2 of 2
# Warmup Iteration   1: 157961.575 ns/op
# Warmup Iteration   2: 86726.534 ns/op
# Warmup Iteration   3: 30005.159 ns/op
# Warmup Iteration   4: 24886.183 ns/op
# Warmup Iteration   5: 50360.529 ns/op
# Warmup Iteration   6: 36188.233 ns/op
# Warmup Iteration   7: 30585.264 ns/op
# Warmup Iteration   8: 40766.958 ns/op
# Warmup Iteration   9: 31741.599 ns/op
# Warmup Iteration  10: 39386.210 ns/op
Iteration   1: 33734.475 ns/op
Iteration   2: 29411.136 ns/op
Iteration   3: 32623.621 ns/op
Iteration   4: 34065.707 ns/op
Iteration   5: 34541.667 ns/op
Iteration   6: 31111.411 ns/op
Iteration   7: 37015.715 ns/op
Iteration   8: 41601.322 ns/op
Iteration   9: 33316.134 ns/op
Iteration  10: 36614.610 ns/op
Iteration  11: 33666.746 ns/op
Iteration  12: 35179.640 ns/op
Iteration  13: 27611.471 ns/op
Iteration  14: 35280.506 ns/op
Iteration  15: 34350.066 ns/op
Iteration  16: 31196.047 ns/op
Iteration  17: 36815.479 ns/op
Iteration  18: 36087.897 ns/op
Iteration  19: 32219.297 ns/op
Iteration  20: 30981.997 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenUrlStubbed_ButNoUrlSubmitted":
  33723.151 ±(99.9%) 1810.360 ns/op [Average]
  (min, avg, max) = (27611.471, 33723.151, 42113.671), stdev = 3217.914
  CI (99.9%): [31912.790, 35533.511] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenUrlStubbed_ButNullUrlSubmitted

# Run progress: 82.68% complete, ETA 01:01:02
# Fork: 1 of 2
# Warmup Iteration   1: 201816.014 ns/op
# Warmup Iteration   2: 141039.474 ns/op
# Warmup Iteration   3: 56167.035 ns/op
# Warmup Iteration   4: 27594.593 ns/op
# Warmup Iteration   5: 25847.516 ns/op
# Warmup Iteration   6: 35389.328 ns/op
# Warmup Iteration   7: 30561.982 ns/op
# Warmup Iteration   8: 26983.759 ns/op
# Warmup Iteration   9: 42637.214 ns/op
# Warmup Iteration  10: 39809.174 ns/op
Iteration   1: 35900.895 ns/op
Iteration   2: 28953.602 ns/op
Iteration   3: 47750.274 ns/op
Iteration   4: 35482.476 ns/op
Iteration   5: 31304.213 ns/op
Iteration   6: 31965.738 ns/op
Iteration   7: 28113.883 ns/op
Iteration   8: 39010.769 ns/op
Iteration   9: 40536.052 ns/op
Iteration  10: 32000.112 ns/op
Iteration  11: 27962.147 ns/op
Iteration  12: 34454.958 ns/op
Iteration  13: 41301.269 ns/op
Iteration  14: 31915.630 ns/op
Iteration  15: 31051.253 ns/op
Iteration  16: 36265.427 ns/op
Iteration  17: 29213.275 ns/op
Iteration  18: 31293.152 ns/op
Iteration  19: 35715.620 ns/op
Iteration  20: 36317.328 ns/op

# Run progress: 82.76% complete, ETA 01:00:50
# Fork: 2 of 2
# Warmup Iteration   1: 116875.588 ns/op
# Warmup Iteration   2: 81361.884 ns/op
# Warmup Iteration   3: 31576.753 ns/op
# Warmup Iteration   4: 27478.625 ns/op
# Warmup Iteration   5: 24336.951 ns/op
# Warmup Iteration   6: 28780.588 ns/op
# Warmup Iteration   7: 33780.672 ns/op
# Warmup Iteration   8: 39185.713 ns/op
# Warmup Iteration   9: 29606.400 ns/op
# Warmup Iteration  10: 26012.711 ns/op
Iteration   1: 37445.630 ns/op
Iteration   2: 33338.688 ns/op
Iteration   3: 28261.203 ns/op
Iteration   4: 38770.018 ns/op
Iteration   5: 38548.366 ns/op
Iteration   6: 30670.365 ns/op
Iteration   7: 34413.267 ns/op
Iteration   8: 31335.542 ns/op
Iteration   9: 33188.638 ns/op
Iteration  10: 39026.820 ns/op
Iteration  11: 36952.800 ns/op
Iteration  12: 32577.620 ns/op
Iteration  13: 36513.697 ns/op
Iteration  14: 29430.350 ns/op
Iteration  15: 32572.288 ns/op
Iteration  16: 39715.295 ns/op
Iteration  17: 39979.417 ns/op
Iteration  18: 33806.690 ns/op
Iteration  19: 31314.136 ns/op
Iteration  20: 27937.242 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenUrlStubbed_ButNullUrlSubmitted":
  34307.654 ±(99.9%) 2494.122 ns/op [Average]
  (min, avg, max) = (27937.242, 34307.654, 47750.274), stdev = 4433.300
  CI (99.9%): [31813.531, 36801.776] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnEmptyRegexGroup_WhenValidRegexHasNoMatcherGroups

# Run progress: 82.83% complete, ETA 01:00:37
# Fork: 1 of 2
# Warmup Iteration   1: 607696.556 ns/op
# Warmup Iteration   2: 212427.459 ns/op
# Warmup Iteration   3: 101015.292 ns/op
# Warmup Iteration   4: 92566.877 ns/op
# Warmup Iteration   5: 74352.169 ns/op
# Warmup Iteration   6: 79286.851 ns/op
# Warmup Iteration   7: 61315.229 ns/op
# Warmup Iteration   8: 55775.170 ns/op
# Warmup Iteration   9: 71203.395 ns/op
# Warmup Iteration  10: 57913.920 ns/op
Iteration   1: 66259.510 ns/op
Iteration   2: 63430.998 ns/op
Iteration   3: 56318.507 ns/op
Iteration   4: 60044.962 ns/op
Iteration   5: 71376.783 ns/op
Iteration   6: 70215.898 ns/op
Iteration   7: 66802.346 ns/op
Iteration   8: 81659.037 ns/op
Iteration   9: 55593.126 ns/op
Iteration  10: 60552.993 ns/op
Iteration  11: 65610.189 ns/op
Iteration  12: 57050.011 ns/op
Iteration  13: 70750.638 ns/op
Iteration  14: 60648.951 ns/op
Iteration  15: 74864.722 ns/op
Iteration  16: 76047.243 ns/op
Iteration  17: 64166.315 ns/op
Iteration  18: 67045.445 ns/op
Iteration  19: 54501.148 ns/op
Iteration  20: 67621.202 ns/op

# Run progress: 82.91% complete, ETA 01:00:25
# Fork: 2 of 2
# Warmup Iteration   1: 702911.953 ns/op
# Warmup Iteration   2: 273147.162 ns/op
# Warmup Iteration   3: 122320.278 ns/op
# Warmup Iteration   4: 70844.571 ns/op
# Warmup Iteration   5: 62460.003 ns/op
# Warmup Iteration   6: 65387.303 ns/op
# Warmup Iteration   7: 73159.404 ns/op
# Warmup Iteration   8: 87646.427 ns/op
# Warmup Iteration   9: 67352.597 ns/op
# Warmup Iteration  10: 73288.753 ns/op
Iteration   1: 61172.245 ns/op
Iteration   2: 72051.665 ns/op
Iteration   3: 61048.673 ns/op
Iteration   4: 61538.238 ns/op
Iteration   5: 63548.592 ns/op
Iteration   6: 71870.548 ns/op
Iteration   7: 73691.975 ns/op
Iteration   8: 68469.511 ns/op
Iteration   9: 66651.549 ns/op
Iteration  10: 66868.131 ns/op
Iteration  11: 75767.006 ns/op
Iteration  12: 77388.260 ns/op
Iteration  13: 66329.444 ns/op
Iteration  14: 67570.249 ns/op
Iteration  15: 76632.723 ns/op
Iteration  16: 62472.528 ns/op
Iteration  17: 75151.468 ns/op
Iteration  18: 71192.612 ns/op
Iteration  19: 71842.377 ns/op
Iteration  20: 76661.050 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnEmptyRegexGroup_WhenValidRegexHasNoMatcherGroups":
  67461.972 ±(99.9%) 3772.986 ns/op [Average]
  (min, avg, max) = (54501.148, 67461.972, 81659.037), stdev = 6706.480
  CI (99.9%): [63688.985, 71234.958] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnMultipleRegexGroups_WhenRegexHasCapturingGroupWhichIsAlsoFullRegex

# Run progress: 82.98% complete, ETA 01:00:12
# Fork: 1 of 2
# Warmup Iteration   1: 469045.153 ns/op
# Warmup Iteration   2: 265324.685 ns/op
# Warmup Iteration   3: 95851.473 ns/op
# Warmup Iteration   4: 66853.444 ns/op
# Warmup Iteration   5: 50138.657 ns/op
# Warmup Iteration   6: 45747.201 ns/op
# Warmup Iteration   7: 74691.571 ns/op
# Warmup Iteration   8: 72123.715 ns/op
# Warmup Iteration   9: 66611.394 ns/op
# Warmup Iteration  10: 61321.753 ns/op
Iteration   1: 74760.623 ns/op
Iteration   2: 77553.337 ns/op
Iteration   3: 63057.091 ns/op
Iteration   4: 70420.347 ns/op
Iteration   5: 70472.806 ns/op
Iteration   6: 66092.420 ns/op
Iteration   7: 77186.545 ns/op
Iteration   8: 71860.446 ns/op
Iteration   9: 64906.024 ns/op
Iteration  10: 67374.279 ns/op
Iteration  11: 67515.543 ns/op
Iteration  12: 63425.683 ns/op
Iteration  13: 60043.124 ns/op
Iteration  14: 64391.294 ns/op
Iteration  15: 68563.856 ns/op
Iteration  16: 63741.626 ns/op
Iteration  17: 77199.339 ns/op
Iteration  18: 68959.008 ns/op
Iteration  19: 63438.510 ns/op
Iteration  20: 75142.144 ns/op

# Run progress: 83.06% complete, ETA 00:59:59
# Fork: 2 of 2
# Warmup Iteration   1: 826032.362 ns/op
# Warmup Iteration   2: 345824.818 ns/op
# Warmup Iteration   3: 132819.990 ns/op
# Warmup Iteration   4: 69175.210 ns/op
# Warmup Iteration   5: 59630.028 ns/op
# Warmup Iteration   6: 59738.516 ns/op
# Warmup Iteration   7: 48180.531 ns/op
# Warmup Iteration   8: 56929.652 ns/op
# Warmup Iteration   9: 63024.039 ns/op
# Warmup Iteration  10: 66861.160 ns/op
Iteration   1: 77067.587 ns/op
Iteration   2: 71867.965 ns/op
Iteration   3: 66133.847 ns/op
Iteration   4: 64238.063 ns/op
Iteration   5: 74008.464 ns/op
Iteration   6: 58805.346 ns/op
Iteration   7: 63546.074 ns/op
Iteration   8: 75445.812 ns/op
Iteration   9: 74856.983 ns/op
Iteration  10: 71241.503 ns/op
Iteration  11: 70371.333 ns/op
Iteration  12: 74968.903 ns/op
Iteration  13: 71232.670 ns/op
Iteration  14: 63470.178 ns/op
Iteration  15: 66363.245 ns/op
Iteration  16: 68364.693 ns/op
Iteration  17: 70651.356 ns/op
Iteration  18: 70231.369 ns/op
Iteration  19: 60255.762 ns/op
Iteration  20: 70491.899 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnMultipleRegexGroups_WhenRegexHasCapturingGroupWhichIsAlsoFullRegex":
  68992.927 ±(99.9%) 2925.480 ns/op [Average]
  (min, avg, max) = (58805.346, 68992.927, 77553.337), stdev = 5200.038
  CI (99.9%): [66067.447, 71918.407] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnMultipleRegexGroups_WhenValidRegexHasCapturingGroupsInMultipleProperties

# Run progress: 83.13% complete, ETA 00:59:47
# Fork: 1 of 2
# Warmup Iteration   1: 981541.539 ns/op
# Warmup Iteration   2: 500542.507 ns/op
# Warmup Iteration   3: 205316.027 ns/op
# Warmup Iteration   4: 135884.345 ns/op
# Warmup Iteration   5: 86811.656 ns/op
# Warmup Iteration   6: 97420.073 ns/op
# Warmup Iteration   7: 128322.106 ns/op
# Warmup Iteration   8: 120785.701 ns/op
# Warmup Iteration   9: 104484.217 ns/op
# Warmup Iteration  10: 98823.978 ns/op
Iteration   1: 98014.628 ns/op
Iteration   2: 113355.232 ns/op
Iteration   3: 93901.280 ns/op
Iteration   4: 123701.173 ns/op
Iteration   5: 106339.217 ns/op
Iteration   6: 93242.209 ns/op
Iteration   7: 89116.019 ns/op
Iteration   8: 101156.394 ns/op
Iteration   9: 108841.276 ns/op
Iteration  10: 117711.793 ns/op
Iteration  11: 91949.086 ns/op
Iteration  12: 118488.885 ns/op
Iteration  13: 113037.511 ns/op
Iteration  14: 100519.874 ns/op
Iteration  15: 103866.192 ns/op
Iteration  16: 110914.543 ns/op
Iteration  17: 111338.440 ns/op
Iteration  18: 99194.101 ns/op
Iteration  19: 105492.224 ns/op
Iteration  20: 118248.782 ns/op

# Run progress: 83.21% complete, ETA 00:59:34
# Fork: 2 of 2
# Warmup Iteration   1: 879874.157 ns/op
# Warmup Iteration   2: 376017.127 ns/op
# Warmup Iteration   3: 173029.041 ns/op
# Warmup Iteration   4: 116586.445 ns/op
# Warmup Iteration   5: 112776.522 ns/op
# Warmup Iteration   6: 94112.855 ns/op
# Warmup Iteration   7: 91867.135 ns/op
# Warmup Iteration   8: 104132.183 ns/op
# Warmup Iteration   9: 98576.148 ns/op
# Warmup Iteration  10: 102222.923 ns/op
Iteration   1: 101715.280 ns/op
Iteration   2: 106455.799 ns/op
Iteration   3: 113899.570 ns/op
Iteration   4: 108124.319 ns/op
Iteration   5: 109781.977 ns/op
Iteration   6: 113207.147 ns/op
Iteration   7: 105790.402 ns/op
Iteration   8: 112147.642 ns/op
Iteration   9: 98387.900 ns/op
Iteration  10: 92785.834 ns/op
Iteration  11: 89699.488 ns/op
Iteration  12: 109186.514 ns/op
Iteration  13: 117601.863 ns/op
Iteration  14: 101953.065 ns/op
Iteration  15: 96402.044 ns/op
Iteration  16: 110350.280 ns/op
Iteration  17: 114105.168 ns/op
Iteration  18: 100469.352 ns/op
Iteration  19: 92682.042 ns/op
Iteration  20: 95632.456 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnMultipleRegexGroups_WhenValidRegexHasCapturingGroupsInMultipleProperties":
  105220.175 ±(99.9%) 5094.307 ns/op [Average]
  (min, avg, max) = (89116.019, 105220.175, 123701.173), stdev = 9055.127
  CI (99.9%): [100125.868, 110314.482] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnMultipleRegexGroups_WhenValidRegexHasCapturingGroupsInQuery

# Run progress: 83.28% complete, ETA 00:59:21
# Fork: 1 of 2
# Warmup Iteration   1: 960990.581 ns/op
# Warmup Iteration   2: 674791.174 ns/op
# Warmup Iteration   3: 253744.849 ns/op
# Warmup Iteration   4: 132749.672 ns/op
# Warmup Iteration   5: 111418.308 ns/op
# Warmup Iteration   6: 98773.035 ns/op
# Warmup Iteration   7: 99581.520 ns/op
# Warmup Iteration   8: 96219.776 ns/op
# Warmup Iteration   9: 123950.604 ns/op
# Warmup Iteration  10: 118453.959 ns/op
Iteration   1: 116121.916 ns/op
Iteration   2: 114694.664 ns/op
Iteration   3: 122824.766 ns/op
Iteration   4: 99137.163 ns/op
Iteration   5: 98583.620 ns/op
Iteration   6: 102603.961 ns/op
Iteration   7: 105727.495 ns/op
Iteration   8: 110459.549 ns/op
Iteration   9: 106184.776 ns/op
Iteration  10: 99175.038 ns/op
Iteration  11: 113913.260 ns/op
Iteration  12: 100833.673 ns/op
Iteration  13: 110794.209 ns/op
Iteration  14: 120040.895 ns/op
Iteration  15: 118373.544 ns/op
Iteration  16: 117461.961 ns/op
Iteration  17: 122715.945 ns/op
Iteration  18: 95363.808 ns/op
Iteration  19: 115773.299 ns/op
Iteration  20: 103525.137 ns/op

# Run progress: 83.36% complete, ETA 00:59:08
# Fork: 2 of 2
# Warmup Iteration   1: 1132307.525 ns/op
# Warmup Iteration   2: 536788.915 ns/op
# Warmup Iteration   3: 362389.875 ns/op
# Warmup Iteration   4: 155904.180 ns/op
# Warmup Iteration   5: 111408.152 ns/op
# Warmup Iteration   6: 96962.713 ns/op
# Warmup Iteration   7: 94892.893 ns/op
# Warmup Iteration   8: 102765.668 ns/op
# Warmup Iteration   9: 114468.157 ns/op
# Warmup Iteration  10: 124119.461 ns/op
Iteration   1: 129254.893 ns/op
Iteration   2: 111477.662 ns/op
Iteration   3: 122367.817 ns/op
Iteration   4: 118581.142 ns/op
Iteration   5: 125523.995 ns/op
Iteration   6: 107269.940 ns/op
Iteration   7: 96838.020 ns/op
Iteration   8: 101500.178 ns/op
Iteration   9: 127085.921 ns/op
Iteration  10: 100756.241 ns/op
Iteration  11: 108285.667 ns/op
Iteration  12: 109988.528 ns/op
Iteration  13: 116430.591 ns/op
Iteration  14: 109620.346 ns/op
Iteration  15: 119042.874 ns/op
Iteration  16: 117541.362 ns/op
Iteration  17: 112491.702 ns/op
Iteration  18: 94855.615 ns/op
Iteration  19: 93863.483 ns/op
Iteration  20: 110300.545 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnMultipleRegexGroups_WhenValidRegexHasCapturingGroupsInQuery":
  110684.630 ±(99.9%) 5394.798 ns/op [Average]
  (min, avg, max) = (93863.483, 110684.630, 129254.893), stdev = 9589.248
  CI (99.9%): [105289.833, 116079.428] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnMultipleRegexGroups_WhenValidRegexHasMatcherGroups

# Run progress: 83.43% complete, ETA 00:58:55
# Fork: 1 of 2
# Warmup Iteration   1: 615472.403 ns/op
# Warmup Iteration   2: 397473.943 ns/op
# Warmup Iteration   3: 295669.704 ns/op
# Warmup Iteration   4: 83992.676 ns/op
# Warmup Iteration   5: 69396.010 ns/op
# Warmup Iteration   6: 51734.691 ns/op
# Warmup Iteration   7: 47794.417 ns/op
# Warmup Iteration   8: 66294.093 ns/op
# Warmup Iteration   9: 70756.580 ns/op
# Warmup Iteration  10: 62876.280 ns/op
Iteration   1: 61487.986 ns/op
Iteration   2: 65304.937 ns/op
Iteration   3: 73513.720 ns/op
Iteration   4: 71511.684 ns/op
Iteration   5: 70322.859 ns/op
Iteration   6: 72269.346 ns/op
Iteration   7: 72615.248 ns/op
Iteration   8: 71376.297 ns/op
Iteration   9: 62740.591 ns/op
Iteration  10: 60128.787 ns/op
Iteration  11: 61230.779 ns/op
Iteration  12: 79614.662 ns/op
Iteration  13: 65355.236 ns/op
Iteration  14: 74840.668 ns/op
Iteration  15: 69730.906 ns/op
Iteration  16: 69867.347 ns/op
Iteration  17: 66260.916 ns/op
Iteration  18: 61330.595 ns/op
Iteration  19: 70074.232 ns/op
Iteration  20: 77072.771 ns/op

# Run progress: 83.51% complete, ETA 00:58:42
# Fork: 2 of 2
# Warmup Iteration   1: 758790.956 ns/op
# Warmup Iteration   2: 341109.558 ns/op
# Warmup Iteration   3: 124994.019 ns/op
# Warmup Iteration   4: 70512.755 ns/op
# Warmup Iteration   5: 63994.309 ns/op
# Warmup Iteration   6: 54435.826 ns/op
# Warmup Iteration   7: 94275.623 ns/op
# Warmup Iteration   8: 69736.508 ns/op
# Warmup Iteration   9: 78869.345 ns/op
# Warmup Iteration  10: 74657.240 ns/op
Iteration   1: 73829.041 ns/op
Iteration   2: 72952.180 ns/op
Iteration   3: 77243.081 ns/op
Iteration   4: 69120.617 ns/op
Iteration   5: 71686.617 ns/op
Iteration   6: 74121.715 ns/op
Iteration   7: 72273.718 ns/op
Iteration   8: 58780.126 ns/op
Iteration   9: 83922.589 ns/op
Iteration  10: 68469.537 ns/op
Iteration  11: 66022.830 ns/op
Iteration  12: 67500.702 ns/op
Iteration  13: 59545.518 ns/op
Iteration  14: 73912.855 ns/op
Iteration  15: 64911.214 ns/op
Iteration  16: 59484.700 ns/op
Iteration  17: 68829.856 ns/op
Iteration  18: 63946.966 ns/op
Iteration  19: 77704.386 ns/op
Iteration  20: 73872.726 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnMultipleRegexGroups_WhenValidRegexHasMatcherGroups":
  69369.513 ±(99.9%) 3406.815 ns/op [Average]
  (min, avg, max) = (58780.126, 69369.513, 83922.589), stdev = 6055.611
  CI (99.9%): [65962.698, 72776.329] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnMultipleRegexGroups_WhenValidRegexHasMultipleSubCapturingGroups

# Run progress: 83.58% complete, ETA 00:58:29
# Fork: 1 of 2
# Warmup Iteration   1: 673610.715 ns/op
# Warmup Iteration   2: 254441.663 ns/op
# Warmup Iteration   3: 299578.161 ns/op
# Warmup Iteration   4: 89069.325 ns/op
# Warmup Iteration   5: 63518.335 ns/op
# Warmup Iteration   6: 92953.775 ns/op
# Warmup Iteration   7: 47525.394 ns/op
# Warmup Iteration   8: 78244.033 ns/op
# Warmup Iteration   9: 77966.483 ns/op
# Warmup Iteration  10: 65827.424 ns/op
Iteration   1: 62918.160 ns/op
Iteration   2: 63416.522 ns/op
Iteration   3: 74261.441 ns/op
Iteration   4: 70453.274 ns/op
Iteration   5: 80237.909 ns/op
Iteration   6: 68558.072 ns/op
Iteration   7: 69522.130 ns/op
Iteration   8: 71939.140 ns/op
Iteration   9: 69527.316 ns/op
Iteration  10: 58622.620 ns/op
Iteration  11: 72642.015 ns/op
Iteration  12: 70651.006 ns/op
Iteration  13: 68349.282 ns/op
Iteration  14: 70930.253 ns/op
Iteration  15: 83528.775 ns/op
Iteration  16: 64679.414 ns/op
Iteration  17: 65525.158 ns/op
Iteration  18: 67176.659 ns/op
Iteration  19: 61432.996 ns/op
Iteration  20: 70391.161 ns/op

# Run progress: 83.66% complete, ETA 00:58:16
# Fork: 2 of 2
# Warmup Iteration   1: 723202.006 ns/op
# Warmup Iteration   2: 326700.175 ns/op
# Warmup Iteration   3: 176819.742 ns/op
# Warmup Iteration   4: 78953.271 ns/op
# Warmup Iteration   5: 60902.848 ns/op
# Warmup Iteration   6: 56994.125 ns/op
# Warmup Iteration   7: 51047.181 ns/op
# Warmup Iteration   8: 91504.944 ns/op
# Warmup Iteration   9: 78495.556 ns/op
# Warmup Iteration  10: 71317.838 ns/op
Iteration   1: 94472.857 ns/op
Iteration   2: 75119.168 ns/op
Iteration   3: 56898.297 ns/op
Iteration   4: 69436.628 ns/op
Iteration   5: 64098.312 ns/op
Iteration   6: 73213.583 ns/op
Iteration   7: 62678.942 ns/op
Iteration   8: 60421.682 ns/op
Iteration   9: 81372.347 ns/op
Iteration  10: 71455.009 ns/op
Iteration  11: 87254.082 ns/op
Iteration  12: 58700.740 ns/op
Iteration  13: 71546.474 ns/op
Iteration  14: 72930.181 ns/op
Iteration  15: 83146.449 ns/op
Iteration  16: 69285.822 ns/op
Iteration  17: 62773.975 ns/op
Iteration  18: 62611.455 ns/op
Iteration  19: 79676.138 ns/op
Iteration  20: 74848.173 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnMultipleRegexGroups_WhenValidRegexHasMultipleSubCapturingGroups":
  70417.590 ±(99.9%) 4612.893 ns/op [Average]
  (min, avg, max) = (56898.297, 70417.590, 94472.857), stdev = 8199.414
  CI (99.9%): [65804.697, 75030.484] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnMultipleRegexGroups_WhenValidRegexHasOneSubCapturingGroup

# Run progress: 83.73% complete, ETA 00:58:03
# Fork: 1 of 2
# Warmup Iteration   1: 519795.895 ns/op
# Warmup Iteration   2: 346033.534 ns/op
# Warmup Iteration   3: 278234.582 ns/op
# Warmup Iteration   4: 75203.638 ns/op
# Warmup Iteration   5: 67213.557 ns/op
# Warmup Iteration   6: 45474.352 ns/op
# Warmup Iteration   7: 64265.130 ns/op
# Warmup Iteration   8: 71816.968 ns/op
# Warmup Iteration   9: 77095.425 ns/op
# Warmup Iteration  10: 77658.797 ns/op
Iteration   1: 70349.398 ns/op
Iteration   2: 83855.026 ns/op
Iteration   3: 75855.543 ns/op
Iteration   4: 62683.836 ns/op
Iteration   5: 62733.826 ns/op
Iteration   6: 64603.549 ns/op
Iteration   7: 63410.955 ns/op
Iteration   8: 63458.746 ns/op
Iteration   9: 73999.728 ns/op
Iteration  10: 63530.570 ns/op
Iteration  11: 70243.048 ns/op
Iteration  12: 88927.464 ns/op
Iteration  13: 71676.496 ns/op
Iteration  14: 73266.427 ns/op
Iteration  15: 67383.516 ns/op
Iteration  16: 70818.083 ns/op
Iteration  17: 69901.040 ns/op
Iteration  18: 74589.965 ns/op
Iteration  19: 63697.156 ns/op
Iteration  20: 58836.307 ns/op

# Run progress: 83.81% complete, ETA 00:57:50
# Fork: 2 of 2
# Warmup Iteration   1: 648105.329 ns/op
# Warmup Iteration   2: 286977.204 ns/op
# Warmup Iteration   3: 171321.240 ns/op
# Warmup Iteration   4: 72102.199 ns/op
# Warmup Iteration   5: 70754.628 ns/op
# Warmup Iteration   6: 59519.614 ns/op
# Warmup Iteration   7: 54876.555 ns/op
# Warmup Iteration   8: 55388.905 ns/op
# Warmup Iteration   9: 68107.876 ns/op
# Warmup Iteration  10: 71379.359 ns/op
Iteration   1: 61208.410 ns/op
Iteration   2: 77945.092 ns/op
Iteration   3: 60935.388 ns/op
Iteration   4: 63612.644 ns/op
Iteration   5: 60309.356 ns/op
Iteration   6: 60682.455 ns/op
Iteration   7: 58395.116 ns/op
Iteration   8: 77236.645 ns/op
Iteration   9: 62132.803 ns/op
Iteration  10: 69676.697 ns/op
Iteration  11: 76004.802 ns/op
Iteration  12: 78833.012 ns/op
Iteration  13: 64501.559 ns/op
Iteration  14: 66259.536 ns/op
Iteration  15: 74951.208 ns/op
Iteration  16: 59015.728 ns/op
Iteration  17: 79105.012 ns/op
Iteration  18: 75200.886 ns/op
Iteration  19: 70632.265 ns/op
Iteration  20: 70339.185 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnMultipleRegexGroups_WhenValidRegexHasOneSubCapturingGroup":
  69019.962 ±(99.9%) 4166.691 ns/op [Average]
  (min, avg, max) = (58395.116, 69019.962, 88927.464), stdev = 7406.289
  CI (99.9%): [64853.271, 73186.653] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnOneRegexGroup_WhenValidRegexHasMatcherGroups

# Run progress: 83.89% complete, ETA 00:57:37
# Fork: 1 of 2
# Warmup Iteration   1: 687564.779 ns/op
# Warmup Iteration   2: 368928.899 ns/op
# Warmup Iteration   3: 104253.666 ns/op
# Warmup Iteration   4: 68947.570 ns/op
# Warmup Iteration   5: 61824.340 ns/op
# Warmup Iteration   6: 58495.432 ns/op
# Warmup Iteration   7: 69029.479 ns/op
# Warmup Iteration   8: 74790.960 ns/op
# Warmup Iteration   9: 71524.633 ns/op
# Warmup Iteration  10: 78089.369 ns/op
Iteration   1: 59666.880 ns/op
Iteration   2: 62199.671 ns/op
Iteration   3: 60810.800 ns/op
Iteration   4: 65396.922 ns/op
Iteration   5: 63178.570 ns/op
Iteration   6: 77428.102 ns/op
Iteration   7: 70769.938 ns/op
Iteration   8: 70831.117 ns/op
Iteration   9: 69853.945 ns/op
Iteration  10: 64404.066 ns/op
Iteration  11: 67979.078 ns/op
Iteration  12: 71618.450 ns/op
Iteration  13: 68357.262 ns/op
Iteration  14: 74723.862 ns/op
Iteration  15: 63526.929 ns/op
Iteration  16: 65713.554 ns/op
Iteration  17: 72767.640 ns/op
Iteration  18: 66453.207 ns/op
Iteration  19: 76963.198 ns/op
Iteration  20: 72714.135 ns/op

# Run progress: 83.96% complete, ETA 00:57:24
# Fork: 2 of 2
# Warmup Iteration   1: 378623.371 ns/op
# Warmup Iteration   2: 243880.191 ns/op
# Warmup Iteration   3: 159222.091 ns/op
# Warmup Iteration   4: 69883.997 ns/op
# Warmup Iteration   5: 68937.650 ns/op
# Warmup Iteration   6: 59107.010 ns/op
# Warmup Iteration   7: 60452.428 ns/op
# Warmup Iteration   8: 87586.742 ns/op
# Warmup Iteration   9: 76828.081 ns/op
# Warmup Iteration  10: 64698.778 ns/op
Iteration   1: 70767.342 ns/op
Iteration   2: 81908.146 ns/op
Iteration   3: 70620.877 ns/op
Iteration   4: 75364.590 ns/op
Iteration   5: 64660.627 ns/op
Iteration   6: 54798.810 ns/op
Iteration   7: 85309.492 ns/op
Iteration   8: 73307.887 ns/op
Iteration   9: 60396.879 ns/op
Iteration  10: 60671.384 ns/op
Iteration  11: 60650.249 ns/op
Iteration  12: 56192.789 ns/op
Iteration  13: 61140.119 ns/op
Iteration  14: 77854.188 ns/op
Iteration  15: 86486.848 ns/op
Iteration  16: 62033.011 ns/op
Iteration  17: 95933.604 ns/op
Iteration  18: 82755.711 ns/op
Iteration  19: 61583.114 ns/op
Iteration  20: 77773.592 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnOneRegexGroup_WhenValidRegexHasMatcherGroups":
  69639.165 ±(99.9%) 5053.044 ns/op [Average]
  (min, avg, max) = (54798.810, 69639.165, 95933.604), stdev = 8981.782
  CI (99.9%): [64586.120, 74692.209] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldFindBodyNotTokenized_WhenRawFileIsTemplateFile

# Run progress: 84.04% complete, ETA 00:57:11
# Fork: 1 of 2
# Warmup Iteration   1: 534942.944 ns/op
# Warmup Iteration   2: 268148.076 ns/op
# Warmup Iteration   3: 191443.619 ns/op
# Warmup Iteration   4: 190471.085 ns/op
# Warmup Iteration   5: 444621.570 ns/op
# Warmup Iteration   6: 321750.346 ns/op
# Warmup Iteration   7: 460206.517 ns/op
# Warmup Iteration   8: 478311.570 ns/op
# Warmup Iteration   9: 326574.960 ns/op
# Warmup Iteration  10: 448683.304 ns/op
Iteration   1: 446757.688 ns/op
Iteration   2: 326186.651 ns/op
Iteration   3: 438511.181 ns/op
Iteration   4: 467104.801 ns/op
Iteration   5: 320158.650 ns/op
Iteration   6: 458788.766 ns/op
Iteration   7: 449285.031 ns/op
Iteration   8: 412805.377 ns/op
Iteration   9: 326364.974 ns/op
Iteration  10: 449056.996 ns/op
Iteration  11: 444835.533 ns/op
Iteration  12: 326121.108 ns/op
Iteration  13: 436414.596 ns/op
Iteration  14: 461740.915 ns/op
Iteration  15: 325163.367 ns/op
Iteration  16: 454631.571 ns/op
Iteration  17: 445434.574 ns/op
Iteration  18: 413852.182 ns/op
Iteration  19: 326281.401 ns/op
Iteration  20: 447021.981 ns/op

# Run progress: 84.11% complete, ETA 00:56:58
# Fork: 2 of 2
# Warmup Iteration   1: 559029.401 ns/op
# Warmup Iteration   2: 241044.459 ns/op
# Warmup Iteration   3: 341225.168 ns/op
# Warmup Iteration   4: 434163.072 ns/op
# Warmup Iteration   5: 329688.567 ns/op
# Warmup Iteration   6: 465696.720 ns/op
# Warmup Iteration   7: 475206.294 ns/op
# Warmup Iteration   8: 316527.673 ns/op
# Warmup Iteration   9: 469150.139 ns/op
# Warmup Iteration  10: 456015.283 ns/op
Iteration   1: 319129.962 ns/op
Iteration   2: 454359.238 ns/op
Iteration   3: 432235.334 ns/op
Iteration   4: 334233.678 ns/op
Iteration   5: 454573.122 ns/op
Iteration   6: 446672.491 ns/op
Iteration   7: 326516.540 ns/op
Iteration   8: 445004.693 ns/op
Iteration   9: 447181.985 ns/op
Iteration  10: 419216.217 ns/op
Iteration  11: 326422.200 ns/op
Iteration  12: 444930.297 ns/op
Iteration  13: 450244.564 ns/op
Iteration  14: 326531.864 ns/op
Iteration  15: 456539.943 ns/op
Iteration  16: 444173.477 ns/op
Iteration  17: 318947.518 ns/op
Iteration  18: 457593.437 ns/op
Iteration  19: 453829.361 ns/op
Iteration  20: 875623.957 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldFindBodyNotTokenized_WhenRawFileIsTemplateFile":
  420261.931 ±(99.9%) 52380.757 ns/op [Average]
  (min, avg, max) = (318947.518, 420261.931, 875623.957), stdev = 93106.750
  CI (99.9%): [367881.174, 472642.688] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldFindBodyNotTokenized_WhenRawFileNotTemplateFile

# Run progress: 84.19% complete, ETA 00:56:45
# Fork: 1 of 2
# Warmup Iteration   1: 565743.782 ns/op
# Warmup Iteration   2: 260123.341 ns/op
# Warmup Iteration   3: 327748.821 ns/op
# Warmup Iteration   4: 419612.576 ns/op
# Warmup Iteration   5: 323900.164 ns/op
# Warmup Iteration   6: 492706.916 ns/op
# Warmup Iteration   7: 457573.850 ns/op
# Warmup Iteration   8: 320510.296 ns/op
# Warmup Iteration   9: 460061.187 ns/op
# Warmup Iteration  10: 436950.429 ns/op
Iteration   1: 329146.481 ns/op
Iteration   2: 448308.018 ns/op
Iteration   3: 443986.332 ns/op
Iteration   4: 333587.740 ns/op
Iteration   5: 438990.756 ns/op
Iteration   6: 448448.140 ns/op
Iteration   7: 325873.658 ns/op
Iteration   8: 439902.785 ns/op
Iteration   9: 458007.707 ns/op
Iteration  10: 326378.406 ns/op
Iteration  11: 451952.751 ns/op
Iteration  12: 446540.713 ns/op
Iteration  13: 414457.869 ns/op
Iteration  14: 322519.475 ns/op
Iteration  15: 462974.091 ns/op
Iteration  16: 443467.021 ns/op
Iteration  17: 482171.853 ns/op
Iteration  18: 502339.375 ns/op
Iteration  19: 321001.578 ns/op
Iteration  20: 339428.693 ns/op

# Run progress: 84.26% complete, ETA 00:56:33
# Fork: 2 of 2
# Warmup Iteration   1: 599304.049 ns/op
# Warmup Iteration   2: 285144.369 ns/op
# Warmup Iteration   3: 280117.461 ns/op
# Warmup Iteration   4: 413873.404 ns/op
# Warmup Iteration   5: 326293.657 ns/op
# Warmup Iteration   6: 465808.635 ns/op
# Warmup Iteration   7: 482056.380 ns/op
# Warmup Iteration   8: 326365.450 ns/op
# Warmup Iteration   9: 453919.752 ns/op
# Warmup Iteration  10: 442409.920 ns/op
Iteration   1: 326935.902 ns/op
Iteration   2: 444940.921 ns/op
Iteration   3: 459687.383 ns/op
Iteration   4: 323847.109 ns/op
Iteration   5: 445604.368 ns/op
Iteration   6: 434162.485 ns/op
Iteration   7: 336117.743 ns/op
Iteration   8: 446168.649 ns/op
Iteration   9: 456101.427 ns/op
Iteration  10: 326544.322 ns/op
Iteration  11: 449720.008 ns/op
Iteration  12: 453160.513 ns/op
Iteration  13: 410409.616 ns/op
Iteration  14: 326168.731 ns/op
Iteration  15: 450543.442 ns/op
Iteration  16: 422432.030 ns/op
Iteration  17: 336533.911 ns/op
Iteration  18: 451066.728 ns/op
Iteration  19: 441074.853 ns/op
Iteration  20: 326583.062 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldFindBodyNotTokenized_WhenRawFileNotTemplateFile":
  406182.166 ±(99.9%) 33505.327 ns/op [Average]
  (min, avg, max) = (321001.578, 406182.166, 502339.375), stdev = 59555.689
  CI (99.9%): [372676.839, 439687.493] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldFindBodyTokenized_WhenBodyContainsTemplateTokens

# Run progress: 84.34% complete, ETA 00:56:20
# Fork: 1 of 2
# Warmup Iteration   1: 2023.338 ns/op
# Warmup Iteration   2: 551.372 ns/op
# Warmup Iteration   3: 432.277 ns/op
# Warmup Iteration   4: 430.919 ns/op
# Warmup Iteration   5: 430.980 ns/op
# Warmup Iteration   6: 434.014 ns/op
# Warmup Iteration   7: 429.304 ns/op
# Warmup Iteration   8: 429.199 ns/op
# Warmup Iteration   9: 431.189 ns/op
# Warmup Iteration  10: 430.237 ns/op
Iteration   1: 433.463 ns/op
Iteration   2: 431.704 ns/op
Iteration   3: 433.524 ns/op
Iteration   4: 431.186 ns/op
Iteration   5: 430.831 ns/op
Iteration   6: 434.527 ns/op
Iteration   7: 431.226 ns/op
Iteration   8: 431.058 ns/op
Iteration   9: 429.707 ns/op
Iteration  10: 430.078 ns/op
Iteration  11: 431.043 ns/op
Iteration  12: 436.114 ns/op
Iteration  13: 431.376 ns/op
Iteration  14: 430.521 ns/op
Iteration  15: 431.070 ns/op
Iteration  16: 431.482 ns/op
Iteration  17: 429.827 ns/op
Iteration  18: 430.935 ns/op
Iteration  19: 429.300 ns/op
Iteration  20: 429.839 ns/op

# Run progress: 84.41% complete, ETA 00:56:06
# Fork: 2 of 2
# Warmup Iteration   1: 1919.194 ns/op
# Warmup Iteration   2: 537.382 ns/op
# Warmup Iteration   3: 431.869 ns/op
# Warmup Iteration   4: 431.941 ns/op
# Warmup Iteration   5: 430.325 ns/op
# Warmup Iteration   6: 429.941 ns/op
# Warmup Iteration   7: 429.765 ns/op
# Warmup Iteration   8: 429.906 ns/op
# Warmup Iteration   9: 430.214 ns/op
# Warmup Iteration  10: 431.055 ns/op
Iteration   1: 429.683 ns/op
Iteration   2: 430.568 ns/op
Iteration   3: 431.272 ns/op
Iteration   4: 430.219 ns/op
Iteration   5: 429.292 ns/op
Iteration   6: 429.535 ns/op
Iteration   7: 433.310 ns/op
Iteration   8: 430.775 ns/op
Iteration   9: 427.845 ns/op
Iteration  10: 430.885 ns/op
Iteration  11: 428.635 ns/op
Iteration  12: 430.757 ns/op
Iteration  13: 432.835 ns/op
Iteration  14: 433.424 ns/op
Iteration  15: 431.864 ns/op
Iteration  16: 431.005 ns/op
Iteration  17: 431.212 ns/op
Iteration  18: 429.506 ns/op
Iteration  19: 429.445 ns/op
Iteration  20: 430.209 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldFindBodyTokenized_WhenBodyContainsTemplateTokens":
  431.027 ±(99.9%) 0.920 ns/op [Average]
  (min, avg, max) = (427.845, 431.027, 436.114), stdev = 1.636
  CI (99.9%): [430.107, 431.947] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldNotRequireRecording_WhenBodyDoesnotStartWithHttp

# Run progress: 84.49% complete, ETA 00:55:52
# Fork: 1 of 2
# Warmup Iteration   1: 2100.894 ns/op
# Warmup Iteration   2: 574.059 ns/op
# Warmup Iteration   3: 444.001 ns/op
# Warmup Iteration   4: 444.449 ns/op
# Warmup Iteration   5: 442.638 ns/op
# Warmup Iteration   6: 444.060 ns/op
# Warmup Iteration   7: 442.362 ns/op
# Warmup Iteration   8: 442.819 ns/op
# Warmup Iteration   9: 443.874 ns/op
# Warmup Iteration  10: 444.048 ns/op
Iteration   1: 443.778 ns/op
Iteration   2: 443.367 ns/op
Iteration   3: 444.099 ns/op
Iteration   4: 443.122 ns/op
Iteration   5: 444.991 ns/op
Iteration   6: 441.215 ns/op
Iteration   7: 442.088 ns/op
Iteration   8: 443.873 ns/op
Iteration   9: 440.355 ns/op
Iteration  10: 443.507 ns/op
Iteration  11: 442.338 ns/op
Iteration  12: 443.100 ns/op
Iteration  13: 444.913 ns/op
Iteration  14: 444.271 ns/op
Iteration  15: 442.910 ns/op
Iteration  16: 444.407 ns/op
Iteration  17: 440.969 ns/op
Iteration  18: 442.508 ns/op
Iteration  19: 443.729 ns/op
Iteration  20: 444.102 ns/op

# Run progress: 84.56% complete, ETA 00:55:39
# Fork: 2 of 2
# Warmup Iteration   1: 2088.776 ns/op
# Warmup Iteration   2: 563.168 ns/op
# Warmup Iteration   3: 443.861 ns/op
# Warmup Iteration   4: 439.408 ns/op
# Warmup Iteration   5: 440.422 ns/op
# Warmup Iteration   6: 440.578 ns/op
# Warmup Iteration   7: 441.821 ns/op
# Warmup Iteration   8: 441.500 ns/op
# Warmup Iteration   9: 440.691 ns/op
# Warmup Iteration  10: 440.757 ns/op
Iteration   1: 442.142 ns/op
Iteration   2: 441.250 ns/op
Iteration   3: 439.286 ns/op
Iteration   4: 441.421 ns/op
Iteration   5: 441.938 ns/op
Iteration   6: 440.935 ns/op
Iteration   7: 441.112 ns/op
Iteration   8: 440.146 ns/op
Iteration   9: 440.907 ns/op
Iteration  10: 438.773 ns/op
Iteration  11: 441.509 ns/op
Iteration  12: 440.252 ns/op
Iteration  13: 438.935 ns/op
Iteration  14: 441.849 ns/op
Iteration  15: 440.757 ns/op
Iteration  16: 440.348 ns/op
Iteration  17: 441.070 ns/op
Iteration  18: 440.687 ns/op
Iteration  19: 439.503 ns/op
Iteration  20: 442.712 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldNotRequireRecording_WhenBodyDoesnotStartWithHttp":
  441.979 ±(99.9%) 0.947 ns/op [Average]
  (min, avg, max) = (438.773, 441.979, 444.991), stdev = 1.684
  CI (99.9%): [441.032, 442.927] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldNotRequireRecording_WhenBodyStartsWithHtt

# Run progress: 84.64% complete, ETA 00:55:25
# Fork: 1 of 2
# Warmup Iteration   1: 2062.142 ns/op
# Warmup Iteration   2: 567.575 ns/op
# Warmup Iteration   3: 442.033 ns/op
# Warmup Iteration   4: 437.905 ns/op
# Warmup Iteration   5: 437.757 ns/op
# Warmup Iteration   6: 438.840 ns/op
# Warmup Iteration   7: 436.043 ns/op
# Warmup Iteration   8: 438.833 ns/op
# Warmup Iteration   9: 438.351 ns/op
# Warmup Iteration  10: 438.642 ns/op
Iteration   1: 441.316 ns/op
Iteration   2: 440.208 ns/op
Iteration   3: 439.482 ns/op
Iteration   4: 439.826 ns/op
Iteration   5: 440.597 ns/op
Iteration   6: 439.215 ns/op
Iteration   7: 440.946 ns/op
Iteration   8: 438.942 ns/op
Iteration   9: 441.924 ns/op
Iteration  10: 441.280 ns/op
Iteration  11: 441.249 ns/op
Iteration  12: 444.056 ns/op
Iteration  13: 440.695 ns/op
Iteration  14: 442.158 ns/op
Iteration  15: 440.866 ns/op
Iteration  16: 439.490 ns/op
Iteration  17: 439.200 ns/op
Iteration  18: 441.783 ns/op
Iteration  19: 441.407 ns/op
Iteration  20: 440.784 ns/op

# Run progress: 84.71% complete, ETA 00:55:11
# Fork: 2 of 2
# Warmup Iteration   1: 1879.273 ns/op
# Warmup Iteration   2: 548.442 ns/op
# Warmup Iteration   3: 440.689 ns/op
# Warmup Iteration   4: 442.580 ns/op
# Warmup Iteration   5: 440.294 ns/op
# Warmup Iteration   6: 443.657 ns/op
# Warmup Iteration   7: 439.555 ns/op
# Warmup Iteration   8: 440.221 ns/op
# Warmup Iteration   9: 443.045 ns/op
# Warmup Iteration  10: 441.852 ns/op
Iteration   1: 443.057 ns/op
Iteration   2: 442.338 ns/op
Iteration   3: 440.730 ns/op
Iteration   4: 441.048 ns/op
Iteration   5: 443.201 ns/op
Iteration   6: 442.473 ns/op
Iteration   7: 440.682 ns/op
Iteration   8: 441.890 ns/op
Iteration   9: 440.182 ns/op
Iteration  10: 440.155 ns/op
Iteration  11: 443.344 ns/op
Iteration  12: 439.454 ns/op
Iteration  13: 442.759 ns/op
Iteration  14: 439.453 ns/op
Iteration  15: 443.408 ns/op
Iteration  16: 440.633 ns/op
Iteration  17: 443.155 ns/op
Iteration  18: 440.955 ns/op
Iteration  19: 441.320 ns/op
Iteration  20: 441.012 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldNotRequireRecording_WhenBodyStartsWithHtt":
  441.167 ±(99.9%) 0.745 ns/op [Average]
  (min, avg, max) = (438.942, 441.167, 444.056), stdev = 1.325
  CI (99.9%): [440.421, 441.912] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldNotStage_WhenConfigurablePropertyPresentButFieldValueMissing

# Run progress: 84.79% complete, ETA 00:54:57
# Fork: 1 of 2
# Warmup Iteration   1: 710.169 ns/op
# Warmup Iteration   2: 364.512 ns/op
# Warmup Iteration   3: 339.674 ns/op
# Warmup Iteration   4: 339.627 ns/op
# Warmup Iteration   5: 338.907 ns/op
# Warmup Iteration   6: 339.887 ns/op
# Warmup Iteration   7: 338.895 ns/op
# Warmup Iteration   8: 337.507 ns/op
# Warmup Iteration   9: 339.226 ns/op
# Warmup Iteration  10: 338.507 ns/op
Iteration   1: 339.859 ns/op
Iteration   2: 339.695 ns/op
Iteration   3: 337.349 ns/op
Iteration   4: 338.106 ns/op
Iteration   5: 339.031 ns/op
Iteration   6: 339.195 ns/op
Iteration   7: 339.650 ns/op
Iteration   8: 340.501 ns/op
Iteration   9: 339.882 ns/op
Iteration  10: 338.355 ns/op
Iteration  11: 339.021 ns/op
Iteration  12: 338.165 ns/op
Iteration  13: 338.110 ns/op
Iteration  14: 337.864 ns/op
Iteration  15: 338.239 ns/op
Iteration  16: 338.015 ns/op
Iteration  17: 340.542 ns/op
Iteration  18: 339.613 ns/op
Iteration  19: 339.091 ns/op
Iteration  20: 340.727 ns/op

# Run progress: 84.86% complete, ETA 00:54:44
# Fork: 2 of 2
# Warmup Iteration   1: 738.611 ns/op
# Warmup Iteration   2: 376.152 ns/op
# Warmup Iteration   3: 348.217 ns/op
# Warmup Iteration   4: 349.878 ns/op
# Warmup Iteration   5: 348.627 ns/op
# Warmup Iteration   6: 347.379 ns/op
# Warmup Iteration   7: 347.667 ns/op
# Warmup Iteration   8: 347.635 ns/op
# Warmup Iteration   9: 347.442 ns/op
# Warmup Iteration  10: 348.092 ns/op
Iteration   1: 348.143 ns/op
Iteration   2: 347.909 ns/op
Iteration   3: 347.335 ns/op
Iteration   4: 346.846 ns/op
Iteration   5: 349.207 ns/op
Iteration   6: 348.715 ns/op
Iteration   7: 348.746 ns/op
Iteration   8: 348.877 ns/op
Iteration   9: 347.793 ns/op
Iteration  10: 347.263 ns/op
Iteration  11: 348.090 ns/op
Iteration  12: 348.353 ns/op
Iteration  13: 349.131 ns/op
Iteration  14: 346.812 ns/op
Iteration  15: 346.888 ns/op
Iteration  16: 348.614 ns/op
Iteration  17: 347.694 ns/op
Iteration  18: 347.818 ns/op
Iteration  19: 347.771 ns/op
Iteration  20: 348.544 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldNotStage_WhenConfigurablePropertyPresentButFieldValueMissing":
  343.539 ±(99.9%) 2.603 ns/op [Average]
  (min, avg, max) = (337.349, 343.539, 349.207), stdev = 4.627
  CI (99.9%): [340.936, 346.142] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldRequireRecording_WhenBodyStartsWithHttp

# Run progress: 84.94% complete, ETA 00:54:30
# Fork: 1 of 2
# Warmup Iteration   1: 2233.596 ns/op
# Warmup Iteration   2: 581.188 ns/op
# Warmup Iteration   3: 437.505 ns/op
# Warmup Iteration   4: 436.582 ns/op
# Warmup Iteration   5: 434.783 ns/op
# Warmup Iteration   6: 436.656 ns/op
# Warmup Iteration   7: 435.340 ns/op
# Warmup Iteration   8: 437.622 ns/op
# Warmup Iteration   9: 436.528 ns/op
# Warmup Iteration  10: 439.027 ns/op
Iteration   1: 442.000 ns/op
Iteration   2: 437.360 ns/op
Iteration   3: 435.777 ns/op
Iteration   4: 433.689 ns/op
Iteration   5: 436.635 ns/op
Iteration   6: 437.488 ns/op
Iteration   7: 437.737 ns/op
Iteration   8: 437.577 ns/op
Iteration   9: 437.294 ns/op
Iteration  10: 435.482 ns/op
Iteration  11: 436.200 ns/op
Iteration  12: 437.548 ns/op
Iteration  13: 435.467 ns/op
Iteration  14: 436.459 ns/op
Iteration  15: 436.740 ns/op
Iteration  16: 437.307 ns/op
Iteration  17: 436.380 ns/op
Iteration  18: 434.928 ns/op
Iteration  19: 436.374 ns/op
Iteration  20: 437.775 ns/op

# Run progress: 85.02% complete, ETA 00:54:16
# Fork: 2 of 2
# Warmup Iteration   1: 2289.126 ns/op
# Warmup Iteration   2: 574.755 ns/op
# Warmup Iteration   3: 437.809 ns/op
# Warmup Iteration   4: 436.473 ns/op
# Warmup Iteration   5: 436.579 ns/op
# Warmup Iteration   6: 435.226 ns/op
# Warmup Iteration   7: 437.903 ns/op
# Warmup Iteration   8: 439.016 ns/op
# Warmup Iteration   9: 437.329 ns/op
# Warmup Iteration  10: 437.948 ns/op
Iteration   1: 439.101 ns/op
Iteration   2: 436.613 ns/op
Iteration   3: 435.451 ns/op
Iteration   4: 436.228 ns/op
Iteration   5: 439.085 ns/op
Iteration   6: 437.627 ns/op
Iteration   7: 438.247 ns/op
Iteration   8: 437.361 ns/op
Iteration   9: 437.152 ns/op
Iteration  10: 437.484 ns/op
Iteration  11: 439.103 ns/op
Iteration  12: 438.024 ns/op
Iteration  13: 438.946 ns/op
Iteration  14: 438.574 ns/op
Iteration  15: 437.253 ns/op
Iteration  16: 439.367 ns/op
Iteration  17: 438.343 ns/op
Iteration  18: 437.843 ns/op
Iteration  19: 437.255 ns/op
Iteration  20: 439.808 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldRequireRecording_WhenBodyStartsWithHttp":
  437.377 ±(99.9%) 0.841 ns/op [Average]
  (min, avg, max) = (433.689, 437.377, 442.000), stdev = 1.494
  CI (99.9%): [436.536, 438.218] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldRequireRecording_WhenBodyStartsWithHttpUpperCase

# Run progress: 85.09% complete, ETA 00:54:02
# Fork: 1 of 2
# Warmup Iteration   1: 2077.369 ns/op
# Warmup Iteration   2: 627.189 ns/op
# Warmup Iteration   3: 468.218 ns/op
# Warmup Iteration   4: 465.476 ns/op
# Warmup Iteration   5: 470.379 ns/op
# Warmup Iteration   6: 466.762 ns/op
# Warmup Iteration   7: 466.581 ns/op
# Warmup Iteration   8: 467.046 ns/op
# Warmup Iteration   9: 467.846 ns/op
# Warmup Iteration  10: 469.987 ns/op
Iteration   1: 468.125 ns/op
Iteration   2: 465.579 ns/op
Iteration   3: 466.023 ns/op
Iteration   4: 465.944 ns/op
Iteration   5: 464.087 ns/op
Iteration   6: 467.120 ns/op
Iteration   7: 467.441 ns/op
Iteration   8: 467.759 ns/op
Iteration   9: 467.297 ns/op
Iteration  10: 468.427 ns/op
Iteration  11: 469.219 ns/op
Iteration  12: 466.892 ns/op
Iteration  13: 469.274 ns/op
Iteration  14: 467.521 ns/op
Iteration  15: 470.749 ns/op
Iteration  16: 466.333 ns/op
Iteration  17: 471.904 ns/op
Iteration  18: 467.146 ns/op
Iteration  19: 468.653 ns/op
Iteration  20: 471.327 ns/op

# Run progress: 85.17% complete, ETA 00:53:48
# Fork: 2 of 2
# Warmup Iteration   1: 2175.753 ns/op
# Warmup Iteration   2: 585.328 ns/op
# Warmup Iteration   3: 470.024 ns/op
# Warmup Iteration   4: 468.585 ns/op
# Warmup Iteration   5: 468.753 ns/op
# Warmup Iteration   6: 466.658 ns/op
# Warmup Iteration   7: 469.246 ns/op
# Warmup Iteration   8: 470.379 ns/op
# Warmup Iteration   9: 466.748 ns/op
# Warmup Iteration  10: 467.158 ns/op
Iteration   1: 469.385 ns/op
Iteration   2: 467.935 ns/op
Iteration   3: 466.209 ns/op
Iteration   4: 468.731 ns/op
Iteration   5: 467.024 ns/op
Iteration   6: 466.750 ns/op
Iteration   7: 467.149 ns/op
Iteration   8: 469.102 ns/op
Iteration   9: 470.508 ns/op
Iteration  10: 469.564 ns/op
Iteration  11: 469.014 ns/op
Iteration  12: 466.635 ns/op
Iteration  13: 466.065 ns/op
Iteration  14: 467.687 ns/op
Iteration  15: 469.336 ns/op
Iteration  16: 468.071 ns/op
Iteration  17: 467.690 ns/op
Iteration  18: 467.163 ns/op
Iteration  19: 467.694 ns/op
Iteration  20: 467.023 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldRequireRecording_WhenBodyStartsWithHttpUpperCase":
  467.889 ±(99.9%) 0.911 ns/op [Average]
  (min, avg, max) = (464.087, 467.889, 471.904), stdev = 1.619
  CI (99.9%): [466.978, 468.800] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnBody_WhenFileIsEmpty

# Run progress: 85.24% complete, ETA 00:53:34
# Fork: 1 of 2
# Warmup Iteration   1: 53164.157 ns/op
# Warmup Iteration   2: 34121.490 ns/op
# Warmup Iteration   3: 28815.298 ns/op
# Warmup Iteration   4: 28343.795 ns/op
# Warmup Iteration   5: 42033.184 ns/op
# Warmup Iteration   6: 46898.017 ns/op
# Warmup Iteration   7: 42033.182 ns/op
# Warmup Iteration   8: 50395.027 ns/op
# Warmup Iteration   9: 41138.358 ns/op
# Warmup Iteration  10: 50941.789 ns/op
Iteration   1: 59395.797 ns/op
Iteration   2: 35620.043 ns/op
Iteration   3: 51212.570 ns/op
Iteration   4: 41976.105 ns/op
Iteration   5: 49576.657 ns/op
Iteration   6: 41118.324 ns/op
Iteration   7: 49995.012 ns/op
Iteration   8: 42359.316 ns/op
Iteration   9: 50501.184 ns/op
Iteration  10: 40966.756 ns/op
Iteration  11: 50353.995 ns/op
Iteration  12: 42323.502 ns/op
Iteration  13: 50486.314 ns/op
Iteration  14: 43512.012 ns/op
Iteration  15: 47002.381 ns/op
Iteration  16: 55183.290 ns/op
Iteration  17: 51489.052 ns/op
Iteration  18: 52048.141 ns/op
Iteration  19: 55246.544 ns/op
Iteration  20: 56374.044 ns/op

# Run progress: 85.32% complete, ETA 00:53:20
# Fork: 2 of 2
# Warmup Iteration   1: 65389.618 ns/op
# Warmup Iteration   2: 44234.933 ns/op
# Warmup Iteration   3: 55619.065 ns/op
# Warmup Iteration   4: 79825.598 ns/op
# Warmup Iteration   5: 69218.304 ns/op
# Warmup Iteration   6: 72097.992 ns/op
# Warmup Iteration   7: 79346.320 ns/op
# Warmup Iteration   8: 75870.778 ns/op
# Warmup Iteration   9: 79465.916 ns/op
# Warmup Iteration  10: 93316.788 ns/op
Iteration   1: 60027.127 ns/op
Iteration   2: 106603.020 ns/op
Iteration   3: 88006.115 ns/op
Iteration   4: 91927.812 ns/op
Iteration   5: 89177.370 ns/op
Iteration   6: 93902.111 ns/op
Iteration   7: 97455.689 ns/op
Iteration   8: 97029.794 ns/op
Iteration   9: 100372.255 ns/op
Iteration  10: 101694.435 ns/op
Iteration  11: 76034.242 ns/op
Iteration  12: 144112.731 ns/op
Iteration  13: 90891.147 ns/op
Iteration  14: 121929.108 ns/op
Iteration  15: 94936.674 ns/op
Iteration  16: 98751.635 ns/op
Iteration  17: 143109.293 ns/op
Iteration  18: 112204.486 ns/op
Iteration  19: 98309.851 ns/op
Iteration  20: 127751.155 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnBody_WhenFileIsEmpty":
  75024.177 ±(99.9%) 17347.383 ns/op [Average]
  (min, avg, max) = (35620.043, 75024.177, 144112.731), stdev = 30834.959
  CI (99.9%): [57676.794, 92371.561] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnBody_WhenFileIsNull

# Run progress: 85.39% complete, ETA 00:53:07
# Fork: 1 of 2
# Warmup Iteration   1: 2343.133 ns/op
# Warmup Iteration   2: 593.807 ns/op
# Warmup Iteration   3: 470.259 ns/op
# Warmup Iteration   4: 469.836 ns/op
# Warmup Iteration   5: 469.703 ns/op
# Warmup Iteration   6: 470.993 ns/op
# Warmup Iteration   7: 468.307 ns/op
# Warmup Iteration   8: 483.781 ns/op
# Warmup Iteration   9: 469.697 ns/op
# Warmup Iteration  10: 468.012 ns/op
Iteration   1: 468.579 ns/op
Iteration   2: 468.217 ns/op
Iteration   3: 467.504 ns/op
Iteration   4: 464.831 ns/op
Iteration   5: 467.811 ns/op
Iteration   6: 468.985 ns/op
Iteration   7: 467.139 ns/op
Iteration   8: 467.921 ns/op
Iteration   9: 468.021 ns/op
Iteration  10: 464.978 ns/op
Iteration  11: 468.272 ns/op
Iteration  12: 466.711 ns/op
Iteration  13: 470.630 ns/op
Iteration  14: 469.023 ns/op
Iteration  15: 468.257 ns/op
Iteration  16: 468.410 ns/op
Iteration  17: 469.461 ns/op
Iteration  18: 468.211 ns/op
Iteration  19: 465.846 ns/op
Iteration  20: 470.296 ns/op

# Run progress: 85.47% complete, ETA 00:52:53
# Fork: 2 of 2
# Warmup Iteration   1: 2305.847 ns/op
# Warmup Iteration   2: 603.692 ns/op
# Warmup Iteration   3: 467.821 ns/op
# Warmup Iteration   4: 466.631 ns/op
# Warmup Iteration   5: 468.724 ns/op
# Warmup Iteration   6: 467.104 ns/op
# Warmup Iteration   7: 466.481 ns/op
# Warmup Iteration   8: 465.407 ns/op
# Warmup Iteration   9: 470.391 ns/op
# Warmup Iteration  10: 467.505 ns/op
Iteration   1: 467.248 ns/op
Iteration   2: 466.063 ns/op
Iteration   3: 467.777 ns/op
Iteration   4: 465.634 ns/op
Iteration   5: 468.383 ns/op
Iteration   6: 466.681 ns/op
Iteration   7: 465.813 ns/op
Iteration   8: 468.264 ns/op
Iteration   9: 466.950 ns/op
Iteration  10: 466.648 ns/op
Iteration  11: 467.195 ns/op
Iteration  12: 466.601 ns/op
Iteration  13: 469.013 ns/op
Iteration  14: 464.188 ns/op
Iteration  15: 464.957 ns/op
Iteration  16: 464.876 ns/op
Iteration  17: 466.455 ns/op
Iteration  18: 465.606 ns/op
Iteration  19: 465.456 ns/op
Iteration  20: 466.668 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnBody_WhenFileIsNull":
  467.239 ±(99.9%) 0.872 ns/op [Average]
  (min, avg, max) = (464.188, 467.239, 470.630), stdev = 1.549
  CI (99.9%): [466.368, 468.111] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnDefaultHttpStatusCode_WhenStatusFieldNull

# Run progress: 85.54% complete, ETA 00:52:39
# Fork: 1 of 2
# Warmup Iteration   1: 693.358 ns/op
# Warmup Iteration   2: 391.651 ns/op
# Warmup Iteration   3: 360.803 ns/op
# Warmup Iteration   4: 359.337 ns/op
# Warmup Iteration   5: 358.723 ns/op
# Warmup Iteration   6: 358.599 ns/op
# Warmup Iteration   7: 358.608 ns/op
# Warmup Iteration   8: 359.786 ns/op
# Warmup Iteration   9: 359.911 ns/op
# Warmup Iteration  10: 360.629 ns/op
Iteration   1: 358.644 ns/op
Iteration   2: 362.200 ns/op
Iteration   3: 360.645 ns/op
Iteration   4: 360.068 ns/op
Iteration   5: 360.482 ns/op
Iteration   6: 359.134 ns/op
Iteration   7: 360.143 ns/op
Iteration   8: 357.770 ns/op
Iteration   9: 358.370 ns/op
Iteration  10: 357.162 ns/op
Iteration  11: 359.725 ns/op
Iteration  12: 357.599 ns/op
Iteration  13: 360.710 ns/op
Iteration  14: 358.729 ns/op
Iteration  15: 360.428 ns/op
Iteration  16: 360.511 ns/op
Iteration  17: 361.799 ns/op
Iteration  18: 359.286 ns/op
Iteration  19: 360.233 ns/op
Iteration  20: 361.565 ns/op

# Run progress: 85.62% complete, ETA 00:52:24
# Fork: 2 of 2
# Warmup Iteration   1: 723.735 ns/op
# Warmup Iteration   2: 395.632 ns/op
# Warmup Iteration   3: 363.300 ns/op
# Warmup Iteration   4: 362.334 ns/op
# Warmup Iteration   5: 361.234 ns/op
# Warmup Iteration   6: 362.162 ns/op
# Warmup Iteration   7: 362.624 ns/op
# Warmup Iteration   8: 362.033 ns/op
# Warmup Iteration   9: 360.237 ns/op
# Warmup Iteration  10: 362.707 ns/op
Iteration   1: 362.397 ns/op
Iteration   2: 361.453 ns/op
Iteration   3: 362.261 ns/op
Iteration   4: 362.130 ns/op
Iteration   5: 362.903 ns/op
Iteration   6: 360.646 ns/op
Iteration   7: 362.042 ns/op
Iteration   8: 363.140 ns/op
Iteration   9: 361.872 ns/op
Iteration  10: 361.598 ns/op
Iteration  11: 363.150 ns/op
Iteration  12: 363.063 ns/op
Iteration  13: 363.670 ns/op
Iteration  14: 362.479 ns/op
Iteration  15: 362.033 ns/op
Iteration  16: 361.835 ns/op
Iteration  17: 361.284 ns/op
Iteration  18: 362.413 ns/op
Iteration  19: 359.585 ns/op
Iteration  20: 364.108 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnDefaultHttpStatusCode_WhenStatusFieldNull":
  360.982 ±(99.9%) 0.976 ns/op [Average]
  (min, avg, max) = (357.162, 360.982, 364.108), stdev = 1.734
  CI (99.9%): [360.006, 361.957] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnEmptyBody_WhenBodyIsEmpty

# Run progress: 85.69% complete, ETA 00:52:10
# Fork: 1 of 2
# Warmup Iteration   1: 1948.434 ns/op
# Warmup Iteration   2: 570.228 ns/op
# Warmup Iteration   3: 447.386 ns/op
# Warmup Iteration   4: 444.496 ns/op
# Warmup Iteration   5: 444.791 ns/op
# Warmup Iteration   6: 443.091 ns/op
# Warmup Iteration   7: 443.970 ns/op
# Warmup Iteration   8: 444.850 ns/op
# Warmup Iteration   9: 445.606 ns/op
# Warmup Iteration  10: 444.962 ns/op
Iteration   1: 443.161 ns/op
Iteration   2: 445.194 ns/op
Iteration   3: 447.014 ns/op
Iteration   4: 441.603 ns/op
Iteration   5: 443.312 ns/op
Iteration   6: 441.953 ns/op
Iteration   7: 446.217 ns/op
Iteration   8: 445.161 ns/op
Iteration   9: 444.060 ns/op
Iteration  10: 442.463 ns/op
Iteration  11: 445.005 ns/op
Iteration  12: 447.193 ns/op
Iteration  13: 445.307 ns/op
Iteration  14: 445.341 ns/op
Iteration  15: 446.274 ns/op
Iteration  16: 446.096 ns/op
Iteration  17: 447.348 ns/op
Iteration  18: 445.155 ns/op
Iteration  19: 444.207 ns/op
Iteration  20: 445.839 ns/op

# Run progress: 85.77% complete, ETA 00:51:56
# Fork: 2 of 2
# Warmup Iteration   1: 1993.468 ns/op
# Warmup Iteration   2: 543.995 ns/op
# Warmup Iteration   3: 439.258 ns/op
# Warmup Iteration   4: 439.650 ns/op
# Warmup Iteration   5: 441.325 ns/op
# Warmup Iteration   6: 438.003 ns/op
# Warmup Iteration   7: 438.129 ns/op
# Warmup Iteration   8: 440.154 ns/op
# Warmup Iteration   9: 438.662 ns/op
# Warmup Iteration  10: 438.633 ns/op
Iteration   1: 437.120 ns/op
Iteration   2: 436.605 ns/op
Iteration   3: 438.266 ns/op
Iteration   4: 438.450 ns/op
Iteration   5: 437.501 ns/op
Iteration   6: 437.710 ns/op
Iteration   7: 439.042 ns/op
Iteration   8: 439.635 ns/op
Iteration   9: 439.696 ns/op
Iteration  10: 440.220 ns/op
Iteration  11: 438.508 ns/op
Iteration  12: 442.373 ns/op
Iteration  13: 440.743 ns/op
Iteration  14: 439.511 ns/op
Iteration  15: 439.564 ns/op
Iteration  16: 440.941 ns/op
Iteration  17: 438.576 ns/op
Iteration  18: 439.208 ns/op
Iteration  19: 438.828 ns/op
Iteration  20: 438.523 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnEmptyBody_WhenBodyIsEmpty":
  441.973 ±(99.9%) 1.872 ns/op [Average]
  (min, avg, max) = (436.605, 441.973, 447.348), stdev = 3.328
  CI (99.9%): [440.101, 443.845] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnEmptyBody_WhenBodyIsEmpty_AndFileIsEmpty

# Run progress: 85.84% complete, ETA 00:51:42
# Fork: 1 of 2
# Warmup Iteration   1: 1944.792 ns/op
# Warmup Iteration   2: 552.985 ns/op
# Warmup Iteration   3: 448.964 ns/op
# Warmup Iteration   4: 448.709 ns/op
# Warmup Iteration   5: 446.844 ns/op
# Warmup Iteration   6: 451.810 ns/op
# Warmup Iteration   7: 448.988 ns/op
# Warmup Iteration   8: 449.620 ns/op
# Warmup Iteration   9: 447.962 ns/op
# Warmup Iteration  10: 448.983 ns/op
Iteration   1: 451.061 ns/op
Iteration   2: 449.253 ns/op
Iteration   3: 450.357 ns/op
Iteration   4: 448.684 ns/op
Iteration   5: 450.072 ns/op
Iteration   6: 446.020 ns/op
Iteration   7: 450.591 ns/op
Iteration   8: 448.042 ns/op
Iteration   9: 447.891 ns/op
Iteration  10: 447.421 ns/op
Iteration  11: 449.482 ns/op
Iteration  12: 450.953 ns/op
Iteration  13: 449.009 ns/op
Iteration  14: 447.452 ns/op
Iteration  15: 449.060 ns/op
Iteration  16: 448.950 ns/op
Iteration  17: 447.536 ns/op
Iteration  18: 448.525 ns/op
Iteration  19: 449.784 ns/op
Iteration  20: 447.304 ns/op

# Run progress: 85.92% complete, ETA 00:51:28
# Fork: 2 of 2
# Warmup Iteration   1: 2033.433 ns/op
# Warmup Iteration   2: 586.572 ns/op
# Warmup Iteration   3: 460.870 ns/op
# Warmup Iteration   4: 459.258 ns/op
# Warmup Iteration   5: 455.041 ns/op
# Warmup Iteration   6: 455.476 ns/op
# Warmup Iteration   7: 456.260 ns/op
# Warmup Iteration   8: 459.530 ns/op
# Warmup Iteration   9: 455.926 ns/op
# Warmup Iteration  10: 455.363 ns/op
Iteration   1: 458.214 ns/op
Iteration   2: 458.022 ns/op
Iteration   3: 457.466 ns/op
Iteration   4: 457.411 ns/op
Iteration   5: 459.661 ns/op
Iteration   6: 456.813 ns/op
Iteration   7: 456.205 ns/op
Iteration   8: 457.893 ns/op
Iteration   9: 454.527 ns/op
Iteration  10: 458.151 ns/op
Iteration  11: 458.912 ns/op
Iteration  12: 458.335 ns/op
Iteration  13: 455.726 ns/op
Iteration  14: 458.760 ns/op
Iteration  15: 455.576 ns/op
Iteration  16: 456.512 ns/op
Iteration  17: 459.489 ns/op
Iteration  18: 456.447 ns/op
Iteration  19: 456.042 ns/op
Iteration  20: 456.286 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnEmptyBody_WhenBodyIsEmpty_AndFileIsEmpty":
  453.097 ±(99.9%) 2.527 ns/op [Average]
  (min, avg, max) = (446.020, 453.097, 459.661), stdev = 4.491
  CI (99.9%): [450.571, 455.624] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnEmptyBody_WhenFileAndBodyAreNull

# Run progress: 85.99% complete, ETA 00:51:13
# Fork: 1 of 2
# Warmup Iteration   1: 2248.326 ns/op
# Warmup Iteration   2: 503.970 ns/op
# Warmup Iteration   3: 454.506 ns/op
# Warmup Iteration   4: 437.214 ns/op
# Warmup Iteration   5: 437.122 ns/op
# Warmup Iteration   6: 437.837 ns/op
# Warmup Iteration   7: 437.232 ns/op
# Warmup Iteration   8: 438.032 ns/op
# Warmup Iteration   9: 440.080 ns/op
# Warmup Iteration  10: 439.965 ns/op
Iteration   1: 438.969 ns/op
Iteration   2: 438.680 ns/op
Iteration   3: 437.416 ns/op
Iteration   4: 437.691 ns/op
Iteration   5: 436.704 ns/op
Iteration   6: 436.215 ns/op
Iteration   7: 435.562 ns/op
Iteration   8: 435.742 ns/op
Iteration   9: 438.311 ns/op
Iteration  10: 438.336 ns/op
Iteration  11: 439.066 ns/op
Iteration  12: 438.127 ns/op
Iteration  13: 438.259 ns/op
Iteration  14: 438.160 ns/op
Iteration  15: 437.832 ns/op
Iteration  16: 437.770 ns/op
Iteration  17: 439.080 ns/op
Iteration  18: 439.022 ns/op
Iteration  19: 438.350 ns/op
Iteration  20: 437.275 ns/op

# Run progress: 86.07% complete, ETA 00:50:59
# Fork: 2 of 2
# Warmup Iteration   1: 1980.683 ns/op
# Warmup Iteration   2: 510.841 ns/op
# Warmup Iteration   3: 439.550 ns/op
# Warmup Iteration   4: 438.677 ns/op
# Warmup Iteration   5: 439.043 ns/op
# Warmup Iteration   6: 441.223 ns/op
# Warmup Iteration   7: 438.294 ns/op
# Warmup Iteration   8: 439.306 ns/op
# Warmup Iteration   9: 438.299 ns/op
# Warmup Iteration  10: 438.881 ns/op
Iteration   1: 439.077 ns/op
Iteration   2: 437.846 ns/op
Iteration   3: 437.083 ns/op
Iteration   4: 440.363 ns/op
Iteration   5: 439.694 ns/op
Iteration   6: 438.308 ns/op
Iteration   7: 441.311 ns/op
Iteration   8: 437.802 ns/op
Iteration   9: 438.658 ns/op
Iteration  10: 438.926 ns/op
Iteration  11: 439.470 ns/op
Iteration  12: 440.876 ns/op
Iteration  13: 437.648 ns/op
Iteration  14: 440.159 ns/op
Iteration  15: 439.086 ns/op
Iteration  16: 439.506 ns/op
Iteration  17: 438.622 ns/op
Iteration  18: 435.881 ns/op
Iteration  19: 437.310 ns/op
Iteration  20: 441.369 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnEmptyBody_WhenFileAndBodyAreNull":
  438.389 ±(99.9%) 0.777 ns/op [Average]
  (min, avg, max) = (435.562, 438.389, 441.369), stdev = 1.380
  CI (99.9%): [437.613, 439.166] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnFile_WhenFileNotEmpty_AndRegardlessOfBody

# Run progress: 86.14% complete, ETA 00:50:45
# Fork: 1 of 2
# Warmup Iteration   1: 471000.489 ns/op
# Warmup Iteration   2: 232477.928 ns/op
# Warmup Iteration   3: 200919.096 ns/op
# Warmup Iteration   4: 304466.373 ns/op
# Warmup Iteration   5: 321793.688 ns/op
# Warmup Iteration   6: 766054.921 ns/op
# Warmup Iteration   7: 617279.217 ns/op
# Warmup Iteration   8: 326299.557 ns/op
# Warmup Iteration   9: 624770.265 ns/op
# Warmup Iteration  10: 610081.135 ns/op
Iteration   1: 326348.526 ns/op
Iteration   2: 654205.772 ns/op
Iteration   3: 602720.966 ns/op
Iteration   4: 326335.413 ns/op
Iteration   5: 643614.178 ns/op
Iteration   6: 610964.817 ns/op
Iteration   7: 326295.146 ns/op
Iteration   8: 643877.013 ns/op
Iteration   9: 612638.614 ns/op
Iteration  10: 326334.744 ns/op
Iteration  11: 679036.774 ns/op
Iteration  12: 599813.687 ns/op
Iteration  13: 326360.663 ns/op
Iteration  14: 664725.538 ns/op
Iteration  15: 600612.731 ns/op
Iteration  16: <failure>

java.io.IOException: No space left on device
	at java.base/java.io.UnixFileSystem.createFileExclusively(Native Method)
	at java.base/java.io.File.createTempFile(File.java:2170)
	at java.base/java.io.File.createTempFile(File.java:2216)
	at io.github.azagniotov.stubby4j.utils.FileUtils.tempFileFromString(FileUtils.java:71)
	at io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest.shouldReturnFile_WhenFileNotEmpty_AndRegardlessOfBody(StubResponseBuilderTest.java:123)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest$_Benchmark.benchmark_shouldReturnFile_WhenFileNotEmpty_AndRegardlessOfBody(StubResponseBuilderTest.java:201)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubResponseBuilderTest__Benchmark_benchmark_shouldReturnFile_WhenFileNotEmpty_AndRegardlessOfBody_jmhTest.benchmark_shouldReturnFile_WhenFileNotEmpty_AndRegardlessOfBody_avgt_jmhStub(StubResponseBuilderTest__Benchmark_benchmark_shouldReturnFile_WhenFileNotEmpty_AndRegardlessOfBody_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubResponseBuilderTest__Benchmark_benchmark_shouldReturnFile_WhenFileNotEmpty_AndRegardlessOfBody_jmhTest.benchmark_shouldReturnFile_WhenFileNotEmpty_AndRegardlessOfBody_AverageTime(StubResponseBuilderTest__Benchmark_benchmark_shouldReturnFile_WhenFileNotEmpty_AndRegardlessOfBody_jmhTest.java:150)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)



# Run progress: 86.22% complete, ETA 00:50:31
# Fork: 2 of 2
# Warmup Iteration   1: 522688.846 ns/op
# Warmup Iteration   2: 433471.357 ns/op
# Warmup Iteration   3: 326117.270 ns/op
# Warmup Iteration   4: 749266.679 ns/op
# Warmup Iteration   5: 600491.763 ns/op
# Warmup Iteration   6: 321421.597 ns/op
# Warmup Iteration   7: 701676.641 ns/op
# Warmup Iteration   8: 564373.863 ns/op
# Warmup Iteration   9: 326518.706 ns/op
# Warmup Iteration  10: 662101.425 ns/op
Iteration   1: 593596.235 ns/op
Iteration   2: 319445.943 ns/op
Iteration   3: 709888.094 ns/op
Iteration   4: 563824.591 ns/op
Iteration   5: 326270.887 ns/op
Iteration   6: 678292.891 ns/op
Iteration   7: 566420.289 ns/op
Iteration   8: 318965.721 ns/op
Iteration   9: 660642.083 ns/op
Iteration  10: 599473.153 ns/op
Iteration  11: 326573.136 ns/op
Iteration  12: 681691.598 ns/op
Iteration  13: 604029.184 ns/op
Iteration  14: 326225.518 ns/op
Iteration  15: 666939.027 ns/op
Iteration  16: 604166.297 ns/op
Iteration  17: 317124.727 ns/op
Iteration  18: 676777.085 ns/op
Iteration  19: <failure>

java.io.IOException: No space left on device
	at java.base/java.io.UnixFileSystem.createFileExclusively(Native Method)
	at java.base/java.io.File.createTempFile(File.java:2170)
	at java.base/java.io.File.createTempFile(File.java:2216)
	at io.github.azagniotov.stubby4j.utils.FileUtils.tempFileFromString(FileUtils.java:71)
	at io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest.shouldReturnFile_WhenFileNotEmpty_AndRegardlessOfBody(StubResponseBuilderTest.java:123)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest$_Benchmark.benchmark_shouldReturnFile_WhenFileNotEmpty_AndRegardlessOfBody(StubResponseBuilderTest.java:201)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubResponseBuilderTest__Benchmark_benchmark_shouldReturnFile_WhenFileNotEmpty_AndRegardlessOfBody_jmhTest.benchmark_shouldReturnFile_WhenFileNotEmpty_AndRegardlessOfBody_avgt_jmhStub(StubResponseBuilderTest__Benchmark_benchmark_shouldReturnFile_WhenFileNotEmpty_AndRegardlessOfBody_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.jmh_generated.StubResponseBuilderTest__Benchmark_benchmark_shouldReturnFile_WhenFileNotEmpty_AndRegardlessOfBody_jmhTest.benchmark_shouldReturnFile_WhenFileNotEmpty_AndRegardlessOfBody_AverageTime(StubResponseBuilderTest__Benchmark_benchmark_shouldReturnFile_WhenFileNotEmpty_AndRegardlessOfBody_jmhTest.java:150)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)




Result "io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnFile_WhenFileNotEmpty_AndRegardlessOfBody":
  529825.183 ±(99.9%) 95436.689 ns/op [Average]
  (min, avg, max) = (317124.727, 529825.183, 709888.094), stdev = 151372.715
  CI (99.9%): [434388.493, 625261.872] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnRespectiveHttpStatusCode_WhenStatusFieldSet

# Run progress: 86.30% complete, ETA 00:50:18
# Fork: 1 of 2
# Warmup Iteration   1: 972.753 ns/op
# Warmup Iteration   2: 432.471 ns/op
# Warmup Iteration   3: 395.129 ns/op
# Warmup Iteration   4: 396.399 ns/op
# Warmup Iteration   5: 395.493 ns/op
# Warmup Iteration   6: 399.203 ns/op
# Warmup Iteration   7: 393.493 ns/op
# Warmup Iteration   8: 397.130 ns/op
# Warmup Iteration   9: 398.886 ns/op
# Warmup Iteration  10: 397.977 ns/op
Iteration   1: 399.859 ns/op
Iteration   2: 396.185 ns/op
Iteration   3: 395.989 ns/op
Iteration   4: 396.321 ns/op
Iteration   5: 397.222 ns/op
Iteration   6: 397.350 ns/op
Iteration   7: 396.447 ns/op
Iteration   8: 395.910 ns/op
Iteration   9: 395.407 ns/op
Iteration  10: 397.806 ns/op
Iteration  11: 397.117 ns/op
Iteration  12: 394.916 ns/op
Iteration  13: 395.126 ns/op
Iteration  14: 406.479 ns/op
Iteration  15: 398.334 ns/op
Iteration  16: 395.436 ns/op
Iteration  17: 397.165 ns/op
Iteration  18: 396.876 ns/op
Iteration  19: 395.883 ns/op
Iteration  20: 397.030 ns/op

# Run progress: 86.37% complete, ETA 00:50:03
# Fork: 2 of 2
# Warmup Iteration   1: 979.819 ns/op
# Warmup Iteration   2: 437.533 ns/op
# Warmup Iteration   3: 399.216 ns/op
# Warmup Iteration   4: 399.198 ns/op
# Warmup Iteration   5: 398.284 ns/op
# Warmup Iteration   6: 398.995 ns/op
# Warmup Iteration   7: 398.926 ns/op
# Warmup Iteration   8: 398.064 ns/op
# Warmup Iteration   9: 398.500 ns/op
# Warmup Iteration  10: 400.572 ns/op
Iteration   1: 398.917 ns/op
Iteration   2: 398.636 ns/op
Iteration   3: 397.922 ns/op
Iteration   4: 397.235 ns/op
Iteration   5: 398.547 ns/op
Iteration   6: 398.848 ns/op
Iteration   7: 397.218 ns/op
Iteration   8: 399.691 ns/op
Iteration   9: 396.434 ns/op
Iteration  10: 400.429 ns/op
Iteration  11: 397.227 ns/op
Iteration  12: 398.748 ns/op
Iteration  13: 398.100 ns/op
Iteration  14: 397.410 ns/op
Iteration  15: 398.904 ns/op
Iteration  16: 399.716 ns/op
Iteration  17: 398.421 ns/op
Iteration  18: 399.944 ns/op
Iteration  19: 397.242 ns/op
Iteration  20: 397.204 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnRespectiveHttpStatusCode_WhenStatusFieldSet":
  397.741 ±(99.9%) 1.122 ns/op [Average]
  (min, avg, max) = (394.916, 397.741, 406.479), stdev = 1.994
  CI (99.9%): [396.619, 398.863] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldStage_WhenConfigurablePropertyAndFieldValuePresent

# Run progress: 86.45% complete, ETA 00:49:49
# Fork: 1 of 2
# Warmup Iteration   1: 1121.207 ns/op
# Warmup Iteration   2: 434.169 ns/op
# Warmup Iteration   3: 403.252 ns/op
# Warmup Iteration   4: 402.323 ns/op
# Warmup Iteration   5: 402.084 ns/op
# Warmup Iteration   6: 400.766 ns/op
# Warmup Iteration   7: 402.405 ns/op
# Warmup Iteration   8: 402.510 ns/op
# Warmup Iteration   9: 405.295 ns/op
# Warmup Iteration  10: 405.481 ns/op
Iteration   1: 405.841 ns/op
Iteration   2: 405.149 ns/op
Iteration   3: 400.965 ns/op
Iteration   4: 403.107 ns/op
Iteration   5: 404.611 ns/op
Iteration   6: 403.714 ns/op
Iteration   7: 403.551 ns/op
Iteration   8: 400.730 ns/op
Iteration   9: 402.337 ns/op
Iteration  10: 401.093 ns/op
Iteration  11: 400.798 ns/op
Iteration  12: 402.987 ns/op
Iteration  13: 402.066 ns/op
Iteration  14: 403.110 ns/op
Iteration  15: 402.718 ns/op
Iteration  16: 402.116 ns/op
Iteration  17: 403.446 ns/op
Iteration  18: 404.804 ns/op
Iteration  19: 404.690 ns/op
Iteration  20: 403.993 ns/op

# Run progress: 86.52% complete, ETA 00:49:35
# Fork: 2 of 2
# Warmup Iteration   1: 1051.627 ns/op
# Warmup Iteration   2: 421.226 ns/op
# Warmup Iteration   3: 415.137 ns/op
# Warmup Iteration   4: 401.615 ns/op
# Warmup Iteration   5: 402.813 ns/op
# Warmup Iteration   6: 399.169 ns/op
# Warmup Iteration   7: 401.432 ns/op
# Warmup Iteration   8: 399.532 ns/op
# Warmup Iteration   9: 401.229 ns/op
# Warmup Iteration  10: 400.933 ns/op
Iteration   1: 402.521 ns/op
Iteration   2: 401.281 ns/op
Iteration   3: 401.346 ns/op
Iteration   4: 400.568 ns/op
Iteration   5: 401.040 ns/op
Iteration   6: 400.882 ns/op
Iteration   7: 400.990 ns/op
Iteration   8: 402.218 ns/op
Iteration   9: 400.547 ns/op
Iteration  10: 400.385 ns/op
Iteration  11: 401.252 ns/op
Iteration  12: 403.252 ns/op
Iteration  13: 402.573 ns/op
Iteration  14: 401.863 ns/op
Iteration  15: 401.397 ns/op
Iteration  16: 400.436 ns/op
Iteration  17: 400.061 ns/op
Iteration  18: 398.589 ns/op
Iteration  19: 400.111 ns/op
Iteration  20: 400.012 ns/op


Result "io.github.azagniotov.stubby4j.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldStage_WhenConfigurablePropertyAndFieldValuePresent":
  402.079 ±(99.9%) 0.928 ns/op [Average]
  (min, avg, max) = (398.589, 402.079, 405.841), stdev = 1.650
  CI (99.9%): [401.150, 403.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest._Benchmark.benchmark_returnsBodyAsExpectedBytesWhenOnlyBodyStubbed

# Run progress: 86.60% complete, ETA 00:49:20
# Fork: 1 of 2
# Warmup Iteration   1: 1072.025 ns/op
# Warmup Iteration   2: 437.990 ns/op
# Warmup Iteration   3: 391.966 ns/op
# Warmup Iteration   4: 391.301 ns/op
# Warmup Iteration   5: 393.067 ns/op
# Warmup Iteration   6: 393.377 ns/op
# Warmup Iteration   7: 390.203 ns/op
# Warmup Iteration   8: 392.508 ns/op
# Warmup Iteration   9: 390.965 ns/op
# Warmup Iteration  10: 392.037 ns/op
Iteration   1: 391.461 ns/op
Iteration   2: 391.401 ns/op
Iteration   3: 389.826 ns/op
Iteration   4: 389.787 ns/op
Iteration   5: 392.054 ns/op
Iteration   6: 391.164 ns/op
Iteration   7: 390.260 ns/op
Iteration   8: 389.467 ns/op
Iteration   9: 390.619 ns/op
Iteration  10: 392.150 ns/op
Iteration  11: 392.863 ns/op
Iteration  12: 392.521 ns/op
Iteration  13: 393.132 ns/op
Iteration  14: 393.909 ns/op
Iteration  15: 391.017 ns/op
Iteration  16: 390.866 ns/op
Iteration  17: 391.270 ns/op
Iteration  18: 392.294 ns/op
Iteration  19: 392.816 ns/op
Iteration  20: 391.789 ns/op

# Run progress: 86.67% complete, ETA 00:49:06
# Fork: 2 of 2
# Warmup Iteration   1: 1212.971 ns/op
# Warmup Iteration   2: 433.151 ns/op
# Warmup Iteration   3: 385.598 ns/op
# Warmup Iteration   4: 384.705 ns/op
# Warmup Iteration   5: 384.126 ns/op
# Warmup Iteration   6: 384.615 ns/op
# Warmup Iteration   7: 384.258 ns/op
# Warmup Iteration   8: 384.406 ns/op
# Warmup Iteration   9: 384.280 ns/op
# Warmup Iteration  10: 385.150 ns/op
Iteration   1: 384.706 ns/op
Iteration   2: 383.243 ns/op
Iteration   3: 385.207 ns/op
Iteration   4: 384.285 ns/op
Iteration   5: 384.628 ns/op
Iteration   6: 384.789 ns/op
Iteration   7: 387.797 ns/op
Iteration   8: 385.475 ns/op
Iteration   9: 384.419 ns/op
Iteration  10: 384.071 ns/op
Iteration  11: 385.662 ns/op
Iteration  12: 385.075 ns/op
Iteration  13: 384.165 ns/op
Iteration  14: 383.510 ns/op
Iteration  15: 383.474 ns/op
Iteration  16: 384.100 ns/op
Iteration  17: 383.502 ns/op
Iteration  18: 383.732 ns/op
Iteration  19: 386.840 ns/op
Iteration  20: 384.490 ns/op


Result "io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest._Benchmark.benchmark_returnsBodyAsExpectedBytesWhenOnlyBodyStubbed":
  388.096 ±(99.9%) 2.064 ns/op [Average]
  (min, avg, max) = (383.243, 388.096, 393.909), stdev = 3.669
  CI (99.9%): [386.032, 390.160] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest._Benchmark.benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed

# Run progress: 86.75% complete, ETA 00:48:51
# Fork: 1 of 2
# Warmup Iteration   1: 436474.963 ns/op
# Warmup Iteration   2: 213730.743 ns/op
# Warmup Iteration   3: 194571.658 ns/op
# Warmup Iteration   4: 358256.591 ns/op
# Warmup Iteration   5: 321108.065 ns/op
# Warmup Iteration   6: 848758.829 ns/op
# Warmup Iteration   7: 597836.222 ns/op
# Warmup Iteration   8: 326145.718 ns/op
# Warmup Iteration   9: 683310.144 ns/op
# Warmup Iteration  10: 572272.497 ns/op
Iteration   1: 317926.509 ns/op
Iteration   2: 710653.389 ns/op
Iteration   3: 589205.409 ns/op
Iteration   4: 319134.111 ns/op
Iteration   5: 714202.336 ns/op
Iteration   6: 573627.568 ns/op
Iteration   7: 326462.680 ns/op
Iteration   8: 633844.331 ns/op
Iteration   9: 583282.008 ns/op
Iteration  10: 330422.551 ns/op
Iteration  11: 675076.863 ns/op
Iteration  12: 585987.118 ns/op
Iteration  13: 326108.840 ns/op
Iteration  14: 681881.073 ns/op
Iteration  15: 592518.203 ns/op
Iteration  16: <failure>

java.io.IOException: No space left on device
	at java.base/java.io.UnixFileSystem.createFileExclusively(Native Method)
	at java.base/java.io.File.createTempFile(File.java:2170)
	at java.base/java.io.File.createTempFile(File.java:2216)
	at io.github.azagniotov.stubby4j.utils.FileUtils.tempFileFromString(FileUtils.java:71)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest.returnsBodyAsExpectedBytesWhenOnlyFileStubbed(StubWebSocketClientRequestTest.java:34)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest$_Benchmark.benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed(StubWebSocketClientRequestTest.java:69)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_avgt_jmhStub(StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_AverageTime(StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_jmhTest.java:150)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)



# Run progress: 86.82% complete, ETA 00:48:37
# Fork: 2 of 2
# Warmup Iteration   1: 512254.290 ns/op
# Warmup Iteration   2: 454910.958 ns/op
# Warmup Iteration   3: 320210.473 ns/op
# Warmup Iteration   4: 805023.106 ns/op
# Warmup Iteration   5: 600031.061 ns/op
# Warmup Iteration   6: 326355.030 ns/op
# Warmup Iteration   7: 672048.207 ns/op
# Warmup Iteration   8: 601440.895 ns/op
# Warmup Iteration   9: 326553.136 ns/op
# Warmup Iteration  10: 686442.676 ns/op
Iteration   1: 574262.000 ns/op
Iteration   2: 326128.255 ns/op
Iteration   3: 661065.472 ns/op
Iteration   4: 592142.272 ns/op
Iteration   5: 326511.600 ns/op
Iteration   6: 670422.216 ns/op
Iteration   7: 583506.599 ns/op
Iteration   8: 326395.995 ns/op
Iteration   9: 678889.378 ns/op
Iteration  10: 569323.471 ns/op
Iteration  11: 326522.931 ns/op
Iteration  12: 675209.374 ns/op
Iteration  13: 605534.413 ns/op
Iteration  14: 326463.302 ns/op
Iteration  15: 673569.170 ns/op
Iteration  16: 582002.481 ns/op
Iteration  17: 697224.438 ns/op
Iteration  18: 468318.377 ns/op
Iteration  19: <failure>

java.io.IOException: No space left on device
	at java.base/java.io.UnixFileSystem.createFileExclusively(Native Method)
	at java.base/java.io.File.createTempFile(File.java:2170)
	at java.base/java.io.File.createTempFile(File.java:2216)
	at io.github.azagniotov.stubby4j.utils.FileUtils.tempFileFromString(FileUtils.java:71)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest.returnsBodyAsExpectedBytesWhenOnlyFileStubbed(StubWebSocketClientRequestTest.java:34)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest$_Benchmark.benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed(StubWebSocketClientRequestTest.java:69)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_avgt_jmhStub(StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_AverageTime(StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_jmhTest.java:150)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)




Result "io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest._Benchmark.benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed":
  534055.295 ±(99.9%) 93707.575 ns/op [Average]
  (min, avg, max) = (317926.509, 534055.295, 714202.336), stdev = 148630.156
  CI (99.9%): [440347.720, 627762.870] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest._Benchmark.benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed

# Run progress: 86.90% complete, ETA 00:48:24
# Fork: 1 of 2
# Warmup Iteration   1: 515615.954 ns/op
# Warmup Iteration   2: 441039.081 ns/op
# Warmup Iteration   3: 318557.018 ns/op
# Warmup Iteration   4: 837453.378 ns/op
# Warmup Iteration   5: 601410.541 ns/op
# Warmup Iteration   6: 318266.200 ns/op
# Warmup Iteration   7: 722687.967 ns/op
# Warmup Iteration   8: 566428.311 ns/op
# Warmup Iteration   9: 326437.987 ns/op
# Warmup Iteration  10: 676575.335 ns/op
Iteration   1: 573732.442 ns/op
Iteration   2: 325936.897 ns/op
Iteration   3: 682459.785 ns/op
Iteration   4: 580577.494 ns/op
Iteration   5: 326438.401 ns/op
Iteration   6: 686128.909 ns/op
Iteration   7: 577985.227 ns/op
Iteration   8: 326544.873 ns/op
Iteration   9: 665084.833 ns/op
Iteration  10: 573151.423 ns/op
Iteration  11: 775069.581 ns/op
Iteration  12: 898518.307 ns/op
Iteration  13: 332089.170 ns/op
Iteration  14: 332217.618 ns/op
Iteration  15: 332249.386 ns/op
Iteration  16: 615909.027 ns/op
Iteration  17: 331914.752 ns/op
Iteration  18: 670811.641 ns/op
Iteration  19: <failure>

java.io.IOException: No space left on device
	at java.base/java.io.UnixFileSystem.createFileExclusively(Native Method)
	at java.base/java.io.File.createTempFile(File.java:2170)
	at java.base/java.io.File.createTempFile(File.java:2216)
	at io.github.azagniotov.stubby4j.utils.FileUtils.tempFileFromString(FileUtils.java:71)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest.returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed(StubWebSocketClientRequestTest.java:43)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest$_Benchmark.benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed(StubWebSocketClientRequestTest.java:75)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_avgt_jmhStub(StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_AverageTime(StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_jmhTest.java:150)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:80)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)



# Run progress: 86.97% complete, ETA 00:48:10
# Fork: 2 of 2
# Warmup Iteration   1: 517156.543 ns/op
# Warmup Iteration   2: 454209.135 ns/op
# Warmup Iteration   3: 321154.604 ns/op
# Warmup Iteration   4: 835486.179 ns/op
# Warmup Iteration   5: 605111.809 ns/op
# Warmup Iteration   6: 326239.446 ns/op
# Warmup Iteration   7: 676952.675 ns/op
# Warmup Iteration   8: 560381.952 ns/op
# Warmup Iteration   9: 326585.340 ns/op
# Warmup Iteration  10: 663970.571 ns/op
Iteration   1: 574769.685 ns/op
Iteration   2: 325867.654 ns/op
Iteration   3: 660672.961 ns/op
Iteration   4: 607646.188 ns/op
Iteration   5: 319787.582 ns/op
Iteration   6: 1042411.398 ns/op
Iteration   7: 9523364.962 ns/op
Iteration   8: 372406.145 ns/op
Iteration   9: 336382.445 ns/op
Iteration  10: 322686.222 ns/op
Iteration  11: 329240.293 ns/op
Iteration  12: 679956.598 ns/op
Iteration  13: 565541.031 ns/op
Iteration  14: 326274.990 ns/op
Iteration  15: 687747.882 ns/op
Iteration  16: 588597.367 ns/op
Iteration  17: 326233.820 ns/op
Iteration  18: 673106.947 ns/op
Iteration  19: <failure>

java.io.IOException: No space left on device
	at java.base/java.io.UnixFileSystem.createFileExclusively(Native Method)
	at java.base/java.io.File.createTempFile(File.java:2170)
	at java.base/java.io.File.createTempFile(File.java:2216)
	at io.github.azagniotov.stubby4j.utils.FileUtils.tempFileFromString(FileUtils.java:71)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest.returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed(StubWebSocketClientRequestTest.java:43)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest$_Benchmark.benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed(StubWebSocketClientRequestTest.java:75)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_avgt_jmhStub(StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_AverageTime(StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_jmhTest.java:150)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)




Result "io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest._Benchmark.benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed":
  774153.165 ±(99.9%) 904816.163 ns/op [Average]
  (min, avg, max) = (319787.582, 774153.165, 9523364.962), stdev = 1511744.665
  CI (99.9%): [≈ 0, 1678969.328] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest._Benchmark.benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed

# Run progress: 87.05% complete, ETA 00:47:56
# Fork: 1 of 2
# Warmup Iteration   1: 519115.148 ns/op
# Warmup Iteration   2: 439125.876 ns/op
# Warmup Iteration   3: 326530.485 ns/op
# Warmup Iteration   4: 782772.968 ns/op
# Warmup Iteration   5: 619613.507 ns/op
# Warmup Iteration   6: 326346.218 ns/op
# Warmup Iteration   7: 699854.918 ns/op
# Warmup Iteration   8: 564212.832 ns/op
# Warmup Iteration   9: 326318.648 ns/op
# Warmup Iteration  10: 690878.475 ns/op
Iteration   1: 581592.303 ns/op
Iteration   2: 950583.873 ns/op
Iteration   3: 683608.611 ns/op
Iteration   4: 328395.115 ns/op
Iteration   5: 341927.433 ns/op
Iteration   6: 331949.360 ns/op
Iteration   7: 651308.329 ns/op
Iteration   8: 326243.333 ns/op
Iteration   9: 674447.263 ns/op
Iteration  10: 573077.200 ns/op
Iteration  11: 326376.019 ns/op
Iteration  12: 684635.388 ns/op
Iteration  13: 590030.069 ns/op
Iteration  14: 326364.125 ns/op
Iteration  15: 683103.111 ns/op
Iteration  16: 590450.450 ns/op
Iteration  17: 326179.474 ns/op
Iteration  18: 679170.008 ns/op
Iteration  19: <failure>

java.io.IOException: No space left on device
	at java.base/java.io.UnixFileSystem.createFileExclusively(Native Method)
	at java.base/java.io.File.createTempFile(File.java:2170)
	at java.base/java.io.File.createTempFile(File.java:2216)
	at io.github.azagniotov.stubby4j.utils.FileUtils.tempFileFromString(FileUtils.java:71)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest.returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed(StubWebSocketClientRequestTest.java:68)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest$_Benchmark.benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed(StubWebSocketClientRequestTest.java:93)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_avgt_jmhStub(StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_AverageTime(StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_jmhTest.java:150)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)



# Run progress: 87.12% complete, ETA 00:47:43
# Fork: 2 of 2
# Warmup Iteration   1: 505728.482 ns/op
# Warmup Iteration   2: 470641.679 ns/op
# Warmup Iteration   3: 326330.431 ns/op
# Warmup Iteration   4: 835568.603 ns/op
# Warmup Iteration   5: 595683.017 ns/op
# Warmup Iteration   6: 326603.534 ns/op
# Warmup Iteration   7: 1343522.645 ns/op
# Warmup Iteration   8: 10704704.670 ns/op
# Warmup Iteration   9: 339133.099 ns/op
# Warmup Iteration  10: 327898.809 ns/op
Iteration   1: 329698.180 ns/op
Iteration   2: 331662.071 ns/op
Iteration   3: 677207.958 ns/op
Iteration   4: 569917.919 ns/op
Iteration   5: 326210.980 ns/op
Iteration   6: 685205.404 ns/op
Iteration   7: 567251.795 ns/op
Iteration   8: 325910.275 ns/op
Iteration   9: 676736.578 ns/op
Iteration  10: 585497.180 ns/op
Iteration  11: 326456.771 ns/op
Iteration  12: 695886.094 ns/op
Iteration  13: 593798.270 ns/op
Iteration  14: 326308.819 ns/op
Iteration  15: 679335.663 ns/op
Iteration  16: 573861.381 ns/op
Iteration  17: 326972.804 ns/op
Iteration  18: <failure>

java.io.IOException: No space left on device
	at java.base/java.io.UnixFileSystem.createFileExclusively(Native Method)
	at java.base/java.io.File.createTempFile(File.java:2170)
	at java.base/java.io.File.createTempFile(File.java:2216)
	at io.github.azagniotov.stubby4j.utils.FileUtils.tempFileFromString(FileUtils.java:71)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest.returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed(StubWebSocketClientRequestTest.java:68)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest$_Benchmark.benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed(StubWebSocketClientRequestTest.java:93)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_avgt_jmhStub(StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_AverageTime(StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_jmhTest.java:150)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)




Result "io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest._Benchmark.benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed":
  521353.132 ±(99.9%) 105004.253 ns/op [Average]
  (min, avg, max) = (325910.275, 521353.132, 950583.873), stdev = 172525.012
  CI (99.9%): [416348.879, 626357.384] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest._Benchmark.benchmark_returnsBodyAsExpectedStringWhenOnlyBodyStubbed

# Run progress: 87.20% complete, ETA 00:47:29
# Fork: 1 of 2
# Warmup Iteration   1: 1161.274 ns/op
# Warmup Iteration   2: 437.048 ns/op
# Warmup Iteration   3: 401.837 ns/op
# Warmup Iteration   4: 393.884 ns/op
# Warmup Iteration   5: 391.568 ns/op
# Warmup Iteration   6: 391.022 ns/op
# Warmup Iteration   7: 390.241 ns/op
# Warmup Iteration   8: 391.299 ns/op
# Warmup Iteration   9: 392.043 ns/op
# Warmup Iteration  10: 390.248 ns/op
Iteration   1: 390.283 ns/op
Iteration   2: 390.071 ns/op
Iteration   3: 388.933 ns/op
Iteration   4: 391.108 ns/op
Iteration   5: 390.410 ns/op
Iteration   6: 388.631 ns/op
Iteration   7: 390.315 ns/op
Iteration   8: 388.956 ns/op
Iteration   9: 389.543 ns/op
Iteration  10: 388.833 ns/op
Iteration  11: 391.752 ns/op
Iteration  12: 392.521 ns/op
Iteration  13: 392.736 ns/op
Iteration  14: 391.962 ns/op
Iteration  15: 390.961 ns/op
Iteration  16: 389.859 ns/op
Iteration  17: 390.900 ns/op
Iteration  18: 391.878 ns/op
Iteration  19: 390.420 ns/op
Iteration  20: 390.804 ns/op

# Run progress: 87.27% complete, ETA 00:47:14
# Fork: 2 of 2
# Warmup Iteration   1: 1157.223 ns/op
# Warmup Iteration   2: 434.077 ns/op
# Warmup Iteration   3: 391.052 ns/op
# Warmup Iteration   4: 390.196 ns/op
# Warmup Iteration   5: 389.431 ns/op
# Warmup Iteration   6: 391.465 ns/op
# Warmup Iteration   7: 389.187 ns/op
# Warmup Iteration   8: 392.792 ns/op
# Warmup Iteration   9: 395.863 ns/op
# Warmup Iteration  10: 392.853 ns/op
Iteration   1: 390.559 ns/op
Iteration   2: 391.318 ns/op
Iteration   3: 392.565 ns/op
Iteration   4: 391.007 ns/op
Iteration   5: 392.210 ns/op
Iteration   6: 390.945 ns/op
Iteration   7: 389.816 ns/op
Iteration   8: 390.431 ns/op
Iteration   9: 390.909 ns/op
Iteration  10: 391.157 ns/op
Iteration  11: 391.082 ns/op
Iteration  12: 389.699 ns/op
Iteration  13: 390.817 ns/op
Iteration  14: 390.146 ns/op
Iteration  15: 391.752 ns/op
Iteration  16: 393.036 ns/op
Iteration  17: 391.803 ns/op
Iteration  18: 391.798 ns/op
Iteration  19: 391.754 ns/op
Iteration  20: 389.543 ns/op


Result "io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest._Benchmark.benchmark_returnsBodyAsExpectedStringWhenOnlyBodyStubbed":
  390.831 ±(99.9%) 0.626 ns/op [Average]
  (min, avg, max) = (388.631, 390.831, 393.036), stdev = 1.113
  CI (99.9%): [390.204, 391.457] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest._Benchmark.benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed

# Run progress: 87.35% complete, ETA 00:46:59
# Fork: 1 of 2
# Warmup Iteration   1: 470297.928 ns/op
# Warmup Iteration   2: 228641.975 ns/op
# Warmup Iteration   3: 187548.020 ns/op
# Warmup Iteration   4: 347721.631 ns/op
# Warmup Iteration   5: 326410.714 ns/op
# Warmup Iteration   6: 817691.429 ns/op
# Warmup Iteration   7: 598086.332 ns/op
# Warmup Iteration   8: 326221.367 ns/op
# Warmup Iteration   9: 674931.082 ns/op
# Warmup Iteration  10: 576798.039 ns/op
Iteration   1: 326141.645 ns/op
Iteration   2: 682218.650 ns/op
Iteration   3: 564318.207 ns/op
Iteration   4: 1307444.234 ns/op
Iteration   5: 332412.402 ns/op
Iteration   6: 335734.358 ns/op
Iteration   7: 322641.949 ns/op
Iteration   8: 689921.344 ns/op
Iteration   9: 588463.980 ns/op
Iteration  10: 326570.281 ns/op
Iteration  11: 683201.381 ns/op
Iteration  12: 579956.578 ns/op
Iteration  13: 322847.357 ns/op
Iteration  14: 693637.696 ns/op
Iteration  15: 581848.605 ns/op
Iteration  16: <failure>

java.io.IOException: No space left on device
	at java.base/java.io.UnixFileSystem.createFileExclusively(Native Method)
	at java.base/java.io.File.createTempFile(File.java:2170)
	at java.base/java.io.File.createTempFile(File.java:2216)
	at io.github.azagniotov.stubby4j.utils.FileUtils.tempFileFromString(FileUtils.java:71)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest.returnsBodyAsExpectedStringWhenOnlyFileStubbed(StubWebSocketClientRequestTest.java:59)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest$_Benchmark.benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed(StubWebSocketClientRequestTest.java:87)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_avgt_jmhStub(StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_AverageTime(StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_jmhTest.java:150)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)



# Run progress: 87.42% complete, ETA 00:46:45
# Fork: 2 of 2
# Warmup Iteration   1: 528980.592 ns/op
# Warmup Iteration   2: 440634.911 ns/op
# Warmup Iteration   3: 326386.813 ns/op
# Warmup Iteration   4: 779656.850 ns/op
# Warmup Iteration   5: 635209.486 ns/op
# Warmup Iteration   6: 325272.873 ns/op
# Warmup Iteration   7: 690336.038 ns/op
# Warmup Iteration   8: 573502.758 ns/op
# Warmup Iteration   9: 326141.013 ns/op
# Warmup Iteration  10: 694764.591 ns/op
Iteration   1: 763522.568 ns/op
Iteration   2: 915103.666 ns/op
Iteration   3: 336169.865 ns/op
Iteration   4: 322651.708 ns/op
Iteration   5: 330440.455 ns/op
Iteration   6: 705903.728 ns/op
Iteration   7: 535398.242 ns/op
Iteration   8: 326347.390 ns/op
Iteration   9: 681100.003 ns/op
Iteration  10: 572756.570 ns/op
Iteration  11: 323364.684 ns/op
Iteration  12: 697706.908 ns/op
Iteration  13: 571139.899 ns/op
Iteration  14: 325184.836 ns/op
Iteration  15: 689561.060 ns/op
Iteration  16: 582919.192 ns/op
Iteration  17: 326242.091 ns/op
Iteration  18: 685680.233 ns/op
Iteration  19: <failure>

java.io.IOException: No space left on device
	at java.base/java.io.UnixFileSystem.createFileExclusively(Native Method)
	at java.base/java.io.File.createTempFile(File.java:2170)
	at java.base/java.io.File.createTempFile(File.java:2216)
	at io.github.azagniotov.stubby4j.utils.FileUtils.tempFileFromString(FileUtils.java:71)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest.returnsBodyAsExpectedStringWhenOnlyFileStubbed(StubWebSocketClientRequestTest.java:59)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest$_Benchmark.benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed(StubWebSocketClientRequestTest.java:87)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_avgt_jmhStub(StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_AverageTime(StubWebSocketClientRequestTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_jmhTest.java:150)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:80)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)




Result "io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketClientRequestTest._Benchmark.benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed":
  546319.751 ±(99.9%) 140043.331 ns/op [Average]
  (min, avg, max) = (322641.949, 546319.751, 1307444.234), stdev = 222123.582
  CI (99.9%): [406276.419, 686363.082] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketMessageTypeTest._Benchmark.benchmark_returnsFalseOnUnknownProperties

# Run progress: 87.50% complete, ETA 00:46:31
# Fork: 1 of 2
# Warmup Iteration   1: 966.479 ns/op
# Warmup Iteration   2: 415.727 ns/op
# Warmup Iteration   3: 385.878 ns/op
# Warmup Iteration   4: 385.596 ns/op
# Warmup Iteration   5: 385.967 ns/op
# Warmup Iteration   6: 389.886 ns/op
# Warmup Iteration   7: 393.156 ns/op
# Warmup Iteration   8: 386.130 ns/op
# Warmup Iteration   9: 383.086 ns/op
# Warmup Iteration  10: 385.078 ns/op
Iteration   1: 386.113 ns/op
Iteration   2: 384.639 ns/op
Iteration   3: 383.505 ns/op
Iteration   4: 385.208 ns/op
Iteration   5: 385.095 ns/op
Iteration   6: 382.270 ns/op
Iteration   7: 384.402 ns/op
Iteration   8: 384.430 ns/op
Iteration   9: 383.226 ns/op
Iteration  10: 383.742 ns/op
Iteration  11: 383.023 ns/op
Iteration  12: 383.033 ns/op
Iteration  13: 384.225 ns/op
Iteration  14: 385.159 ns/op
Iteration  15: 384.022 ns/op
Iteration  16: 385.424 ns/op
Iteration  17: 382.399 ns/op
Iteration  18: 386.344 ns/op
Iteration  19: 383.349 ns/op
Iteration  20: 383.456 ns/op

# Run progress: 87.58% complete, ETA 00:46:16
# Fork: 2 of 2
# Warmup Iteration   1: 989.682 ns/op
# Warmup Iteration   2: 415.252 ns/op
# Warmup Iteration   3: 386.325 ns/op
# Warmup Iteration   4: 385.977 ns/op
# Warmup Iteration   5: 385.458 ns/op
# Warmup Iteration   6: 385.541 ns/op
# Warmup Iteration   7: 385.414 ns/op
# Warmup Iteration   8: 386.683 ns/op
# Warmup Iteration   9: 385.330 ns/op
# Warmup Iteration  10: 387.312 ns/op
Iteration   1: 386.537 ns/op
Iteration   2: 385.885 ns/op
Iteration   3: 385.186 ns/op
Iteration   4: 384.549 ns/op
Iteration   5: 384.325 ns/op
Iteration   6: 384.916 ns/op
Iteration   7: 385.253 ns/op
Iteration   8: 384.621 ns/op
Iteration   9: 386.006 ns/op
Iteration  10: 385.130 ns/op
Iteration  11: 386.552 ns/op
Iteration  12: 386.590 ns/op
Iteration  13: 384.423 ns/op
Iteration  14: 386.697 ns/op
Iteration  15: 386.482 ns/op
Iteration  16: 386.383 ns/op
Iteration  17: 386.242 ns/op
Iteration  18: 385.455 ns/op
Iteration  19: 386.009 ns/op
Iteration  20: 384.842 ns/op


Result "io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketMessageTypeTest._Benchmark.benchmark_returnsFalseOnUnknownProperties":
  384.879 ±(99.9%) 0.694 ns/op [Average]
  (min, avg, max) = (382.270, 384.879, 386.697), stdev = 1.233
  CI (99.9%): [384.185, 385.572] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketMessageTypeTest._Benchmark.benchmark_returnsTrueOnKnownProperties

# Run progress: 87.65% complete, ETA 00:46:02
# Fork: 1 of 2
# Warmup Iteration   1: 1118.570 ns/op
# Warmup Iteration   2: 464.225 ns/op
# Warmup Iteration   3: 424.996 ns/op
# Warmup Iteration   4: 426.393 ns/op
# Warmup Iteration   5: 424.877 ns/op
# Warmup Iteration   6: 424.016 ns/op
# Warmup Iteration   7: 423.954 ns/op
# Warmup Iteration   8: 426.339 ns/op
# Warmup Iteration   9: 426.118 ns/op
# Warmup Iteration  10: 426.908 ns/op
Iteration   1: 425.887 ns/op
Iteration   2: 425.990 ns/op
Iteration   3: 426.835 ns/op
Iteration   4: 425.942 ns/op
Iteration   5: 426.408 ns/op
Iteration   6: 426.558 ns/op
Iteration   7: 425.360 ns/op
Iteration   8: 426.808 ns/op
Iteration   9: 424.163 ns/op
Iteration  10: 427.281 ns/op
Iteration  11: 425.226 ns/op
Iteration  12: 425.206 ns/op
Iteration  13: 425.286 ns/op
Iteration  14: 425.837 ns/op
Iteration  15: 425.284 ns/op
Iteration  16: 424.412 ns/op
Iteration  17: 427.243 ns/op
Iteration  18: 425.266 ns/op
Iteration  19: 425.771 ns/op
Iteration  20: 423.378 ns/op

# Run progress: 87.73% complete, ETA 00:45:47
# Fork: 2 of 2
# Warmup Iteration   1: 1416.494 ns/op
# Warmup Iteration   2: 465.352 ns/op
# Warmup Iteration   3: 419.829 ns/op
# Warmup Iteration   4: 419.284 ns/op
# Warmup Iteration   5: 419.605 ns/op
# Warmup Iteration   6: 420.683 ns/op
# Warmup Iteration   7: 420.098 ns/op
# Warmup Iteration   8: 419.064 ns/op
# Warmup Iteration   9: 422.339 ns/op
# Warmup Iteration  10: 419.221 ns/op
Iteration   1: 419.418 ns/op
Iteration   2: 417.932 ns/op
Iteration   3: 418.322 ns/op
Iteration   4: 419.825 ns/op
Iteration   5: 419.724 ns/op
Iteration   6: 419.984 ns/op
Iteration   7: 420.221 ns/op
Iteration   8: 419.513 ns/op
Iteration   9: 419.853 ns/op
Iteration  10: 419.627 ns/op
Iteration  11: 417.591 ns/op
Iteration  12: 421.965 ns/op
Iteration  13: 419.362 ns/op
Iteration  14: 420.313 ns/op
Iteration  15: 418.957 ns/op
Iteration  16: 416.179 ns/op
Iteration  17: 419.860 ns/op
Iteration  18: 418.864 ns/op
Iteration  19: 421.263 ns/op
Iteration  20: 421.398 ns/op


Result "io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketMessageTypeTest._Benchmark.benchmark_returnsTrueOnKnownProperties":
  422.608 ±(99.9%) 1.884 ns/op [Average]
  (min, avg, max) = (416.179, 422.608, 427.281), stdev = 3.349
  CI (99.9%): [420.724, 424.492] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponsePolicyTest._Benchmark.benchmark_returnsFalseOnUnknownProperties

# Run progress: 87.80% complete, ETA 00:45:32
# Fork: 1 of 2
# Warmup Iteration   1: 1062.321 ns/op
# Warmup Iteration   2: 424.973 ns/op
# Warmup Iteration   3: 387.852 ns/op
# Warmup Iteration   4: 385.477 ns/op
# Warmup Iteration   5: 388.768 ns/op
# Warmup Iteration   6: 386.837 ns/op
# Warmup Iteration   7: 385.766 ns/op
# Warmup Iteration   8: 386.327 ns/op
# Warmup Iteration   9: 384.886 ns/op
# Warmup Iteration  10: 387.933 ns/op
Iteration   1: 388.366 ns/op
Iteration   2: 385.397 ns/op
Iteration   3: 387.024 ns/op
Iteration   4: 385.669 ns/op
Iteration   5: 385.079 ns/op
Iteration   6: 387.028 ns/op
Iteration   7: 386.386 ns/op
Iteration   8: 386.139 ns/op
Iteration   9: 386.294 ns/op
Iteration  10: 385.834 ns/op
Iteration  11: 386.211 ns/op
Iteration  12: 386.109 ns/op
Iteration  13: 387.969 ns/op
Iteration  14: 387.727 ns/op
Iteration  15: 386.148 ns/op
Iteration  16: 386.212 ns/op
Iteration  17: 384.332 ns/op
Iteration  18: 386.445 ns/op
Iteration  19: 386.840 ns/op
Iteration  20: 388.232 ns/op

# Run progress: 87.88% complete, ETA 00:45:17
# Fork: 2 of 2
# Warmup Iteration   1: 770.494 ns/op
# Warmup Iteration   2: 427.802 ns/op
# Warmup Iteration   3: 390.452 ns/op
# Warmup Iteration   4: 392.895 ns/op
# Warmup Iteration   5: 392.078 ns/op
# Warmup Iteration   6: 393.735 ns/op
# Warmup Iteration   7: 390.692 ns/op
# Warmup Iteration   8: 391.055 ns/op
# Warmup Iteration   9: 392.473 ns/op
# Warmup Iteration  10: 392.827 ns/op
Iteration   1: 395.122 ns/op
Iteration   2: 389.823 ns/op
Iteration   3: 391.489 ns/op
Iteration   4: 391.982 ns/op
Iteration   5: 389.540 ns/op
Iteration   6: 392.126 ns/op
Iteration   7: 391.801 ns/op
Iteration   8: 390.265 ns/op
Iteration   9: 390.990 ns/op
Iteration  10: 390.599 ns/op
Iteration  11: 391.217 ns/op
Iteration  12: 388.551 ns/op
Iteration  13: 388.898 ns/op
Iteration  14: 390.955 ns/op
Iteration  15: 389.078 ns/op
Iteration  16: 390.234 ns/op
Iteration  17: 389.699 ns/op
Iteration  18: 390.474 ns/op
Iteration  19: 390.867 ns/op
Iteration  20: 390.574 ns/op


Result "io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponsePolicyTest._Benchmark.benchmark_returnsFalseOnUnknownProperties":
  388.593 ±(99.9%) 1.396 ns/op [Average]
  (min, avg, max) = (384.332, 388.593, 395.122), stdev = 2.481
  CI (99.9%): [387.197, 389.989] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponsePolicyTest._Benchmark.benchmark_returnsTrueOnKnownProperties

# Run progress: 87.95% complete, ETA 00:45:02
# Fork: 1 of 2
# Warmup Iteration   1: 1092.550 ns/op
# Warmup Iteration   2: 546.036 ns/op
# Warmup Iteration   3: 522.002 ns/op
# Warmup Iteration   4: 522.538 ns/op
# Warmup Iteration   5: 520.117 ns/op
# Warmup Iteration   6: 522.806 ns/op
# Warmup Iteration   7: 518.912 ns/op
# Warmup Iteration   8: 519.853 ns/op
# Warmup Iteration   9: 523.016 ns/op
# Warmup Iteration  10: 520.018 ns/op
Iteration   1: 519.270 ns/op
Iteration   2: 519.825 ns/op
Iteration   3: 520.938 ns/op
Iteration   4: 518.871 ns/op
Iteration   5: 519.789 ns/op
Iteration   6: 520.539 ns/op
Iteration   7: 521.496 ns/op
Iteration   8: 522.022 ns/op
Iteration   9: 519.826 ns/op
Iteration  10: 517.957 ns/op
Iteration  11: 518.843 ns/op
Iteration  12: 517.177 ns/op
Iteration  13: 518.725 ns/op
Iteration  14: 519.512 ns/op
Iteration  15: 520.351 ns/op
Iteration  16: 517.480 ns/op
Iteration  17: 519.747 ns/op
Iteration  18: 519.217 ns/op
Iteration  19: 520.131 ns/op
Iteration  20: 518.661 ns/op

# Run progress: 88.03% complete, ETA 00:44:47
# Fork: 2 of 2
# Warmup Iteration   1: 1327.701 ns/op
# Warmup Iteration   2: 588.838 ns/op
# Warmup Iteration   3: 533.220 ns/op
# Warmup Iteration   4: 528.955 ns/op
# Warmup Iteration   5: 530.638 ns/op
# Warmup Iteration   6: 532.361 ns/op
# Warmup Iteration   7: 532.678 ns/op
# Warmup Iteration   8: 532.935 ns/op
# Warmup Iteration   9: 531.797 ns/op
# Warmup Iteration  10: 531.448 ns/op
Iteration   1: 532.855 ns/op
Iteration   2: 530.481 ns/op
Iteration   3: 528.687 ns/op
Iteration   4: 531.227 ns/op
Iteration   5: 532.237 ns/op
Iteration   6: 532.875 ns/op
Iteration   7: 533.707 ns/op
Iteration   8: 531.525 ns/op
Iteration   9: 531.902 ns/op
Iteration  10: 531.249 ns/op
Iteration  11: 529.560 ns/op
Iteration  12: 530.589 ns/op
Iteration  13: 531.476 ns/op
Iteration  14: 531.236 ns/op
Iteration  15: 534.317 ns/op
Iteration  16: 532.391 ns/op
Iteration  17: 532.178 ns/op
Iteration  18: 531.168 ns/op
Iteration  19: 529.905 ns/op
Iteration  20: 530.603 ns/op


Result "io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponsePolicyTest._Benchmark.benchmark_returnsTrueOnKnownProperties":
  525.514 ±(99.9%) 3.492 ns/op [Average]
  (min, avg, max) = (517.177, 525.514, 534.317), stdev = 6.206
  CI (99.9%): [522.022, 529.005] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_returnsBodyAsExpectedBytesWhenOnlyBodyStubbed

# Run progress: 88.10% complete, ETA 00:44:31
# Fork: 1 of 2
# Warmup Iteration   1: 1476.120 ns/op
# Warmup Iteration   2: 461.367 ns/op
# Warmup Iteration   3: 421.450 ns/op
# Warmup Iteration   4: 419.317 ns/op
# Warmup Iteration   5: 418.498 ns/op
# Warmup Iteration   6: 418.546 ns/op
# Warmup Iteration   7: 419.953 ns/op
# Warmup Iteration   8: 420.869 ns/op
# Warmup Iteration   9: 419.808 ns/op
# Warmup Iteration  10: 417.932 ns/op
Iteration   1: 419.451 ns/op
Iteration   2: 420.064 ns/op
Iteration   3: 417.737 ns/op
Iteration   4: 418.468 ns/op
Iteration   5: 419.086 ns/op
Iteration   6: 417.710 ns/op
Iteration   7: 418.190 ns/op
Iteration   8: 419.911 ns/op
Iteration   9: 417.271 ns/op
Iteration  10: 418.740 ns/op
Iteration  11: 418.832 ns/op
Iteration  12: 419.346 ns/op
Iteration  13: 419.248 ns/op
Iteration  14: 418.302 ns/op
Iteration  15: 425.135 ns/op
Iteration  16: 418.954 ns/op
Iteration  17: 418.365 ns/op
Iteration  18: 420.458 ns/op
Iteration  19: 422.517 ns/op
Iteration  20: 421.593 ns/op

# Run progress: 88.18% complete, ETA 00:44:16
# Fork: 2 of 2
# Warmup Iteration   1: 1381.221 ns/op
# Warmup Iteration   2: 456.611 ns/op
# Warmup Iteration   3: 417.911 ns/op
# Warmup Iteration   4: 415.271 ns/op
# Warmup Iteration   5: 417.222 ns/op
# Warmup Iteration   6: 416.256 ns/op
# Warmup Iteration   7: 416.747 ns/op
# Warmup Iteration   8: 418.161 ns/op
# Warmup Iteration   9: 416.374 ns/op
# Warmup Iteration  10: 415.687 ns/op
Iteration   1: 415.049 ns/op
Iteration   2: 416.004 ns/op
Iteration   3: 414.913 ns/op
Iteration   4: 418.613 ns/op
Iteration   5: 418.253 ns/op
Iteration   6: 417.738 ns/op
Iteration   7: 418.167 ns/op
Iteration   8: 417.169 ns/op
Iteration   9: 417.300 ns/op
Iteration  10: 417.069 ns/op
Iteration  11: 416.498 ns/op
Iteration  12: 417.630 ns/op
Iteration  13: 417.909 ns/op
Iteration  14: 416.324 ns/op
Iteration  15: 417.455 ns/op
Iteration  16: 418.388 ns/op
Iteration  17: 415.703 ns/op
Iteration  18: 416.046 ns/op
Iteration  19: 417.262 ns/op
Iteration  20: 416.690 ns/op


Result "io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_returnsBodyAsExpectedBytesWhenOnlyBodyStubbed":
  418.239 ±(99.9%) 1.095 ns/op [Average]
  (min, avg, max) = (414.913, 418.239, 425.135), stdev = 1.946
  CI (99.9%): [417.144, 419.334] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed

# Run progress: 88.25% complete, ETA 00:44:01
# Fork: 1 of 2
# Warmup Iteration   1: 492484.888 ns/op
# Warmup Iteration   2: 226601.158 ns/op
# Warmup Iteration   3: 193615.648 ns/op
# Warmup Iteration   4: 335938.415 ns/op
# Warmup Iteration   5: 318817.833 ns/op
# Warmup Iteration   6: 903672.104 ns/op
# Warmup Iteration   7: 601422.529 ns/op
# Warmup Iteration   8: 326246.658 ns/op
# Warmup Iteration   9: 949757.286 ns/op
# Warmup Iteration  10: 14824200.544 ns/op
Iteration   1: 372610.502 ns/op
Iteration   2: 334996.066 ns/op
Iteration   3: 333520.276 ns/op
Iteration   4: 332153.735 ns/op
Iteration   5: 665721.160 ns/op
Iteration   6: 514161.310 ns/op
Iteration   7: 321470.364 ns/op
Iteration   8: 712308.106 ns/op
Iteration   9: 578123.699 ns/op
Iteration  10: 323721.456 ns/op
Iteration  11: 758215.301 ns/op
Iteration  12: 574112.403 ns/op
Iteration  13: 316915.945 ns/op
Iteration  14: 737443.101 ns/op
Iteration  15: 580216.737 ns/op
Iteration  16: <failure>

java.io.IOException: No space left on device
	at java.base/java.io.UnixFileSystem.createFileExclusively(Native Method)
	at java.base/java.io.File.createTempFile(File.java:2170)
	at java.base/java.io.File.createTempFile(File.java:2216)
	at io.github.azagniotov.stubby4j.utils.FileUtils.tempFileFromString(FileUtils.java:71)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest.returnsBodyAsExpectedBytesWhenOnlyFileStubbed(StubWebSocketServerResponseTest.java:45)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest$_Benchmark.benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed(StubWebSocketServerResponseTest.java:85)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_avgt_jmhStub(StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_AverageTime(StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_jmhTest.java:150)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)



# Run progress: 88.33% complete, ETA 00:43:47
# Fork: 2 of 2
# Warmup Iteration   1: 561311.980 ns/op
# Warmup Iteration   2: 444019.684 ns/op
# Warmup Iteration   3: 326334.373 ns/op
# Warmup Iteration   4: 782194.807 ns/op
# Warmup Iteration   5: 601071.569 ns/op
# Warmup Iteration   6: 326344.327 ns/op
# Warmup Iteration   7: 1341956.770 ns/op
# Warmup Iteration   8: 9743928.133 ns/op
# Warmup Iteration   9: 342867.778 ns/op
# Warmup Iteration  10: 336342.748 ns/op
Iteration   1: 319870.125 ns/op
Iteration   2: 334313.276 ns/op
Iteration   3: 661536.101 ns/op
Iteration   4: 570251.930 ns/op
Iteration   5: 326457.162 ns/op
Iteration   6: 690067.830 ns/op
Iteration   7: 591851.335 ns/op
Iteration   8: 326487.406 ns/op
Iteration   9: 686862.422 ns/op
Iteration  10: 562092.674 ns/op
Iteration  11: 326528.298 ns/op
Iteration  12: 681353.257 ns/op
Iteration  13: 588441.596 ns/op
Iteration  14: 326150.125 ns/op
Iteration  15: 675009.770 ns/op
Iteration  16: 578975.187 ns/op
Iteration  17: 318663.073 ns/op
Iteration  18: 725856.175 ns/op
Iteration  19: <failure>

java.io.IOException: No space left on device
	at java.base/java.io.UnixFileSystem.createFileExclusively(Native Method)
	at java.base/java.io.File.createTempFile(File.java:2170)
	at java.base/java.io.File.createTempFile(File.java:2216)
	at io.github.azagniotov.stubby4j.utils.FileUtils.tempFileFromString(FileUtils.java:71)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest.returnsBodyAsExpectedBytesWhenOnlyFileStubbed(StubWebSocketServerResponseTest.java:45)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest$_Benchmark.benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed(StubWebSocketServerResponseTest.java:85)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_avgt_jmhStub(StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_AverageTime(StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed_jmhTest.java:150)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)




Result "io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed":
  507468.421 ±(99.9%) 103601.560 ns/op [Average]
  (min, avg, max) = (316915.945, 507468.421, 758215.301), stdev = 164323.066
  CI (99.9%): [403866.862, 611069.981] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed

# Run progress: 88.40% complete, ETA 00:43:32
# Fork: 1 of 2
# Warmup Iteration   1: 535468.892 ns/op
# Warmup Iteration   2: 450556.981 ns/op
# Warmup Iteration   3: 9847750.571 ns/op
# Warmup Iteration   4: 440630.434 ns/op
# Warmup Iteration   5: 331296.085 ns/op
# Warmup Iteration   6: 333362.952 ns/op
# Warmup Iteration   7: 331038.591 ns/op
# Warmup Iteration   8: 580362.747 ns/op
# Warmup Iteration   9: 320274.049 ns/op
# Warmup Iteration  10: 719244.136 ns/op
Iteration   1: 584627.211 ns/op
Iteration   2: 318224.926 ns/op
Iteration   3: 725965.843 ns/op
Iteration   4: 600398.252 ns/op
Iteration   5: 326464.560 ns/op
Iteration   6: 670177.681 ns/op
Iteration   7: 588195.870 ns/op
Iteration   8: 326243.617 ns/op
Iteration   9: 665951.599 ns/op
Iteration  10: 598919.558 ns/op
Iteration  11: 326259.862 ns/op
Iteration  12: 664185.961 ns/op
Iteration  13: 610390.407 ns/op
Iteration  14: 326425.922 ns/op
Iteration  15: 675345.774 ns/op
Iteration  16: 618755.324 ns/op
Iteration  17: 326446.252 ns/op
Iteration  18: 699013.468 ns/op
Iteration  19: <failure>

java.io.IOException: No space left on device
	at java.base/java.io.UnixFileSystem.createFileExclusively(Native Method)
	at java.base/java.io.File.createTempFile(File.java:2170)
	at java.base/java.io.File.createTempFile(File.java:2216)
	at io.github.azagniotov.stubby4j.utils.FileUtils.tempFileFromString(FileUtils.java:71)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest.returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed(StubWebSocketServerResponseTest.java:54)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest$_Benchmark.benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed(StubWebSocketServerResponseTest.java:91)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_avgt_jmhStub(StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_AverageTime(StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_jmhTest.java:150)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:80)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)



# Run progress: 88.48% complete, ETA 00:43:18
# Fork: 2 of 2
# Warmup Iteration   1: 524755.060 ns/op
# Warmup Iteration   2: 469506.005 ns/op
# Warmup Iteration   3: 320044.985 ns/op
# Warmup Iteration   4: 724108.837 ns/op
# Warmup Iteration   5: 621915.926 ns/op
# Warmup Iteration   6: 323409.855 ns/op
# Warmup Iteration   7: 665966.671 ns/op
# Warmup Iteration   8: 592294.133 ns/op
# Warmup Iteration   9: 317946.996 ns/op
# Warmup Iteration  10: 709381.576 ns/op
Iteration   1: 587608.628 ns/op
Iteration   2: 325784.281 ns/op
Iteration   3: 691193.711 ns/op
Iteration   4: 585756.441 ns/op
Iteration   5: 326381.753 ns/op
Iteration   6: 649922.705 ns/op
Iteration   7: 603116.386 ns/op
Iteration   8: 326275.475 ns/op
Iteration   9: 686023.320 ns/op
Iteration  10: 601443.406 ns/op
Iteration  11: 326206.040 ns/op
Iteration  12: 669104.054 ns/op
Iteration  13: 602100.145 ns/op
Iteration  14: 324091.115 ns/op
Iteration  15: 689859.630 ns/op
Iteration  16: 574969.496 ns/op
Iteration  17: 320390.284 ns/op
Iteration  18: 721187.018 ns/op
Iteration  19: <failure>

java.io.IOException: No space left on device
	at java.base/java.io.UnixFileSystem.createFileExclusively(Native Method)
	at java.base/java.io.File.createTempFile(File.java:2170)
	at java.base/java.io.File.createTempFile(File.java:2216)
	at io.github.azagniotov.stubby4j.utils.FileUtils.tempFileFromString(FileUtils.java:71)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest.returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed(StubWebSocketServerResponseTest.java:54)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest$_Benchmark.benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed(StubWebSocketServerResponseTest.java:91)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_avgt_jmhStub(StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_AverageTime(StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed_jmhTest.java:150)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)




Result "io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed":
  535094.610 ±(99.9%) 93201.505 ns/op [Average]
  (min, avg, max) = (318224.926, 535094.610, 725965.843), stdev = 155718.791
  CI (99.9%): [441893.105, 628296.116] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed

# Run progress: 88.55% complete, ETA 00:43:04
# Fork: 1 of 2
# Warmup Iteration   1: 517831.106 ns/op
# Warmup Iteration   2: 468668.669 ns/op
# Warmup Iteration   3: 326060.429 ns/op
# Warmup Iteration   4: 756032.990 ns/op
# Warmup Iteration   5: 640175.548 ns/op
# Warmup Iteration   6: 326437.256 ns/op
# Warmup Iteration   7: 689134.653 ns/op
# Warmup Iteration   8: 587773.141 ns/op
# Warmup Iteration   9: 318744.851 ns/op
# Warmup Iteration  10: 734480.889 ns/op
Iteration   1: 574755.091 ns/op
Iteration   2: 316849.589 ns/op
Iteration   3: 761188.765 ns/op
Iteration   4: 566758.499 ns/op
Iteration   5: 324863.502 ns/op
Iteration   6: 681050.997 ns/op
Iteration   7: 585153.673 ns/op
Iteration   8: 326156.182 ns/op
Iteration   9: 681843.092 ns/op
Iteration  10: 581773.167 ns/op
Iteration  11: 326683.338 ns/op
Iteration  12: 697405.671 ns/op
Iteration  13: 584476.644 ns/op
Iteration  14: 326257.206 ns/op
Iteration  15: 667404.841 ns/op
Iteration  16: 1424802.888 ns/op
Iteration  17: 575209.904 ns/op
Iteration  18: 328574.984 ns/op
Iteration  19: <failure>

java.io.IOException: No space left on device
	at java.base/java.io.UnixFileSystem.createFileExclusively(Native Method)
	at java.base/java.io.File.createTempFile(File.java:2170)
	at java.base/java.io.File.createTempFile(File.java:2216)
	at io.github.azagniotov.stubby4j.utils.FileUtils.tempFileFromString(FileUtils.java:71)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest.returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed(StubWebSocketServerResponseTest.java:79)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest$_Benchmark.benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed(StubWebSocketServerResponseTest.java:109)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_avgt_jmhStub(StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_AverageTime(StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_jmhTest.java:150)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)



# Run progress: 88.63% complete, ETA 00:42:49
# Fork: 2 of 2
# Warmup Iteration   1: 529024.780 ns/op
# Warmup Iteration   2: 448322.447 ns/op
# Warmup Iteration   3: 321700.769 ns/op
# Warmup Iteration   4: 802049.180 ns/op
# Warmup Iteration   5: 623328.765 ns/op
# Warmup Iteration   6: 318637.288 ns/op
# Warmup Iteration   7: 765093.133 ns/op
# Warmup Iteration   8: 552269.281 ns/op
# Warmup Iteration   9: 326344.319 ns/op
# Warmup Iteration  10: 684934.407 ns/op
Iteration   1: 575347.899 ns/op
Iteration   2: 325767.181 ns/op
Iteration   3: 718566.912 ns/op
Iteration   4: 559248.283 ns/op
Iteration   5: 321404.371 ns/op
Iteration   6: 709221.116 ns/op
Iteration   7: 579453.212 ns/op
Iteration   8: 326683.630 ns/op
Iteration   9: 718023.600 ns/op
Iteration  10: 631468.964 ns/op
Iteration  11: 326471.843 ns/op
Iteration  12: 615147.604 ns/op
Iteration  13: 577152.354 ns/op
Iteration  14: 326287.834 ns/op
Iteration  15: 598188.816 ns/op
Iteration  16: 623412.133 ns/op
Iteration  17: 319676.602 ns/op
Iteration  18: 702041.097 ns/op
Iteration  19: <failure>

java.io.IOException: No space left on device
	at java.base/java.io.UnixFileSystem.createFileExclusively(Native Method)
	at java.base/java.io.File.createTempFile(File.java:2170)
	at java.base/java.io.File.createTempFile(File.java:2216)
	at io.github.azagniotov.stubby4j.utils.FileUtils.tempFileFromString(FileUtils.java:71)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest.returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed(StubWebSocketServerResponseTest.java:79)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest$_Benchmark.benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed(StubWebSocketServerResponseTest.java:109)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_avgt_jmhStub(StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_AverageTime(StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed_jmhTest.java:150)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)




Result "io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed":
  552354.763 ±(99.9%) 128780.478 ns/op [Average]
  (min, avg, max) = (316849.589, 552354.763, 1424802.888), stdev = 215163.266
  CI (99.9%): [423574.285, 681135.241] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_returnsBodyAsExpectedStringWhenOnlyBodyStubbed

# Run progress: 88.70% complete, ETA 00:42:35
# Fork: 1 of 2
# Warmup Iteration   1: 1526.606 ns/op
# Warmup Iteration   2: 452.539 ns/op
# Warmup Iteration   3: 418.200 ns/op
# Warmup Iteration   4: 417.651 ns/op
# Warmup Iteration   5: 415.773 ns/op
# Warmup Iteration   6: 421.920 ns/op
# Warmup Iteration   7: 414.570 ns/op
# Warmup Iteration   8: 416.216 ns/op
# Warmup Iteration   9: 418.146 ns/op
# Warmup Iteration  10: 414.609 ns/op
Iteration   1: 416.277 ns/op
Iteration   2: 415.057 ns/op
Iteration   3: 415.898 ns/op
Iteration   4: 414.018 ns/op
Iteration   5: 415.906 ns/op
Iteration   6: 423.634 ns/op
Iteration   7: 415.985 ns/op
Iteration   8: 415.318 ns/op
Iteration   9: 415.073 ns/op
Iteration  10: 415.469 ns/op
Iteration  11: 414.605 ns/op
Iteration  12: 413.549 ns/op
Iteration  13: 416.077 ns/op
Iteration  14: 418.067 ns/op
Iteration  15: 416.510 ns/op
Iteration  16: 414.722 ns/op
Iteration  17: 414.752 ns/op
Iteration  18: 415.500 ns/op
Iteration  19: 415.034 ns/op
Iteration  20: 416.043 ns/op

# Run progress: 88.78% complete, ETA 00:42:20
# Fork: 2 of 2
# Warmup Iteration   1: 1576.092 ns/op
# Warmup Iteration   2: 464.057 ns/op
# Warmup Iteration   3: 419.664 ns/op
# Warmup Iteration   4: 418.807 ns/op
# Warmup Iteration   5: 419.625 ns/op
# Warmup Iteration   6: 419.983 ns/op
# Warmup Iteration   7: 418.472 ns/op
# Warmup Iteration   8: 422.727 ns/op
# Warmup Iteration   9: 420.127 ns/op
# Warmup Iteration  10: 421.806 ns/op
Iteration   1: 420.427 ns/op
Iteration   2: 417.927 ns/op
Iteration   3: 419.759 ns/op
Iteration   4: 419.528 ns/op
Iteration   5: 420.703 ns/op
Iteration   6: 423.310 ns/op
Iteration   7: 419.463 ns/op
Iteration   8: 417.719 ns/op
Iteration   9: 420.104 ns/op
Iteration  10: 419.782 ns/op
Iteration  11: 419.297 ns/op
Iteration  12: 420.165 ns/op
Iteration  13: 422.357 ns/op
Iteration  14: 419.815 ns/op
Iteration  15: 421.963 ns/op
Iteration  16: 420.216 ns/op
Iteration  17: 423.383 ns/op
Iteration  18: 418.695 ns/op
Iteration  19: 420.139 ns/op
Iteration  20: 421.097 ns/op


Result "io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_returnsBodyAsExpectedStringWhenOnlyBodyStubbed":
  418.084 ±(99.9%) 1.614 ns/op [Average]
  (min, avg, max) = (413.549, 418.084, 423.634), stdev = 2.869
  CI (99.9%): [416.470, 419.697] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed

# Run progress: 88.86% complete, ETA 00:42:04
# Fork: 1 of 2
# Warmup Iteration   1: 449801.291 ns/op
# Warmup Iteration   2: 209155.881 ns/op
# Warmup Iteration   3: 178289.878 ns/op
# Warmup Iteration   4: 421266.880 ns/op
# Warmup Iteration   5: 326443.610 ns/op
# Warmup Iteration   6: 814492.112 ns/op
# Warmup Iteration   7: 598356.384 ns/op
# Warmup Iteration   8: 326165.591 ns/op
# Warmup Iteration   9: 678092.171 ns/op
# Warmup Iteration  10: 611390.572 ns/op
Iteration   1: 326406.989 ns/op
Iteration   2: 677737.806 ns/op
Iteration   3: 581678.368 ns/op
Iteration   4: 326300.693 ns/op
Iteration   5: 674081.215 ns/op
Iteration   6: 599708.598 ns/op
Iteration   7: 318050.676 ns/op
Iteration   8: 728246.167 ns/op
Iteration   9: 580281.591 ns/op
Iteration  10: 324354.039 ns/op
Iteration  11: 682524.098 ns/op
Iteration  12: 592996.950 ns/op
Iteration  13: 326312.391 ns/op
Iteration  14: 711687.607 ns/op
Iteration  15: 572644.554 ns/op
Iteration  16: <failure>

java.io.IOException: No space left on device
	at java.base/java.io.UnixFileSystem.createFileExclusively(Native Method)
	at java.base/java.io.File.createTempFile(File.java:2170)
	at java.base/java.io.File.createTempFile(File.java:2216)
	at io.github.azagniotov.stubby4j.utils.FileUtils.tempFileFromString(FileUtils.java:71)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest.returnsBodyAsExpectedStringWhenOnlyFileStubbed(StubWebSocketServerResponseTest.java:70)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest$_Benchmark.benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed(StubWebSocketServerResponseTest.java:103)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_avgt_jmhStub(StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_AverageTime(StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_jmhTest.java:150)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)



# Run progress: 88.93% complete, ETA 00:41:49
# Fork: 2 of 2
# Warmup Iteration   1: 591187.398 ns/op
# Warmup Iteration   2: 430787.124 ns/op
# Warmup Iteration   3: 326271.138 ns/op
# Warmup Iteration   4: 821655.726 ns/op
# Warmup Iteration   5: 592230.371 ns/op
# Warmup Iteration   6: 326223.901 ns/op
# Warmup Iteration   7: 667282.289 ns/op
# Warmup Iteration   8: 612839.518 ns/op
# Warmup Iteration   9: 326633.198 ns/op
# Warmup Iteration  10: 734084.221 ns/op
Iteration   1: 570312.782 ns/op
Iteration   2: 325807.294 ns/op
Iteration   3: 678859.551 ns/op
Iteration   4: 571362.053 ns/op
Iteration   5: 326316.728 ns/op
Iteration   6: 661114.034 ns/op
Iteration   7: 626938.423 ns/op
Iteration   8: 326309.596 ns/op
Iteration   9: 702784.610 ns/op
Iteration  10: 577906.276 ns/op
Iteration  11: 326291.496 ns/op
Iteration  12: 686944.435 ns/op
Iteration  13: 597683.604 ns/op
Iteration  14: 326229.230 ns/op
Iteration  15: 682309.154 ns/op
Iteration  16: 584016.122 ns/op
Iteration  17: 338755.956 ns/op
Iteration  18: 8303480.760 ns/op
Iteration  19: 430268.907 ns/op
Iteration  20: <failure>

java.io.IOException: No space left on device
	at java.base/java.io.UnixFileSystem.createFileExclusively(Native Method)
	at java.base/java.io.File.createTempFile(File.java:2170)
	at java.base/java.io.File.createTempFile(File.java:2216)
	at io.github.azagniotov.stubby4j.utils.FileUtils.tempFileFromString(FileUtils.java:71)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest.returnsBodyAsExpectedStringWhenOnlyFileStubbed(StubWebSocketServerResponseTest.java:70)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest$_Benchmark.benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed(StubWebSocketServerResponseTest.java:103)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_avgt_jmhStub(StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.stubs.websocket.jmh_generated.StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_jmhTest.benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_AverageTime(StubWebSocketServerResponseTest__Benchmark_benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed_jmhTest.java:150)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.base@17.0.10/java.io.UnixFileSystem.delete0(Native Method)
  at java.base@17.0.10/java.io.UnixFileSystem.delete(UnixFileSystem.java:316)
  at java.base@17.0.10/java.io.File.delete(File.java:1073)
  at java.base@17.0.10/java.io.DeleteOnExitHook.runHooks(DeleteOnExitHook.java:81)
  at java.base@17.0.10/java.io.DeleteOnExitHook$1.run(DeleteOnExitHook.java:50)
  at java.base@17.0.10/java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.base@17.0.10/java.lang.Shutdown.shutdown(Shutdown.java:185)




Result "io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed":
  754903.022 ±(99.9%) 831299.221 ns/op [Average]
  (min, avg, max) = (318050.676, 754903.022, 8303480.760), stdev = 1342393.395
  CI (99.9%): [≈ 0, 1586202.244] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_stubbedWebSocketServerResponseHasExpectedDefaults

# Run progress: 89.01% complete, ETA 00:41:35
# Fork: 1 of 2
# Warmup Iteration   1: 1546.375 ns/op
# Warmup Iteration   2: 537.958 ns/op
# Warmup Iteration   3: 486.276 ns/op
# Warmup Iteration   4: 488.609 ns/op
# Warmup Iteration   5: 491.253 ns/op
# Warmup Iteration   6: 490.765 ns/op
# Warmup Iteration   7: 485.141 ns/op
# Warmup Iteration   8: 485.547 ns/op
# Warmup Iteration   9: 484.317 ns/op
# Warmup Iteration  10: 486.274 ns/op
Iteration   1: 490.465 ns/op
Iteration   2: 487.736 ns/op
Iteration   3: 486.071 ns/op
Iteration   4: 483.932 ns/op
Iteration   5: 488.755 ns/op
Iteration   6: 487.248 ns/op
Iteration   7: 486.101 ns/op
Iteration   8: 488.929 ns/op
Iteration   9: 487.279 ns/op
Iteration  10: 487.321 ns/op
Iteration  11: 485.254 ns/op
Iteration  12: 488.278 ns/op
Iteration  13: 486.461 ns/op
Iteration  14: 499.545 ns/op
Iteration  15: 487.267 ns/op
Iteration  16: 486.098 ns/op
Iteration  17: 487.283 ns/op
Iteration  18: 491.770 ns/op
Iteration  19: 483.497 ns/op
Iteration  20: 487.167 ns/op

# Run progress: 89.08% complete, ETA 00:41:20
# Fork: 2 of 2
# Warmup Iteration   1: 1600.850 ns/op
# Warmup Iteration   2: 542.207 ns/op
# Warmup Iteration   3: 488.237 ns/op
# Warmup Iteration   4: 488.755 ns/op
# Warmup Iteration   5: 488.601 ns/op
# Warmup Iteration   6: 490.461 ns/op
# Warmup Iteration   7: 488.395 ns/op
# Warmup Iteration   8: 487.339 ns/op
# Warmup Iteration   9: 490.364 ns/op
# Warmup Iteration  10: 488.150 ns/op
Iteration   1: 489.045 ns/op
Iteration   2: 486.620 ns/op
Iteration   3: 489.688 ns/op
Iteration   4: 485.969 ns/op
Iteration   5: 489.628 ns/op
Iteration   6: 489.773 ns/op
Iteration   7: 488.010 ns/op
Iteration   8: 485.959 ns/op
Iteration   9: 485.438 ns/op
Iteration  10: 488.367 ns/op
Iteration  11: 489.168 ns/op
Iteration  12: 487.538 ns/op
Iteration  13: 485.570 ns/op
Iteration  14: 489.749 ns/op
Iteration  15: 490.395 ns/op
Iteration  16: 487.360 ns/op
Iteration  17: 486.317 ns/op
Iteration  18: 487.403 ns/op
Iteration  19: 486.095 ns/op
Iteration  20: 488.478 ns/op


Result "io.github.azagniotov.stubby4j.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_stubbedWebSocketServerResponseHasExpectedDefaults":
  487.826 ±(99.9%) 1.467 ns/op [Average]
  (min, avg, max) = (483.497, 487.826, 499.545), stdev = 2.608
  CI (99.9%): [486.358, 489.293] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_chunkifyByteArrayAndQueue

# Run progress: 89.16% complete, ETA 00:41:04
# Fork: 1 of 2
# Warmup Iteration   1: 26248.239 ns/op
# Warmup Iteration   2: 11944.057 ns/op
# Warmup Iteration   3: 11731.741 ns/op
# Warmup Iteration   4: 11411.397 ns/op
# Warmup Iteration   5: 11343.836 ns/op
# Warmup Iteration   6: 11402.871 ns/op
# Warmup Iteration   7: 11384.573 ns/op
# Warmup Iteration   8: 11432.319 ns/op
# Warmup Iteration   9: 11350.992 ns/op
# Warmup Iteration  10: 11408.208 ns/op
Iteration   1: 11390.978 ns/op
Iteration   2: 11390.205 ns/op
Iteration   3: 11367.787 ns/op
Iteration   4: 11411.048 ns/op
Iteration   5: 11391.629 ns/op
Iteration   6: 11345.631 ns/op
Iteration   7: 11369.637 ns/op
Iteration   8: 11413.591 ns/op
Iteration   9: 11374.901 ns/op
Iteration  10: 11376.507 ns/op
Iteration  11: 11406.459 ns/op
Iteration  12: 11375.656 ns/op
Iteration  13: 11378.851 ns/op
Iteration  14: 11433.577 ns/op
Iteration  15: 11311.612 ns/op
Iteration  16: 11359.865 ns/op
Iteration  17: 11348.564 ns/op
Iteration  18: 11363.157 ns/op
Iteration  19: 11389.243 ns/op
Iteration  20: 11369.897 ns/op

# Run progress: 89.23% complete, ETA 00:40:49
# Fork: 2 of 2
# Warmup Iteration   1: 30385.604 ns/op
# Warmup Iteration   2: 13762.765 ns/op
# Warmup Iteration   3: 13047.578 ns/op
# Warmup Iteration   4: 13020.245 ns/op
# Warmup Iteration   5: 13025.961 ns/op
# Warmup Iteration   6: 13069.386 ns/op
# Warmup Iteration   7: 13010.041 ns/op
# Warmup Iteration   8: 12968.808 ns/op
# Warmup Iteration   9: 13063.654 ns/op
# Warmup Iteration  10: 12983.277 ns/op
Iteration   1: 13023.782 ns/op
Iteration   2: 13059.179 ns/op
Iteration   3: 13011.681 ns/op
Iteration   4: 13042.584 ns/op
Iteration   5: 12999.988 ns/op
Iteration   6: 13022.038 ns/op
Iteration   7: 13118.934 ns/op
Iteration   8: 13085.781 ns/op
Iteration   9: 13006.767 ns/op
Iteration  10: 13074.991 ns/op
Iteration  11: 13035.597 ns/op
Iteration  12: 13056.595 ns/op
Iteration  13: 12999.509 ns/op
Iteration  14: 12988.711 ns/op
Iteration  15: 13005.140 ns/op
Iteration  16: 13046.204 ns/op
Iteration  17: 13005.528 ns/op
Iteration  18: 12989.121 ns/op
Iteration  19: 12996.742 ns/op
Iteration  20: 12990.560 ns/op


Result "io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_chunkifyByteArrayAndQueue":
  12203.206 ±(99.9%) 470.252 ns/op [Average]
  (min, avg, max) = (11311.612, 12203.206, 13118.934), stdev = 835.872
  CI (99.9%): [11732.954, 12673.457] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_chunkifyTinyByteArrayAndQueue

# Run progress: 89.31% complete, ETA 00:40:33
# Fork: 1 of 2
# Warmup Iteration   1: 5690.694 ns/op
# Warmup Iteration   2: 2753.979 ns/op
# Warmup Iteration   3: 2664.660 ns/op
# Warmup Iteration   4: 2620.610 ns/op
# Warmup Iteration   5: 2624.883 ns/op
# Warmup Iteration   6: 2643.071 ns/op
# Warmup Iteration   7: 2617.235 ns/op
# Warmup Iteration   8: 2623.721 ns/op
# Warmup Iteration   9: 2643.892 ns/op
# Warmup Iteration  10: 2650.818 ns/op
Iteration   1: 2619.927 ns/op
Iteration   2: 2654.526 ns/op
Iteration   3: 2642.735 ns/op
Iteration   4: 2625.540 ns/op
Iteration   5: 2632.765 ns/op
Iteration   6: 2619.579 ns/op
Iteration   7: 2627.184 ns/op
Iteration   8: 2622.340 ns/op
Iteration   9: 2626.070 ns/op
Iteration  10: 2631.057 ns/op
Iteration  11: 2638.486 ns/op
Iteration  12: 2622.349 ns/op
Iteration  13: 2630.171 ns/op
Iteration  14: 2641.200 ns/op
Iteration  15: 2632.013 ns/op
Iteration  16: 2650.028 ns/op
Iteration  17: 2635.513 ns/op
Iteration  18: 2630.837 ns/op
Iteration  19: 2654.620 ns/op
Iteration  20: 2633.790 ns/op

# Run progress: 89.38% complete, ETA 00:40:17
# Fork: 2 of 2
# Warmup Iteration   1: 6328.032 ns/op
# Warmup Iteration   2: 2798.703 ns/op
# Warmup Iteration   3: 2652.329 ns/op
# Warmup Iteration   4: 2649.126 ns/op
# Warmup Iteration   5: 2651.341 ns/op
# Warmup Iteration   6: 2654.376 ns/op
# Warmup Iteration   7: 2646.629 ns/op
# Warmup Iteration   8: 2660.292 ns/op
# Warmup Iteration   9: 2651.441 ns/op
# Warmup Iteration  10: 2645.671 ns/op
Iteration   1: 2649.371 ns/op
Iteration   2: 2654.377 ns/op
Iteration   3: 2650.564 ns/op
Iteration   4: 2657.498 ns/op
Iteration   5: 2652.729 ns/op
Iteration   6: 2650.881 ns/op
Iteration   7: 2646.727 ns/op
Iteration   8: 2640.487 ns/op
Iteration   9: 2661.524 ns/op
Iteration  10: 2653.403 ns/op
Iteration  11: 2653.482 ns/op
Iteration  12: 2651.202 ns/op
Iteration  13: 2646.676 ns/op
Iteration  14: 2655.106 ns/op
Iteration  15: 2653.676 ns/op
Iteration  16: 2661.915 ns/op
Iteration  17: 2639.383 ns/op
Iteration  18: 2666.765 ns/op
Iteration  19: 2654.387 ns/op
Iteration  20: 2657.935 ns/op


Result "io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_chunkifyTinyByteArrayAndQueue":
  2643.220 ±(99.9%) 7.397 ns/op [Average]
  (min, avg, max) = (2619.579, 2643.220, 2666.765), stdev = 13.148
  CI (99.9%): [2635.824, 2650.617] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_constructParamMap_ShouldConstructParamMap_WhenQueryParamHasNoValue

# Run progress: 89.46% complete, ETA 00:40:02
# Fork: 1 of 2
# Warmup Iteration   1: 4659.246 ns/op
# Warmup Iteration   2: 1024.679 ns/op
# Warmup Iteration   3: 804.830 ns/op
# Warmup Iteration   4: 801.706 ns/op
# Warmup Iteration   5: 800.664 ns/op
# Warmup Iteration   6: 798.969 ns/op
# Warmup Iteration   7: 802.547 ns/op
# Warmup Iteration   8: 799.828 ns/op
# Warmup Iteration   9: 802.402 ns/op
# Warmup Iteration  10: 802.550 ns/op
Iteration   1: 799.822 ns/op
Iteration   2: 798.658 ns/op
Iteration   3: 800.243 ns/op
Iteration   4: 799.495 ns/op
Iteration   5: 802.461 ns/op
Iteration   6: 798.740 ns/op
Iteration   7: 797.929 ns/op
Iteration   8: 799.797 ns/op
Iteration   9: 799.867 ns/op
Iteration  10: 800.894 ns/op
Iteration  11: 802.299 ns/op
Iteration  12: 800.107 ns/op
Iteration  13: 805.118 ns/op
Iteration  14: 803.270 ns/op
Iteration  15: 799.575 ns/op
Iteration  16: 802.721 ns/op
Iteration  17: 799.647 ns/op
Iteration  18: 804.073 ns/op
Iteration  19: 801.069 ns/op
Iteration  20: 802.817 ns/op

# Run progress: 89.53% complete, ETA 00:39:46
# Fork: 2 of 2
# Warmup Iteration   1: 2466.381 ns/op
# Warmup Iteration   2: 896.225 ns/op
# Warmup Iteration   3: 811.285 ns/op
# Warmup Iteration   4: 809.418 ns/op
# Warmup Iteration   5: 808.435 ns/op
# Warmup Iteration   6: 808.360 ns/op
# Warmup Iteration   7: 806.156 ns/op
# Warmup Iteration   8: 813.242 ns/op
# Warmup Iteration   9: 808.605 ns/op
# Warmup Iteration  10: 814.610 ns/op
Iteration   1: 807.048 ns/op
Iteration   2: 811.748 ns/op
Iteration   3: 808.152 ns/op
Iteration   4: 806.126 ns/op
Iteration   5: 809.574 ns/op
Iteration   6: 812.129 ns/op
Iteration   7: 811.143 ns/op
Iteration   8: 807.105 ns/op
Iteration   9: 808.131 ns/op
Iteration  10: 809.944 ns/op
Iteration  11: 807.121 ns/op
Iteration  12: 808.284 ns/op
Iteration  13: 809.256 ns/op
Iteration  14: 804.079 ns/op
Iteration  15: 807.990 ns/op
Iteration  16: 809.168 ns/op
Iteration  17: 808.129 ns/op
Iteration  18: 808.312 ns/op
Iteration  19: 810.586 ns/op
Iteration  20: 806.129 ns/op


Result "io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_constructParamMap_ShouldConstructParamMap_WhenQueryParamHasNoValue":
  804.719 ±(99.9%) 2.424 ns/op [Average]
  (min, avg, max) = (797.929, 804.719, 812.129), stdev = 4.309
  CI (99.9%): [802.295, 807.143] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_constructParamMap_ShouldConstructParamMap_WhenQueryStringGiven

# Run progress: 89.61% complete, ETA 00:39:31
# Fork: 1 of 2
# Warmup Iteration   1: 3742.627 ns/op
# Warmup Iteration   2: 911.898 ns/op
# Warmup Iteration   3: 829.468 ns/op
# Warmup Iteration   4: 826.195 ns/op
# Warmup Iteration   5: 826.146 ns/op
# Warmup Iteration   6: 823.793 ns/op
# Warmup Iteration   7: 828.082 ns/op
# Warmup Iteration   8: 828.539 ns/op
# Warmup Iteration   9: 828.495 ns/op
# Warmup Iteration  10: 826.813 ns/op
Iteration   1: 827.586 ns/op
Iteration   2: 827.602 ns/op
Iteration   3: 826.450 ns/op
Iteration   4: 827.936 ns/op
Iteration   5: 826.711 ns/op
Iteration   6: 823.201 ns/op
Iteration   7: 840.084 ns/op
Iteration   8: 826.861 ns/op
Iteration   9: 828.148 ns/op
Iteration  10: 823.693 ns/op
Iteration  11: 828.877 ns/op
Iteration  12: 830.087 ns/op
Iteration  13: 825.848 ns/op
Iteration  14: 828.966 ns/op
Iteration  15: 829.535 ns/op
Iteration  16: 827.641 ns/op
Iteration  17: 829.182 ns/op
Iteration  18: 828.956 ns/op
Iteration  19: 830.295 ns/op
Iteration  20: 829.552 ns/op

# Run progress: 89.68% complete, ETA 00:39:15
# Fork: 2 of 2
# Warmup Iteration   1: 3605.536 ns/op
# Warmup Iteration   2: 899.195 ns/op
# Warmup Iteration   3: 823.441 ns/op
# Warmup Iteration   4: 818.850 ns/op
# Warmup Iteration   5: 821.852 ns/op
# Warmup Iteration   6: 818.006 ns/op
# Warmup Iteration   7: 823.313 ns/op
# Warmup Iteration   8: 821.085 ns/op
# Warmup Iteration   9: 823.094 ns/op
# Warmup Iteration  10: 819.406 ns/op
Iteration   1: 822.616 ns/op
Iteration   2: 824.546 ns/op
Iteration   3: 822.656 ns/op
Iteration   4: 823.040 ns/op
Iteration   5: 821.822 ns/op
Iteration   6: 822.407 ns/op
Iteration   7: 821.629 ns/op
Iteration   8: 822.207 ns/op
Iteration   9: 821.270 ns/op
Iteration  10: 823.206 ns/op
Iteration  11: 816.949 ns/op
Iteration  12: 824.955 ns/op
Iteration  13: 820.542 ns/op
Iteration  14: 816.735 ns/op
Iteration  15: 820.842 ns/op
Iteration  16: 817.813 ns/op
Iteration  17: 825.150 ns/op
Iteration  18: 819.341 ns/op
Iteration  19: 820.429 ns/op
Iteration  20: 816.700 ns/op


Result "io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_constructParamMap_ShouldConstructParamMap_WhenQueryStringGiven":
  824.802 ±(99.9%) 2.627 ns/op [Average]
  (min, avg, max) = (816.700, 824.802, 840.084), stdev = 4.669
  CI (99.9%): [822.175, 827.429] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_constructParamMap_ShouldUrlDecodeQueryString_WhenQueryParamsAreAnArray

# Run progress: 89.76% complete, ETA 00:38:59
# Fork: 1 of 2
# Warmup Iteration   1: 22235.326 ns/op
# Warmup Iteration   2: 7629.358 ns/op
# Warmup Iteration   3: 6068.273 ns/op
# Warmup Iteration   4: 6004.047 ns/op
# Warmup Iteration   5: 6019.817 ns/op
# Warmup Iteration   6: 5985.235 ns/op
# Warmup Iteration   7: 6011.389 ns/op
# Warmup Iteration   8: 6010.419 ns/op
# Warmup Iteration   9: 6002.558 ns/op
# Warmup Iteration  10: 6004.353 ns/op
Iteration   1: 5988.059 ns/op
Iteration   2: 6006.143 ns/op
Iteration   3: 5983.573 ns/op
Iteration   4: 6023.905 ns/op
Iteration   5: 6039.074 ns/op
Iteration   6: 6014.937 ns/op
Iteration   7: 6034.889 ns/op
Iteration   8: 6027.425 ns/op
Iteration   9: 6001.177 ns/op
Iteration  10: 6012.087 ns/op
Iteration  11: 6043.790 ns/op
Iteration  12: 6007.908 ns/op
Iteration  13: 6017.650 ns/op
Iteration  14: 6011.664 ns/op
Iteration  15: 6013.017 ns/op
Iteration  16: 6029.573 ns/op
Iteration  17: 6001.534 ns/op
Iteration  18: 6044.533 ns/op
Iteration  19: 6018.430 ns/op
Iteration  20: 6043.045 ns/op

# Run progress: 89.83% complete, ETA 00:38:44
# Fork: 2 of 2
# Warmup Iteration   1: 22331.915 ns/op
# Warmup Iteration   2: 7331.205 ns/op
# Warmup Iteration   3: 5945.736 ns/op
# Warmup Iteration   4: 5950.937 ns/op
# Warmup Iteration   5: 5863.377 ns/op
# Warmup Iteration   6: 5864.203 ns/op
# Warmup Iteration   7: 5889.261 ns/op
# Warmup Iteration   8: 5865.458 ns/op
# Warmup Iteration   9: 5918.986 ns/op
# Warmup Iteration  10: 5878.834 ns/op
Iteration   1: 5874.321 ns/op
Iteration   2: 5868.200 ns/op
Iteration   3: 5865.978 ns/op
Iteration   4: 5871.489 ns/op
Iteration   5: 5871.848 ns/op
Iteration   6: 5875.140 ns/op
Iteration   7: 5894.190 ns/op
Iteration   8: 5908.149 ns/op
Iteration   9: 5883.883 ns/op
Iteration  10: 5868.365 ns/op
Iteration  11: 5897.661 ns/op
Iteration  12: 5854.650 ns/op
Iteration  13: 5837.239 ns/op
Iteration  14: 5885.751 ns/op
Iteration  15: 5885.750 ns/op
Iteration  16: 5887.436 ns/op
Iteration  17: 5892.241 ns/op
Iteration  18: 5851.283 ns/op
Iteration  19: 5854.550 ns/op
Iteration  20: 5874.591 ns/op


Result "io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_constructParamMap_ShouldUrlDecodeQueryString_WhenQueryParamsAreAnArray":
  5946.628 ±(99.9%) 41.885 ns/op [Average]
  (min, avg, max) = (5837.239, 5946.628, 6044.533), stdev = 74.451
  CI (99.9%): [5904.743, 5988.514] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_constructParamMap_ShouldUrlDecodeQueryString_WhenQueryParamsAreAnArrayWithQuotedElements

# Run progress: 89.91% complete, ETA 00:38:28
# Fork: 1 of 2
# Warmup Iteration   1: 30138.424 ns/op
# Warmup Iteration   2: 10423.504 ns/op
# Warmup Iteration   3: 9224.851 ns/op
# Warmup Iteration   4: 9031.400 ns/op
# Warmup Iteration   5: 8995.169 ns/op
# Warmup Iteration   6: 9052.965 ns/op
# Warmup Iteration   7: 9058.704 ns/op
# Warmup Iteration   8: 9118.941 ns/op
# Warmup Iteration   9: 9051.233 ns/op
# Warmup Iteration  10: 9105.949 ns/op
Iteration   1: 9055.603 ns/op
Iteration   2: 9053.672 ns/op
Iteration   3: 9065.790 ns/op
Iteration   4: 9047.049 ns/op
Iteration   5: 9075.549 ns/op
Iteration   6: 9079.300 ns/op
Iteration   7: 9028.411 ns/op
Iteration   8: 9055.796 ns/op
Iteration   9: 9104.958 ns/op
Iteration  10: 9124.733 ns/op
Iteration  11: 9119.617 ns/op
Iteration  12: 9053.924 ns/op
Iteration  13: 9158.168 ns/op
Iteration  14: 9067.851 ns/op
Iteration  15: 9074.559 ns/op
Iteration  16: 9037.012 ns/op
Iteration  17: 9093.387 ns/op
Iteration  18: 9096.820 ns/op
Iteration  19: 9058.878 ns/op
Iteration  20: 9074.412 ns/op

# Run progress: 89.98% complete, ETA 00:38:12
# Fork: 2 of 2
# Warmup Iteration   1: 29850.544 ns/op
# Warmup Iteration   2: 9642.908 ns/op
# Warmup Iteration   3: 8651.132 ns/op
# Warmup Iteration   4: 8527.258 ns/op
# Warmup Iteration   5: 8531.346 ns/op
# Warmup Iteration   6: 8507.202 ns/op
# Warmup Iteration   7: 8503.216 ns/op
# Warmup Iteration   8: 8488.636 ns/op
# Warmup Iteration   9: 8491.021 ns/op
# Warmup Iteration  10: 8457.018 ns/op
Iteration   1: 8519.463 ns/op
Iteration   2: 8453.899 ns/op
Iteration   3: 8510.388 ns/op
Iteration   4: 8529.584 ns/op
Iteration   5: 8498.162 ns/op
Iteration   6: 8493.129 ns/op
Iteration   7: 8496.018 ns/op
Iteration   8: 8482.117 ns/op
Iteration   9: 8508.621 ns/op
Iteration  10: 8480.835 ns/op
Iteration  11: 8481.386 ns/op
Iteration  12: 8453.232 ns/op
Iteration  13: 8504.270 ns/op
Iteration  14: 8519.624 ns/op
Iteration  15: 8494.171 ns/op
Iteration  16: 8499.595 ns/op
Iteration  17: 8497.302 ns/op
Iteration  18: 8474.460 ns/op
Iteration  19: 8540.245 ns/op
Iteration  20: 8500.668 ns/op


Result "io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_constructParamMap_ShouldUrlDecodeQueryString_WhenQueryParamsAreAnArrayWithQuotedElements":
  8786.566 ±(99.9%) 165.771 ns/op [Average]
  (min, avg, max) = (8453.232, 8786.566, 9158.168), stdev = 294.658
  CI (99.9%): [8620.795, 8952.338] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_constructParamMap_ShouldUrlDecodeQueryString_WhenQueryParamsAreAnArrayWithSingleQuoteElements

# Run progress: 90.06% complete, ETA 00:37:56
# Fork: 1 of 2
# Warmup Iteration   1: 30779.162 ns/op
# Warmup Iteration   2: 10327.372 ns/op
# Warmup Iteration   3: 9373.297 ns/op
# Warmup Iteration   4: 9265.541 ns/op
# Warmup Iteration   5: 9206.620 ns/op
# Warmup Iteration   6: 9272.869 ns/op
# Warmup Iteration   7: 9246.172 ns/op
# Warmup Iteration   8: 9279.036 ns/op
# Warmup Iteration   9: 9302.668 ns/op
# Warmup Iteration  10: 9230.815 ns/op
Iteration   1: 9243.077 ns/op
Iteration   2: 9300.797 ns/op
Iteration   3: 9248.760 ns/op
Iteration   4: 9283.272 ns/op
Iteration   5: 9279.588 ns/op
Iteration   6: 9300.448 ns/op
Iteration   7: 9283.831 ns/op
Iteration   8: 9258.356 ns/op
Iteration   9: 9327.001 ns/op
Iteration  10: 9289.669 ns/op
Iteration  11: 9265.658 ns/op
Iteration  12: 9353.406 ns/op
Iteration  13: 9295.304 ns/op
Iteration  14: 9330.378 ns/op
Iteration  15: 9227.759 ns/op
Iteration  16: 9349.519 ns/op
Iteration  17: 9336.405 ns/op
Iteration  18: 9293.021 ns/op
Iteration  19: 9371.328 ns/op
Iteration  20: 9255.516 ns/op

# Run progress: 90.14% complete, ETA 00:37:40
# Fork: 2 of 2
# Warmup Iteration   1: 31107.154 ns/op
# Warmup Iteration   2: 10331.142 ns/op
# Warmup Iteration   3: 9534.940 ns/op
# Warmup Iteration   4: 9409.255 ns/op
# Warmup Iteration   5: 9413.640 ns/op
# Warmup Iteration   6: 9388.378 ns/op
# Warmup Iteration   7: 9401.707 ns/op
# Warmup Iteration   8: 9400.030 ns/op
# Warmup Iteration   9: 9409.114 ns/op
# Warmup Iteration  10: 9380.691 ns/op
Iteration   1: 9412.464 ns/op
Iteration   2: 9389.599 ns/op
Iteration   3: 9384.225 ns/op
Iteration   4: 9411.479 ns/op
Iteration   5: 9371.141 ns/op
Iteration   6: 9399.461 ns/op
Iteration   7: 9372.684 ns/op
Iteration   8: 9319.808 ns/op
Iteration   9: 9359.947 ns/op
Iteration  10: 9364.530 ns/op
Iteration  11: 9388.473 ns/op
Iteration  12: 9398.707 ns/op
Iteration  13: 9399.207 ns/op
Iteration  14: 9407.167 ns/op
Iteration  15: 9434.066 ns/op
Iteration  16: 9361.256 ns/op
Iteration  17: 9371.869 ns/op
Iteration  18: 9417.360 ns/op
Iteration  19: 9380.752 ns/op
Iteration  20: 9355.068 ns/op


Result "io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_constructParamMap_ShouldUrlDecodeQueryString_WhenQueryParamsAreAnArrayWithSingleQuoteElements":
  9339.809 ±(99.9%) 31.824 ns/op [Average]
  (min, avg, max) = (9227.759, 9339.809, 9434.066), stdev = 56.567
  CI (99.9%): [9307.985, 9371.633] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_constructQueryString_ShouldConstructQueryString_WhenParamMapGiven

# Run progress: 90.21% complete, ETA 00:37:25
# Fork: 1 of 2
# Warmup Iteration   1: 2418.807 ns/op
# Warmup Iteration   2: 874.944 ns/op
# Warmup Iteration   3: 797.137 ns/op
# Warmup Iteration   4: 799.248 ns/op
# Warmup Iteration   5: 799.492 ns/op
# Warmup Iteration   6: 799.752 ns/op
# Warmup Iteration   7: 800.585 ns/op
# Warmup Iteration   8: 799.588 ns/op
# Warmup Iteration   9: 799.299 ns/op
# Warmup Iteration  10: 798.527 ns/op
Iteration   1: 801.301 ns/op
Iteration   2: 800.433 ns/op
Iteration   3: 799.195 ns/op
Iteration   4: 799.179 ns/op
Iteration   5: 797.265 ns/op
Iteration   6: 797.020 ns/op
Iteration   7: 797.385 ns/op
Iteration   8: 800.342 ns/op
Iteration   9: 799.325 ns/op
Iteration  10: 796.303 ns/op
Iteration  11: 794.882 ns/op
Iteration  12: 799.613 ns/op
Iteration  13: 799.816 ns/op
Iteration  14: 798.977 ns/op
Iteration  15: 800.630 ns/op
Iteration  16: 801.557 ns/op
Iteration  17: 800.907 ns/op
Iteration  18: 800.883 ns/op
Iteration  19: 799.404 ns/op
Iteration  20: 800.834 ns/op

# Run progress: 90.29% complete, ETA 00:37:09
# Fork: 2 of 2
# Warmup Iteration   1: 1825.003 ns/op
# Warmup Iteration   2: 815.768 ns/op
# Warmup Iteration   3: 775.306 ns/op
# Warmup Iteration   4: 781.290 ns/op
# Warmup Iteration   5: 778.229 ns/op
# Warmup Iteration   6: 775.844 ns/op
# Warmup Iteration   7: 771.681 ns/op
# Warmup Iteration   8: 771.831 ns/op
# Warmup Iteration   9: 773.698 ns/op
# Warmup Iteration  10: 776.179 ns/op
Iteration   1: 774.900 ns/op
Iteration   2: 773.313 ns/op
Iteration   3: 775.324 ns/op
Iteration   4: 774.691 ns/op
Iteration   5: 771.087 ns/op
Iteration   6: 771.870 ns/op
Iteration   7: 768.949 ns/op
Iteration   8: 769.537 ns/op
Iteration   9: 774.773 ns/op
Iteration  10: 770.004 ns/op
Iteration  11: 772.013 ns/op
Iteration  12: 770.222 ns/op
Iteration  13: 770.028 ns/op
Iteration  14: 771.942 ns/op
Iteration  15: 772.580 ns/op
Iteration  16: 770.413 ns/op
Iteration  17: 769.393 ns/op
Iteration  18: 769.391 ns/op
Iteration  19: 772.237 ns/op
Iteration  20: 770.896 ns/op


Result "io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_constructQueryString_ShouldConstructQueryString_WhenParamMapGiven":
  785.470 ±(99.9%) 7.931 ns/op [Average]
  (min, avg, max) = (768.949, 785.470, 801.557), stdev = 14.097
  CI (99.9%): [777.539, 793.401] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_givenTwoStringArraysWithOneEmpty_whenConcatWithCopy_thenGetExpectedResult

# Run progress: 90.36% complete, ETA 00:36:53
# Fork: 1 of 2
# Warmup Iteration   1: 2029.535 ns/op
# Warmup Iteration   2: 1286.359 ns/op
# Warmup Iteration   3: 1235.732 ns/op
# Warmup Iteration   4: 1241.238 ns/op
# Warmup Iteration   5: 1237.291 ns/op
# Warmup Iteration   6: 1240.898 ns/op
# Warmup Iteration   7: 1231.715 ns/op
# Warmup Iteration   8: 1237.813 ns/op
# Warmup Iteration   9: 1243.311 ns/op
# Warmup Iteration  10: 1244.110 ns/op
Iteration   1: 1241.193 ns/op
Iteration   2: 1238.448 ns/op
Iteration   3: 1242.040 ns/op
Iteration   4: 1239.075 ns/op
Iteration   5: 1237.767 ns/op
Iteration   6: 1243.178 ns/op
Iteration   7: 1238.366 ns/op
Iteration   8: 1239.931 ns/op
Iteration   9: 1240.562 ns/op
Iteration  10: 1237.805 ns/op
Iteration  11: 1240.044 ns/op
Iteration  12: 1240.258 ns/op
Iteration  13: 1238.943 ns/op
Iteration  14: 1241.741 ns/op
Iteration  15: 1239.805 ns/op
Iteration  16: 1239.618 ns/op
Iteration  17: 1240.581 ns/op
Iteration  18: 1242.328 ns/op
Iteration  19: 1237.094 ns/op
Iteration  20: 1240.199 ns/op

# Run progress: 90.44% complete, ETA 00:36:37
# Fork: 2 of 2
# Warmup Iteration   1: 2131.929 ns/op
# Warmup Iteration   2: 1258.578 ns/op
# Warmup Iteration   3: 1235.675 ns/op
# Warmup Iteration   4: 1233.536 ns/op
# Warmup Iteration   5: 1237.087 ns/op
# Warmup Iteration   6: 1236.571 ns/op
# Warmup Iteration   7: 1233.662 ns/op
# Warmup Iteration   8: 1229.051 ns/op
# Warmup Iteration   9: 1231.269 ns/op
# Warmup Iteration  10: 1234.354 ns/op
Iteration   1: 1233.318 ns/op
Iteration   2: 1233.329 ns/op
Iteration   3: 1232.244 ns/op
Iteration   4: 1230.982 ns/op
Iteration   5: 1228.384 ns/op
Iteration   6: 1230.464 ns/op
Iteration   7: 1222.532 ns/op
Iteration   8: 1220.616 ns/op
Iteration   9: 1220.644 ns/op
Iteration  10: 1223.966 ns/op
Iteration  11: 1221.042 ns/op
Iteration  12: 1219.075 ns/op
Iteration  13: 1221.646 ns/op
Iteration  14: 1223.922 ns/op
Iteration  15: 1221.447 ns/op
Iteration  16: 1214.242 ns/op
Iteration  17: 1219.457 ns/op
Iteration  18: 1222.296 ns/op
Iteration  19: 1220.073 ns/op
Iteration  20: 1219.265 ns/op


Result "io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_givenTwoStringArraysWithOneEmpty_whenConcatWithCopy_thenGetExpectedResult":
  1231.948 ±(99.9%) 5.087 ns/op [Average]
  (min, avg, max) = (1214.242, 1231.948, 1243.178), stdev = 9.043
  CI (99.9%): [1226.861, 1237.035] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_givenTwoStringArrays_whenConcatWithCopy_thenGetExpectedResult

# Run progress: 90.51% complete, ETA 00:36:21
# Fork: 1 of 2
# Warmup Iteration   1: 2318.538 ns/op
# Warmup Iteration   2: 1406.971 ns/op
# Warmup Iteration   3: 1338.380 ns/op
# Warmup Iteration   4: 1340.291 ns/op
# Warmup Iteration   5: 1338.050 ns/op
# Warmup Iteration   6: 1336.169 ns/op
# Warmup Iteration   7: 1338.556 ns/op
# Warmup Iteration   8: 1331.557 ns/op
# Warmup Iteration   9: 1337.757 ns/op
# Warmup Iteration  10: 1340.311 ns/op
Iteration   1: 1342.793 ns/op
Iteration   2: 1340.682 ns/op
Iteration   3: 1342.311 ns/op
Iteration   4: 1335.852 ns/op
Iteration   5: 1336.265 ns/op
Iteration   6: 1332.464 ns/op
Iteration   7: 1339.476 ns/op
Iteration   8: 1336.884 ns/op
Iteration   9: 1336.336 ns/op
Iteration  10: 1332.380 ns/op
Iteration  11: 1341.652 ns/op
Iteration  12: 1335.689 ns/op
Iteration  13: 1331.467 ns/op
Iteration  14: 1330.170 ns/op
Iteration  15: 1332.934 ns/op
Iteration  16: 1334.810 ns/op
Iteration  17: 1338.538 ns/op
Iteration  18: 1334.081 ns/op
Iteration  19: 1332.756 ns/op
Iteration  20: 1335.800 ns/op

# Run progress: 90.59% complete, ETA 00:36:05
# Fork: 2 of 2
# Warmup Iteration   1: 2235.023 ns/op
# Warmup Iteration   2: 1392.136 ns/op
# Warmup Iteration   3: 1343.603 ns/op
# Warmup Iteration   4: 1341.384 ns/op
# Warmup Iteration   5: 1341.372 ns/op
# Warmup Iteration   6: 1341.110 ns/op
# Warmup Iteration   7: 1343.631 ns/op
# Warmup Iteration   8: 1341.200 ns/op
# Warmup Iteration   9: 1342.761 ns/op
# Warmup Iteration  10: 1342.431 ns/op
Iteration   1: 1342.528 ns/op
Iteration   2: 1339.889 ns/op
Iteration   3: 1341.298 ns/op
Iteration   4: 1336.169 ns/op
Iteration   5: 1336.741 ns/op
Iteration   6: 1339.996 ns/op
Iteration   7: 1336.329 ns/op
Iteration   8: 1333.237 ns/op
Iteration   9: 1337.232 ns/op
Iteration  10: 1336.126 ns/op
Iteration  11: 1339.941 ns/op
Iteration  12: 1333.589 ns/op
Iteration  13: 1338.231 ns/op
Iteration  14: 1338.004 ns/op
Iteration  15: 1333.629 ns/op
Iteration  16: 1335.768 ns/op
Iteration  17: 1336.819 ns/op
Iteration  18: 1333.527 ns/op
Iteration  19: 1333.539 ns/op
Iteration  20: 1336.949 ns/op


Result "io.github.azagniotov.stubby4j.utils.CollectionUtilsTest._Benchmark.benchmark_givenTwoStringArrays_whenConcatWithCopy_thenGetExpectedResult":
  1336.572 ±(99.9%) 1.831 ns/op [Average]
  (min, avg, max) = (1330.170, 1336.572, 1342.793), stdev = 3.254
  CI (99.9%): [1334.741, 1338.403] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest._Benchmark.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_200

# Run progress: 90.66% complete, ETA 00:35:49
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getRequestURI()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest.beforeEach(ConsoleUtilsTest.java:42)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.before(ConsoleUtilsTest.java:168)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_200(ConsoleUtilsTest.java:144)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_200_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_200_avgt_jmhStub(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_200_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_200_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_200_AverageTime(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_200_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 90.74% complete, ETA 00:35:30
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getRequestURI()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest.beforeEach(ConsoleUtilsTest.java:42)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.before(ConsoleUtilsTest.java:168)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_200(ConsoleUtilsTest.java:144)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_200_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_200_avgt_jmhStub(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_200_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_200_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_200_AverageTime(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_200_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest._Benchmark.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_201

# Run progress: 90.81% complete, ETA 00:35:11
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getRequestURI()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest.beforeEach(ConsoleUtilsTest.java:42)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.before(ConsoleUtilsTest.java:168)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_201(ConsoleUtilsTest.java:138)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_201_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_201_avgt_jmhStub(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_201_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_201_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_201_AverageTime(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_201_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 90.89% complete, ETA 00:34:52
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getRequestURI()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest.beforeEach(ConsoleUtilsTest.java:42)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.before(ConsoleUtilsTest.java:168)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_201(ConsoleUtilsTest.java:138)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_201_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_201_avgt_jmhStub(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_201_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_201_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_201_AverageTime(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_201_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest._Benchmark.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_301

# Run progress: 90.96% complete, ETA 00:34:33
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getRequestURI()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest.beforeEach(ConsoleUtilsTest.java:42)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.before(ConsoleUtilsTest.java:168)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_301(ConsoleUtilsTest.java:132)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_301_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_301_avgt_jmhStub(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_301_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_301_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_301_AverageTime(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_301_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 91.04% complete, ETA 00:34:14
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getRequestURI()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest.beforeEach(ConsoleUtilsTest.java:42)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.before(ConsoleUtilsTest.java:168)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_301(ConsoleUtilsTest.java:132)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_301_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_301_avgt_jmhStub(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_301_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_301_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_301_AverageTime(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_301_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest._Benchmark.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_500

# Run progress: 91.11% complete, ETA 00:33:55
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getRequestURI()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest.beforeEach(ConsoleUtilsTest.java:42)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.before(ConsoleUtilsTest.java:168)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_500(ConsoleUtilsTest.java:126)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_500_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_500_avgt_jmhStub(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_500_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_500_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_500_AverageTime(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_500_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 91.19% complete, ETA 00:33:36
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getRequestURI()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest.beforeEach(ConsoleUtilsTest.java:42)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.before(ConsoleUtilsTest.java:168)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_500(ConsoleUtilsTest.java:126)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_500_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_500_avgt_jmhStub(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_500_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_500_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_500_AverageTime(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_500_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest._Benchmark.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_LessThan100

# Run progress: 91.27% complete, ETA 00:33:17
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getRequestURI()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest.beforeEach(ConsoleUtilsTest.java:42)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.before(ConsoleUtilsTest.java:168)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_LessThan100(ConsoleUtilsTest.java:156)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_LessThan100_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_LessThan100_avgt_jmhStub(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_LessThan100_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_LessThan100_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_LessThan100_AverageTime(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_LessThan100_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 91.34% complete, ETA 00:32:59
# Fork: 2 of 2
# Warmup Iteration   1: <failure>

java.lang.NullPointerException: Cannot invoke "javax.servlet.http.HttpServletRequest.getRequestURI()" because "this.mockHttpServletRequest" is null
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest.beforeEach(ConsoleUtilsTest.java:42)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.before(ConsoleUtilsTest.java:168)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:91)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.utils.ConsoleUtilsTest$_Benchmark.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_LessThan100(ConsoleUtilsTest.java:156)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_LessThan100_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_LessThan100_avgt_jmhStub(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_LessThan100_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_LessThan100_jmhTest.benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_LessThan100_AverageTime(ConsoleUtilsTest__Benchmark_benchmark_shouldPrintToConsoleExpectedErrorWithColor_WhenStatus_LessThan100_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.DateTimeUtilsTest._Benchmark.benchmark_systemDefault

# Run progress: 91.42% complete, ETA 00:32:40
# Fork: 1 of 2
# Warmup Iteration   1: <failure>

java.lang.IncompatibleClassChangeError: io.github.azagniotov.stubby4j.utils.DateTimeUtilsTest and io.github.azagniotov.stubby4j.utils.DateTimeUtilsTest$_Benchmark disagree on InnerClasses attribute
	at java.base/java.lang.Class.getDeclaringClass0(Native Method)
	at java.base/java.lang.Class.getEnclosingClass(Class.java:1613)
	at java.base/java.lang.Class.getCanonicalName0(Class.java:1726)
	at java.base/java.lang.Class.getCanonicalName(Class.java:1711)
	at com.google.common.truth.StackTraceCleaner.isSubtypeOf(StackTraceCleaner.java:257)
	at com.google.common.truth.StackTraceCleaner.isFromClassDirectly(StackTraceCleaner.java:273)
	at com.google.common.truth.StackTraceCleaner.isTruthEntrance(StackTraceCleaner.java:208)
	at com.google.common.truth.StackTraceCleaner.clean(StackTraceCleaner.java:87)
	at com.google.common.truth.StackTraceCleaner.cleanStackTrace(StackTraceCleaner.java:46)
	at com.google.common.truth.Platform.cleanStackTrace(Platform.java:73)
	at com.google.common.truth.Platform.inferDescription(Platform.java:93)
	at com.google.common.truth.FailureMetadata.description(FailureMetadata.java:229)
	at com.google.common.truth.FailureMetadata.failEqualityCheck(FailureMetadata.java:178)
	at com.google.common.truth.Subject.failEqualityCheck(Subject.java:861)
	at com.google.common.truth.Subject.standardIsEqualTo(Subject.java:174)
	at com.google.common.truth.Subject.isEqualTo(Subject.java:168)
	at io.github.azagniotov.stubby4j.utils.DateTimeUtilsTest.systemDefault(DateTimeUtilsTest.java:22)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.utils.DateTimeUtilsTest$_Benchmark.benchmark_systemDefault(DateTimeUtilsTest.java:34)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.DateTimeUtilsTest__Benchmark_benchmark_systemDefault_jmhTest.benchmark_systemDefault_avgt_jmhStub(DateTimeUtilsTest__Benchmark_benchmark_systemDefault_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.DateTimeUtilsTest__Benchmark_benchmark_systemDefault_jmhTest.benchmark_systemDefault_AverageTime(DateTimeUtilsTest__Benchmark_benchmark_systemDefault_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 91.49% complete, ETA 00:32:21
# Fork: 2 of 2
# Warmup Iteration   1: 2780.238 ns/op
# Warmup Iteration   2: 1012.797 ns/op
# Warmup Iteration   3: <failure>

java.lang.IncompatibleClassChangeError: io.github.azagniotov.stubby4j.utils.DateTimeUtilsTest and io.github.azagniotov.stubby4j.utils.DateTimeUtilsTest$_Benchmark disagree on InnerClasses attribute
	at java.base/java.lang.Class.getDeclaringClass0(Native Method)
	at java.base/java.lang.Class.getEnclosingClass(Class.java:1613)
	at java.base/java.lang.Class.getCanonicalName0(Class.java:1726)
	at java.base/java.lang.Class.getCanonicalName(Class.java:1711)
	at com.google.common.truth.StackTraceCleaner.isSubtypeOf(StackTraceCleaner.java:257)
	at com.google.common.truth.StackTraceCleaner.isFromClassDirectly(StackTraceCleaner.java:273)
	at com.google.common.truth.StackTraceCleaner.isTruthEntrance(StackTraceCleaner.java:208)
	at com.google.common.truth.StackTraceCleaner.clean(StackTraceCleaner.java:87)
	at com.google.common.truth.StackTraceCleaner.cleanStackTrace(StackTraceCleaner.java:46)
	at com.google.common.truth.Platform.cleanStackTrace(Platform.java:73)
	at com.google.common.truth.Platform.inferDescription(Platform.java:93)
	at com.google.common.truth.FailureMetadata.description(FailureMetadata.java:229)
	at com.google.common.truth.FailureMetadata.failEqualityCheck(FailureMetadata.java:178)
	at com.google.common.truth.Subject.failEqualityCheck(Subject.java:861)
	at com.google.common.truth.Subject.standardIsEqualTo(Subject.java:174)
	at com.google.common.truth.Subject.isEqualTo(Subject.java:168)
	at io.github.azagniotov.stubby4j.utils.DateTimeUtilsTest.systemDefault(DateTimeUtilsTest.java:22)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark$BeforeAfterStatement.evaluate(JU2JmhBenchmark.java:93)
	at se.chalmers.ju2jmh.api.JU2JmhBenchmark.runBenchmark(JU2JmhBenchmark.java:107)
	at io.github.azagniotov.stubby4j.utils.DateTimeUtilsTest$_Benchmark.benchmark_systemDefault(DateTimeUtilsTest.java:34)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.DateTimeUtilsTest__Benchmark_benchmark_systemDefault_jmhTest.benchmark_systemDefault_avgt_jmhStub(DateTimeUtilsTest__Benchmark_benchmark_systemDefault_jmhTest.java:186)
	at io.github.azagniotov.stubby4j.utils.jmh_generated.DateTimeUtilsTest__Benchmark_benchmark_systemDefault_jmhTest.benchmark_systemDefault_AverageTime(DateTimeUtilsTest__Benchmark_benchmark_systemDefault_jmhTest.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.DateTimeUtilsTest._Benchmark.benchmark_systemDefaultFromMillis

# Run progress: 91.57% complete, ETA 00:32:03
# Fork: 1 of 2
# Warmup Iteration   1: 2725.050 ns/op
# Warmup Iteration   2: 985.958 ns/op
# Warmup Iteration   3: 917.089 ns/op
# Warmup Iteration   4: 911.664 ns/op
# Warmup Iteration   5: 913.845 ns/op
# Warmup Iteration   6: 904.508 ns/op
# Warmup Iteration   7: 903.098 ns/op
# Warmup Iteration   8: 904.601 ns/op
# Warmup Iteration   9: 904.072 ns/op
# Warmup Iteration  10: 903.182 ns/op
Iteration   1: 908.965 ns/op
Iteration   2: 900.270 ns/op
Iteration   3: 906.710 ns/op
Iteration   4: 905.803 ns/op
Iteration   5: 907.851 ns/op
Iteration   6: 907.502 ns/op
Iteration   7: 897.311 ns/op
Iteration   8: 906.224 ns/op
Iteration   9: 900.774 ns/op
Iteration  10: 895.471 ns/op
Iteration  11: 905.878 ns/op
Iteration  12: 903.897 ns/op
Iteration  13: 905.447 ns/op
Iteration  14: 904.725 ns/op
Iteration  15: 905.966 ns/op
Iteration  16: 901.479 ns/op
Iteration  17: 902.198 ns/op
Iteration  18: 900.284 ns/op
Iteration  19: 900.067 ns/op
Iteration  20: 900.556 ns/op

# Run progress: 91.64% complete, ETA 00:31:47
# Fork: 2 of 2
# Warmup Iteration   1: 2486.772 ns/op
# Warmup Iteration   2: 1004.040 ns/op
# Warmup Iteration   3: 934.827 ns/op
# Warmup Iteration   4: 935.802 ns/op
# Warmup Iteration   5: 930.339 ns/op
# Warmup Iteration   6: 932.536 ns/op
# Warmup Iteration   7: 932.418 ns/op
# Warmup Iteration   8: 932.684 ns/op
# Warmup Iteration   9: 931.179 ns/op
# Warmup Iteration  10: 933.270 ns/op
Iteration   1: 930.114 ns/op
Iteration   2: 929.979 ns/op
Iteration   3: 931.805 ns/op
Iteration   4: 931.692 ns/op
Iteration   5: 930.183 ns/op
Iteration   6: 930.307 ns/op
Iteration   7: 938.158 ns/op
Iteration   8: 935.694 ns/op
Iteration   9: 936.127 ns/op
Iteration  10: 934.856 ns/op
Iteration  11: 937.495 ns/op
Iteration  12: 934.598 ns/op
Iteration  13: 928.738 ns/op
Iteration  14: 935.498 ns/op
Iteration  15: 941.008 ns/op
Iteration  16: 945.986 ns/op
Iteration  17: 943.145 ns/op
Iteration  18: 940.504 ns/op
Iteration  19: 947.035 ns/op
Iteration  20: 944.562 ns/op


Result "io.github.azagniotov.stubby4j.utils.DateTimeUtilsTest._Benchmark.benchmark_systemDefaultFromMillis":
  919.872 ±(99.9%) 9.778 ns/op [Average]
  (min, avg, max) = (895.471, 919.872, 947.035), stdev = 17.380
  CI (99.9%): [910.094, 929.649] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.FileUtilsTest._Benchmark.benchmark_shouldNotConvertFileToBytesWhenBadFilenameGiven

# Run progress: 91.72% complete, ETA 00:31:31
# Fork: 1 of 2
# Warmup Iteration   1: 10579.434 ns/op
# Warmup Iteration   2: 4964.559 ns/op
# Warmup Iteration   3: 4662.924 ns/op
# Warmup Iteration   4: 4651.019 ns/op
# Warmup Iteration   5: 4644.532 ns/op
# Warmup Iteration   6: 4667.642 ns/op
# Warmup Iteration   7: 4567.046 ns/op
# Warmup Iteration   8: 4608.922 ns/op
# Warmup Iteration   9: 4387.820 ns/op
# Warmup Iteration  10: 4397.262 ns/op
Iteration   1: 4408.901 ns/op
Iteration   2: 4407.491 ns/op
Iteration   3: 4407.640 ns/op
Iteration   4: 4372.886 ns/op
Iteration   5: 4382.117 ns/op
Iteration   6: 4503.220 ns/op
Iteration   7: 4420.278 ns/op
Iteration   8: 4496.531 ns/op
Iteration   9: 4582.183 ns/op
Iteration  10: 4501.956 ns/op
Iteration  11: 4474.565 ns/op
Iteration  12: 4457.721 ns/op
Iteration  13: 4468.118 ns/op
Iteration  14: 4459.274 ns/op
Iteration  15: 4552.150 ns/op
Iteration  16: 4528.314 ns/op
Iteration  17: 4568.504 ns/op
Iteration  18: 4631.136 ns/op
Iteration  19: 4633.865 ns/op
Iteration  20: 4550.705 ns/op

# Run progress: 91.79% complete, ETA 00:31:15
# Fork: 2 of 2
# Warmup Iteration   1: 10349.979 ns/op
# Warmup Iteration   2: 4355.047 ns/op
# Warmup Iteration   3: 4152.896 ns/op
# Warmup Iteration   4: 4132.606 ns/op
# Warmup Iteration   5: 4115.981 ns/op
# Warmup Iteration   6: 4133.182 ns/op
# Warmup Iteration   7: 4154.036 ns/op
# Warmup Iteration   8: 4207.525 ns/op
# Warmup Iteration   9: 4131.143 ns/op
# Warmup Iteration  10: 4163.488 ns/op
Iteration   1: 4223.680 ns/op
Iteration   2: 4133.977 ns/op
Iteration   3: 4161.055 ns/op
Iteration   4: 4131.614 ns/op
Iteration   5: 4179.601 ns/op
Iteration   6: 4219.625 ns/op
Iteration   7: 4090.999 ns/op
Iteration   8: 4194.739 ns/op
Iteration   9: 4090.315 ns/op
Iteration  10: 4089.132 ns/op
Iteration  11: 4098.104 ns/op
Iteration  12: 4129.527 ns/op
Iteration  13: 4095.711 ns/op
Iteration  14: 4071.996 ns/op
Iteration  15: 4109.122 ns/op
Iteration  16: 4083.621 ns/op
Iteration  17: 4091.895 ns/op
Iteration  18: 4073.939 ns/op
Iteration  19: 4107.872 ns/op
Iteration  20: 4086.331 ns/op


Result "io.github.azagniotov.stubby4j.utils.FileUtilsTest._Benchmark.benchmark_shouldNotConvertFileToBytesWhenBadFilenameGiven":
  4306.760 ±(99.9%) 110.691 ns/op [Average]
  (min, avg, max) = (4071.996, 4306.760, 4633.865), stdev = 196.753
  CI (99.9%): [4196.069, 4417.451] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.FileUtilsTest._Benchmark.benchmark_shouldNotLoadFileFromURWhenBadFilenameGiven

# Run progress: 91.87% complete, ETA 00:30:59
# Fork: 1 of 2
# Warmup Iteration   1: 8631.834 ns/op
# Warmup Iteration   2: 4395.122 ns/op
# Warmup Iteration   3: 4089.251 ns/op
# Warmup Iteration   4: 4114.188 ns/op
# Warmup Iteration   5: 4132.993 ns/op
# Warmup Iteration   6: 4188.102 ns/op
# Warmup Iteration   7: 4094.416 ns/op
# Warmup Iteration   8: 4078.427 ns/op
# Warmup Iteration   9: 4124.046 ns/op
# Warmup Iteration  10: 4154.634 ns/op
Iteration   1: 4166.119 ns/op
Iteration   2: 4112.924 ns/op
Iteration   3: 4131.996 ns/op
Iteration   4: 4089.321 ns/op
Iteration   5: 4118.105 ns/op
Iteration   6: 4140.347 ns/op
Iteration   7: 4099.150 ns/op
Iteration   8: 4071.898 ns/op
Iteration   9: 4079.743 ns/op
Iteration  10: 4106.147 ns/op
Iteration  11: 4064.293 ns/op
Iteration  12: 4047.769 ns/op
Iteration  13: 4055.418 ns/op
Iteration  14: 4036.740 ns/op
Iteration  15: 4051.706 ns/op
Iteration  16: 4005.379 ns/op
Iteration  17: 4043.963 ns/op
Iteration  18: 4039.120 ns/op
Iteration  19: 4058.487 ns/op
Iteration  20: 4043.677 ns/op

# Run progress: 91.94% complete, ETA 00:30:42
# Fork: 2 of 2
# Warmup Iteration   1: 8827.827 ns/op
# Warmup Iteration   2: 3992.154 ns/op
# Warmup Iteration   3: 3826.378 ns/op
# Warmup Iteration   4: 3794.454 ns/op
# Warmup Iteration   5: 3814.678 ns/op
# Warmup Iteration   6: 3822.872 ns/op
# Warmup Iteration   7: 3799.826 ns/op
# Warmup Iteration   8: 3881.547 ns/op
# Warmup Iteration   9: 3831.195 ns/op
# Warmup Iteration  10: 3847.812 ns/op
Iteration   1: 3832.857 ns/op
Iteration   2: 3876.138 ns/op
Iteration   3: 3824.664 ns/op
Iteration   4: 3819.717 ns/op
Iteration   5: 3846.513 ns/op
Iteration   6: 3826.401 ns/op
Iteration   7: 3705.436 ns/op
Iteration   8: 3702.774 ns/op
Iteration   9: 3761.279 ns/op
Iteration  10: 3723.215 ns/op
Iteration  11: 3721.761 ns/op
Iteration  12: 3770.685 ns/op
Iteration  13: 3726.852 ns/op
Iteration  14: 3721.602 ns/op
Iteration  15: 3758.269 ns/op
Iteration  16: 3770.791 ns/op
Iteration  17: 3746.671 ns/op
Iteration  18: 3711.687 ns/op
Iteration  19: 3715.246 ns/op
Iteration  20: 3809.374 ns/op


Result "io.github.azagniotov.stubby4j.utils.FileUtilsTest._Benchmark.benchmark_shouldNotLoadFileFromURWhenBadFilenameGiven":
  3923.356 ±(99.9%) 92.140 ns/op [Average]
  (min, avg, max) = (3702.774, 3923.356, 4166.119), stdev = 163.779
  CI (99.9%): [3831.216, 4015.496] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.HandlerUtilsTest._Benchmark.benchmark_shouldEscapeHtmlEntities

# Run progress: 92.02% complete, ETA 00:30:26
# Fork: 1 of 2
# Warmup Iteration   1: 3374.699 ns/op
# Warmup Iteration   2: 1151.112 ns/op
# Warmup Iteration   3: 1040.947 ns/op
# Warmup Iteration   4: 1040.607 ns/op
# Warmup Iteration   5: 1057.176 ns/op
# Warmup Iteration   6: 1037.146 ns/op
# Warmup Iteration   7: 1038.238 ns/op
# Warmup Iteration   8: 1041.743 ns/op
# Warmup Iteration   9: 1043.561 ns/op
# Warmup Iteration  10: 1041.223 ns/op
Iteration   1: 1047.500 ns/op
Iteration   2: 1036.517 ns/op
Iteration   3: 1039.340 ns/op
Iteration   4: 1036.895 ns/op
Iteration   5: 1041.368 ns/op
Iteration   6: 1040.705 ns/op
Iteration   7: 1038.880 ns/op
Iteration   8: 1033.570 ns/op
Iteration   9: 1044.424 ns/op
Iteration  10: 1041.732 ns/op
Iteration  11: 1045.801 ns/op
Iteration  12: 1041.843 ns/op
Iteration  13: 1038.942 ns/op
Iteration  14: 1040.171 ns/op
Iteration  15: 1033.734 ns/op
Iteration  16: 1041.443 ns/op
Iteration  17: 1038.898 ns/op
Iteration  18: 1037.406 ns/op
Iteration  19: 1038.984 ns/op
Iteration  20: 1036.970 ns/op

# Run progress: 92.09% complete, ETA 00:30:10
# Fork: 2 of 2
# Warmup Iteration   1: 3086.190 ns/op
# Warmup Iteration   2: 1178.401 ns/op
# Warmup Iteration   3: 1040.119 ns/op
# Warmup Iteration   4: 1039.128 ns/op
# Warmup Iteration   5: 1037.771 ns/op
# Warmup Iteration   6: 1036.480 ns/op
# Warmup Iteration   7: 1037.708 ns/op
# Warmup Iteration   8: 1033.180 ns/op
# Warmup Iteration   9: 1034.837 ns/op
# Warmup Iteration  10: 1036.910 ns/op
Iteration   1: 1042.824 ns/op
Iteration   2: 1038.284 ns/op
Iteration   3: 1040.198 ns/op
Iteration   4: 1039.395 ns/op
Iteration   5: 1033.489 ns/op
Iteration   6: 1036.264 ns/op
Iteration   7: 1033.103 ns/op
Iteration   8: 1037.560 ns/op
Iteration   9: 1042.562 ns/op
Iteration  10: 1036.094 ns/op
Iteration  11: 1032.245 ns/op
Iteration  12: 1037.243 ns/op
Iteration  13: 1039.206 ns/op
Iteration  14: 1036.906 ns/op
Iteration  15: 1040.666 ns/op
Iteration  16: 1041.762 ns/op
Iteration  17: 1036.521 ns/op
Iteration  18: 1037.265 ns/op
Iteration  19: 1035.629 ns/op
Iteration  20: 1043.370 ns/op


Result "io.github.azagniotov.stubby4j.utils.HandlerUtilsTest._Benchmark.benchmark_shouldEscapeHtmlEntities":
  1038.893 ±(99.9%) 1.951 ns/op [Average]
  (min, avg, max) = (1032.245, 1038.893, 1047.500), stdev = 3.469
  CI (99.9%): [1036.941, 1040.844] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.HandlerUtilsTest._Benchmark.benchmark_shouldGenerateUpTime_OneDay23Hours59Minutes59Seconds

# Run progress: 92.17% complete, ETA 00:29:54
# Fork: 1 of 2
# Warmup Iteration   1: 6607.437 ns/op
# Warmup Iteration   2: 2068.678 ns/op
# Warmup Iteration   3: 1562.908 ns/op
# Warmup Iteration   4: 1517.564 ns/op
# Warmup Iteration   5: 1514.431 ns/op
# Warmup Iteration   6: 1509.551 ns/op
# Warmup Iteration   7: 1511.032 ns/op
# Warmup Iteration   8: 1520.443 ns/op
# Warmup Iteration   9: 1520.014 ns/op
# Warmup Iteration  10: 1519.396 ns/op
Iteration   1: 1510.381 ns/op
Iteration   2: 1510.441 ns/op
Iteration   3: 1513.334 ns/op
Iteration   4: 1518.593 ns/op
Iteration   5: 1518.447 ns/op
Iteration   6: 1524.153 ns/op
Iteration   7: 1515.907 ns/op
Iteration   8: 1519.850 ns/op
Iteration   9: 1516.329 ns/op
Iteration  10: 1518.452 ns/op
Iteration  11: 1516.422 ns/op
Iteration  12: 1521.784 ns/op
Iteration  13: 1523.857 ns/op
Iteration  14: 1518.367 ns/op
Iteration  15: 1520.535 ns/op
Iteration  16: 1520.775 ns/op
Iteration  17: 1512.224 ns/op
Iteration  18: 1518.565 ns/op
Iteration  19: 1515.118 ns/op
Iteration  20: 1511.857 ns/op

# Run progress: 92.24% complete, ETA 00:29:38
# Fork: 2 of 2
# Warmup Iteration   1: 6362.960 ns/op
# Warmup Iteration   2: 1865.961 ns/op
# Warmup Iteration   3: 1538.874 ns/op
# Warmup Iteration   4: 1532.113 ns/op
# Warmup Iteration   5: 1529.398 ns/op
# Warmup Iteration   6: 1535.138 ns/op
# Warmup Iteration   7: 1528.618 ns/op
# Warmup Iteration   8: 1531.787 ns/op
# Warmup Iteration   9: 1529.302 ns/op
# Warmup Iteration  10: 1533.017 ns/op
Iteration   1: 1533.924 ns/op
Iteration   2: 1526.782 ns/op
Iteration   3: 1527.546 ns/op
Iteration   4: 1530.237 ns/op
Iteration   5: 1529.132 ns/op
Iteration   6: 1550.034 ns/op
Iteration   7: 1527.003 ns/op
Iteration   8: 1529.590 ns/op
Iteration   9: 1526.058 ns/op
Iteration  10: 1533.030 ns/op
Iteration  11: 1528.401 ns/op
Iteration  12: 1534.890 ns/op
Iteration  13: 1532.489 ns/op
Iteration  14: 1534.921 ns/op
Iteration  15: 1524.864 ns/op
Iteration  16: 1533.263 ns/op
Iteration  17: 1531.591 ns/op
Iteration  18: 1523.700 ns/op
Iteration  19: 1527.558 ns/op
Iteration  20: 1538.807 ns/op


Result "io.github.azagniotov.stubby4j.utils.HandlerUtilsTest._Benchmark.benchmark_shouldGenerateUpTime_OneDay23Hours59Minutes59Seconds":
  1524.230 ±(99.9%) 4.866 ns/op [Average]
  (min, avg, max) = (1510.381, 1524.230, 1550.034), stdev = 8.649
  CI (99.9%): [1519.364, 1529.096] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.HandlerUtilsTest._Benchmark.benchmark_shouldGenerateUpTime_OneDayOneHourOneMinuteOneSecond

# Run progress: 92.32% complete, ETA 00:29:22
# Fork: 1 of 2
# Warmup Iteration   1: 6292.652 ns/op
# Warmup Iteration   2: 1884.599 ns/op
# Warmup Iteration   3: 1479.706 ns/op
# Warmup Iteration   4: 1474.159 ns/op
# Warmup Iteration   5: 1481.796 ns/op
# Warmup Iteration   6: 1474.033 ns/op
# Warmup Iteration   7: 1475.313 ns/op
# Warmup Iteration   8: 1484.499 ns/op
# Warmup Iteration   9: 1484.810 ns/op
# Warmup Iteration  10: 1478.681 ns/op
Iteration   1: 1474.186 ns/op
Iteration   2: 1478.415 ns/op
Iteration   3: 1477.635 ns/op
Iteration   4: 1476.444 ns/op
Iteration   5: 1471.347 ns/op
Iteration   6: 1498.449 ns/op
Iteration   7: 1478.157 ns/op
Iteration   8: 1477.053 ns/op
Iteration   9: 1475.277 ns/op
Iteration  10: 1473.866 ns/op
Iteration  11: 1473.556 ns/op
Iteration  12: 1474.823 ns/op
Iteration  13: 1479.227 ns/op
Iteration  14: 1478.141 ns/op
Iteration  15: 1471.572 ns/op
Iteration  16: 1477.943 ns/op
Iteration  17: 1476.152 ns/op
Iteration  18: 1476.915 ns/op
Iteration  19: 1481.353 ns/op
Iteration  20: 1477.417 ns/op

# Run progress: 92.39% complete, ETA 00:29:06
# Fork: 2 of 2
# Warmup Iteration   1: 6071.500 ns/op
# Warmup Iteration   2: 1830.195 ns/op
# Warmup Iteration   3: 1480.411 ns/op
# Warmup Iteration   4: 1483.920 ns/op
# Warmup Iteration   5: 1486.484 ns/op
# Warmup Iteration   6: 1480.698 ns/op
# Warmup Iteration   7: 1484.603 ns/op
# Warmup Iteration   8: 1479.463 ns/op
# Warmup Iteration   9: 1478.441 ns/op
# Warmup Iteration  10: 1477.832 ns/op
Iteration   1: 1474.805 ns/op
Iteration   2: 1477.544 ns/op
Iteration   3: 1485.143 ns/op
Iteration   4: 1474.222 ns/op
Iteration   5: 1475.615 ns/op
Iteration   6: 1493.934 ns/op
Iteration   7: 1476.606 ns/op
Iteration   8: 1477.503 ns/op
Iteration   9: 1487.933 ns/op
Iteration  10: 1482.356 ns/op
Iteration  11: 1474.564 ns/op
Iteration  12: 1483.695 ns/op
Iteration  13: 1481.938 ns/op
Iteration  14: 1471.527 ns/op
Iteration  15: 1477.888 ns/op
Iteration  16: 1475.885 ns/op
Iteration  17: 1478.405 ns/op
Iteration  18: 1479.105 ns/op
Iteration  19: 1481.035 ns/op
Iteration  20: 1476.744 ns/op


Result "io.github.azagniotov.stubby4j.utils.HandlerUtilsTest._Benchmark.benchmark_shouldGenerateUpTime_OneDayOneHourOneMinuteOneSecond":
  1478.359 ±(99.9%) 3.071 ns/op [Average]
  (min, avg, max) = (1471.347, 1478.359, 1498.449), stdev = 5.459
  CI (99.9%): [1475.288, 1481.431] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.HandlerUtilsTest._Benchmark.benchmark_shouldGenerateUpTime_TwoDaysZeroHoursZeroMinutes1Second

# Run progress: 92.47% complete, ETA 00:28:49
# Fork: 1 of 2
# Warmup Iteration   1: 6422.599 ns/op
# Warmup Iteration   2: 1961.576 ns/op
# Warmup Iteration   3: 1517.409 ns/op
# Warmup Iteration   4: 1478.718 ns/op
# Warmup Iteration   5: 1475.069 ns/op
# Warmup Iteration   6: 1475.369 ns/op
# Warmup Iteration   7: 1479.262 ns/op
# Warmup Iteration   8: 1471.162 ns/op
# Warmup Iteration   9: 1468.349 ns/op
# Warmup Iteration  10: 1487.699 ns/op
Iteration   1: 1478.508 ns/op
Iteration   2: 1486.997 ns/op
Iteration   3: 1474.911 ns/op
Iteration   4: 1476.340 ns/op
Iteration   5: 1485.814 ns/op
Iteration   6: 1478.637 ns/op
Iteration   7: 1481.929 ns/op
Iteration   8: 1477.685 ns/op
Iteration   9: 1480.434 ns/op
Iteration  10: 1476.116 ns/op
Iteration  11: 1482.037 ns/op
Iteration  12: 1485.595 ns/op
Iteration  13: 1480.621 ns/op
Iteration  14: 1480.498 ns/op
Iteration  15: 1489.667 ns/op
Iteration  16: 1478.588 ns/op
Iteration  17: 1477.478 ns/op
Iteration  18: 1470.949 ns/op
Iteration  19: 1480.713 ns/op
Iteration  20: 1491.651 ns/op

# Run progress: 92.55% complete, ETA 00:28:33
# Fork: 2 of 2
# Warmup Iteration   1: 6457.383 ns/op
# Warmup Iteration   2: 1886.183 ns/op
# Warmup Iteration   3: 1522.895 ns/op
# Warmup Iteration   4: 1485.213 ns/op
# Warmup Iteration   5: 1491.736 ns/op
# Warmup Iteration   6: 1485.652 ns/op
# Warmup Iteration   7: 1489.366 ns/op
# Warmup Iteration   8: 1489.327 ns/op
# Warmup Iteration   9: 1486.630 ns/op
# Warmup Iteration  10: 1497.869 ns/op
Iteration   1: 1485.265 ns/op
Iteration   2: 1482.208 ns/op
Iteration   3: 1478.921 ns/op
Iteration   4: 1487.601 ns/op
Iteration   5: 1491.573 ns/op
Iteration   6: 1496.817 ns/op
Iteration   7: 1475.282 ns/op
Iteration   8: 1484.434 ns/op
Iteration   9: 1489.215 ns/op
Iteration  10: 1487.514 ns/op
Iteration  11: 1495.982 ns/op
Iteration  12: 1483.306 ns/op
Iteration  13: 1476.125 ns/op
Iteration  14: 1489.880 ns/op
Iteration  15: 1483.907 ns/op
Iteration  16: 1490.045 ns/op
Iteration  17: 1488.039 ns/op
Iteration  18: 1484.895 ns/op
Iteration  19: 1485.409 ns/op
Iteration  20: 1484.966 ns/op


Result "io.github.azagniotov.stubby4j.utils.HandlerUtilsTest._Benchmark.benchmark_shouldGenerateUpTime_TwoDaysZeroHoursZeroMinutes1Second":
  1483.414 ±(99.9%) 3.334 ns/op [Average]
  (min, avg, max) = (1470.949, 1483.414, 1496.817), stdev = 5.926
  CI (99.9%): [1480.080, 1486.748] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.HandlerUtilsTest._Benchmark.benchmark_shouldLinkifyUriString

# Run progress: 92.62% complete, ETA 00:28:17
# Fork: 1 of 2
# Warmup Iteration   1: 5417.038 ns/op
# Warmup Iteration   2: 1724.282 ns/op
# Warmup Iteration   3: 1122.250 ns/op
# Warmup Iteration   4: 1127.228 ns/op
# Warmup Iteration   5: 1125.238 ns/op
# Warmup Iteration   6: 1126.616 ns/op
# Warmup Iteration   7: 1121.377 ns/op
# Warmup Iteration   8: 1122.949 ns/op
# Warmup Iteration   9: 1119.771 ns/op
# Warmup Iteration  10: 1129.173 ns/op
Iteration   1: 1121.025 ns/op
Iteration   2: 1117.160 ns/op
Iteration   3: 1123.981 ns/op
Iteration   4: 1126.246 ns/op
Iteration   5: 1122.512 ns/op
Iteration   6: 1125.494 ns/op
Iteration   7: 1128.007 ns/op
Iteration   8: 1128.438 ns/op
Iteration   9: 1129.588 ns/op
Iteration  10: 1133.174 ns/op
Iteration  11: 1128.789 ns/op
Iteration  12: 1130.550 ns/op
Iteration  13: 1131.293 ns/op
Iteration  14: 1125.574 ns/op
Iteration  15: 1127.122 ns/op
Iteration  16: 1125.256 ns/op
Iteration  17: 1127.703 ns/op
Iteration  18: 1129.266 ns/op
Iteration  19: 1132.941 ns/op
Iteration  20: 1127.434 ns/op

# Run progress: 92.70% complete, ETA 00:28:01
# Fork: 2 of 2
# Warmup Iteration   1: 4858.985 ns/op
# Warmup Iteration   2: 1343.798 ns/op
# Warmup Iteration   3: 1120.021 ns/op
# Warmup Iteration   4: 1117.721 ns/op
# Warmup Iteration   5: 1121.160 ns/op
# Warmup Iteration   6: 1115.021 ns/op
# Warmup Iteration   7: 1122.962 ns/op
# Warmup Iteration   8: 1118.022 ns/op
# Warmup Iteration   9: 1118.217 ns/op
# Warmup Iteration  10: 1121.324 ns/op
Iteration   1: 1119.485 ns/op
Iteration   2: 1117.950 ns/op
Iteration   3: 1116.461 ns/op
Iteration   4: 1118.541 ns/op
Iteration   5: 1114.911 ns/op
Iteration   6: 1124.238 ns/op
Iteration   7: 1117.810 ns/op
Iteration   8: 1115.365 ns/op
Iteration   9: 1116.531 ns/op
Iteration  10: 1126.453 ns/op
Iteration  11: 1119.591 ns/op
Iteration  12: 1120.856 ns/op
Iteration  13: 1124.357 ns/op
Iteration  14: 1120.877 ns/op
Iteration  15: 1120.637 ns/op
Iteration  16: 1123.407 ns/op
Iteration  17: 1122.583 ns/op
Iteration  18: 1123.875 ns/op
Iteration  19: 1120.698 ns/op
Iteration  20: 1118.653 ns/op


Result "io.github.azagniotov.stubby4j.utils.HandlerUtilsTest._Benchmark.benchmark_shouldLinkifyUriString":
  1123.621 ±(99.9%) 2.806 ns/op [Average]
  (min, avg, max) = (1114.911, 1123.621, 1133.174), stdev = 4.987
  CI (99.9%): [1120.815, 1126.426] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.HandlerUtilsTest._Benchmark.benchmark_shouldLinkifyUriStringForHttps

# Run progress: 92.77% complete, ETA 00:27:44
# Fork: 1 of 2
# Warmup Iteration   1: 4834.044 ns/op
# Warmup Iteration   2: 1664.126 ns/op
# Warmup Iteration   3: 1201.696 ns/op
# Warmup Iteration   4: 1254.694 ns/op
# Warmup Iteration   5: 1190.871 ns/op
# Warmup Iteration   6: 1201.505 ns/op
# Warmup Iteration   7: 1186.697 ns/op
# Warmup Iteration   8: 1221.762 ns/op
# Warmup Iteration   9: 1188.937 ns/op
# Warmup Iteration  10: 1180.562 ns/op
Iteration   1: 1179.555 ns/op
Iteration   2: 1235.988 ns/op
Iteration   3: 1212.446 ns/op
Iteration   4: 1203.088 ns/op
Iteration   5: 1208.112 ns/op
Iteration   6: 1224.112 ns/op
Iteration   7: 1197.241 ns/op
Iteration   8: 1190.137 ns/op
Iteration   9: 1223.155 ns/op
Iteration  10: 1191.330 ns/op
Iteration  11: 1185.580 ns/op
Iteration  12: 1196.742 ns/op
Iteration  13: 1204.120 ns/op
Iteration  14: 1193.072 ns/op
Iteration  15: 1248.992 ns/op
Iteration  16: 1203.505 ns/op
Iteration  17: 1221.470 ns/op
Iteration  18: 1183.552 ns/op
Iteration  19: 1232.172 ns/op
Iteration  20: 1201.552 ns/op

# Run progress: 92.85% complete, ETA 00:27:28
# Fork: 2 of 2
# Warmup Iteration   1: 5179.897 ns/op
# Warmup Iteration   2: 1517.299 ns/op
# Warmup Iteration   3: 1132.726 ns/op
# Warmup Iteration   4: 1128.610 ns/op
# Warmup Iteration   5: 1131.256 ns/op
# Warmup Iteration   6: 1128.154 ns/op
# Warmup Iteration   7: 1127.363 ns/op
# Warmup Iteration   8: 1128.070 ns/op
# Warmup Iteration   9: 1128.496 ns/op
# Warmup Iteration  10: 1133.118 ns/op
Iteration   1: 1130.434 ns/op
Iteration   2: 1128.738 ns/op
Iteration   3: 1124.088 ns/op
Iteration   4: 1129.113 ns/op
Iteration   5: 1128.928 ns/op
Iteration   6: 1140.012 ns/op
Iteration   7: 1125.166 ns/op
Iteration   8: 1129.035 ns/op
Iteration   9: 1131.048 ns/op
Iteration  10: 1131.788 ns/op
Iteration  11: 1140.107 ns/op
Iteration  12: 1136.151 ns/op
Iteration  13: 1129.123 ns/op
Iteration  14: 1131.811 ns/op
Iteration  15: 1129.908 ns/op
Iteration  16: 1129.909 ns/op
Iteration  17: 1131.712 ns/op
Iteration  18: 1125.556 ns/op
Iteration  19: 1128.947 ns/op
Iteration  20: 1130.194 ns/op


Result "io.github.azagniotov.stubby4j.utils.HandlerUtilsTest._Benchmark.benchmark_shouldLinkifyUriStringForHttps":
  1168.692 ±(99.9%) 23.001 ns/op [Average]
  (min, avg, max) = (1124.088, 1168.692, 1248.992), stdev = 40.883
  CI (99.9%): [1145.692, 1191.693] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.HandlerUtilsTest._Benchmark.benchmark_shouldLinkifyUriStringWithSingleQuotesInQueryString

# Run progress: 92.92% complete, ETA 00:27:12
# Fork: 1 of 2
# Warmup Iteration   1: 6681.542 ns/op
# Warmup Iteration   2: 1956.122 ns/op
# Warmup Iteration   3: 1546.171 ns/op
# Warmup Iteration   4: 1538.058 ns/op
# Warmup Iteration   5: 1546.501 ns/op
# Warmup Iteration   6: 1548.693 ns/op
# Warmup Iteration   7: 1552.599 ns/op
# Warmup Iteration   8: 1543.863 ns/op
# Warmup Iteration   9: 1540.293 ns/op
# Warmup Iteration  10: 1546.463 ns/op
Iteration   1: 1546.186 ns/op
Iteration   2: 1538.042 ns/op
Iteration   3: 1538.517 ns/op
Iteration   4: 1542.059 ns/op
Iteration   5: 1540.774 ns/op
Iteration   6: 1559.340 ns/op
Iteration   7: 1544.656 ns/op
Iteration   8: 1546.231 ns/op
Iteration   9: 1546.059 ns/op
Iteration  10: 1545.706 ns/op
Iteration  11: 1538.098 ns/op
Iteration  12: 1541.111 ns/op
Iteration  13: 1547.112 ns/op
Iteration  14: 1545.896 ns/op
Iteration  15: 1540.315 ns/op
Iteration  16: 1548.372 ns/op
Iteration  17: 1546.214 ns/op
Iteration  18: 1541.438 ns/op
Iteration  19: 1545.570 ns/op
Iteration  20: 1537.793 ns/op

# Run progress: 93.00% complete, ETA 00:26:55
# Fork: 2 of 2
# Warmup Iteration   1: 7125.958 ns/op
# Warmup Iteration   2: 2007.036 ns/op
# Warmup Iteration   3: 1536.611 ns/op
# Warmup Iteration   4: 1532.418 ns/op
# Warmup Iteration   5: 1531.001 ns/op
# Warmup Iteration   6: 1536.736 ns/op
# Warmup Iteration   7: 1536.045 ns/op
# Warmup Iteration   8: 1537.456 ns/op
# Warmup Iteration   9: 1530.147 ns/op
# Warmup Iteration  10: 1534.354 ns/op
Iteration   1: 1533.023 ns/op
Iteration   2: 1529.423 ns/op
Iteration   3: 1539.369 ns/op
Iteration   4: 1535.256 ns/op
Iteration   5: 1532.935 ns/op
Iteration   6: 1547.871 ns/op
Iteration   7: 1536.396 ns/op
Iteration   8: 1529.668 ns/op
Iteration   9: 1531.141 ns/op
Iteration  10: 1524.866 ns/op
Iteration  11: 1534.165 ns/op
Iteration  12: 1529.414 ns/op
Iteration  13: 1531.566 ns/op
Iteration  14: 1535.859 ns/op
Iteration  15: 1538.760 ns/op
Iteration  16: 1536.061 ns/op
Iteration  17: 1530.643 ns/op
Iteration  18: 1525.780 ns/op
Iteration  19: 1531.429 ns/op
Iteration  20: 1528.327 ns/op


Result "io.github.azagniotov.stubby4j.utils.HandlerUtilsTest._Benchmark.benchmark_shouldLinkifyUriStringWithSingleQuotesInQueryString":
  1538.536 ±(99.9%) 4.204 ns/op [Average]
  (min, avg, max) = (1524.866, 1538.536, 1559.340), stdev = 7.472
  CI (99.9%): [1534.332, 1542.740] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.JarUtilsTest._Benchmark.benchmark_shouldReadManifestBuiltDate

# Run progress: 93.07% complete, ETA 00:26:39
# Fork: 1 of 2
# Warmup Iteration   1: 50348.056 ns/op
# Warmup Iteration   2: 23611.472 ns/op
# Warmup Iteration   3: 17283.275 ns/op
# Warmup Iteration   4: 11401.414 ns/op
# Warmup Iteration   5: 10892.416 ns/op
# Warmup Iteration   6: 10146.429 ns/op
# Warmup Iteration   7: 10224.096 ns/op
# Warmup Iteration   8: 9628.358 ns/op
# Warmup Iteration   9: 9083.150 ns/op
# Warmup Iteration  10: 10408.334 ns/op
Iteration   1: 9662.098 ns/op
Iteration   2: 9470.213 ns/op
Iteration   3: 9514.443 ns/op
Iteration   4: 9211.579 ns/op
Iteration   5: 9456.951 ns/op
Iteration   6: 9254.685 ns/op
Iteration   7: 9457.130 ns/op
Iteration   8: 9556.046 ns/op
Iteration   9: 9157.426 ns/op
Iteration  10: 9329.000 ns/op
Iteration  11: 9268.280 ns/op
Iteration  12: 9302.754 ns/op
Iteration  13: 9091.847 ns/op
Iteration  14: 9396.802 ns/op
Iteration  15: 9174.023 ns/op
Iteration  16: 8569.666 ns/op
Iteration  17: 8781.415 ns/op
Iteration  18: 9470.905 ns/op
Iteration  19: 9149.782 ns/op
Iteration  20: 9383.722 ns/op

# Run progress: 93.15% complete, ETA 00:26:22
# Fork: 2 of 2
# Warmup Iteration   1: 48927.756 ns/op
# Warmup Iteration   2: 25260.545 ns/op
# Warmup Iteration   3: 16066.529 ns/op
# Warmup Iteration   4: 12137.650 ns/op
# Warmup Iteration   5: 9864.356 ns/op
# Warmup Iteration   6: 9997.512 ns/op
# Warmup Iteration   7: 9517.944 ns/op
# Warmup Iteration   8: 10084.014 ns/op
# Warmup Iteration   9: 9397.120 ns/op
# Warmup Iteration  10: 9690.028 ns/op
Iteration   1: 9786.983 ns/op
Iteration   2: 10238.198 ns/op
Iteration   3: 9362.158 ns/op
Iteration   4: 9672.342 ns/op
Iteration   5: 9564.085 ns/op
Iteration   6: 9675.108 ns/op
Iteration   7: 9297.708 ns/op
Iteration   8: 9684.456 ns/op
Iteration   9: 9274.988 ns/op
Iteration  10: 9276.708 ns/op
Iteration  11: 8978.458 ns/op
Iteration  12: 9347.402 ns/op
Iteration  13: 9137.506 ns/op
Iteration  14: 9407.333 ns/op
Iteration  15: 8955.009 ns/op
Iteration  16: 8754.793 ns/op
Iteration  17: 9282.011 ns/op
Iteration  18: 9190.158 ns/op
Iteration  19: 9207.760 ns/op
Iteration  20: 9401.587 ns/op


Result "io.github.azagniotov.stubby4j.utils.JarUtilsTest._Benchmark.benchmark_shouldReadManifestBuiltDate":
  9328.838 ±(99.9%) 167.564 ns/op [Average]
  (min, avg, max) = (8569.666, 9328.838, 10238.198), stdev = 297.845
  CI (99.9%): [9161.274, 9496.402] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.JarUtilsTest._Benchmark.benchmark_shouldReadManifestImplementationVersion

# Run progress: 93.22% complete, ETA 00:26:06
# Fork: 1 of 2
# Warmup Iteration   1: 36572.438 ns/op
# Warmup Iteration   2: 20474.917 ns/op
# Warmup Iteration   3: 12632.420 ns/op
# Warmup Iteration   4: 11157.141 ns/op
# Warmup Iteration   5: 9786.706 ns/op
# Warmup Iteration   6: 8724.619 ns/op
# Warmup Iteration   7: 9175.318 ns/op
# Warmup Iteration   8: 8975.868 ns/op
# Warmup Iteration   9: 9177.095 ns/op
# Warmup Iteration  10: 9069.182 ns/op
Iteration   1: 8736.877 ns/op
Iteration   2: 8630.064 ns/op
Iteration   3: 8732.270 ns/op
Iteration   4: 8662.215 ns/op
Iteration   5: 8803.103 ns/op
Iteration   6: 8625.350 ns/op
Iteration   7: 8706.773 ns/op
Iteration   8: 8612.761 ns/op
Iteration   9: 8650.858 ns/op
Iteration  10: 8951.193 ns/op
Iteration  11: 8412.870 ns/op
Iteration  12: 8178.477 ns/op
Iteration  13: 7813.430 ns/op
Iteration  14: 8792.983 ns/op
Iteration  15: 8360.150 ns/op
Iteration  16: 8890.066 ns/op
Iteration  17: 8279.454 ns/op
Iteration  18: 8111.640 ns/op
Iteration  19: 8703.651 ns/op
Iteration  20: 8768.586 ns/op

# Run progress: 93.30% complete, ETA 00:25:49
# Fork: 2 of 2
# Warmup Iteration   1: 37897.075 ns/op
# Warmup Iteration   2: 20604.279 ns/op
# Warmup Iteration   3: 12678.818 ns/op
# Warmup Iteration   4: 11090.555 ns/op
# Warmup Iteration   5: 10156.761 ns/op
# Warmup Iteration   6: 9437.911 ns/op
# Warmup Iteration   7: 8811.836 ns/op
# Warmup Iteration   8: 9835.613 ns/op
# Warmup Iteration   9: 8565.333 ns/op
# Warmup Iteration  10: 9444.993 ns/op
Iteration   1: 9176.267 ns/op
Iteration   2: 9425.888 ns/op
Iteration   3: 9028.669 ns/op
Iteration   4: 8925.828 ns/op
Iteration   5: 9024.083 ns/op
Iteration   6: 9333.780 ns/op
Iteration   7: 8931.803 ns/op
Iteration   8: 8747.173 ns/op
Iteration   9: 8638.988 ns/op
Iteration  10: 8349.286 ns/op
Iteration  11: 8612.470 ns/op
Iteration  12: 8876.253 ns/op
Iteration  13: 8739.066 ns/op
Iteration  14: 8908.505 ns/op
Iteration  15: 8760.827 ns/op
Iteration  16: 8181.576 ns/op
Iteration  17: 8793.097 ns/op
Iteration  18: 8901.196 ns/op
Iteration  19: 8915.452 ns/op
Iteration  20: 7917.083 ns/op


Result "io.github.azagniotov.stubby4j.utils.JarUtilsTest._Benchmark.benchmark_shouldReadManifestImplementationVersion":
  8690.251 ±(99.9%) 192.995 ns/op [Average]
  (min, avg, max) = (7813.430, 8690.251, 9425.888), stdev = 343.048
  CI (99.9%): [8497.256, 8883.246] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.ReflectionUtilsTest._Benchmark.benchmark_shouldGetObjectPropertiesAndValues

# Run progress: 93.37% complete, ETA 00:25:33
# Fork: 1 of 2
# Warmup Iteration   1: 28798.125 ns/op
# Warmup Iteration   2: 10263.595 ns/op
# Warmup Iteration   3: 8232.977 ns/op
# Warmup Iteration   4: 8063.174 ns/op
# Warmup Iteration   5: 8038.154 ns/op
# Warmup Iteration   6: 8052.556 ns/op
# Warmup Iteration   7: 8056.253 ns/op
# Warmup Iteration   8: 8026.206 ns/op
# Warmup Iteration   9: 8070.148 ns/op
# Warmup Iteration  10: 8087.790 ns/op
Iteration   1: 8104.267 ns/op
Iteration   2: 8151.768 ns/op
Iteration   3: 8056.006 ns/op
Iteration   4: 8097.937 ns/op
Iteration   5: 8083.783 ns/op
Iteration   6: 8137.918 ns/op
Iteration   7: 8061.523 ns/op
Iteration   8: 8097.817 ns/op
Iteration   9: 8064.785 ns/op
Iteration  10: 8081.548 ns/op
Iteration  11: 8089.978 ns/op
Iteration  12: 8127.987 ns/op
Iteration  13: 8097.833 ns/op
Iteration  14: 8112.988 ns/op
Iteration  15: 8106.153 ns/op
Iteration  16: 8109.624 ns/op
Iteration  17: 8078.185 ns/op
Iteration  18: 8072.958 ns/op
Iteration  19: 8088.889 ns/op
Iteration  20: 8087.344 ns/op

# Run progress: 93.45% complete, ETA 00:25:16
# Fork: 2 of 2
# Warmup Iteration   1: 29106.561 ns/op
# Warmup Iteration   2: 10909.775 ns/op
# Warmup Iteration   3: 8179.967 ns/op
# Warmup Iteration   4: 8135.921 ns/op
# Warmup Iteration   5: 8065.122 ns/op
# Warmup Iteration   6: 8078.260 ns/op
# Warmup Iteration   7: 8081.563 ns/op
# Warmup Iteration   8: 8083.474 ns/op
# Warmup Iteration   9: 8039.763 ns/op
# Warmup Iteration  10: 8018.899 ns/op
Iteration   1: 8063.994 ns/op
Iteration   2: 8077.573 ns/op
Iteration   3: 8102.493 ns/op
Iteration   4: 8029.585 ns/op
Iteration   5: 8099.076 ns/op
Iteration   6: 8118.793 ns/op
Iteration   7: 8101.673 ns/op
Iteration   8: 8063.950 ns/op
Iteration   9: 8092.290 ns/op
Iteration  10: 8049.527 ns/op
Iteration  11: 8072.836 ns/op
Iteration  12: 8085.893 ns/op
Iteration  13: 8122.680 ns/op
Iteration  14: 8099.750 ns/op
Iteration  15: 8089.935 ns/op
Iteration  16: 8087.878 ns/op
Iteration  17: 8112.830 ns/op
Iteration  18: 8056.712 ns/op
Iteration  19: 8091.470 ns/op
Iteration  20: 8079.165 ns/op


Result "io.github.azagniotov.stubby4j.utils.ReflectionUtilsTest._Benchmark.benchmark_shouldGetObjectPropertiesAndValues":
  8090.185 ±(99.9%) 13.810 ns/op [Average]
  (min, avg, max) = (8029.585, 8090.185, 8151.768), stdev = 24.548
  CI (99.9%): [8076.374, 8103.995] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.ReflectionUtilsTest._Benchmark.benchmark_shouldNotSetValueOnObjectProperty_WhenIncorrectPropertyNameGiven

# Run progress: 93.52% complete, ETA 00:25:00
# Fork: 1 of 2
# Warmup Iteration   1: 4059.783 ns/op
# Warmup Iteration   2: 1108.594 ns/op
# Warmup Iteration   3: 913.489 ns/op
# Warmup Iteration   4: 906.983 ns/op
# Warmup Iteration   5: 907.177 ns/op
# Warmup Iteration   6: 905.376 ns/op
# Warmup Iteration   7: 907.725 ns/op
# Warmup Iteration   8: 909.462 ns/op
# Warmup Iteration   9: 903.526 ns/op
# Warmup Iteration  10: 903.741 ns/op
Iteration   1: 913.283 ns/op
Iteration   2: 907.966 ns/op
Iteration   3: 908.082 ns/op
Iteration   4: 907.314 ns/op
Iteration   5: 906.382 ns/op
Iteration   6: 912.805 ns/op
Iteration   7: 906.786 ns/op
Iteration   8: 909.534 ns/op
Iteration   9: 912.064 ns/op
Iteration  10: 910.992 ns/op
Iteration  11: 913.924 ns/op
Iteration  12: 909.634 ns/op
Iteration  13: 912.038 ns/op
Iteration  14: 905.744 ns/op
Iteration  15: 911.796 ns/op
Iteration  16: 911.360 ns/op
Iteration  17: 911.217 ns/op
Iteration  18: 904.674 ns/op
Iteration  19: 907.382 ns/op
Iteration  20: 909.469 ns/op

# Run progress: 93.60% complete, ETA 00:24:43
# Fork: 2 of 2
# Warmup Iteration   1: 3609.416 ns/op
# Warmup Iteration   2: 1156.784 ns/op
# Warmup Iteration   3: 905.029 ns/op
# Warmup Iteration   4: 902.222 ns/op
# Warmup Iteration   5: 904.227 ns/op
# Warmup Iteration   6: 902.626 ns/op
# Warmup Iteration   7: 896.752 ns/op
# Warmup Iteration   8: 902.374 ns/op
# Warmup Iteration   9: 904.029 ns/op
# Warmup Iteration  10: 905.089 ns/op
Iteration   1: 905.969 ns/op
Iteration   2: 904.539 ns/op
Iteration   3: 902.617 ns/op
Iteration   4: 901.072 ns/op
Iteration   5: 908.479 ns/op
Iteration   6: 905.829 ns/op
Iteration   7: 905.894 ns/op
Iteration   8: 903.549 ns/op
Iteration   9: 902.998 ns/op
Iteration  10: 901.896 ns/op
Iteration  11: 901.976 ns/op
Iteration  12: 904.057 ns/op
Iteration  13: 903.965 ns/op
Iteration  14: 903.745 ns/op
Iteration  15: 907.410 ns/op
Iteration  16: 908.321 ns/op
Iteration  17: 901.916 ns/op
Iteration  18: 902.466 ns/op
Iteration  19: 906.391 ns/op
Iteration  20: 903.182 ns/op


Result "io.github.azagniotov.stubby4j.utils.ReflectionUtilsTest._Benchmark.benchmark_shouldNotSetValueOnObjectProperty_WhenIncorrectPropertyNameGiven":
  906.968 ±(99.9%) 2.043 ns/op [Average]
  (min, avg, max) = (901.072, 906.968, 913.924), stdev = 3.631
  CI (99.9%): [904.925, 909.011] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.ReflectionUtilsTest._Benchmark.benchmark_shouldReturnNullWhenClassHasNoDeclaredMethods

# Run progress: 93.67% complete, ETA 00:24:27
# Fork: 1 of 2
# Warmup Iteration   1: 720.897 ns/op
# Warmup Iteration   2: 396.666 ns/op
# Warmup Iteration   3: 367.443 ns/op
# Warmup Iteration   4: 367.095 ns/op
# Warmup Iteration   5: 366.411 ns/op
# Warmup Iteration   6: 365.077 ns/op
# Warmup Iteration   7: 364.333 ns/op
# Warmup Iteration   8: 362.837 ns/op
# Warmup Iteration   9: 365.345 ns/op
# Warmup Iteration  10: 365.265 ns/op
Iteration   1: 366.275 ns/op
Iteration   2: 366.511 ns/op
Iteration   3: 365.155 ns/op
Iteration   4: 365.836 ns/op
Iteration   5: 365.121 ns/op
Iteration   6: 367.170 ns/op
Iteration   7: 365.178 ns/op
Iteration   8: 366.073 ns/op
Iteration   9: 364.234 ns/op
Iteration  10: 364.602 ns/op
Iteration  11: 364.845 ns/op
Iteration  12: 363.830 ns/op
Iteration  13: 366.268 ns/op
Iteration  14: 367.811 ns/op
Iteration  15: 370.083 ns/op
Iteration  16: 366.686 ns/op
Iteration  17: 365.873 ns/op
Iteration  18: 365.577 ns/op
Iteration  19: 364.778 ns/op
Iteration  20: 365.458 ns/op

# Run progress: 93.75% complete, ETA 00:24:10
# Fork: 2 of 2
# Warmup Iteration   1: 772.395 ns/op
# Warmup Iteration   2: 387.693 ns/op
# Warmup Iteration   3: 366.817 ns/op
# Warmup Iteration   4: 369.874 ns/op
# Warmup Iteration   5: 365.330 ns/op
# Warmup Iteration   6: 367.615 ns/op
# Warmup Iteration   7: 365.766 ns/op
# Warmup Iteration   8: 363.153 ns/op
# Warmup Iteration   9: 364.824 ns/op
# Warmup Iteration  10: 367.350 ns/op
Iteration   1: 366.673 ns/op
Iteration   2: 367.003 ns/op
Iteration   3: 366.153 ns/op
Iteration   4: 366.102 ns/op
Iteration   5: 366.999 ns/op
Iteration   6: 365.165 ns/op
Iteration   7: 365.453 ns/op
Iteration   8: 366.511 ns/op
Iteration   9: 366.128 ns/op
Iteration  10: 363.649 ns/op
Iteration  11: 368.692 ns/op
Iteration  12: 369.226 ns/op
Iteration  13: 369.048 ns/op
Iteration  14: 367.950 ns/op
Iteration  15: 367.190 ns/op
Iteration  16: 365.585 ns/op
Iteration  17: 366.366 ns/op
Iteration  18: 365.233 ns/op
Iteration  19: 367.175 ns/op
Iteration  20: 365.494 ns/op


Result "io.github.azagniotov.stubby4j.utils.ReflectionUtilsTest._Benchmark.benchmark_shouldReturnNullWhenClassHasNoDeclaredMethods":
  366.229 ±(99.9%) 0.803 ns/op [Average]
  (min, avg, max) = (363.649, 366.229, 370.083), stdev = 1.427
  CI (99.9%): [365.426, 367.032] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.ReflectionUtilsTest._Benchmark.benchmark_shouldReturnPropertyValueWhenClassHasDeclaredMethods

# Run progress: 93.83% complete, ETA 00:23:54
# Fork: 1 of 2
# Warmup Iteration   1: 2358.943 ns/op
# Warmup Iteration   2: 596.701 ns/op
# Warmup Iteration   3: 447.077 ns/op
# Warmup Iteration   4: 447.934 ns/op
# Warmup Iteration   5: 444.972 ns/op
# Warmup Iteration   6: 446.448 ns/op
# Warmup Iteration   7: 445.973 ns/op
# Warmup Iteration   8: 444.384 ns/op
# Warmup Iteration   9: 448.103 ns/op
# Warmup Iteration  10: 444.510 ns/op
Iteration   1: 446.809 ns/op
Iteration   2: 447.052 ns/op
Iteration   3: 447.071 ns/op
Iteration   4: 447.069 ns/op
Iteration   5: 445.316 ns/op
Iteration   6: 447.664 ns/op
Iteration   7: 446.361 ns/op
Iteration   8: 445.504 ns/op
Iteration   9: 447.002 ns/op
Iteration  10: 447.894 ns/op
Iteration  11: 445.325 ns/op
Iteration  12: 447.254 ns/op
Iteration  13: 445.043 ns/op
Iteration  14: 449.316 ns/op
Iteration  15: 445.088 ns/op
Iteration  16: 446.350 ns/op
Iteration  17: 448.799 ns/op
Iteration  18: 445.165 ns/op
Iteration  19: 446.269 ns/op
Iteration  20: 445.679 ns/op

# Run progress: 93.90% complete, ETA 00:23:37
# Fork: 2 of 2
# Warmup Iteration   1: 2240.696 ns/op
# Warmup Iteration   2: 546.647 ns/op
# Warmup Iteration   3: 457.013 ns/op
# Warmup Iteration   4: 457.964 ns/op
# Warmup Iteration   5: 457.956 ns/op
# Warmup Iteration   6: 458.370 ns/op
# Warmup Iteration   7: 457.028 ns/op
# Warmup Iteration   8: 456.607 ns/op
# Warmup Iteration   9: 457.108 ns/op
# Warmup Iteration  10: 459.069 ns/op
Iteration   1: 459.109 ns/op
Iteration   2: 457.132 ns/op
Iteration   3: 456.131 ns/op
Iteration   4: 456.334 ns/op
Iteration   5: 459.959 ns/op
Iteration   6: 460.009 ns/op
Iteration   7: 456.316 ns/op
Iteration   8: 457.212 ns/op
Iteration   9: 456.482 ns/op
Iteration  10: 456.722 ns/op
Iteration  11: 458.919 ns/op
Iteration  12: 458.593 ns/op
Iteration  13: 459.485 ns/op
Iteration  14: 459.735 ns/op
Iteration  15: 459.444 ns/op
Iteration  16: 456.850 ns/op
Iteration  17: 457.154 ns/op
Iteration  18: 457.478 ns/op
Iteration  19: 456.345 ns/op
Iteration  20: 459.647 ns/op


Result "io.github.azagniotov.stubby4j.utils.ReflectionUtilsTest._Benchmark.benchmark_shouldReturnPropertyValueWhenClassHasDeclaredMethods":
  452.277 ±(99.9%) 3.318 ns/op [Average]
  (min, avg, max) = (445.043, 452.277, 460.009), stdev = 5.898
  CI (99.9%): [448.959, 455.595] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.ReflectionUtilsTest._Benchmark.benchmark_shouldSetValueOnObjectProperty_WhenCorrectPropertyNameGiven

# Run progress: 93.98% complete, ETA 00:23:20
# Fork: 1 of 2
# Warmup Iteration   1: 4181.647 ns/op
# Warmup Iteration   2: 1103.976 ns/op
# Warmup Iteration   3: 927.746 ns/op
# Warmup Iteration   4: 903.554 ns/op
# Warmup Iteration   5: 900.761 ns/op
# Warmup Iteration   6: 898.858 ns/op
# Warmup Iteration   7: 899.295 ns/op
# Warmup Iteration   8: 893.824 ns/op
# Warmup Iteration   9: 900.697 ns/op
# Warmup Iteration  10: 899.641 ns/op
Iteration   1: 903.936 ns/op
Iteration   2: 896.869 ns/op
Iteration   3: 906.108 ns/op
Iteration   4: 899.423 ns/op
Iteration   5: 897.688 ns/op
Iteration   6: 899.291 ns/op
Iteration   7: 898.712 ns/op
Iteration   8: 900.823 ns/op
Iteration   9: 901.348 ns/op
Iteration  10: 898.901 ns/op
Iteration  11: 902.154 ns/op
Iteration  12: 899.036 ns/op
Iteration  13: 897.813 ns/op
Iteration  14: 900.663 ns/op
Iteration  15: 900.227 ns/op
Iteration  16: 898.040 ns/op
Iteration  17: 895.472 ns/op
Iteration  18: 902.626 ns/op
Iteration  19: 895.155 ns/op
Iteration  20: 898.662 ns/op

# Run progress: 94.05% complete, ETA 00:23:04
# Fork: 2 of 2
# Warmup Iteration   1: 3928.589 ns/op
# Warmup Iteration   2: 1123.697 ns/op
# Warmup Iteration   3: 906.832 ns/op
# Warmup Iteration   4: 903.361 ns/op
# Warmup Iteration   5: 902.892 ns/op
# Warmup Iteration   6: 902.591 ns/op
# Warmup Iteration   7: 901.863 ns/op
# Warmup Iteration   8: 902.558 ns/op
# Warmup Iteration   9: 900.408 ns/op
# Warmup Iteration  10: 899.840 ns/op
Iteration   1: 903.124 ns/op
Iteration   2: 899.387 ns/op
Iteration   3: 906.360 ns/op
Iteration   4: 903.432 ns/op
Iteration   5: 906.164 ns/op
Iteration   6: 903.064 ns/op
Iteration   7: 902.892 ns/op
Iteration   8: 904.333 ns/op
Iteration   9: 907.070 ns/op
Iteration  10: 903.073 ns/op
Iteration  11: 906.135 ns/op
Iteration  12: 906.194 ns/op
Iteration  13: 910.845 ns/op
Iteration  14: 900.411 ns/op
Iteration  15: 902.936 ns/op
Iteration  16: 903.185 ns/op
Iteration  17: 905.595 ns/op
Iteration  18: 903.187 ns/op
Iteration  19: 901.560 ns/op
Iteration  20: 903.662 ns/op


Result "io.github.azagniotov.stubby4j.utils.ReflectionUtilsTest._Benchmark.benchmark_shouldSetValueOnObjectProperty_WhenCorrectPropertyNameGiven":
  901.889 ±(99.9%) 1.942 ns/op [Average]
  (min, avg, max) = (895.155, 901.889, 910.845), stdev = 3.453
  CI (99.9%): [899.946, 903.831] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_encodeBase16

# Run progress: 94.13% complete, ETA 00:22:47
# Fork: 1 of 2
# Warmup Iteration   1: 3969.988 ns/op
# Warmup Iteration   2: 2337.755 ns/op
# Warmup Iteration   3: 2249.763 ns/op
# Warmup Iteration   4: 2242.617 ns/op
# Warmup Iteration   5: 2248.625 ns/op
# Warmup Iteration   6: 2255.055 ns/op
# Warmup Iteration   7: 2254.262 ns/op
# Warmup Iteration   8: 2261.574 ns/op
# Warmup Iteration   9: 2248.542 ns/op
# Warmup Iteration  10: 2231.518 ns/op
Iteration   1: 2251.105 ns/op
Iteration   2: 2256.866 ns/op
Iteration   3: 2230.789 ns/op
Iteration   4: 2219.115 ns/op
Iteration   5: 2237.371 ns/op
Iteration   6: 2254.441 ns/op
Iteration   7: 2250.206 ns/op
Iteration   8: 2247.404 ns/op
Iteration   9: 2224.351 ns/op
Iteration  10: 2246.440 ns/op
Iteration  11: 2261.121 ns/op
Iteration  12: 2233.889 ns/op
Iteration  13: 2252.307 ns/op
Iteration  14: 2226.494 ns/op
Iteration  15: 2243.797 ns/op
Iteration  16: 2255.248 ns/op
Iteration  17: 2241.943 ns/op
Iteration  18: 2230.687 ns/op
Iteration  19: 2246.851 ns/op
Iteration  20: 2241.595 ns/op

# Run progress: 94.20% complete, ETA 00:22:30
# Fork: 2 of 2
# Warmup Iteration   1: 3902.602 ns/op
# Warmup Iteration   2: 2360.850 ns/op
# Warmup Iteration   3: 2254.080 ns/op
# Warmup Iteration   4: 2255.002 ns/op
# Warmup Iteration   5: 2261.495 ns/op
# Warmup Iteration   6: 2240.336 ns/op
# Warmup Iteration   7: 2256.957 ns/op
# Warmup Iteration   8: 2256.776 ns/op
# Warmup Iteration   9: 2249.688 ns/op
# Warmup Iteration  10: 2233.925 ns/op
Iteration   1: 2250.974 ns/op
Iteration   2: 2254.329 ns/op
Iteration   3: 2260.227 ns/op
Iteration   4: 2255.083 ns/op
Iteration   5: 2257.302 ns/op
Iteration   6: 2257.800 ns/op
Iteration   7: 2248.428 ns/op
Iteration   8: 2254.766 ns/op
Iteration   9: 2252.376 ns/op
Iteration  10: 2239.908 ns/op
Iteration  11: 2248.978 ns/op
Iteration  12: 2255.925 ns/op
Iteration  13: 2256.297 ns/op
Iteration  14: 2247.092 ns/op
Iteration  15: 2241.890 ns/op
Iteration  16: 2247.280 ns/op
Iteration  17: 2256.060 ns/op
Iteration  18: 2259.077 ns/op
Iteration  19: 2261.330 ns/op
Iteration  20: 2248.312 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_encodeBase16":
  2247.636 ±(99.9%) 5.931 ns/op [Average]
  (min, avg, max) = (2219.115, 2247.636, 2261.330), stdev = 10.542
  CI (99.9%): [2241.705, 2253.567] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_isNotSet

# Run progress: 94.28% complete, ETA 00:22:13
# Fork: 1 of 2
# Warmup Iteration   1: 846.714 ns/op
# Warmup Iteration   2: 474.531 ns/op
# Warmup Iteration   3: 440.274 ns/op
# Warmup Iteration   4: 439.763 ns/op
# Warmup Iteration   5: 437.436 ns/op
# Warmup Iteration   6: 435.995 ns/op
# Warmup Iteration   7: 438.795 ns/op
# Warmup Iteration   8: 437.267 ns/op
# Warmup Iteration   9: 439.406 ns/op
# Warmup Iteration  10: 440.415 ns/op
Iteration   1: 440.604 ns/op
Iteration   2: 440.165 ns/op
Iteration   3: 437.706 ns/op
Iteration   4: 439.119 ns/op
Iteration   5: 437.576 ns/op
Iteration   6: 437.592 ns/op
Iteration   7: 438.981 ns/op
Iteration   8: 438.504 ns/op
Iteration   9: 437.227 ns/op
Iteration  10: 438.433 ns/op
Iteration  11: 437.853 ns/op
Iteration  12: 437.901 ns/op
Iteration  13: 439.607 ns/op
Iteration  14: 437.024 ns/op
Iteration  15: 437.499 ns/op
Iteration  16: 437.859 ns/op
Iteration  17: 437.730 ns/op
Iteration  18: 437.052 ns/op
Iteration  19: 438.785 ns/op
Iteration  20: 438.074 ns/op

# Run progress: 94.35% complete, ETA 00:21:57
# Fork: 2 of 2
# Warmup Iteration   1: 892.123 ns/op
# Warmup Iteration   2: 471.740 ns/op
# Warmup Iteration   3: 448.515 ns/op
# Warmup Iteration   4: 445.879 ns/op
# Warmup Iteration   5: 445.351 ns/op
# Warmup Iteration   6: 444.502 ns/op
# Warmup Iteration   7: 445.805 ns/op
# Warmup Iteration   8: 446.064 ns/op
# Warmup Iteration   9: 445.079 ns/op
# Warmup Iteration  10: 444.836 ns/op
Iteration   1: 447.561 ns/op
Iteration   2: 447.914 ns/op
Iteration   3: 448.485 ns/op
Iteration   4: 448.109 ns/op
Iteration   5: 449.399 ns/op
Iteration   6: 446.349 ns/op
Iteration   7: 445.365 ns/op
Iteration   8: 446.777 ns/op
Iteration   9: 444.294 ns/op
Iteration  10: 447.252 ns/op
Iteration  11: 448.189 ns/op
Iteration  12: 447.221 ns/op
Iteration  13: 448.793 ns/op
Iteration  14: 445.641 ns/op
Iteration  15: 446.512 ns/op
Iteration  16: 446.399 ns/op
Iteration  17: 444.162 ns/op
Iteration  18: 446.682 ns/op
Iteration  19: 450.600 ns/op
Iteration  20: 446.254 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_isNotSet":
  442.681 ±(99.9%) 2.625 ns/op [Average]
  (min, avg, max) = (437.024, 442.681, 450.600), stdev = 4.666
  CI (99.9%): [440.056, 445.306] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_isNumeric

# Run progress: 94.43% complete, ETA 00:21:40
# Fork: 1 of 2
# Warmup Iteration   1: 840.908 ns/op
# Warmup Iteration   2: 442.845 ns/op
# Warmup Iteration   3: 419.041 ns/op
# Warmup Iteration   4: 421.130 ns/op
# Warmup Iteration   5: 422.589 ns/op
# Warmup Iteration   6: 418.952 ns/op
# Warmup Iteration   7: 420.492 ns/op
# Warmup Iteration   8: 420.697 ns/op
# Warmup Iteration   9: 419.946 ns/op
# Warmup Iteration  10: 420.007 ns/op
Iteration   1: 421.140 ns/op
Iteration   2: 420.389 ns/op
Iteration   3: 419.561 ns/op
Iteration   4: 418.038 ns/op
Iteration   5: 421.957 ns/op
Iteration   6: 416.838 ns/op
Iteration   7: 421.574 ns/op
Iteration   8: 418.886 ns/op
Iteration   9: 421.558 ns/op
Iteration  10: 418.848 ns/op
Iteration  11: 421.275 ns/op
Iteration  12: 419.249 ns/op
Iteration  13: 421.001 ns/op
Iteration  14: 419.719 ns/op
Iteration  15: 418.882 ns/op
Iteration  16: 419.435 ns/op
Iteration  17: 419.847 ns/op
Iteration  18: 421.645 ns/op
Iteration  19: 419.200 ns/op
Iteration  20: 420.762 ns/op

# Run progress: 94.50% complete, ETA 00:21:23
# Fork: 2 of 2
# Warmup Iteration   1: 899.536 ns/op
# Warmup Iteration   2: 460.475 ns/op
# Warmup Iteration   3: 424.891 ns/op
# Warmup Iteration   4: 425.207 ns/op
# Warmup Iteration   5: 424.524 ns/op
# Warmup Iteration   6: 425.103 ns/op
# Warmup Iteration   7: 426.823 ns/op
# Warmup Iteration   8: 425.229 ns/op
# Warmup Iteration   9: 424.795 ns/op
# Warmup Iteration  10: 424.769 ns/op
Iteration   1: 425.483 ns/op
Iteration   2: 426.338 ns/op
Iteration   3: 424.699 ns/op
Iteration   4: 423.167 ns/op
Iteration   5: 422.690 ns/op
Iteration   6: 424.308 ns/op
Iteration   7: 425.867 ns/op
Iteration   8: 424.091 ns/op
Iteration   9: 425.895 ns/op
Iteration  10: 424.934 ns/op
Iteration  11: 425.958 ns/op
Iteration  12: 424.445 ns/op
Iteration  13: 422.626 ns/op
Iteration  14: 424.424 ns/op
Iteration  15: 424.995 ns/op
Iteration  16: 427.151 ns/op
Iteration  17: 423.971 ns/op
Iteration  18: 427.074 ns/op
Iteration  19: 424.614 ns/op
Iteration  20: 425.083 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_isNumeric":
  422.440 ±(99.9%) 1.577 ns/op [Average]
  (min, avg, max) = (416.838, 422.440, 427.151), stdev = 2.803
  CI (99.9%): [420.863, 424.018] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_removeValueFromCsv

# Run progress: 94.58% complete, ETA 00:21:06
# Fork: 1 of 2
# Warmup Iteration   1: 19591.111 ns/op
# Warmup Iteration   2: 15461.686 ns/op
# Warmup Iteration   3: 4105.983 ns/op
# Warmup Iteration   4: 3294.700 ns/op
# Warmup Iteration   5: 3283.310 ns/op
# Warmup Iteration   6: 3291.898 ns/op
# Warmup Iteration   7: 3280.304 ns/op
# Warmup Iteration   8: 3303.525 ns/op
# Warmup Iteration   9: 3292.294 ns/op
# Warmup Iteration  10: 3293.394 ns/op
Iteration   1: 3278.734 ns/op
Iteration   2: 3289.000 ns/op
Iteration   3: 3293.447 ns/op
Iteration   4: 3297.338 ns/op
Iteration   5: 3292.082 ns/op
Iteration   6: 3294.272 ns/op
Iteration   7: 3307.262 ns/op
Iteration   8: 3300.196 ns/op
Iteration   9: 3286.785 ns/op
Iteration  10: 3310.519 ns/op
Iteration  11: 3292.976 ns/op
Iteration  12: 3288.993 ns/op
Iteration  13: 3293.744 ns/op
Iteration  14: 3284.221 ns/op
Iteration  15: 3292.635 ns/op
Iteration  16: 3275.760 ns/op
Iteration  17: 3281.063 ns/op
Iteration  18: 3289.637 ns/op
Iteration  19: 3281.658 ns/op
Iteration  20: 3302.896 ns/op

# Run progress: 94.65% complete, ETA 00:20:49
# Fork: 2 of 2
# Warmup Iteration   1: 24812.268 ns/op
# Warmup Iteration   2: 13407.861 ns/op
# Warmup Iteration   3: 3748.893 ns/op
# Warmup Iteration   4: 3326.408 ns/op
# Warmup Iteration   5: 3326.456 ns/op
# Warmup Iteration   6: 3316.786 ns/op
# Warmup Iteration   7: 3311.411 ns/op
# Warmup Iteration   8: 3314.945 ns/op
# Warmup Iteration   9: 3322.376 ns/op
# Warmup Iteration  10: 3329.148 ns/op
Iteration   1: 3331.668 ns/op
Iteration   2: 3322.221 ns/op
Iteration   3: 3317.309 ns/op
Iteration   4: 3332.871 ns/op
Iteration   5: 3311.942 ns/op
Iteration   6: 3327.358 ns/op
Iteration   7: 3333.919 ns/op
Iteration   8: 3336.063 ns/op
Iteration   9: 3316.431 ns/op
Iteration  10: 3338.042 ns/op
Iteration  11: 3318.771 ns/op
Iteration  12: 3321.490 ns/op
Iteration  13: 3331.665 ns/op
Iteration  14: 3322.803 ns/op
Iteration  15: 3322.636 ns/op
Iteration  16: 3315.192 ns/op
Iteration  17: 3335.613 ns/op
Iteration  18: 3321.683 ns/op
Iteration  19: 3329.352 ns/op
Iteration  20: 3337.783 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_removeValueFromCsv":
  3308.951 ±(99.9%) 10.962 ns/op [Average]
  (min, avg, max) = (3275.760, 3308.951, 3338.042), stdev = 19.485
  CI (99.9%): [3297.989, 3319.913] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldConstructUserAgentNameWhenImplementationTitleNotSet

# Run progress: 94.73% complete, ETA 00:20:32
# Fork: 1 of 2
# Warmup Iteration   1: 2118.399 ns/op
# Warmup Iteration   2: 644.576 ns/op
# Warmup Iteration   3: 576.515 ns/op
# Warmup Iteration   4: 574.537 ns/op
# Warmup Iteration   5: 574.338 ns/op
# Warmup Iteration   6: 578.093 ns/op
# Warmup Iteration   7: 576.290 ns/op
# Warmup Iteration   8: 572.507 ns/op
# Warmup Iteration   9: 572.706 ns/op
# Warmup Iteration  10: 571.733 ns/op
Iteration   1: 573.139 ns/op
Iteration   2: 572.475 ns/op
Iteration   3: 572.706 ns/op
Iteration   4: 576.336 ns/op
Iteration   5: 570.787 ns/op
Iteration   6: 572.695 ns/op
Iteration   7: 573.053 ns/op
Iteration   8: 570.124 ns/op
Iteration   9: 573.820 ns/op
Iteration  10: 570.494 ns/op
Iteration  11: 574.269 ns/op
Iteration  12: 574.888 ns/op
Iteration  13: 570.242 ns/op
Iteration  14: 572.027 ns/op
Iteration  15: 572.297 ns/op
Iteration  16: 572.896 ns/op
Iteration  17: 572.108 ns/op
Iteration  18: 570.617 ns/op
Iteration  19: 575.332 ns/op
Iteration  20: 572.903 ns/op

# Run progress: 94.80% complete, ETA 00:20:15
# Fork: 2 of 2
# Warmup Iteration   1: 1970.500 ns/op
# Warmup Iteration   2: 638.094 ns/op
# Warmup Iteration   3: 569.783 ns/op
# Warmup Iteration   4: 569.026 ns/op
# Warmup Iteration   5: 565.297 ns/op
# Warmup Iteration   6: 567.436 ns/op
# Warmup Iteration   7: 569.517 ns/op
# Warmup Iteration   8: 568.445 ns/op
# Warmup Iteration   9: 568.342 ns/op
# Warmup Iteration  10: 568.693 ns/op
Iteration   1: 567.542 ns/op
Iteration   2: 568.562 ns/op
Iteration   3: 569.706 ns/op
Iteration   4: 567.649 ns/op
Iteration   5: 566.809 ns/op
Iteration   6: 572.137 ns/op
Iteration   7: 569.783 ns/op
Iteration   8: 569.471 ns/op
Iteration   9: 573.508 ns/op
Iteration  10: 572.041 ns/op
Iteration  11: 569.432 ns/op
Iteration  12: 569.325 ns/op
Iteration  13: 572.604 ns/op
Iteration  14: 573.567 ns/op
Iteration  15: 569.676 ns/op
Iteration  16: 573.207 ns/op
Iteration  17: 568.203 ns/op
Iteration  18: 568.690 ns/op
Iteration  19: 575.324 ns/op
Iteration  20: 572.383 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldConstructUserAgentNameWhenImplementationTitleNotSet":
  571.571 ±(99.9%) 1.316 ns/op [Average]
  (min, avg, max) = (566.809, 571.571, 576.336), stdev = 2.339
  CI (99.9%): [570.255, 572.887] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldConvertObjectToString_WhenObjectIsNotNull

# Run progress: 94.88% complete, ETA 00:19:58
# Fork: 1 of 2
# Warmup Iteration   1: 798.430 ns/op
# Warmup Iteration   2: 412.807 ns/op
# Warmup Iteration   3: 376.842 ns/op
# Warmup Iteration   4: 378.641 ns/op
# Warmup Iteration   5: 376.970 ns/op
# Warmup Iteration   6: 376.018 ns/op
# Warmup Iteration   7: 376.428 ns/op
# Warmup Iteration   8: 376.106 ns/op
# Warmup Iteration   9: 377.599 ns/op
# Warmup Iteration  10: 375.904 ns/op
Iteration   1: 376.139 ns/op
Iteration   2: 375.843 ns/op
Iteration   3: 376.695 ns/op
Iteration   4: 375.078 ns/op
Iteration   5: 376.466 ns/op
Iteration   6: 374.965 ns/op
Iteration   7: 374.258 ns/op
Iteration   8: 376.652 ns/op
Iteration   9: 376.612 ns/op
Iteration  10: 377.692 ns/op
Iteration  11: 376.765 ns/op
Iteration  12: 374.493 ns/op
Iteration  13: 374.173 ns/op
Iteration  14: 375.948 ns/op
Iteration  15: 375.012 ns/op
Iteration  16: 374.135 ns/op
Iteration  17: 375.926 ns/op
Iteration  18: 375.395 ns/op
Iteration  19: 375.988 ns/op
Iteration  20: 376.270 ns/op

# Run progress: 94.95% complete, ETA 00:19:41
# Fork: 2 of 2
# Warmup Iteration   1: 783.609 ns/op
# Warmup Iteration   2: 399.274 ns/op
# Warmup Iteration   3: 374.294 ns/op
# Warmup Iteration   4: 372.707 ns/op
# Warmup Iteration   5: 374.582 ns/op
# Warmup Iteration   6: 373.169 ns/op
# Warmup Iteration   7: 374.018 ns/op
# Warmup Iteration   8: 375.124 ns/op
# Warmup Iteration   9: 374.647 ns/op
# Warmup Iteration  10: 374.306 ns/op
Iteration   1: 374.516 ns/op
Iteration   2: 374.727 ns/op
Iteration   3: 374.242 ns/op
Iteration   4: 373.510 ns/op
Iteration   5: 375.625 ns/op
Iteration   6: 373.756 ns/op
Iteration   7: 374.476 ns/op
Iteration   8: 373.364 ns/op
Iteration   9: 376.419 ns/op
Iteration  10: 374.142 ns/op
Iteration  11: 374.634 ns/op
Iteration  12: 374.654 ns/op
Iteration  13: 374.068 ns/op
Iteration  14: 374.855 ns/op
Iteration  15: 373.961 ns/op
Iteration  16: 375.193 ns/op
Iteration  17: 373.771 ns/op
Iteration  18: 373.373 ns/op
Iteration  19: 374.643 ns/op
Iteration  20: 375.236 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldConvertObjectToString_WhenObjectIsNotNull":
  375.092 ±(99.9%) 0.614 ns/op [Average]
  (min, avg, max) = (373.364, 375.092, 377.692), stdev = 1.092
  CI (99.9%): [374.478, 375.706] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldConvertObjectToString_WhenObjectIsNull

# Run progress: 95.03% complete, ETA 00:19:24
# Fork: 1 of 2
# Warmup Iteration   1: 704.745 ns/op
# Warmup Iteration   2: 390.746 ns/op
# Warmup Iteration   3: 369.310 ns/op
# Warmup Iteration   4: 368.852 ns/op
# Warmup Iteration   5: 366.757 ns/op
# Warmup Iteration   6: 367.379 ns/op
# Warmup Iteration   7: 367.462 ns/op
# Warmup Iteration   8: 368.388 ns/op
# Warmup Iteration   9: 368.719 ns/op
# Warmup Iteration  10: 367.455 ns/op
Iteration   1: 368.558 ns/op
Iteration   2: 368.421 ns/op
Iteration   3: 370.068 ns/op
Iteration   4: 367.558 ns/op
Iteration   5: 368.362 ns/op
Iteration   6: 368.692 ns/op
Iteration   7: 368.240 ns/op
Iteration   8: 369.157 ns/op
Iteration   9: 366.018 ns/op
Iteration  10: 366.997 ns/op
Iteration  11: 367.515 ns/op
Iteration  12: 367.767 ns/op
Iteration  13: 369.348 ns/op
Iteration  14: 368.648 ns/op
Iteration  15: 366.876 ns/op
Iteration  16: 367.907 ns/op
Iteration  17: 368.074 ns/op
Iteration  18: 367.170 ns/op
Iteration  19: 368.262 ns/op
Iteration  20: 365.628 ns/op

# Run progress: 95.11% complete, ETA 00:19:07
# Fork: 2 of 2
# Warmup Iteration   1: 734.623 ns/op
# Warmup Iteration   2: 383.085 ns/op
# Warmup Iteration   3: 366.015 ns/op
# Warmup Iteration   4: 365.392 ns/op
# Warmup Iteration   5: 365.454 ns/op
# Warmup Iteration   6: 364.412 ns/op
# Warmup Iteration   7: 365.234 ns/op
# Warmup Iteration   8: 364.274 ns/op
# Warmup Iteration   9: 364.850 ns/op
# Warmup Iteration  10: 367.254 ns/op
Iteration   1: 366.594 ns/op
Iteration   2: 366.116 ns/op
Iteration   3: 363.062 ns/op
Iteration   4: 366.399 ns/op
Iteration   5: 365.430 ns/op
Iteration   6: 363.973 ns/op
Iteration   7: 364.221 ns/op
Iteration   8: 365.535 ns/op
Iteration   9: 365.304 ns/op
Iteration  10: 364.307 ns/op
Iteration  11: 365.692 ns/op
Iteration  12: 364.844 ns/op
Iteration  13: 364.990 ns/op
Iteration  14: 364.308 ns/op
Iteration  15: 365.423 ns/op
Iteration  16: 367.254 ns/op
Iteration  17: 364.651 ns/op
Iteration  18: 366.334 ns/op
Iteration  19: 364.567 ns/op
Iteration  20: 364.326 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldConvertObjectToString_WhenObjectIsNull":
  366.565 ±(99.9%) 0.990 ns/op [Average]
  (min, avg, max) = (363.062, 366.565, 370.068), stdev = 1.759
  CI (99.9%): [365.575, 367.555] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldConvertObjectToString_WhenObjectIsStringNull

# Run progress: 95.18% complete, ETA 00:18:50
# Fork: 1 of 2
# Warmup Iteration   1: 723.415 ns/op
# Warmup Iteration   2: 399.865 ns/op
# Warmup Iteration   3: 373.810 ns/op
# Warmup Iteration   4: 373.927 ns/op
# Warmup Iteration   5: 373.402 ns/op
# Warmup Iteration   6: 376.235 ns/op
# Warmup Iteration   7: 371.467 ns/op
# Warmup Iteration   8: 373.657 ns/op
# Warmup Iteration   9: 371.888 ns/op
# Warmup Iteration  10: 374.082 ns/op
Iteration   1: 372.329 ns/op
Iteration   2: 371.138 ns/op
Iteration   3: 375.058 ns/op
Iteration   4: 370.907 ns/op
Iteration   5: 372.781 ns/op
Iteration   6: 370.691 ns/op
Iteration   7: 370.432 ns/op
Iteration   8: 374.986 ns/op
Iteration   9: 370.569 ns/op
Iteration  10: 373.692 ns/op
Iteration  11: 372.307 ns/op
Iteration  12: 373.192 ns/op
Iteration  13: 374.686 ns/op
Iteration  14: 372.525 ns/op
Iteration  15: 372.320 ns/op
Iteration  16: 372.176 ns/op
Iteration  17: 371.774 ns/op
Iteration  18: 370.736 ns/op
Iteration  19: 372.687 ns/op
Iteration  20: 370.177 ns/op

# Run progress: 95.26% complete, ETA 00:18:33
# Fork: 2 of 2
# Warmup Iteration   1: 752.454 ns/op
# Warmup Iteration   2: 394.744 ns/op
# Warmup Iteration   3: 378.192 ns/op
# Warmup Iteration   4: 377.302 ns/op
# Warmup Iteration   5: 375.561 ns/op
# Warmup Iteration   6: 375.788 ns/op
# Warmup Iteration   7: 376.658 ns/op
# Warmup Iteration   8: 376.570 ns/op
# Warmup Iteration   9: 375.289 ns/op
# Warmup Iteration  10: 377.344 ns/op
Iteration   1: 377.603 ns/op
Iteration   2: 377.586 ns/op
Iteration   3: 375.793 ns/op
Iteration   4: 376.098 ns/op
Iteration   5: 377.225 ns/op
Iteration   6: 378.410 ns/op
Iteration   7: 375.280 ns/op
Iteration   8: 375.815 ns/op
Iteration   9: 375.907 ns/op
Iteration  10: 375.523 ns/op
Iteration  11: 375.051 ns/op
Iteration  12: 375.589 ns/op
Iteration  13: 374.858 ns/op
Iteration  14: 375.474 ns/op
Iteration  15: 376.072 ns/op
Iteration  16: 375.002 ns/op
Iteration  17: 375.976 ns/op
Iteration  18: 375.759 ns/op
Iteration  19: 374.316 ns/op
Iteration  20: 376.587 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldConvertObjectToString_WhenObjectIsStringNull":
  374.127 ±(99.9%) 1.284 ns/op [Average]
  (min, avg, max) = (370.177, 374.127, 378.410), stdev = 2.282
  CI (99.9%): [372.843, 375.411] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldCorrectlyEncodeSingleQuotesInURL

# Run progress: 95.33% complete, ETA 00:18:16
# Fork: 1 of 2
# Warmup Iteration   1: 3809.193 ns/op
# Warmup Iteration   2: 1729.031 ns/op
# Warmup Iteration   3: 1621.589 ns/op
# Warmup Iteration   4: 1607.068 ns/op
# Warmup Iteration   5: 1610.641 ns/op
# Warmup Iteration   6: 1614.823 ns/op
# Warmup Iteration   7: 1612.736 ns/op
# Warmup Iteration   8: 1617.273 ns/op
# Warmup Iteration   9: 1613.805 ns/op
# Warmup Iteration  10: 1607.491 ns/op
Iteration   1: 1615.379 ns/op
Iteration   2: 1616.261 ns/op
Iteration   3: 1613.154 ns/op
Iteration   4: 1605.396 ns/op
Iteration   5: 1604.925 ns/op
Iteration   6: 1623.887 ns/op
Iteration   7: 1620.020 ns/op
Iteration   8: 1615.005 ns/op
Iteration   9: 1616.858 ns/op
Iteration  10: 1612.296 ns/op
Iteration  11: 1617.915 ns/op
Iteration  12: 1607.194 ns/op
Iteration  13: 1610.774 ns/op
Iteration  14: 1608.129 ns/op
Iteration  15: 1625.940 ns/op
Iteration  16: 1617.492 ns/op
Iteration  17: 1614.163 ns/op
Iteration  18: 1610.942 ns/op
Iteration  19: 1613.433 ns/op
Iteration  20: 1609.938 ns/op

# Run progress: 95.41% complete, ETA 00:17:59
# Fork: 2 of 2
# Warmup Iteration   1: 3946.323 ns/op
# Warmup Iteration   2: 1589.962 ns/op
# Warmup Iteration   3: 1477.456 ns/op
# Warmup Iteration   4: 1477.761 ns/op
# Warmup Iteration   5: 1474.972 ns/op
# Warmup Iteration   6: 1485.172 ns/op
# Warmup Iteration   7: 1475.337 ns/op
# Warmup Iteration   8: 1482.207 ns/op
# Warmup Iteration   9: 1479.188 ns/op
# Warmup Iteration  10: 1483.037 ns/op
Iteration   1: 1474.824 ns/op
Iteration   2: 1477.100 ns/op
Iteration   3: 1471.793 ns/op
Iteration   4: 1475.439 ns/op
Iteration   5: 1479.446 ns/op
Iteration   6: 1477.314 ns/op
Iteration   7: 1477.189 ns/op
Iteration   8: 1477.119 ns/op
Iteration   9: 1475.316 ns/op
Iteration  10: 1471.614 ns/op
Iteration  11: 1475.940 ns/op
Iteration  12: 1473.593 ns/op
Iteration  13: 1478.072 ns/op
Iteration  14: 1483.424 ns/op
Iteration  15: 1475.163 ns/op
Iteration  16: 1478.232 ns/op
Iteration  17: 1478.579 ns/op
Iteration  18: 1482.964 ns/op
Iteration  19: 1478.521 ns/op
Iteration  20: 1483.526 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldCorrectlyEncodeSingleQuotesInURL":
  1545.607 ±(99.9%) 39.026 ns/op [Average]
  (min, avg, max) = (1471.614, 1545.607, 1625.940), stdev = 69.369
  CI (99.9%): [1506.580, 1584.633] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldDetermineObjectStringValue_WhenObjectIsFailedMessage

# Run progress: 95.48% complete, ETA 00:17:42
# Fork: 1 of 2
# Warmup Iteration   1: 2131.213 ns/op
# Warmup Iteration   2: 903.016 ns/op
# Warmup Iteration   3: 859.282 ns/op
# Warmup Iteration   4: 857.415 ns/op
# Warmup Iteration   5: 856.222 ns/op
# Warmup Iteration   6: 856.656 ns/op
# Warmup Iteration   7: 856.856 ns/op
# Warmup Iteration   8: 859.556 ns/op
# Warmup Iteration   9: 855.140 ns/op
# Warmup Iteration  10: 852.417 ns/op
Iteration   1: 854.664 ns/op
Iteration   2: 854.492 ns/op
Iteration   3: 852.902 ns/op
Iteration   4: 857.972 ns/op
Iteration   5: 853.460 ns/op
Iteration   6: 856.011 ns/op
Iteration   7: 854.072 ns/op
Iteration   8: 852.672 ns/op
Iteration   9: 855.250 ns/op
Iteration  10: 854.178 ns/op
Iteration  11: 857.150 ns/op
Iteration  12: 852.643 ns/op
Iteration  13: 857.250 ns/op
Iteration  14: 853.148 ns/op
Iteration  15: 852.313 ns/op
Iteration  16: 851.674 ns/op
Iteration  17: 852.498 ns/op
Iteration  18: 853.968 ns/op
Iteration  19: 851.387 ns/op
Iteration  20: 850.586 ns/op

# Run progress: 95.56% complete, ETA 00:17:25
# Fork: 2 of 2
# Warmup Iteration   1: 2015.911 ns/op
# Warmup Iteration   2: 888.931 ns/op
# Warmup Iteration   3: 833.725 ns/op
# Warmup Iteration   4: 832.981 ns/op
# Warmup Iteration   5: 834.489 ns/op
# Warmup Iteration   6: 838.498 ns/op
# Warmup Iteration   7: 834.150 ns/op
# Warmup Iteration   8: 829.278 ns/op
# Warmup Iteration   9: 830.519 ns/op
# Warmup Iteration  10: 835.413 ns/op
Iteration   1: 828.211 ns/op
Iteration   2: 836.304 ns/op
Iteration   3: 830.760 ns/op
Iteration   4: 832.404 ns/op
Iteration   5: 837.139 ns/op
Iteration   6: 829.744 ns/op
Iteration   7: 828.998 ns/op
Iteration   8: 828.280 ns/op
Iteration   9: 832.497 ns/op
Iteration  10: 832.007 ns/op
Iteration  11: 830.925 ns/op
Iteration  12: 832.658 ns/op
Iteration  13: 840.676 ns/op
Iteration  14: 835.823 ns/op
Iteration  15: 832.771 ns/op
Iteration  16: 837.670 ns/op
Iteration  17: 836.162 ns/op
Iteration  18: 832.823 ns/op
Iteration  19: 833.397 ns/op
Iteration  20: 834.301 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldDetermineObjectStringValue_WhenObjectIsFailedMessage":
  843.546 ±(99.9%) 6.102 ns/op [Average]
  (min, avg, max) = (828.211, 843.546, 857.972), stdev = 10.847
  CI (99.9%): [837.444, 849.648] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldEscapeCurlyBraces

# Run progress: 95.63% complete, ETA 00:17:08
# Fork: 1 of 2
# Warmup Iteration   1: 6002.247 ns/op
# Warmup Iteration   2: 2016.145 ns/op
# Warmup Iteration   3: 1828.020 ns/op
# Warmup Iteration   4: 1821.881 ns/op
# Warmup Iteration   5: 1828.176 ns/op
# Warmup Iteration   6: 1822.192 ns/op
# Warmup Iteration   7: 1807.368 ns/op
# Warmup Iteration   8: 1815.304 ns/op
# Warmup Iteration   9: 1810.711 ns/op
# Warmup Iteration  10: 1813.046 ns/op
Iteration   1: 1821.971 ns/op
Iteration   2: 1817.273 ns/op
Iteration   3: 1812.204 ns/op
Iteration   4: 1824.023 ns/op
Iteration   5: 1819.893 ns/op
Iteration   6: 1817.237 ns/op
Iteration   7: 1811.052 ns/op
Iteration   8: 1808.462 ns/op
Iteration   9: 1816.074 ns/op
Iteration  10: 1814.878 ns/op
Iteration  11: 1807.425 ns/op
Iteration  12: 1816.751 ns/op
Iteration  13: 1818.524 ns/op
Iteration  14: 1813.473 ns/op
Iteration  15: 1815.353 ns/op
Iteration  16: 1813.057 ns/op
Iteration  17: 1811.841 ns/op
Iteration  18: 1814.912 ns/op
Iteration  19: 1815.464 ns/op
Iteration  20: 1822.446 ns/op

# Run progress: 95.71% complete, ETA 00:16:51
# Fork: 2 of 2
# Warmup Iteration   1: 6663.709 ns/op
# Warmup Iteration   2: 1956.216 ns/op
# Warmup Iteration   3: 1757.218 ns/op
# Warmup Iteration   4: 1765.528 ns/op
# Warmup Iteration   5: 1758.118 ns/op
# Warmup Iteration   6: 1754.303 ns/op
# Warmup Iteration   7: 1749.453 ns/op
# Warmup Iteration   8: 1749.077 ns/op
# Warmup Iteration   9: 1756.700 ns/op
# Warmup Iteration  10: 1747.909 ns/op
Iteration   1: 1753.218 ns/op
Iteration   2: 1751.877 ns/op
Iteration   3: 1755.697 ns/op
Iteration   4: 1754.905 ns/op
Iteration   5: 1757.699 ns/op
Iteration   6: 1747.157 ns/op
Iteration   7: 1744.241 ns/op
Iteration   8: 1748.810 ns/op
Iteration   9: 1753.592 ns/op
Iteration  10: 1749.959 ns/op
Iteration  11: 1759.927 ns/op
Iteration  12: 1755.547 ns/op
Iteration  13: 1756.806 ns/op
Iteration  14: 1752.101 ns/op
Iteration  15: 1758.863 ns/op
Iteration  16: 1754.877 ns/op
Iteration  17: 1758.833 ns/op
Iteration  18: 1759.806 ns/op
Iteration  19: 1745.272 ns/op
Iteration  20: 1757.651 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldEscapeCurlyBraces":
  1784.729 ±(99.9%) 17.781 ns/op [Average]
  (min, avg, max) = (1744.241, 1784.729, 1824.023), stdev = 31.605
  CI (99.9%): [1766.948, 1802.509] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldFilterOutSpacesBetweenElementsWithQuotes

# Run progress: 95.78% complete, ETA 00:16:34
# Fork: 1 of 2
# Warmup Iteration   1: 6043.174 ns/op
# Warmup Iteration   2: 1874.491 ns/op
# Warmup Iteration   3: 1671.482 ns/op
# Warmup Iteration   4: 1669.453 ns/op
# Warmup Iteration   5: 1667.793 ns/op
# Warmup Iteration   6: 1661.774 ns/op
# Warmup Iteration   7: 1664.558 ns/op
# Warmup Iteration   8: 1660.546 ns/op
# Warmup Iteration   9: 1661.101 ns/op
# Warmup Iteration  10: 1664.225 ns/op
Iteration   1: 1666.299 ns/op
Iteration   2: 1658.697 ns/op
Iteration   3: 1666.268 ns/op
Iteration   4: 1665.648 ns/op
Iteration   5: 1663.874 ns/op
Iteration   6: 1663.818 ns/op
Iteration   7: 1658.219 ns/op
Iteration   8: 1652.729 ns/op
Iteration   9: 1669.673 ns/op
Iteration  10: 1657.813 ns/op
Iteration  11: 1664.104 ns/op
Iteration  12: 1659.118 ns/op
Iteration  13: 1654.638 ns/op
Iteration  14: 1664.026 ns/op
Iteration  15: 1658.100 ns/op
Iteration  16: 1658.621 ns/op
Iteration  17: 1661.409 ns/op
Iteration  18: 1659.914 ns/op
Iteration  19: 1661.517 ns/op
Iteration  20: 1656.913 ns/op

# Run progress: 95.86% complete, ETA 00:16:16
# Fork: 2 of 2
# Warmup Iteration   1: 6578.619 ns/op
# Warmup Iteration   2: 1829.143 ns/op
# Warmup Iteration   3: 1660.394 ns/op
# Warmup Iteration   4: 1659.018 ns/op
# Warmup Iteration   5: 1660.282 ns/op
# Warmup Iteration   6: 1661.635 ns/op
# Warmup Iteration   7: 1663.055 ns/op
# Warmup Iteration   8: 1657.618 ns/op
# Warmup Iteration   9: 1654.534 ns/op
# Warmup Iteration  10: 1665.789 ns/op
Iteration   1: 1658.256 ns/op
Iteration   2: 1653.610 ns/op
Iteration   3: 1650.053 ns/op
Iteration   4: 1657.484 ns/op
Iteration   5: 1652.144 ns/op
Iteration   6: 1656.592 ns/op
Iteration   7: 1662.395 ns/op
Iteration   8: 1655.050 ns/op
Iteration   9: 1653.134 ns/op
Iteration  10: 1652.126 ns/op
Iteration  11: 1660.195 ns/op
Iteration  12: 1662.487 ns/op
Iteration  13: 1657.302 ns/op
Iteration  14: 1663.838 ns/op
Iteration  15: 1658.187 ns/op
Iteration  16: 1651.763 ns/op
Iteration  17: 1659.757 ns/op
Iteration  18: 1655.271 ns/op
Iteration  19: 1660.609 ns/op
Iteration  20: 1658.259 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldFilterOutSpacesBetweenElementsWithQuotes":
  1658.998 ±(99.9%) 2.588 ns/op [Average]
  (min, avg, max) = (1650.053, 1658.998, 1669.673), stdev = 4.600
  CI (99.9%): [1656.410, 1661.586] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldFilterOutSpacesBetweenElementsWithoutQuotes

# Run progress: 95.93% complete, ETA 00:15:59
# Fork: 1 of 2
# Warmup Iteration   1: 4505.692 ns/op
# Warmup Iteration   2: 1312.052 ns/op
# Warmup Iteration   3: 1184.516 ns/op
# Warmup Iteration   4: 1184.530 ns/op
# Warmup Iteration   5: 1180.829 ns/op
# Warmup Iteration   6: 1183.795 ns/op
# Warmup Iteration   7: 1182.197 ns/op
# Warmup Iteration   8: 1182.490 ns/op
# Warmup Iteration   9: 1182.912 ns/op
# Warmup Iteration  10: 1183.609 ns/op
Iteration   1: 1182.175 ns/op
Iteration   2: 1184.578 ns/op
Iteration   3: 1178.866 ns/op
Iteration   4: 1183.078 ns/op
Iteration   5: 1184.756 ns/op
Iteration   6: 1187.589 ns/op
Iteration   7: 1182.095 ns/op
Iteration   8: 1181.976 ns/op
Iteration   9: 1175.065 ns/op
Iteration  10: 1176.414 ns/op
Iteration  11: 1187.597 ns/op
Iteration  12: 1183.819 ns/op
Iteration  13: 1179.687 ns/op
Iteration  14: 1186.251 ns/op
Iteration  15: 1182.295 ns/op
Iteration  16: 1177.572 ns/op
Iteration  17: 1180.418 ns/op
Iteration  18: 1191.431 ns/op
Iteration  19: 1186.184 ns/op
Iteration  20: 1185.194 ns/op

# Run progress: 96.01% complete, ETA 00:15:42
# Fork: 2 of 2
# Warmup Iteration   1: 3834.838 ns/op
# Warmup Iteration   2: 1313.640 ns/op
# Warmup Iteration   3: 1195.937 ns/op
# Warmup Iteration   4: 1197.883 ns/op
# Warmup Iteration   5: 1192.932 ns/op
# Warmup Iteration   6: 1195.237 ns/op
# Warmup Iteration   7: 1197.100 ns/op
# Warmup Iteration   8: 1192.863 ns/op
# Warmup Iteration   9: 1190.150 ns/op
# Warmup Iteration  10: 1191.213 ns/op
Iteration   1: 1202.738 ns/op
Iteration   2: 1197.284 ns/op
Iteration   3: 1196.394 ns/op
Iteration   4: 1189.322 ns/op
Iteration   5: 1195.438 ns/op
Iteration   6: 1196.261 ns/op
Iteration   7: 1193.433 ns/op
Iteration   8: 1193.691 ns/op
Iteration   9: 1191.949 ns/op
Iteration  10: 1189.533 ns/op
Iteration  11: 1193.926 ns/op
Iteration  12: 1189.307 ns/op
Iteration  13: 1195.893 ns/op
Iteration  14: 1199.987 ns/op
Iteration  15: 1196.018 ns/op
Iteration  16: 1197.028 ns/op
Iteration  17: 1197.910 ns/op
Iteration  18: 1196.130 ns/op
Iteration  19: 1196.946 ns/op
Iteration  20: 1193.930 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldFilterOutSpacesBetweenElementsWithoutQuotes":
  1189.004 ±(99.9%) 4.084 ns/op [Average]
  (min, avg, max) = (1175.065, 1189.004, 1202.738), stdev = 7.259
  CI (99.9%): [1184.920, 1193.088] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldJoinArrayString

# Run progress: 96.08% complete, ETA 00:15:25
# Fork: 1 of 2
# Warmup Iteration   1: 1406.614 ns/op
# Warmup Iteration   2: 634.272 ns/op
# Warmup Iteration   3: 583.970 ns/op
# Warmup Iteration   4: 582.882 ns/op
# Warmup Iteration   5: 582.137 ns/op
# Warmup Iteration   6: 581.229 ns/op
# Warmup Iteration   7: 578.536 ns/op
# Warmup Iteration   8: 581.034 ns/op
# Warmup Iteration   9: 580.881 ns/op
# Warmup Iteration  10: 582.384 ns/op
Iteration   1: 583.006 ns/op
Iteration   2: 587.057 ns/op
Iteration   3: 581.711 ns/op
Iteration   4: 583.177 ns/op
Iteration   5: 580.835 ns/op
Iteration   6: 578.966 ns/op
Iteration   7: 580.291 ns/op
Iteration   8: 579.695 ns/op
Iteration   9: 580.617 ns/op
Iteration  10: 579.949 ns/op
Iteration  11: 583.161 ns/op
Iteration  12: 581.376 ns/op
Iteration  13: 581.845 ns/op
Iteration  14: 582.402 ns/op
Iteration  15: 580.241 ns/op
Iteration  16: 581.355 ns/op
Iteration  17: 581.325 ns/op
Iteration  18: 581.424 ns/op
Iteration  19: 580.230 ns/op
Iteration  20: 582.216 ns/op

# Run progress: 96.16% complete, ETA 00:15:07
# Fork: 2 of 2
# Warmup Iteration   1: 1244.044 ns/op
# Warmup Iteration   2: 612.317 ns/op
# Warmup Iteration   3: 584.165 ns/op
# Warmup Iteration   4: 580.311 ns/op
# Warmup Iteration   5: 578.134 ns/op
# Warmup Iteration   6: 583.161 ns/op
# Warmup Iteration   7: 580.627 ns/op
# Warmup Iteration   8: 580.492 ns/op
# Warmup Iteration   9: 581.423 ns/op
# Warmup Iteration  10: 583.559 ns/op
Iteration   1: 584.865 ns/op
Iteration   2: 581.296 ns/op
Iteration   3: 580.179 ns/op
Iteration   4: 581.572 ns/op
Iteration   5: 582.787 ns/op
Iteration   6: 581.878 ns/op
Iteration   7: 580.914 ns/op
Iteration   8: 584.317 ns/op
Iteration   9: 583.011 ns/op
Iteration  10: 586.961 ns/op
Iteration  11: 581.955 ns/op
Iteration  12: 583.092 ns/op
Iteration  13: 584.437 ns/op
Iteration  14: 579.580 ns/op
Iteration  15: 582.168 ns/op
Iteration  16: 581.307 ns/op
Iteration  17: 582.727 ns/op
Iteration  18: 582.342 ns/op
Iteration  19: 582.319 ns/op
Iteration  20: 582.755 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldJoinArrayString":
  582.033 ±(99.9%) 0.996 ns/op [Average]
  (min, avg, max) = (578.966, 582.033, 587.057), stdev = 1.770
  CI (99.9%): [581.038, 583.029] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldRemoveEncodedSquareBracketsFromString

# Run progress: 96.23% complete, ETA 00:14:50
# Fork: 1 of 2
# Warmup Iteration   1: 6135.116 ns/op
# Warmup Iteration   2: 1901.883 ns/op
# Warmup Iteration   3: 1697.878 ns/op
# Warmup Iteration   4: 1689.155 ns/op
# Warmup Iteration   5: 1693.307 ns/op
# Warmup Iteration   6: 1684.235 ns/op
# Warmup Iteration   7: 1687.440 ns/op
# Warmup Iteration   8: 1684.707 ns/op
# Warmup Iteration   9: 1683.649 ns/op
# Warmup Iteration  10: 1690.414 ns/op
Iteration   1: 1696.064 ns/op
Iteration   2: 1695.865 ns/op
Iteration   3: 1691.086 ns/op
Iteration   4: 1694.257 ns/op
Iteration   5: 1687.127 ns/op
Iteration   6: 1683.385 ns/op
Iteration   7: 1677.816 ns/op
Iteration   8: 1679.827 ns/op
Iteration   9: 1679.866 ns/op
Iteration  10: 1685.145 ns/op
Iteration  11: 1692.862 ns/op
Iteration  12: 1679.197 ns/op
Iteration  13: 1685.163 ns/op
Iteration  14: 1677.124 ns/op
Iteration  15: 1679.902 ns/op
Iteration  16: 1680.881 ns/op
Iteration  17: 1674.888 ns/op
Iteration  18: 1682.030 ns/op
Iteration  19: 1682.376 ns/op
Iteration  20: 1682.220 ns/op

# Run progress: 96.31% complete, ETA 00:14:33
# Fork: 2 of 2
# Warmup Iteration   1: 5842.905 ns/op
# Warmup Iteration   2: 1847.885 ns/op
# Warmup Iteration   3: 1664.388 ns/op
# Warmup Iteration   4: 1665.118 ns/op
# Warmup Iteration   5: 1666.219 ns/op
# Warmup Iteration   6: 1662.255 ns/op
# Warmup Iteration   7: 1664.249 ns/op
# Warmup Iteration   8: 1659.696 ns/op
# Warmup Iteration   9: 1658.110 ns/op
# Warmup Iteration  10: 1661.052 ns/op
Iteration   1: 1659.029 ns/op
Iteration   2: 1662.760 ns/op
Iteration   3: 1659.482 ns/op
Iteration   4: 1658.512 ns/op
Iteration   5: 1660.467 ns/op
Iteration   6: 1657.155 ns/op
Iteration   7: 1654.702 ns/op
Iteration   8: 1654.280 ns/op
Iteration   9: 1660.375 ns/op
Iteration  10: 1662.092 ns/op
Iteration  11: 1663.387 ns/op
Iteration  12: 1661.837 ns/op
Iteration  13: 1656.293 ns/op
Iteration  14: 1661.415 ns/op
Iteration  15: 1666.269 ns/op
Iteration  16: 1656.662 ns/op
Iteration  17: 1665.022 ns/op
Iteration  18: 1657.348 ns/op
Iteration  19: 1655.825 ns/op
Iteration  20: 1659.117 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldRemoveEncodedSquareBracketsFromString":
  1671.978 ±(99.9%) 7.608 ns/op [Average]
  (min, avg, max) = (1654.280, 1671.978, 1696.064), stdev = 13.524
  CI (99.9%): [1664.369, 1679.586] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldRemoveSquareBracketsFromString

# Run progress: 96.39% complete, ETA 00:14:15
# Fork: 1 of 2
# Warmup Iteration   1: 6112.483 ns/op
# Warmup Iteration   2: 1614.512 ns/op
# Warmup Iteration   3: 1270.531 ns/op
# Warmup Iteration   4: 1271.071 ns/op
# Warmup Iteration   5: 1273.285 ns/op
# Warmup Iteration   6: 1274.357 ns/op
# Warmup Iteration   7: 1273.543 ns/op
# Warmup Iteration   8: 1275.568 ns/op
# Warmup Iteration   9: 1274.300 ns/op
# Warmup Iteration  10: 1274.428 ns/op
Iteration   1: 1275.468 ns/op
Iteration   2: 1282.457 ns/op
Iteration   3: 1272.493 ns/op
Iteration   4: 1270.702 ns/op
Iteration   5: 1264.477 ns/op
Iteration   6: 1276.248 ns/op
Iteration   7: 1273.725 ns/op
Iteration   8: 1277.272 ns/op
Iteration   9: 1272.796 ns/op
Iteration  10: 1270.424 ns/op
Iteration  11: 1275.529 ns/op
Iteration  12: 1276.901 ns/op
Iteration  13: 1276.706 ns/op
Iteration  14: 1270.059 ns/op
Iteration  15: 1271.052 ns/op
Iteration  16: 1265.257 ns/op
Iteration  17: 1270.931 ns/op
Iteration  18: 1270.758 ns/op
Iteration  19: 1268.202 ns/op
Iteration  20: 1272.958 ns/op

# Run progress: 96.46% complete, ETA 00:13:58
# Fork: 2 of 2
# Warmup Iteration   1: 5719.680 ns/op
# Warmup Iteration   2: 1630.701 ns/op
# Warmup Iteration   3: 1271.723 ns/op
# Warmup Iteration   4: 1268.328 ns/op
# Warmup Iteration   5: 1265.416 ns/op
# Warmup Iteration   6: 1268.305 ns/op
# Warmup Iteration   7: 1271.532 ns/op
# Warmup Iteration   8: 1273.793 ns/op
# Warmup Iteration   9: 1272.014 ns/op
# Warmup Iteration  10: 1272.631 ns/op
Iteration   1: 1269.545 ns/op
Iteration   2: 1274.418 ns/op
Iteration   3: 1271.751 ns/op
Iteration   4: 1266.629 ns/op
Iteration   5: 1275.897 ns/op
Iteration   6: 1271.205 ns/op
Iteration   7: 1266.191 ns/op
Iteration   8: 1270.795 ns/op
Iteration   9: 1279.706 ns/op
Iteration  10: 1266.119 ns/op
Iteration  11: 1275.789 ns/op
Iteration  12: 1274.189 ns/op
Iteration  13: 1273.055 ns/op
Iteration  14: 1273.664 ns/op
Iteration  15: 1266.583 ns/op
Iteration  16: 1271.648 ns/op
Iteration  17: 1269.933 ns/op
Iteration  18: 1271.069 ns/op
Iteration  19: 1271.982 ns/op
Iteration  20: 1266.326 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldRemoveSquareBracketsFromString":
  1272.023 ±(99.9%) 2.269 ns/op [Average]
  (min, avg, max) = (1264.477, 1272.023, 1282.457), stdev = 4.033
  CI (99.9%): [1269.754, 1274.291] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldRepeatString

# Run progress: 96.54% complete, ETA 00:13:41
# Fork: 1 of 2
# Warmup Iteration   1: 1922.912 ns/op
# Warmup Iteration   2: 842.278 ns/op
# Warmup Iteration   3: 766.258 ns/op
# Warmup Iteration   4: 769.285 ns/op
# Warmup Iteration   5: 770.443 ns/op
# Warmup Iteration   6: 769.011 ns/op
# Warmup Iteration   7: 768.721 ns/op
# Warmup Iteration   8: 772.354 ns/op
# Warmup Iteration   9: 771.156 ns/op
# Warmup Iteration  10: 769.068 ns/op
Iteration   1: 769.183 ns/op
Iteration   2: 772.276 ns/op
Iteration   3: 765.372 ns/op
Iteration   4: 765.798 ns/op
Iteration   5: 769.181 ns/op
Iteration   6: 769.580 ns/op
Iteration   7: 772.924 ns/op
Iteration   8: 768.766 ns/op
Iteration   9: 767.986 ns/op
Iteration  10: 765.793 ns/op
Iteration  11: 770.602 ns/op
Iteration  12: 762.789 ns/op
Iteration  13: 765.770 ns/op
Iteration  14: 767.965 ns/op
Iteration  15: 767.039 ns/op
Iteration  16: 765.589 ns/op
Iteration  17: 769.934 ns/op
Iteration  18: 766.278 ns/op
Iteration  19: 768.177 ns/op
Iteration  20: 768.929 ns/op

# Run progress: 96.61% complete, ETA 00:13:23
# Fork: 2 of 2
# Warmup Iteration   1: 1740.732 ns/op
# Warmup Iteration   2: 875.575 ns/op
# Warmup Iteration   3: 805.936 ns/op
# Warmup Iteration   4: 808.820 ns/op
# Warmup Iteration   5: 805.602 ns/op
# Warmup Iteration   6: 805.634 ns/op
# Warmup Iteration   7: 807.892 ns/op
# Warmup Iteration   8: 804.885 ns/op
# Warmup Iteration   9: 805.350 ns/op
# Warmup Iteration  10: 805.423 ns/op
Iteration   1: 802.436 ns/op
Iteration   2: 804.160 ns/op
Iteration   3: 805.570 ns/op
Iteration   4: 805.533 ns/op
Iteration   5: 804.524 ns/op
Iteration   6: 805.920 ns/op
Iteration   7: 806.403 ns/op
Iteration   8: 808.676 ns/op
Iteration   9: 807.925 ns/op
Iteration  10: 803.233 ns/op
Iteration  11: 808.975 ns/op
Iteration  12: 805.069 ns/op
Iteration  13: 810.109 ns/op
Iteration  14: 808.350 ns/op
Iteration  15: 806.290 ns/op
Iteration  16: 807.664 ns/op
Iteration  17: 803.896 ns/op
Iteration  18: 806.746 ns/op
Iteration  19: 807.017 ns/op
Iteration  20: 804.139 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldRepeatString":
  787.064 ±(99.9%) 10.938 ns/op [Average]
  (min, avg, max) = (762.789, 787.064, 810.109), stdev = 19.443
  CI (99.9%): [776.126, 798.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReplaceTokensInATemplateWhenAllTokensPresent

# Run progress: 96.69% complete, ETA 00:13:06
# Fork: 1 of 2
# Warmup Iteration   1: 16108.637 ns/op
# Warmup Iteration   2: 5648.666 ns/op
# Warmup Iteration   3: 5284.327 ns/op
# Warmup Iteration   4: 5285.626 ns/op
# Warmup Iteration   5: 5268.184 ns/op
# Warmup Iteration   6: 5263.047 ns/op
# Warmup Iteration   7: 5266.582 ns/op
# Warmup Iteration   8: 5229.336 ns/op
# Warmup Iteration   9: 5259.827 ns/op
# Warmup Iteration  10: 5249.244 ns/op
Iteration   1: 5247.838 ns/op
Iteration   2: 5243.759 ns/op
Iteration   3: 5243.584 ns/op
Iteration   4: 5238.245 ns/op
Iteration   5: 5267.603 ns/op
Iteration   6: 5243.265 ns/op
Iteration   7: 5238.817 ns/op
Iteration   8: 5241.967 ns/op
Iteration   9: 5250.959 ns/op
Iteration  10: 5256.826 ns/op
Iteration  11: 5272.564 ns/op
Iteration  12: 5253.401 ns/op
Iteration  13: 5259.355 ns/op
Iteration  14: 5252.892 ns/op
Iteration  15: 5244.917 ns/op
Iteration  16: 5251.248 ns/op
Iteration  17: 5249.382 ns/op
Iteration  18: 5237.126 ns/op
Iteration  19: 5229.611 ns/op
Iteration  20: 5255.317 ns/op

# Run progress: 96.76% complete, ETA 00:12:48
# Fork: 2 of 2
# Warmup Iteration   1: 15063.300 ns/op
# Warmup Iteration   2: 5556.060 ns/op
# Warmup Iteration   3: 5251.638 ns/op
# Warmup Iteration   4: 5250.227 ns/op
# Warmup Iteration   5: 5238.481 ns/op
# Warmup Iteration   6: 5231.941 ns/op
# Warmup Iteration   7: 5249.950 ns/op
# Warmup Iteration   8: 5268.540 ns/op
# Warmup Iteration   9: 5251.638 ns/op
# Warmup Iteration  10: 5206.100 ns/op
Iteration   1: 5241.687 ns/op
Iteration   2: 5227.970 ns/op
Iteration   3: 5234.589 ns/op
Iteration   4: 5248.718 ns/op
Iteration   5: 5239.679 ns/op
Iteration   6: 5226.777 ns/op
Iteration   7: 5257.403 ns/op
Iteration   8: 5250.117 ns/op
Iteration   9: 5248.925 ns/op
Iteration  10: 5225.585 ns/op
Iteration  11: 5224.649 ns/op
Iteration  12: 5217.027 ns/op
Iteration  13: 5231.820 ns/op
Iteration  14: 5210.690 ns/op
Iteration  15: 5224.620 ns/op
Iteration  16: 5231.445 ns/op
Iteration  17: 5248.146 ns/op
Iteration  18: 5219.649 ns/op
Iteration  19: 5232.815 ns/op
Iteration  20: 5239.695 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReplaceTokensInATemplateWhenAllTokensPresent":
  5241.517 ±(99.9%) 7.645 ns/op [Average]
  (min, avg, max) = (5210.690, 5241.517, 5272.564), stdev = 13.590
  CI (99.9%): [5233.872, 5249.163] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReplaceTokensInATemplateWhenNotAllTokenValuesPresent

# Run progress: 96.84% complete, ETA 00:12:31
# Fork: 1 of 2
# Warmup Iteration   1: 11588.645 ns/op
# Warmup Iteration   2: 4590.226 ns/op
# Warmup Iteration   3: 3064.183 ns/op
# Warmup Iteration   4: 3064.105 ns/op
# Warmup Iteration   5: 3046.635 ns/op
# Warmup Iteration   6: 3043.863 ns/op
# Warmup Iteration   7: 3063.542 ns/op
# Warmup Iteration   8: 3059.089 ns/op
# Warmup Iteration   9: 3052.534 ns/op
# Warmup Iteration  10: 3054.825 ns/op
Iteration   1: 3066.408 ns/op
Iteration   2: 3061.755 ns/op
Iteration   3: 3054.212 ns/op
Iteration   4: 3058.351 ns/op
Iteration   5: 3065.068 ns/op
Iteration   6: 3055.333 ns/op
Iteration   7: 3053.027 ns/op
Iteration   8: 3054.419 ns/op
Iteration   9: 3053.335 ns/op
Iteration  10: 3045.372 ns/op
Iteration  11: 3062.317 ns/op
Iteration  12: 3054.973 ns/op
Iteration  13: 3044.985 ns/op
Iteration  14: 3045.203 ns/op
Iteration  15: 3054.981 ns/op
Iteration  16: 3057.856 ns/op
Iteration  17: 3062.786 ns/op
Iteration  18: 3052.515 ns/op
Iteration  19: 3057.254 ns/op
Iteration  20: 3050.604 ns/op

# Run progress: 96.91% complete, ETA 00:12:13
# Fork: 2 of 2
# Warmup Iteration   1: 11669.817 ns/op
# Warmup Iteration   2: 4265.552 ns/op
# Warmup Iteration   3: 3149.817 ns/op
# Warmup Iteration   4: 3077.844 ns/op
# Warmup Iteration   5: 3069.549 ns/op
# Warmup Iteration   6: 3064.549 ns/op
# Warmup Iteration   7: 3089.122 ns/op
# Warmup Iteration   8: 3069.948 ns/op
# Warmup Iteration   9: 3083.379 ns/op
# Warmup Iteration  10: 3085.837 ns/op
Iteration   1: 3092.783 ns/op
Iteration   2: 3072.786 ns/op
Iteration   3: 3084.906 ns/op
Iteration   4: 3071.304 ns/op
Iteration   5: 3088.428 ns/op
Iteration   6: 3082.016 ns/op
Iteration   7: 3091.759 ns/op
Iteration   8: 3080.391 ns/op
Iteration   9: 3096.933 ns/op
Iteration  10: 3093.111 ns/op
Iteration  11: 3086.800 ns/op
Iteration  12: 3087.324 ns/op
Iteration  13: 3079.541 ns/op
Iteration  14: 3094.138 ns/op
Iteration  15: 3091.732 ns/op
Iteration  16: 3085.060 ns/op
Iteration  17: 3094.520 ns/op
Iteration  18: 3089.975 ns/op
Iteration  19: 3081.987 ns/op
Iteration  20: 3090.221 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReplaceTokensInATemplateWhenNotAllTokenValuesPresent":
  3071.162 ±(99.9%) 9.637 ns/op [Average]
  (min, avg, max) = (3044.985, 3071.162, 3096.933), stdev = 17.131
  CI (99.9%): [3061.524, 3080.799] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnErrorWhenTryingToConvertEmptyInputStreamToString

# Run progress: 96.99% complete, ETA 00:11:56
# Fork: 1 of 2
# Warmup Iteration   1: 35063.414 ns/op
# Warmup Iteration   2: 14072.170 ns/op
# Warmup Iteration   3: 7936.334 ns/op
# Warmup Iteration   4: 6655.777 ns/op
# Warmup Iteration   5: 6371.842 ns/op
# Warmup Iteration   6: 6292.294 ns/op
# Warmup Iteration   7: 6300.854 ns/op
# Warmup Iteration   8: 6323.218 ns/op
# Warmup Iteration   9: 6324.769 ns/op
# Warmup Iteration  10: 6293.994 ns/op
Iteration   1: 6326.078 ns/op
Iteration   2: 6281.393 ns/op
Iteration   3: 6295.456 ns/op
Iteration   4: 6261.465 ns/op
Iteration   5: 6316.647 ns/op
Iteration   6: 6331.530 ns/op
Iteration   7: 6250.382 ns/op
Iteration   8: 6273.097 ns/op
Iteration   9: 6266.171 ns/op
Iteration  10: 6223.697 ns/op
Iteration  11: 6248.527 ns/op
Iteration  12: 6233.796 ns/op
Iteration  13: 6276.770 ns/op
Iteration  14: 6253.268 ns/op
Iteration  15: 6258.862 ns/op
Iteration  16: 6291.443 ns/op
Iteration  17: 6180.034 ns/op
Iteration  18: 6228.453 ns/op
Iteration  19: 6270.520 ns/op
Iteration  20: 6282.069 ns/op

# Run progress: 97.06% complete, ETA 00:11:38
# Fork: 2 of 2
# Warmup Iteration   1: 35027.294 ns/op
# Warmup Iteration   2: 14062.336 ns/op
# Warmup Iteration   3: 8232.776 ns/op
# Warmup Iteration   4: 6666.327 ns/op
# Warmup Iteration   5: 6394.740 ns/op
# Warmup Iteration   6: 6373.800 ns/op
# Warmup Iteration   7: 6370.325 ns/op
# Warmup Iteration   8: 6414.462 ns/op
# Warmup Iteration   9: 6404.144 ns/op
# Warmup Iteration  10: 6338.892 ns/op
Iteration   1: 6391.832 ns/op
Iteration   2: 6429.890 ns/op
Iteration   3: 6306.901 ns/op
Iteration   4: 6348.416 ns/op
Iteration   5: 6312.096 ns/op
Iteration   6: 6502.234 ns/op
Iteration   7: 6236.727 ns/op
Iteration   8: 6329.795 ns/op
Iteration   9: 6373.760 ns/op
Iteration  10: 6246.499 ns/op
Iteration  11: 6300.656 ns/op
Iteration  12: 6224.482 ns/op
Iteration  13: 6299.836 ns/op
Iteration  14: 6326.463 ns/op
Iteration  15: 6231.024 ns/op
Iteration  16: 6309.007 ns/op
Iteration  17: 6219.163 ns/op
Iteration  18: 6355.954 ns/op
Iteration  19: 6257.393 ns/op
Iteration  20: 6253.152 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnErrorWhenTryingToConvertEmptyInputStreamToString":
  6290.123 ±(99.9%) 34.789 ns/op [Average]
  (min, avg, max) = (6180.034, 6290.123, 6502.234), stdev = 61.837
  CI (99.9%): [6255.335, 6324.912] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnErrorWhenTryingToConvertNullInputStreamToString

# Run progress: 97.14% complete, ETA 00:11:21
# Fork: 1 of 2
# Warmup Iteration   1: 664.044 ns/op
# Warmup Iteration   2: 372.516 ns/op
# Warmup Iteration   3: 342.438 ns/op
# Warmup Iteration   4: 342.550 ns/op
# Warmup Iteration   5: 343.005 ns/op
# Warmup Iteration   6: 343.411 ns/op
# Warmup Iteration   7: 344.689 ns/op
# Warmup Iteration   8: 342.725 ns/op
# Warmup Iteration   9: 341.699 ns/op
# Warmup Iteration  10: 342.319 ns/op
Iteration   1: 342.494 ns/op
Iteration   2: 341.140 ns/op
Iteration   3: 342.017 ns/op
Iteration   4: 341.707 ns/op
Iteration   5: 340.900 ns/op
Iteration   6: 341.329 ns/op
Iteration   7: 343.942 ns/op
Iteration   8: 342.436 ns/op
Iteration   9: 342.149 ns/op
Iteration  10: 342.294 ns/op
Iteration  11: 342.661 ns/op
Iteration  12: 342.494 ns/op
Iteration  13: 343.283 ns/op
Iteration  14: 340.727 ns/op
Iteration  15: 342.017 ns/op
Iteration  16: 341.334 ns/op
Iteration  17: 342.900 ns/op
Iteration  18: 341.243 ns/op
Iteration  19: 344.102 ns/op
Iteration  20: 341.669 ns/op

# Run progress: 97.21% complete, ETA 00:11:03
# Fork: 2 of 2
# Warmup Iteration   1: 636.088 ns/op
# Warmup Iteration   2: 378.972 ns/op
# Warmup Iteration   3: 353.933 ns/op
# Warmup Iteration   4: 353.061 ns/op
# Warmup Iteration   5: 354.296 ns/op
# Warmup Iteration   6: 352.562 ns/op
# Warmup Iteration   7: 353.908 ns/op
# Warmup Iteration   8: 351.662 ns/op
# Warmup Iteration   9: 353.866 ns/op
# Warmup Iteration  10: 354.403 ns/op
Iteration   1: 354.873 ns/op
Iteration   2: 354.697 ns/op
Iteration   3: 354.668 ns/op
Iteration   4: 353.706 ns/op
Iteration   5: 356.001 ns/op
Iteration   6: 354.944 ns/op
Iteration   7: 354.232 ns/op
Iteration   8: 353.783 ns/op
Iteration   9: 353.008 ns/op
Iteration  10: 353.827 ns/op
Iteration  11: 355.184 ns/op
Iteration  12: 353.758 ns/op
Iteration  13: 354.761 ns/op
Iteration  14: 353.773 ns/op
Iteration  15: 355.853 ns/op
Iteration  16: 354.672 ns/op
Iteration  17: 354.657 ns/op
Iteration  18: 354.697 ns/op
Iteration  19: 354.296 ns/op
Iteration  20: 354.061 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnErrorWhenTryingToConvertNullInputStreamToString":
  348.307 ±(99.9%) 3.544 ns/op [Average]
  (min, avg, max) = (340.727, 348.307, 356.001), stdev = 6.299
  CI (99.9%): [344.763, 351.851] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnErrorWhenTryingToConvertSpaceInputStreamToString

# Run progress: 97.29% complete, ETA 00:10:46
# Fork: 1 of 2
# Warmup Iteration   1: 29133.558 ns/op
# Warmup Iteration   2: 10607.554 ns/op
# Warmup Iteration   3: 6082.994 ns/op
# Warmup Iteration   4: 4591.875 ns/op
# Warmup Iteration   5: 4384.649 ns/op
# Warmup Iteration   6: 4374.748 ns/op
# Warmup Iteration   7: 4394.520 ns/op
# Warmup Iteration   8: 4383.683 ns/op
# Warmup Iteration   9: 4379.633 ns/op
# Warmup Iteration  10: 4374.231 ns/op
Iteration   1: 4382.659 ns/op
Iteration   2: 4378.634 ns/op
Iteration   3: 4404.838 ns/op
Iteration   4: 4355.059 ns/op
Iteration   5: 4369.497 ns/op
Iteration   6: 4383.205 ns/op
Iteration   7: 4442.584 ns/op
Iteration   8: 4358.490 ns/op
Iteration   9: 4376.350 ns/op
Iteration  10: 4428.250 ns/op
Iteration  11: 4400.362 ns/op
Iteration  12: 4389.974 ns/op
Iteration  13: 4396.036 ns/op
Iteration  14: 4413.424 ns/op
Iteration  15: 4389.228 ns/op
Iteration  16: 4397.793 ns/op
Iteration  17: 4462.447 ns/op
Iteration  18: 4455.633 ns/op
Iteration  19: 4408.877 ns/op
Iteration  20: 4428.556 ns/op

# Run progress: 97.36% complete, ETA 00:10:28
# Fork: 2 of 2
# Warmup Iteration   1: 26685.350 ns/op
# Warmup Iteration   2: 11118.714 ns/op
# Warmup Iteration   3: 5720.695 ns/op
# Warmup Iteration   4: 4425.034 ns/op
# Warmup Iteration   5: 4438.912 ns/op
# Warmup Iteration   6: 4456.882 ns/op
# Warmup Iteration   7: 4465.196 ns/op
# Warmup Iteration   8: 4454.864 ns/op
# Warmup Iteration   9: 4476.834 ns/op
# Warmup Iteration  10: 4454.001 ns/op
Iteration   1: 4445.299 ns/op
Iteration   2: 4450.376 ns/op
Iteration   3: 4461.011 ns/op
Iteration   4: 4421.148 ns/op
Iteration   5: 4485.797 ns/op
Iteration   6: 4467.942 ns/op
Iteration   7: 4442.606 ns/op
Iteration   8: 4438.383 ns/op
Iteration   9: 4406.947 ns/op
Iteration  10: 4439.878 ns/op
Iteration  11: 4459.592 ns/op
Iteration  12: 4442.236 ns/op
Iteration  13: 4438.151 ns/op
Iteration  14: 4448.429 ns/op
Iteration  15: 4442.693 ns/op
Iteration  16: 4429.709 ns/op
Iteration  17: 4467.785 ns/op
Iteration  18: 4404.599 ns/op
Iteration  19: 4438.030 ns/op
Iteration  20: 4435.638 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnErrorWhenTryingToConvertSpaceInputStreamToString":
  4422.204 ±(99.9%) 18.535 ns/op [Average]
  (min, avg, max) = (4355.059, 4422.204, 4485.797), stdev = 32.945
  CI (99.9%): [4403.669, 4440.738] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnFalseWhenStringWithinNotPairOfEscapedSquareBracket

# Run progress: 97.44% complete, ETA 00:10:10
# Fork: 1 of 2
# Warmup Iteration   1: 592.421 ns/op
# Warmup Iteration   2: 359.338 ns/op
# Warmup Iteration   3: 328.909 ns/op
# Warmup Iteration   4: 329.776 ns/op
# Warmup Iteration   5: 328.757 ns/op
# Warmup Iteration   6: 329.523 ns/op
# Warmup Iteration   7: 328.819 ns/op
# Warmup Iteration   8: 328.444 ns/op
# Warmup Iteration   9: 328.604 ns/op
# Warmup Iteration  10: 327.458 ns/op
Iteration   1: 329.073 ns/op
Iteration   2: 330.286 ns/op
Iteration   3: 330.338 ns/op
Iteration   4: 329.252 ns/op
Iteration   5: 330.320 ns/op
Iteration   6: 329.427 ns/op
Iteration   7: 328.547 ns/op
Iteration   8: 331.036 ns/op
Iteration   9: 328.493 ns/op
Iteration  10: 329.894 ns/op
Iteration  11: 328.733 ns/op
Iteration  12: 331.491 ns/op
Iteration  13: 327.053 ns/op
Iteration  14: 328.038 ns/op
Iteration  15: 326.939 ns/op
Iteration  16: 329.770 ns/op
Iteration  17: 329.542 ns/op
Iteration  18: 328.001 ns/op
Iteration  19: 329.067 ns/op
Iteration  20: 330.004 ns/op

# Run progress: 97.52% complete, ETA 00:09:53
# Fork: 2 of 2
# Warmup Iteration   1: 620.550 ns/op
# Warmup Iteration   2: 349.467 ns/op
# Warmup Iteration   3: 328.150 ns/op
# Warmup Iteration   4: 329.752 ns/op
# Warmup Iteration   5: 328.325 ns/op
# Warmup Iteration   6: 327.818 ns/op
# Warmup Iteration   7: 328.345 ns/op
# Warmup Iteration   8: 328.037 ns/op
# Warmup Iteration   9: 328.740 ns/op
# Warmup Iteration  10: 329.293 ns/op
Iteration   1: 329.412 ns/op
Iteration   2: 328.841 ns/op
Iteration   3: 328.040 ns/op
Iteration   4: 328.711 ns/op
Iteration   5: 327.664 ns/op
Iteration   6: 327.296 ns/op
Iteration   7: 328.443 ns/op
Iteration   8: 328.100 ns/op
Iteration   9: 329.974 ns/op
Iteration  10: 327.837 ns/op
Iteration  11: 328.861 ns/op
Iteration  12: 327.400 ns/op
Iteration  13: 327.150 ns/op
Iteration  14: 330.512 ns/op
Iteration  15: 328.337 ns/op
Iteration  16: 326.963 ns/op
Iteration  17: 328.538 ns/op
Iteration  18: 328.660 ns/op
Iteration  19: 327.352 ns/op
Iteration  20: 328.392 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnFalseWhenStringWithinNotPairOfEscapedSquareBracket":
  328.795 ±(99.9%) 0.655 ns/op [Average]
  (min, avg, max) = (326.939, 328.795, 331.491), stdev = 1.165
  CI (99.9%): [328.139, 329.450] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnFalseWhenStringWithinNotPairOfSquareBracket

# Run progress: 97.59% complete, ETA 00:09:35
# Fork: 1 of 2
# Warmup Iteration   1: 653.933 ns/op
# Warmup Iteration   2: 347.363 ns/op
# Warmup Iteration   3: 328.703 ns/op
# Warmup Iteration   4: 328.582 ns/op
# Warmup Iteration   5: 328.049 ns/op
# Warmup Iteration   6: 327.997 ns/op
# Warmup Iteration   7: 328.256 ns/op
# Warmup Iteration   8: 327.020 ns/op
# Warmup Iteration   9: 325.105 ns/op
# Warmup Iteration  10: 328.009 ns/op
Iteration   1: 326.346 ns/op
Iteration   2: 325.914 ns/op
Iteration   3: 327.184 ns/op
Iteration   4: 327.085 ns/op
Iteration   5: 326.897 ns/op
Iteration   6: 327.056 ns/op
Iteration   7: 326.700 ns/op
Iteration   8: 326.561 ns/op
Iteration   9: 325.841 ns/op
Iteration  10: 325.756 ns/op
Iteration  11: 327.574 ns/op
Iteration  12: 326.189 ns/op
Iteration  13: 326.434 ns/op
Iteration  14: 328.203 ns/op
Iteration  15: 326.116 ns/op
Iteration  16: 328.272 ns/op
Iteration  17: 328.101 ns/op
Iteration  18: 326.712 ns/op
Iteration  19: 327.063 ns/op
Iteration  20: 328.049 ns/op

# Run progress: 97.67% complete, ETA 00:09:17
# Fork: 2 of 2
# Warmup Iteration   1: 611.401 ns/op
# Warmup Iteration   2: 354.463 ns/op
# Warmup Iteration   3: 329.550 ns/op
# Warmup Iteration   4: 329.532 ns/op
# Warmup Iteration   5: 330.167 ns/op
# Warmup Iteration   6: 329.312 ns/op
# Warmup Iteration   7: 330.718 ns/op
# Warmup Iteration   8: 328.512 ns/op
# Warmup Iteration   9: 330.113 ns/op
# Warmup Iteration  10: 329.709 ns/op
Iteration   1: 329.064 ns/op
Iteration   2: 329.314 ns/op
Iteration   3: 329.163 ns/op
Iteration   4: 329.848 ns/op
Iteration   5: 330.251 ns/op
Iteration   6: 329.229 ns/op
Iteration   7: 329.659 ns/op
Iteration   8: 330.523 ns/op
Iteration   9: 329.577 ns/op
Iteration  10: 330.551 ns/op
Iteration  11: 330.414 ns/op
Iteration  12: 329.980 ns/op
Iteration  13: 329.852 ns/op
Iteration  14: 329.941 ns/op
Iteration  15: 330.868 ns/op
Iteration  16: 329.334 ns/op
Iteration  17: 329.374 ns/op
Iteration  18: 330.221 ns/op
Iteration  19: 329.320 ns/op
Iteration  20: 331.106 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnFalseWhenStringWithinNotPairOfSquareBracket":
  328.391 ±(99.9%) 0.935 ns/op [Average]
  (min, avg, max) = (325.756, 328.391, 331.106), stdev = 1.661
  CI (99.9%): [327.456, 329.326] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnNullWhenTryingToUpperEmptyString

# Run progress: 97.74% complete, ETA 00:09:00
# Fork: 1 of 2
# Warmup Iteration   1: 748.471 ns/op
# Warmup Iteration   2: 397.248 ns/op
# Warmup Iteration   3: 359.062 ns/op
# Warmup Iteration   4: 358.310 ns/op
# Warmup Iteration   5: 358.924 ns/op
# Warmup Iteration   6: 357.638 ns/op
# Warmup Iteration   7: 357.872 ns/op
# Warmup Iteration   8: 357.760 ns/op
# Warmup Iteration   9: 356.540 ns/op
# Warmup Iteration  10: 359.026 ns/op
Iteration   1: 357.023 ns/op
Iteration   2: 359.037 ns/op
Iteration   3: 357.887 ns/op
Iteration   4: 358.205 ns/op
Iteration   5: 358.806 ns/op
Iteration   6: 358.820 ns/op
Iteration   7: 357.777 ns/op
Iteration   8: 358.161 ns/op
Iteration   9: 358.683 ns/op
Iteration  10: 358.020 ns/op
Iteration  11: 358.187 ns/op
Iteration  12: 357.050 ns/op
Iteration  13: 358.146 ns/op
Iteration  14: 358.101 ns/op
Iteration  15: 359.464 ns/op
Iteration  16: 358.544 ns/op
Iteration  17: 356.903 ns/op
Iteration  18: 356.325 ns/op
Iteration  19: 357.651 ns/op
Iteration  20: 358.569 ns/op

# Run progress: 97.82% complete, ETA 00:08:42
# Fork: 2 of 2
# Warmup Iteration   1: 679.854 ns/op
# Warmup Iteration   2: 390.142 ns/op
# Warmup Iteration   3: 360.520 ns/op
# Warmup Iteration   4: 361.397 ns/op
# Warmup Iteration   5: 361.410 ns/op
# Warmup Iteration   6: 358.424 ns/op
# Warmup Iteration   7: 358.892 ns/op
# Warmup Iteration   8: 358.822 ns/op
# Warmup Iteration   9: 359.916 ns/op
# Warmup Iteration  10: 363.251 ns/op
Iteration   1: 359.402 ns/op
Iteration   2: 360.273 ns/op
Iteration   3: 360.858 ns/op
Iteration   4: 360.857 ns/op
Iteration   5: 359.220 ns/op
Iteration   6: 359.781 ns/op
Iteration   7: 359.442 ns/op
Iteration   8: 359.354 ns/op
Iteration   9: 361.362 ns/op
Iteration  10: 361.217 ns/op
Iteration  11: 359.284 ns/op
Iteration  12: 359.944 ns/op
Iteration  13: 364.109 ns/op
Iteration  14: 360.165 ns/op
Iteration  15: 360.842 ns/op
Iteration  16: 360.080 ns/op
Iteration  17: 360.379 ns/op
Iteration  18: 358.974 ns/op
Iteration  19: 358.434 ns/op
Iteration  20: 359.204 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnNullWhenTryingToUpperEmptyString":
  359.113 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (356.325, 359.113, 364.109), stdev = 1.468
  CI (99.9%): [358.288, 359.939] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnNullWhenTryingTolowerEmptyString

# Run progress: 97.89% complete, ETA 00:08:24
# Fork: 1 of 2
# Warmup Iteration   1: 671.576 ns/op
# Warmup Iteration   2: 377.463 ns/op
# Warmup Iteration   3: 358.955 ns/op
# Warmup Iteration   4: 362.518 ns/op
# Warmup Iteration   5: 359.611 ns/op
# Warmup Iteration   6: 360.764 ns/op
# Warmup Iteration   7: 357.270 ns/op
# Warmup Iteration   8: 357.592 ns/op
# Warmup Iteration   9: 359.625 ns/op
# Warmup Iteration  10: 363.791 ns/op
Iteration   1: 363.277 ns/op
Iteration   2: 362.678 ns/op
Iteration   3: 361.175 ns/op
Iteration   4: 359.692 ns/op
Iteration   5: 358.018 ns/op
Iteration   6: 360.643 ns/op
Iteration   7: 359.607 ns/op
Iteration   8: 359.733 ns/op
Iteration   9: 365.010 ns/op
Iteration  10: 360.225 ns/op
Iteration  11: 367.764 ns/op
Iteration  12: 360.996 ns/op
Iteration  13: 361.194 ns/op
Iteration  14: 363.341 ns/op
Iteration  15: 360.368 ns/op
Iteration  16: 361.844 ns/op
Iteration  17: 360.926 ns/op
Iteration  18: 360.039 ns/op
Iteration  19: 365.346 ns/op
Iteration  20: 362.264 ns/op

# Run progress: 97.97% complete, ETA 00:08:06
# Fork: 2 of 2
# Warmup Iteration   1: 692.064 ns/op
# Warmup Iteration   2: 395.104 ns/op
# Warmup Iteration   3: 360.570 ns/op
# Warmup Iteration   4: 357.630 ns/op
# Warmup Iteration   5: 358.384 ns/op
# Warmup Iteration   6: 358.702 ns/op
# Warmup Iteration   7: 359.149 ns/op
# Warmup Iteration   8: 357.885 ns/op
# Warmup Iteration   9: 357.839 ns/op
# Warmup Iteration  10: 357.243 ns/op
Iteration   1: 359.055 ns/op
Iteration   2: 359.904 ns/op
Iteration   3: 357.778 ns/op
Iteration   4: 358.973 ns/op
Iteration   5: 357.822 ns/op
Iteration   6: 358.371 ns/op
Iteration   7: 356.819 ns/op
Iteration   8: 357.780 ns/op
Iteration   9: 357.158 ns/op
Iteration  10: 359.319 ns/op
Iteration  11: 358.468 ns/op
Iteration  12: 357.831 ns/op
Iteration  13: 359.155 ns/op
Iteration  14: 358.127 ns/op
Iteration  15: 363.509 ns/op
Iteration  16: 357.522 ns/op
Iteration  17: 358.913 ns/op
Iteration  18: 358.426 ns/op
Iteration  19: 358.657 ns/op
Iteration  20: 358.140 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnNullWhenTryingTolowerEmptyString":
  360.147 ±(99.9%) 1.386 ns/op [Average]
  (min, avg, max) = (356.819, 360.147, 367.764), stdev = 2.464
  CI (99.9%): [358.761, 361.533] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnTrueWhenStringWithinEncodedSquareBrackets

# Run progress: 98.04% complete, ETA 00:07:49
# Fork: 1 of 2
# Warmup Iteration   1: 627.892 ns/op
# Warmup Iteration   2: 343.084 ns/op
# Warmup Iteration   3: 333.777 ns/op
# Warmup Iteration   4: 333.464 ns/op
# Warmup Iteration   5: 333.331 ns/op
# Warmup Iteration   6: 333.490 ns/op
# Warmup Iteration   7: 332.900 ns/op
# Warmup Iteration   8: 333.384 ns/op
# Warmup Iteration   9: 333.994 ns/op
# Warmup Iteration  10: 332.434 ns/op
Iteration   1: 335.470 ns/op
Iteration   2: 333.886 ns/op
Iteration   3: 334.935 ns/op
Iteration   4: 335.012 ns/op
Iteration   5: 332.957 ns/op
Iteration   6: 335.081 ns/op
Iteration   7: 333.929 ns/op
Iteration   8: 334.351 ns/op
Iteration   9: 334.724 ns/op
Iteration  10: 333.270 ns/op
Iteration  11: 332.851 ns/op
Iteration  12: 332.776 ns/op
Iteration  13: 334.896 ns/op
Iteration  14: 334.132 ns/op
Iteration  15: 335.125 ns/op
Iteration  16: 333.655 ns/op
Iteration  17: 333.924 ns/op
Iteration  18: 334.997 ns/op
Iteration  19: 334.999 ns/op
Iteration  20: 337.306 ns/op

# Run progress: 98.12% complete, ETA 00:07:31
# Fork: 2 of 2
# Warmup Iteration   1: 637.483 ns/op
# Warmup Iteration   2: 336.856 ns/op
# Warmup Iteration   3: 327.682 ns/op
# Warmup Iteration   4: 328.594 ns/op
# Warmup Iteration   5: 330.913 ns/op
# Warmup Iteration   6: 328.777 ns/op
# Warmup Iteration   7: 327.842 ns/op
# Warmup Iteration   8: 328.248 ns/op
# Warmup Iteration   9: 328.221 ns/op
# Warmup Iteration  10: 328.334 ns/op
Iteration   1: 329.079 ns/op
Iteration   2: 329.067 ns/op
Iteration   3: 329.596 ns/op
Iteration   4: 329.901 ns/op
Iteration   5: 328.008 ns/op
Iteration   6: 328.901 ns/op
Iteration   7: 327.287 ns/op
Iteration   8: 328.133 ns/op
Iteration   9: 328.983 ns/op
Iteration  10: 328.020 ns/op
Iteration  11: 328.853 ns/op
Iteration  12: 327.915 ns/op
Iteration  13: 328.869 ns/op
Iteration  14: 327.553 ns/op
Iteration  15: 327.997 ns/op
Iteration  16: 328.936 ns/op
Iteration  17: 328.824 ns/op
Iteration  18: 328.435 ns/op
Iteration  19: 326.914 ns/op
Iteration  20: 327.843 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnTrueWhenStringWithinEncodedSquareBrackets":
  331.435 ±(99.9%) 1.775 ns/op [Average]
  (min, avg, max) = (326.914, 331.435, 337.306), stdev = 3.155
  CI (99.9%): [329.660, 333.210] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnTrueWhenStringWithinSquareBrackets

# Run progress: 98.19% complete, ETA 00:07:13
# Fork: 1 of 2
# Warmup Iteration   1: 659.285 ns/op
# Warmup Iteration   2: 380.650 ns/op
# Warmup Iteration   3: 352.903 ns/op
# Warmup Iteration   4: 351.558 ns/op
# Warmup Iteration   5: 351.371 ns/op
# Warmup Iteration   6: 351.833 ns/op
# Warmup Iteration   7: 352.340 ns/op
# Warmup Iteration   8: 351.745 ns/op
# Warmup Iteration   9: 350.434 ns/op
# Warmup Iteration  10: 351.828 ns/op
Iteration   1: 351.899 ns/op
Iteration   2: 352.952 ns/op
Iteration   3: 352.609 ns/op
Iteration   4: 349.101 ns/op
Iteration   5: 349.353 ns/op
Iteration   6: 351.045 ns/op
Iteration   7: 349.781 ns/op
Iteration   8: 350.864 ns/op
Iteration   9: 350.887 ns/op
Iteration  10: 350.145 ns/op
Iteration  11: 350.838 ns/op
Iteration  12: 349.687 ns/op
Iteration  13: 352.371 ns/op
Iteration  14: 352.299 ns/op
Iteration  15: 350.119 ns/op
Iteration  16: 352.167 ns/op
Iteration  17: 351.868 ns/op
Iteration  18: 351.514 ns/op
Iteration  19: 352.247 ns/op
Iteration  20: 351.854 ns/op

# Run progress: 98.27% complete, ETA 00:06:55
# Fork: 2 of 2
# Warmup Iteration   1: 676.215 ns/op
# Warmup Iteration   2: 376.538 ns/op
# Warmup Iteration   3: 350.357 ns/op
# Warmup Iteration   4: 347.677 ns/op
# Warmup Iteration   5: 349.176 ns/op
# Warmup Iteration   6: 350.105 ns/op
# Warmup Iteration   7: 350.584 ns/op
# Warmup Iteration   8: 350.900 ns/op
# Warmup Iteration   9: 349.750 ns/op
# Warmup Iteration  10: 351.613 ns/op
Iteration   1: 352.148 ns/op
Iteration   2: 351.271 ns/op
Iteration   3: 350.844 ns/op
Iteration   4: 350.095 ns/op
Iteration   5: 350.405 ns/op
Iteration   6: 350.009 ns/op
Iteration   7: 347.890 ns/op
Iteration   8: 348.965 ns/op
Iteration   9: 349.651 ns/op
Iteration  10: 349.135 ns/op
Iteration  11: 352.269 ns/op
Iteration  12: 350.059 ns/op
Iteration  13: 349.808 ns/op
Iteration  14: 349.465 ns/op
Iteration  15: 350.867 ns/op
Iteration  16: 350.740 ns/op
Iteration  17: 350.291 ns/op
Iteration  18: 350.346 ns/op
Iteration  19: 349.711 ns/op
Iteration  20: 350.774 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnTrueWhenStringWithinSquareBrackets":
  350.709 ±(99.9%) 0.667 ns/op [Average]
  (min, avg, max) = (347.890, 350.709, 352.952), stdev = 1.186
  CI (99.9%): [350.042, 351.376] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_splitCsv

# Run progress: 98.34% complete, ETA 00:06:37
# Fork: 1 of 2
# Warmup Iteration   1: 4628.362 ns/op
# Warmup Iteration   2: 1281.027 ns/op
# Warmup Iteration   3: 1066.651 ns/op
# Warmup Iteration   4: 1067.083 ns/op
# Warmup Iteration   5: 1064.319 ns/op
# Warmup Iteration   6: 1069.998 ns/op
# Warmup Iteration   7: 1070.367 ns/op
# Warmup Iteration   8: 1061.686 ns/op
# Warmup Iteration   9: 1059.875 ns/op
# Warmup Iteration  10: 1065.138 ns/op
Iteration   1: 1067.208 ns/op
Iteration   2: 1068.305 ns/op
Iteration   3: 1067.902 ns/op
Iteration   4: 1067.026 ns/op
Iteration   5: 1065.548 ns/op
Iteration   6: 1066.048 ns/op
Iteration   7: 1068.091 ns/op
Iteration   8: 1063.003 ns/op
Iteration   9: 1066.369 ns/op
Iteration  10: 1061.783 ns/op
Iteration  11: 1065.512 ns/op
Iteration  12: 1062.211 ns/op
Iteration  13: 1062.902 ns/op
Iteration  14: 1070.031 ns/op
Iteration  15: 1065.281 ns/op
Iteration  16: 1066.099 ns/op
Iteration  17: 1070.576 ns/op
Iteration  18: 1065.189 ns/op
Iteration  19: 1062.862 ns/op
Iteration  20: 1065.691 ns/op

# Run progress: 98.42% complete, ETA 00:06:19
# Fork: 2 of 2
# Warmup Iteration   1: 5164.564 ns/op
# Warmup Iteration   2: 1305.856 ns/op
# Warmup Iteration   3: 1103.448 ns/op
# Warmup Iteration   4: 1101.675 ns/op
# Warmup Iteration   5: 1098.953 ns/op
# Warmup Iteration   6: 1103.301 ns/op
# Warmup Iteration   7: 1101.897 ns/op
# Warmup Iteration   8: 1100.703 ns/op
# Warmup Iteration   9: 1105.870 ns/op
# Warmup Iteration  10: 1105.447 ns/op
Iteration   1: 1099.468 ns/op
Iteration   2: 1105.081 ns/op
Iteration   3: 1107.509 ns/op
Iteration   4: 1103.957 ns/op
Iteration   5: 1105.304 ns/op
Iteration   6: 1098.404 ns/op
Iteration   7: 1103.839 ns/op
Iteration   8: 1102.870 ns/op
Iteration   9: 1100.602 ns/op
Iteration  10: 1105.107 ns/op
Iteration  11: 1108.319 ns/op
Iteration  12: 1100.241 ns/op
Iteration  13: 1099.624 ns/op
Iteration  14: 1099.934 ns/op
Iteration  15: 1105.989 ns/op
Iteration  16: 1100.756 ns/op
Iteration  17: 1102.090 ns/op
Iteration  18: 1100.649 ns/op
Iteration  19: 1103.600 ns/op
Iteration  20: 1099.996 ns/op


Result "io.github.azagniotov.stubby4j.utils.StringUtilsTest._Benchmark.benchmark_splitCsv":
  1084.274 ±(99.9%) 10.585 ns/op [Average]
  (min, avg, max) = (1061.783, 1084.274, 1108.319), stdev = 18.815
  CI (99.9%): [1073.689, 1094.860] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedProxyConfig

# Run progress: 98.49% complete, ETA 00:06:01
# Fork: 1 of 2
# Warmup Iteration   1: 6087.851 ns/op
# Warmup Iteration   2: 1741.789 ns/op
# Warmup Iteration   3: 1579.464 ns/op
# Warmup Iteration   4: 1567.279 ns/op
# Warmup Iteration   5: 1567.400 ns/op
# Warmup Iteration   6: 1564.572 ns/op
# Warmup Iteration   7: 1565.309 ns/op
# Warmup Iteration   8: 1574.724 ns/op
# Warmup Iteration   9: 1566.980 ns/op
# Warmup Iteration  10: 1566.795 ns/op
Iteration   1: 1571.684 ns/op
Iteration   2: 1569.972 ns/op
Iteration   3: 1563.624 ns/op
Iteration   4: 1568.971 ns/op
Iteration   5: 1566.094 ns/op
Iteration   6: 1571.191 ns/op
Iteration   7: 1566.482 ns/op
Iteration   8: 1561.952 ns/op
Iteration   9: 1565.156 ns/op
Iteration  10: 1564.891 ns/op
Iteration  11: 1577.948 ns/op
Iteration  12: 1573.064 ns/op
Iteration  13: 1564.798 ns/op
Iteration  14: 1575.086 ns/op
Iteration  15: 1578.309 ns/op
Iteration  16: 1569.167 ns/op
Iteration  17: 1569.847 ns/op
Iteration  18: 1565.411 ns/op
Iteration  19: 1568.331 ns/op
Iteration  20: 1561.082 ns/op

# Run progress: 98.57% complete, ETA 00:05:44
# Fork: 2 of 2
# Warmup Iteration   1: 6679.453 ns/op
# Warmup Iteration   2: 1808.370 ns/op
# Warmup Iteration   3: 1558.519 ns/op
# Warmup Iteration   4: 1562.975 ns/op
# Warmup Iteration   5: 1553.943 ns/op
# Warmup Iteration   6: 1563.024 ns/op
# Warmup Iteration   7: 1562.918 ns/op
# Warmup Iteration   8: 1553.815 ns/op
# Warmup Iteration   9: 1561.197 ns/op
# Warmup Iteration  10: 1563.060 ns/op
Iteration   1: 1565.205 ns/op
Iteration   2: 1564.451 ns/op
Iteration   3: 1556.979 ns/op
Iteration   4: 1562.423 ns/op
Iteration   5: 1554.686 ns/op
Iteration   6: 1565.446 ns/op
Iteration   7: 1560.225 ns/op
Iteration   8: 1555.784 ns/op
Iteration   9: 1562.133 ns/op
Iteration  10: 1558.818 ns/op
Iteration  11: 1558.741 ns/op
Iteration  12: 1555.975 ns/op
Iteration  13: 1559.264 ns/op
Iteration  14: 1565.646 ns/op
Iteration  15: 1559.507 ns/op
Iteration  16: 1556.297 ns/op
Iteration  17: 1563.025 ns/op
Iteration  18: 1555.855 ns/op
Iteration  19: 1562.953 ns/op
Iteration  20: 1560.135 ns/op


Result "io.github.azagniotov.stubby4j.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedProxyConfig":
  1564.415 ±(99.9%) 3.384 ns/op [Average]
  (min, avg, max) = (1554.686, 1564.415, 1578.309), stdev = 6.014
  CI (99.9%): [1561.032, 1567.799] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedRequestWithMultilineStubbedResponse

# Run progress: 98.64% complete, ETA 00:05:26
# Fork: 1 of 2
# Warmup Iteration   1: 15368.909 ns/op
# Warmup Iteration   2: 5241.748 ns/op
# Warmup Iteration   3: 3008.686 ns/op
# Warmup Iteration   4: 2998.162 ns/op
# Warmup Iteration   5: 3004.337 ns/op
# Warmup Iteration   6: 2995.275 ns/op
# Warmup Iteration   7: 2985.844 ns/op
# Warmup Iteration   8: 2992.556 ns/op
# Warmup Iteration   9: 2998.159 ns/op
# Warmup Iteration  10: 2997.392 ns/op
Iteration   1: 2981.025 ns/op
Iteration   2: 3001.200 ns/op
Iteration   3: 3002.808 ns/op
Iteration   4: 3002.556 ns/op
Iteration   5: 3002.670 ns/op
Iteration   6: 3013.151 ns/op
Iteration   7: 2987.968 ns/op
Iteration   8: 2990.255 ns/op
Iteration   9: 2980.149 ns/op
Iteration  10: 2989.064 ns/op
Iteration  11: 2974.980 ns/op
Iteration  12: 2976.080 ns/op
Iteration  13: 2989.257 ns/op
Iteration  14: 3000.826 ns/op
Iteration  15: 3006.788 ns/op
Iteration  16: 2982.425 ns/op
Iteration  17: 2992.272 ns/op
Iteration  18: 2986.716 ns/op
Iteration  19: 2969.210 ns/op
Iteration  20: 2985.528 ns/op

# Run progress: 98.72% complete, ETA 00:05:08
# Fork: 2 of 2
# Warmup Iteration   1: 16178.616 ns/op
# Warmup Iteration   2: 4708.922 ns/op
# Warmup Iteration   3: 3142.915 ns/op
# Warmup Iteration   4: 3115.587 ns/op
# Warmup Iteration   5: 3099.630 ns/op
# Warmup Iteration   6: 3109.972 ns/op
# Warmup Iteration   7: 3104.256 ns/op
# Warmup Iteration   8: 3124.171 ns/op
# Warmup Iteration   9: 3118.699 ns/op
# Warmup Iteration  10: 3118.058 ns/op
Iteration   1: 3113.336 ns/op
Iteration   2: 3147.312 ns/op
Iteration   3: 3102.611 ns/op
Iteration   4: 3106.482 ns/op
Iteration   5: 3131.706 ns/op
Iteration   6: 3108.074 ns/op
Iteration   7: 3095.252 ns/op
Iteration   8: 3107.562 ns/op
Iteration   9: 3112.681 ns/op
Iteration  10: 3136.428 ns/op
Iteration  11: 3119.076 ns/op
Iteration  12: 3137.224 ns/op
Iteration  13: 3098.026 ns/op
Iteration  14: 3135.048 ns/op
Iteration  15: 3096.155 ns/op
Iteration  16: 3128.995 ns/op
Iteration  17: 3092.959 ns/op
Iteration  18: 3131.537 ns/op
Iteration  19: 3095.535 ns/op
Iteration  20: 3098.147 ns/op


Result "io.github.azagniotov.stubby4j.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedRequestWithMultilineStubbedResponse":
  3052.727 ±(99.9%) 36.259 ns/op [Average]
  (min, avg, max) = (2969.210, 3052.727, 3147.312), stdev = 64.451
  CI (99.9%): [3016.467, 3088.986] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedRequestWithMultipleMethods

# Run progress: 98.80% complete, ETA 00:04:50
# Fork: 1 of 2
# Warmup Iteration   1: 9724.407 ns/op
# Warmup Iteration   2: 2754.362 ns/op
# Warmup Iteration   3: 1792.275 ns/op
# Warmup Iteration   4: 1791.658 ns/op
# Warmup Iteration   5: 1797.825 ns/op
# Warmup Iteration   6: 1787.165 ns/op
# Warmup Iteration   7: 1793.818 ns/op
# Warmup Iteration   8: 1793.959 ns/op
# Warmup Iteration   9: 1794.510 ns/op
# Warmup Iteration  10: 1807.289 ns/op
Iteration   1: 1798.672 ns/op
Iteration   2: 1801.883 ns/op
Iteration   3: 1808.972 ns/op
Iteration   4: 1797.011 ns/op
Iteration   5: 1798.126 ns/op
Iteration   6: 1806.007 ns/op
Iteration   7: 1801.623 ns/op
Iteration   8: 1797.737 ns/op
Iteration   9: 1809.174 ns/op
Iteration  10: 2300.569 ns/op
Iteration  11: 1995.881 ns/op
Iteration  12: 1809.255 ns/op
Iteration  13: 1804.432 ns/op
Iteration  14: 1794.291 ns/op
Iteration  15: 1801.974 ns/op
Iteration  16: 1813.343 ns/op
Iteration  17: 1812.177 ns/op
Iteration  18: 1826.991 ns/op
Iteration  19: 1805.723 ns/op
Iteration  20: 1804.166 ns/op

# Run progress: 98.87% complete, ETA 00:04:32
# Fork: 2 of 2
# Warmup Iteration   1: 9369.256 ns/op
# Warmup Iteration   2: 3341.924 ns/op
# Warmup Iteration   3: 1892.668 ns/op
# Warmup Iteration   4: 1853.878 ns/op
# Warmup Iteration   5: 1848.918 ns/op
# Warmup Iteration   6: 1838.497 ns/op
# Warmup Iteration   7: 1855.386 ns/op
# Warmup Iteration   8: 1847.571 ns/op
# Warmup Iteration   9: 1853.881 ns/op
# Warmup Iteration  10: 1850.211 ns/op
Iteration   1: 1858.408 ns/op
Iteration   2: 1854.438 ns/op
Iteration   3: 1846.073 ns/op
Iteration   4: 1852.416 ns/op
Iteration   5: 1844.095 ns/op
Iteration   6: 1846.158 ns/op
Iteration   7: 1846.783 ns/op
Iteration   8: 1834.945 ns/op
Iteration   9: 1848.077 ns/op
Iteration  10: 1849.124 ns/op
Iteration  11: 1848.702 ns/op
Iteration  12: 1844.664 ns/op
Iteration  13: 1842.799 ns/op
Iteration  14: 1855.374 ns/op
Iteration  15: 1850.223 ns/op
Iteration  16: 1862.291 ns/op
Iteration  17: 1847.169 ns/op
Iteration  18: 1864.747 ns/op
Iteration  19: 1854.639 ns/op
Iteration  20: 1857.567 ns/op


Result "io.github.azagniotov.stubby4j.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedRequestWithMultipleMethods":
  1844.917 ±(99.9%) 46.072 ns/op [Average]
  (min, avg, max) = (1794.291, 1844.917, 2300.569), stdev = 81.892
  CI (99.9%): [1798.846, 1890.989] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedRequestWithStubbedResponse

# Run progress: 98.95% complete, ETA 00:04:14
# Fork: 1 of 2
# Warmup Iteration   1: 16671.630 ns/op
# Warmup Iteration   2: 6123.686 ns/op
# Warmup Iteration   3: 2861.993 ns/op
# Warmup Iteration   4: 2741.928 ns/op
# Warmup Iteration   5: 2744.655 ns/op
# Warmup Iteration   6: 2737.648 ns/op
# Warmup Iteration   7: 2728.860 ns/op
# Warmup Iteration   8: 2742.258 ns/op
# Warmup Iteration   9: 2744.232 ns/op
# Warmup Iteration  10: 2748.633 ns/op
Iteration   1: 2741.531 ns/op
Iteration   2: 2747.049 ns/op
Iteration   3: 2742.957 ns/op
Iteration   4: 2744.670 ns/op
Iteration   5: 2750.701 ns/op
Iteration   6: 2742.790 ns/op
Iteration   7: 2726.479 ns/op
Iteration   8: 2734.241 ns/op
Iteration   9: 2755.996 ns/op
Iteration  10: 2742.467 ns/op
Iteration  11: 2750.863 ns/op
Iteration  12: 2753.418 ns/op
Iteration  13: 2740.707 ns/op
Iteration  14: 2741.405 ns/op
Iteration  15: 2734.288 ns/op
Iteration  16: 2748.618 ns/op
Iteration  17: 2744.836 ns/op
Iteration  18: 2746.044 ns/op
Iteration  19: 2753.907 ns/op
Iteration  20: 2743.937 ns/op

# Run progress: 99.02% complete, ETA 00:03:56
# Fork: 2 of 2
# Warmup Iteration   1: 14727.487 ns/op
# Warmup Iteration   2: 4731.191 ns/op
# Warmup Iteration   3: 2777.412 ns/op
# Warmup Iteration   4: 2754.269 ns/op
# Warmup Iteration   5: 2742.177 ns/op
# Warmup Iteration   6: 2741.884 ns/op
# Warmup Iteration   7: 2728.151 ns/op
# Warmup Iteration   8: 2745.177 ns/op
# Warmup Iteration   9: 2754.155 ns/op
# Warmup Iteration  10: 2735.613 ns/op
Iteration   1: 2727.037 ns/op
Iteration   2: 2738.763 ns/op
Iteration   3: 2731.572 ns/op
Iteration   4: 2745.408 ns/op
Iteration   5: 2722.661 ns/op
Iteration   6: 2741.296 ns/op
Iteration   7: 2737.645 ns/op
Iteration   8: 2743.661 ns/op
Iteration   9: 2739.580 ns/op
Iteration  10: 2731.694 ns/op
Iteration  11: 2740.941 ns/op
Iteration  12: 2747.768 ns/op
Iteration  13: 2721.449 ns/op
Iteration  14: 2733.781 ns/op
Iteration  15: 2741.581 ns/op
Iteration  16: 2748.777 ns/op
Iteration  17: 2744.335 ns/op
Iteration  18: 2754.455 ns/op
Iteration  19: 2739.079 ns/op
Iteration  20: 2733.586 ns/op


Result "io.github.azagniotov.stubby4j.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedRequestWithStubbedResponse":
  2741.299 ±(99.9%) 4.720 ns/op [Average]
  (min, avg, max) = (2721.449, 2741.299, 2755.996), stdev = 8.390
  CI (99.9%): [2736.579, 2746.019] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedRequestWithStubbedResponseWhenBothHaveManyHeaders

# Run progress: 99.10% complete, ETA 00:03:38
# Fork: 1 of 2
# Warmup Iteration   1: 30839.537 ns/op
# Warmup Iteration   2: 12061.138 ns/op
# Warmup Iteration   3: 5783.299 ns/op
# Warmup Iteration   4: 5229.095 ns/op
# Warmup Iteration   5: 5186.653 ns/op
# Warmup Iteration   6: 5221.920 ns/op
# Warmup Iteration   7: 5234.932 ns/op
# Warmup Iteration   8: 5230.642 ns/op
# Warmup Iteration   9: 5200.988 ns/op
# Warmup Iteration  10: 5200.397 ns/op
Iteration   1: 5188.480 ns/op
Iteration   2: 5191.076 ns/op
Iteration   3: 5223.282 ns/op
Iteration   4: 5200.660 ns/op
Iteration   5: 5254.462 ns/op
Iteration   6: 5201.015 ns/op
Iteration   7: 5226.459 ns/op
Iteration   8: 5213.019 ns/op
Iteration   9: 5231.484 ns/op
Iteration  10: 5212.812 ns/op
Iteration  11: 5225.090 ns/op
Iteration  12: 5230.553 ns/op
Iteration  13: 5214.711 ns/op
Iteration  14: 5226.801 ns/op
Iteration  15: 5250.595 ns/op
Iteration  16: 5223.702 ns/op
Iteration  17: 5223.972 ns/op
Iteration  18: 5243.471 ns/op
Iteration  19: 5220.477 ns/op
Iteration  20: 5216.769 ns/op

# Run progress: 99.17% complete, ETA 00:03:20
# Fork: 2 of 2
# Warmup Iteration   1: 35793.363 ns/op
# Warmup Iteration   2: 13228.793 ns/op
# Warmup Iteration   3: 6920.039 ns/op
# Warmup Iteration   4: 5860.778 ns/op
# Warmup Iteration   5: 5603.993 ns/op
# Warmup Iteration   6: 5793.489 ns/op
# Warmup Iteration   7: 5749.331 ns/op
# Warmup Iteration   8: 5872.064 ns/op
# Warmup Iteration   9: 5861.271 ns/op
# Warmup Iteration  10: 5638.323 ns/op
Iteration   1: 5919.127 ns/op
Iteration   2: 5711.517 ns/op
Iteration   3: 5630.757 ns/op
Iteration   4: 5767.891 ns/op
Iteration   5: 5730.957 ns/op
Iteration   6: 5841.324 ns/op
Iteration   7: 5642.344 ns/op
Iteration   8: 5797.345 ns/op
Iteration   9: 5815.814 ns/op
Iteration  10: 5764.145 ns/op
Iteration  11: 5836.771 ns/op
Iteration  12: 5775.580 ns/op
Iteration  13: 5723.822 ns/op
Iteration  14: 5627.567 ns/op
Iteration  15: 5781.943 ns/op
Iteration  16: 5875.847 ns/op
Iteration  17: 5828.627 ns/op
Iteration  18: 5682.385 ns/op
Iteration  19: 5573.526 ns/op
Iteration  20: 5695.053 ns/op


Result "io.github.azagniotov.stubby4j.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedRequestWithStubbedResponseWhenBothHaveManyHeaders":
  5486.031 ±(99.9%) 155.353 ns/op [Average]
  (min, avg, max) = (5188.480, 5486.031, 5919.127), stdev = 276.140
  CI (99.9%): [5330.678, 5641.384] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedResponseWithSequenceResponses

# Run progress: 99.25% complete, ETA 00:03:01
# Fork: 1 of 2
# Warmup Iteration   1: 18279.069 ns/op
# Warmup Iteration   2: 5463.739 ns/op
# Warmup Iteration   3: 2868.132 ns/op
# Warmup Iteration   4: 2796.123 ns/op
# Warmup Iteration   5: 2806.608 ns/op
# Warmup Iteration   6: 2799.367 ns/op
# Warmup Iteration   7: 2804.832 ns/op
# Warmup Iteration   8: 2800.425 ns/op
# Warmup Iteration   9: 2796.888 ns/op
# Warmup Iteration  10: 2813.863 ns/op
Iteration   1: 2805.922 ns/op
Iteration   2: 2806.109 ns/op
Iteration   3: 2819.763 ns/op
Iteration   4: 2794.424 ns/op
Iteration   5: 2806.713 ns/op
Iteration   6: 2800.737 ns/op
Iteration   7: 2817.630 ns/op
Iteration   8: 2801.423 ns/op
Iteration   9: 2804.601 ns/op
Iteration  10: 2796.726 ns/op
Iteration  11: 2808.556 ns/op
Iteration  12: 2823.551 ns/op
Iteration  13: 2813.947 ns/op
Iteration  14: 2805.604 ns/op
Iteration  15: 2807.327 ns/op
Iteration  16: 2805.387 ns/op
Iteration  17: 2806.866 ns/op
Iteration  18: 2820.324 ns/op
Iteration  19: 2797.917 ns/op
Iteration  20: 2812.334 ns/op

# Run progress: 99.32% complete, ETA 00:02:43
# Fork: 2 of 2
# Warmup Iteration   1: 14125.732 ns/op
# Warmup Iteration   2: 5643.864 ns/op
# Warmup Iteration   3: 2873.501 ns/op
# Warmup Iteration   4: 2814.162 ns/op
# Warmup Iteration   5: 2784.982 ns/op
# Warmup Iteration   6: 2797.572 ns/op
# Warmup Iteration   7: 2823.423 ns/op
# Warmup Iteration   8: 2807.912 ns/op
# Warmup Iteration   9: 2803.465 ns/op
# Warmup Iteration  10: 2804.060 ns/op
Iteration   1: 2800.099 ns/op
Iteration   2: 2807.944 ns/op
Iteration   3: 2798.041 ns/op
Iteration   4: 2809.930 ns/op
Iteration   5: 2816.754 ns/op
Iteration   6: 2820.161 ns/op
Iteration   7: 2828.274 ns/op
Iteration   8: 2816.530 ns/op
Iteration   9: 2805.014 ns/op
Iteration  10: 2792.235 ns/op
Iteration  11: 2805.186 ns/op
Iteration  12: 2798.705 ns/op
Iteration  13: 2797.918 ns/op
Iteration  14: 2789.753 ns/op
Iteration  15: 2798.418 ns/op
Iteration  16: 2831.711 ns/op
Iteration  17: 2817.896 ns/op
Iteration  18: 2811.611 ns/op
Iteration  19: 2800.843 ns/op
Iteration  20: 2798.650 ns/op


Result "io.github.azagniotov.stubby4j.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedResponseWithSequenceResponses":
  2807.538 ±(99.9%) 5.538 ns/op [Average]
  (min, avg, max) = (2789.753, 2807.538, 2831.711), stdev = 9.844
  CI (99.9%): [2802.000, 2813.076] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedResponseWithSequenceResponsesFoldedBodyAndFile

# Run progress: 99.40% complete, ETA 00:02:25
# Fork: 1 of 2
# Warmup Iteration   1: 15272.072 ns/op
# Warmup Iteration   2: 5782.303 ns/op
# Warmup Iteration   3: 2871.499 ns/op
# Warmup Iteration   4: 2787.970 ns/op
# Warmup Iteration   5: 2790.679 ns/op
# Warmup Iteration   6: 2787.952 ns/op
# Warmup Iteration   7: 2810.520 ns/op
# Warmup Iteration   8: 2772.005 ns/op
# Warmup Iteration   9: 2781.503 ns/op
# Warmup Iteration  10: 2793.148 ns/op
Iteration   1: 2787.936 ns/op
Iteration   2: 2790.531 ns/op
Iteration   3: 2771.667 ns/op
Iteration   4: 2789.235 ns/op
Iteration   5: 2788.446 ns/op
Iteration   6: 2801.307 ns/op
Iteration   7: 2777.126 ns/op
Iteration   8: 2799.462 ns/op
Iteration   9: 2776.042 ns/op
Iteration  10: 2787.726 ns/op
Iteration  11: 2784.386 ns/op
Iteration  12: 2776.680 ns/op
Iteration  13: 2794.438 ns/op
Iteration  14: 2763.760 ns/op
Iteration  15: 2777.948 ns/op
Iteration  16: 2780.079 ns/op
Iteration  17: 2779.992 ns/op
Iteration  18: 2773.263 ns/op
Iteration  19: 2772.200 ns/op
Iteration  20: 2771.669 ns/op

# Run progress: 99.47% complete, ETA 00:02:07
# Fork: 2 of 2
# Warmup Iteration   1: 14072.945 ns/op
# Warmup Iteration   2: 5354.298 ns/op
# Warmup Iteration   3: 2837.008 ns/op
# Warmup Iteration   4: 2759.095 ns/op
# Warmup Iteration   5: 2757.332 ns/op
# Warmup Iteration   6: 2771.658 ns/op
# Warmup Iteration   7: 2740.146 ns/op
# Warmup Iteration   8: 2767.374 ns/op
# Warmup Iteration   9: 2777.001 ns/op
# Warmup Iteration  10: 2749.662 ns/op
Iteration   1: 2779.732 ns/op
Iteration   2: 2742.026 ns/op
Iteration   3: 2734.056 ns/op
Iteration   4: 2742.624 ns/op
Iteration   5: 2739.691 ns/op
Iteration   6: 2762.093 ns/op
Iteration   7: 2769.446 ns/op
Iteration   8: 2728.112 ns/op
Iteration   9: 2787.442 ns/op
Iteration  10: 2760.634 ns/op
Iteration  11: 2770.710 ns/op
Iteration  12: 2788.380 ns/op
Iteration  13: 2773.697 ns/op
Iteration  14: 2775.547 ns/op
Iteration  15: 2771.638 ns/op
Iteration  16: 2764.467 ns/op
Iteration  17: 2754.375 ns/op
Iteration  18: 2756.671 ns/op
Iteration  19: 2791.349 ns/op
Iteration  20: 2783.055 ns/op


Result "io.github.azagniotov.stubby4j.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedResponseWithSequenceResponsesFoldedBodyAndFile":
  2772.991 ±(99.9%) 9.881 ns/op [Average]
  (min, avg, max) = (2728.112, 2772.991, 2801.307), stdev = 17.563
  CI (99.9%): [2763.110, 2782.872] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.yaml.YamlParserLoadTest._Benchmark.benchmark_loadTest_shouldUnmarshallHugeYamlIntoObjectTree_WhenYAMLValid

# Run progress: 99.55% complete, ETA 00:01:49
# Fork: 1 of 2
# Warmup Iteration   1: 1037511078.000 ns/op
# Warmup Iteration   2: 313189036.500 ns/op
# Warmup Iteration   3: 238160516.400 ns/op
# Warmup Iteration   4: 228900520.000 ns/op
# Warmup Iteration   5: 194113807.000 ns/op
# Warmup Iteration   6: 173597971.667 ns/op
# Warmup Iteration   7: 182311395.833 ns/op
# Warmup Iteration   8: 160238285.143 ns/op
# Warmup Iteration   9: 159049812.143 ns/op
# Warmup Iteration  10: 100428536.400 ns/op
Iteration   1: 74665372.286 ns/op
Iteration   2: 75764093.714 ns/op
Iteration   3: 86575600.667 ns/op
Iteration   4: 77727842.615 ns/op
Iteration   5: 74076494.429 ns/op
Iteration   6: 77601071.538 ns/op
Iteration   7: 76630143.357 ns/op
Iteration   8: 93924703.455 ns/op
Iteration   9: 82675590.000 ns/op
Iteration  10: 100778444.500 ns/op
Iteration  11: 100165549.200 ns/op
Iteration  12: 108611505.100 ns/op
Iteration  13: 94314128.000 ns/op
Iteration  14: 73877690.714 ns/op
Iteration  15: 74868094.429 ns/op
Iteration  16: 75762698.929 ns/op
Iteration  17: 75083220.286 ns/op
Iteration  18: 73470930.929 ns/op
Iteration  19: 73569571.929 ns/op
Iteration  20: 75405403.571 ns/op

# Run progress: 99.62% complete, ETA 00:01:31
# Fork: 2 of 2
# Warmup Iteration   1: 1094359955.000 ns/op
# Warmup Iteration   2: 301338559.000 ns/op
# Warmup Iteration   3: 237621804.000 ns/op
# Warmup Iteration   4: 208721747.400 ns/op
# Warmup Iteration   5: 206478078.800 ns/op
# Warmup Iteration   6: 174255090.333 ns/op
# Warmup Iteration   7: 164330104.714 ns/op
# Warmup Iteration   8: 150395526.143 ns/op
# Warmup Iteration   9: 149564310.714 ns/op
# Warmup Iteration  10: 86731443.833 ns/op
Iteration   1: 79454100.385 ns/op
Iteration   2: 84786079.417 ns/op
Iteration   3: 85232643.333 ns/op
Iteration   4: 80908044.308 ns/op
Iteration   5: 76299350.357 ns/op
Iteration   6: 76481133.786 ns/op
Iteration   7: 74424314.857 ns/op
Iteration   8: 77669001.000 ns/op
Iteration   9: 76973922.846 ns/op
Iteration  10: 97716026.727 ns/op
Iteration  11: 88385842.583 ns/op
Iteration  12: 83846947.000 ns/op
Iteration  13: 76797499.214 ns/op
Iteration  14: 75429018.643 ns/op
Iteration  15: 76428447.643 ns/op
Iteration  16: 75508922.357 ns/op
Iteration  17: 77346968.462 ns/op
Iteration  18: 76084399.071 ns/op
Iteration  19: 82577027.385 ns/op
Iteration  20: 76019962.429 ns/op


Result "io.github.azagniotov.stubby4j.yaml.YamlParserLoadTest._Benchmark.benchmark_loadTest_shouldUnmarshallHugeYamlIntoObjectTree_WhenYAMLValid":
  81097945.036 ±(99.9%) 4937393.406 ns/op [Average]
  (min, avg, max) = (73470930.929, 81097945.036, 108611505.100), stdev = 8776212.444
  CI (99.9%): [76160551.630, 86035338.442] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.yaml.YamlParserTest._Benchmark.benchmark_isMainYamlHasIncludesFoundAsFalse

# Run progress: 99.70% complete, ETA 00:01:12
# Fork: 1 of 2
# Warmup Iteration   1: 1377.142 ns/op
# Warmup Iteration   2: 428.527 ns/op
# Warmup Iteration   3: 387.444 ns/op
# Warmup Iteration   4: 376.688 ns/op
# Warmup Iteration   5: 378.003 ns/op
# Warmup Iteration   6: 376.078 ns/op
# Warmup Iteration   7: 377.670 ns/op
# Warmup Iteration   8: 379.033 ns/op
# Warmup Iteration   9: 377.271 ns/op
# Warmup Iteration  10: 378.381 ns/op
Iteration   1: 377.655 ns/op
Iteration   2: 378.706 ns/op
Iteration   3: 378.889 ns/op
Iteration   4: 377.810 ns/op
Iteration   5: 379.075 ns/op
Iteration   6: 377.937 ns/op
Iteration   7: 377.037 ns/op
Iteration   8: 376.884 ns/op
Iteration   9: 377.661 ns/op
Iteration  10: 380.276 ns/op
Iteration  11: 380.527 ns/op
Iteration  12: 377.476 ns/op
Iteration  13: 377.057 ns/op
Iteration  14: 377.085 ns/op
Iteration  15: 376.349 ns/op
Iteration  16: 378.774 ns/op
Iteration  17: 377.098 ns/op
Iteration  18: 377.954 ns/op
Iteration  19: 377.131 ns/op
Iteration  20: 377.509 ns/op

# Run progress: 99.77% complete, ETA 00:00:54
# Fork: 2 of 2
# Warmup Iteration   1: 1162.505 ns/op
# Warmup Iteration   2: 410.862 ns/op
# Warmup Iteration   3: 385.409 ns/op
# Warmup Iteration   4: 384.348 ns/op
# Warmup Iteration   5: 386.875 ns/op
# Warmup Iteration   6: 384.218 ns/op
# Warmup Iteration   7: 385.234 ns/op
# Warmup Iteration   8: 383.372 ns/op
# Warmup Iteration   9: 384.208 ns/op
# Warmup Iteration  10: 383.527 ns/op
Iteration   1: 384.675 ns/op
Iteration   2: 384.007 ns/op
Iteration   3: 384.548 ns/op
Iteration   4: 385.218 ns/op
Iteration   5: 384.569 ns/op
Iteration   6: 384.581 ns/op
Iteration   7: 384.956 ns/op
Iteration   8: 382.858 ns/op
Iteration   9: 384.820 ns/op
Iteration  10: 387.389 ns/op
Iteration  11: 387.846 ns/op
Iteration  12: 385.084 ns/op
Iteration  13: 383.590 ns/op
Iteration  14: 385.351 ns/op
Iteration  15: 385.163 ns/op
Iteration  16: 383.695 ns/op
Iteration  17: 385.253 ns/op
Iteration  18: 384.825 ns/op
Iteration  19: 385.932 ns/op
Iteration  20: 384.956 ns/op


Result "io.github.azagniotov.stubby4j.yaml.YamlParserTest._Benchmark.benchmark_isMainYamlHasIncludesFoundAsFalse":
  381.455 ±(99.9%) 2.096 ns/op [Average]
  (min, avg, max) = (376.349, 381.455, 387.846), stdev = 3.726
  CI (99.9%): [379.359, 383.551] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-Ubuntu-120.04.1
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 10 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.azagniotov.stubby4j.yaml.YamlParserTest._Benchmark.benchmark_isMainYamlHasIncludesFoundAsTrue

# Run progress: 99.85% complete, ETA 00:00:36
# Fork: 1 of 2
# Warmup Iteration   1: 1135.994 ns/op
# Warmup Iteration   2: 403.183 ns/op
# Warmup Iteration   3: 380.023 ns/op
# Warmup Iteration   4: 381.915 ns/op
# Warmup Iteration   5: 378.754 ns/op
# Warmup Iteration   6: 381.748 ns/op
# Warmup Iteration   7: 381.701 ns/op
# Warmup Iteration   8: 381.201 ns/op
# Warmup Iteration   9: 378.934 ns/op
# Warmup Iteration  10: 381.399 ns/op
Iteration   1: 382.189 ns/op
Iteration   2: 382.826 ns/op
Iteration   3: 379.686 ns/op
Iteration   4: 379.160 ns/op
Iteration   5: 381.378 ns/op
Iteration   6: 380.332 ns/op
Iteration   7: 382.200 ns/op
Iteration   8: 382.347 ns/op
Iteration   9: 382.091 ns/op
Iteration  10: 382.749 ns/op
Iteration  11: 380.975 ns/op
Iteration  12: 382.574 ns/op
Iteration  13: 380.924 ns/op
Iteration  14: 382.368 ns/op
Iteration  15: 380.958 ns/op
Iteration  16: 381.208 ns/op
Iteration  17: 381.660 ns/op
Iteration  18: 380.928 ns/op
Iteration  19: 381.086 ns/op
Iteration  20: 382.494 ns/op

# Run progress: 99.92% complete, ETA 00:00:18
# Fork: 2 of 2
# Warmup Iteration   1: 1222.010 ns/op
# Warmup Iteration   2: 423.354 ns/op
# Warmup Iteration   3: 378.026 ns/op
# Warmup Iteration   4: 378.068 ns/op
# Warmup Iteration   5: 378.293 ns/op
# Warmup Iteration   6: 377.943 ns/op
# Warmup Iteration   7: 378.650 ns/op
# Warmup Iteration   8: 378.572 ns/op
# Warmup Iteration   9: 379.648 ns/op
# Warmup Iteration  10: 378.954 ns/op
Iteration   1: 378.349 ns/op
Iteration   2: 382.046 ns/op
Iteration   3: 380.021 ns/op
Iteration   4: 375.967 ns/op
Iteration   5: 378.125 ns/op
Iteration   6: 379.649 ns/op
Iteration   7: 379.044 ns/op
Iteration   8: 378.215 ns/op
Iteration   9: 377.443 ns/op
Iteration  10: 377.669 ns/op
Iteration  11: 378.304 ns/op
Iteration  12: 376.264 ns/op
Iteration  13: 379.609 ns/op
Iteration  14: 376.521 ns/op
Iteration  15: 377.871 ns/op
Iteration  16: 376.196 ns/op
Iteration  17: 376.796 ns/op
Iteration  18: 378.320 ns/op
Iteration  19: 377.716 ns/op
Iteration  20: 376.682 ns/op


Result "io.github.azagniotov.stubby4j.yaml.YamlParserTest._Benchmark.benchmark_isMainYamlHasIncludesFoundAsTrue":
  379.773 ±(99.9%) 1.220 ns/op [Average]
  (min, avg, max) = (375.967, 379.773, 382.826), stdev = 2.169
  CI (99.9%): [378.553, 380.994] (assumes normal distribution)


# Run complete. Total time: 06:44:44

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                                                                                                                  Mode  Cnt         Score         Error  Units
i.g.a.s.caching.CacheTest._Benchmark.benchmark_shouldBuildDefaultCache                                                                                                     avgt   40    695415.080 ±   40095.808  ns/op
i.g.a.s.caching.CacheTest._Benchmark.benchmark_shouldBuildNoOpCache                                                                                                        avgt   40       302.480 ±       0.722  ns/op
i.g.a.s.caching.CacheTest._Benchmark.benchmark_shouldClearCacheByKey                                                                                                       avgt   40    728858.430 ±   40301.245  ns/op
i.g.a.s.caching.CacheTest._Benchmark.benchmark_shouldNotClearCacheByKey                                                                                                    avgt   40    690784.257 ±   33788.412  ns/op
i.g.a.s.caching.NoOpStubHttpLifecycleCacheTest._Benchmark.benchmark_cache                                                                                                  avgt   40      1693.441 ±      19.120  ns/op
i.g.a.s.caching.NoOpStubHttpLifecycleCacheTest._Benchmark.benchmark_clearByKey                                                                                             avgt   40       482.116 ±       3.069  ns/op
i.g.a.s.caching.NoOpStubHttpLifecycleCacheTest._Benchmark.benchmark_putIfAbsentAndGet                                                                                      avgt   40       499.793 ±       1.695  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_enabledTlsWithAlpnHttp2WhenLongOptionGiven                                                                     avgt   40    766308.907 ±  134660.631  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_enabledTlsWithAlpnHttp2WhenShortOptionGiven                                                                    avgt   40    796908.378 ±  144900.938  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldBeFalseThatYamlIsNotProvided                                                                             avgt   40       441.801 ±       3.046  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldFailOnInvalidCommandlineLongOptionString                                                                 avgt   40      2705.793 ±      42.713  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldFailOnInvalidCommandlineShortOptionString                                                                avgt   40      2949.220 ±      25.526  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldFailOnMissingArgumentForExistingLongOption                                                               avgt   40      2906.335 ±      31.584  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldFailOnMissingArgumentForExistingShortOption                                                              avgt   40      2885.055 ±      20.326  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldRemoveOptionTlsWithAlpnHttp2WhenDisableSslGiven                                                          avgt   40   2170870.170 ±  227059.836  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldReturnCommandlineParams                                                                                  avgt   40   1206178.057 ±  215908.017  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldReturnEmptyCommandlineParams                                                                             avgt   40       438.934 ±       1.471  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_shouldReturnOneCommandlineParamWhenHelpArgPresent                                                              avgt   40    770976.782 ±  137522.551  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasAdminPortWhenLongOptionGiven                                                                            avgt   40    787131.603 ±  147106.806  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasKeystoreLocationWhenLongOptionGiven                                                                     avgt   40    783781.342 ±  141182.911  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasLocationWhenLongOptionGiven                                                                             avgt   40    795779.891 ±  147831.891  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasPasswordWhenLongOptionGiven                                                                             avgt   40    800921.389 ±  147613.494  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasPasswordWhenShortOptionGiven                                                                            avgt   40    794354.194 ±  145778.226  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasSslPortWhenLongOptionGiven                                                                              avgt   40    776933.954 ±  140316.290  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testHasSslPortWhenShortOptionGiven                                                                             avgt   40    806761.931 ±  153527.147  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsAdminPortalDisabledWhenLongOptionGiven                                                                   avgt   40    787739.989 ±  140345.348  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsAdminPortalDisabledWhenShortOptionGiven                                                                  avgt   40    798173.699 ±  147935.163  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsCacheDisabledWhenLongOptionGiven                                                                         avgt   40    788562.273 ±  142586.650  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsCacheDisabledWhenShortOptionGiven                                                                        avgt   40    821592.214 ±  155344.383  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsDebugWhenLongOptionGiven                                                                                 avgt   40       525.196 ±       1.038  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsDebugWhenShortgOptionGiven                                                                               avgt   40       524.884 ±       1.029  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsHelpWhenLongOptionGiven                                                                                  avgt   40       528.094 ±       1.583  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsHelpWhenShortOptionGiven                                                                                 avgt   40       530.838 ±       3.790  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsMuteWhenLongOptionGiven                                                                                  avgt   40       524.876 ±       1.632  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsMuteWhenShortOptionGiven                                                                                 avgt   40       525.382 ±       0.948  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsSslDisabledWhenLongOptionGiven                                                                           avgt   40    740206.518 ±  137410.334  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsSslDisabledWhenShortOptionGiven                                                                          avgt   40    777939.771 ±  145557.581  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsVersionWhenLongOptionGiven                                                                               avgt   40       537.920 ±       1.034  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsVersionWhenShortOptionGiven                                                                              avgt   40       527.120 ±       1.136  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsWatchWhenLongOptionGiven                                                                                 avgt   40    783850.665 ±  143891.622  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsYamlProvidedWhenLongOptionGiven                                                                          avgt   40       564.005 ±       0.797  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testIsYamlProvidedWhenShortOptionGiven                                                                         avgt   40       558.885 ±       1.143  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testtHasAdminPortWhenShortOptionGiven                                                                          avgt   40    785538.869 ±  143174.593  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testtHasKeystoreLocationWhenShortOptionGiven                                                                   avgt   40    769329.313 ±  131502.026  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testtHasLocationWhenShortOptionGiven                                                                           avgt   40    786804.097 ±  141604.903  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testtHasStubsPortWhenLongOptionGiven                                                                           avgt   40    785385.318 ±  143562.010  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testtHasStubsPortWhenShortOptionGiven                                                                          avgt   40    796321.304 ±  143954.441  ns/op
i.g.a.s.cli.CommandLineInterpreterTest._Benchmark.benchmark_testtIsWatchWhenShortOptionGiven                                                                               avgt   40    785636.095 ±  141913.926  ns/op
i.g.a.s.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForNotFoundResponse                                               avgt   40       395.592 ±       1.001  ns/op
i.g.a.s.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForRedirectResponseWithStubResponseCode301                        avgt   40       421.472 ±       0.984  ns/op
i.g.a.s.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForRedirectResponseWithStubResponseCode302                        avgt   40       420.193 ±       2.034  ns/op
i.g.a.s.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForRedirectResponseWithStubResponseCode302_Found                  avgt   40       380.750 ±       0.663  ns/op
i.g.a.s.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForRedirectResponseWithStubResponseCode303                        avgt   40       436.390 ±      10.098  ns/op
i.g.a.s.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForRedirectResponseWithStubResponseCode307                        avgt   40       421.421 ±       1.483  ns/op
i.g.a.s.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForRedirectResponseWithStubResponseCode308                        avgt   40       423.598 ±       1.174  ns/op
i.g.a.s.handlers.strategy.HandlingStrategyFactoryTest._Benchmark.benchmark_shouldIdentifyResponseStrategyForUnauthorizedResponse                                           avgt   40       393.979 ±       0.698  ns/op
i.g.a.s.parser.json.JSONAssertTest._Benchmark.benchmark_shouldCompareTwoJsonArraysWithDifferentContentOrder                                                                avgt   40       802.425 ±      13.027  ns/op
i.g.a.s.parser.json.JSONAssertTest._Benchmark.benchmark_shouldCompareTwoJsonComplexGraphsWithDifferentContentOrder                                                         avgt   40       771.104 ±       3.066  ns/op
i.g.a.s.server.ssl.CustomHostnameVerifierTest._Benchmark.benchmark_expectedSubjectAltNames                                                                                 avgt   40      1518.266 ±      16.337  ns/op
i.g.a.s.server.ssl.CustomHostnameVerifierTest._Benchmark.benchmark_nonSubjectAltNames                                                                                      avgt   40      2083.497 ±     288.984  ns/op
i.g.a.s.server.ssl.CustomHostnameVerifierTest._Benchmark.benchmark_stubbySelfSignedCertificateShouldContainPrivateIp                                                       avgt   40      1524.040 ±       9.295  ns/op
i.g.a.s.server.ssl.CustomHostnameVerifierTest._Benchmark.benchmark_stubbySelfSignedCertificateShouldNotHaveX500PrincipalNameLocalhost                                      avgt   40      1498.414 ±      11.417  ns/op
i.g.a.s.server.ssl.CustomHostnameVerifierTest._Benchmark.benchmark_subjectAltNamesMustContain127_0_0_1                                                                     avgt   40      2888.128 ±     394.512  ns/op
i.g.a.s.server.ssl.CustomHostnameVerifierTest._Benchmark.benchmark_subjectAltNamesMustContainLocalhost                                                                     avgt   40      1618.637 ±      15.635  ns/op
i.g.a.s.server.ssl.LanIPv4ValidatorTest._Benchmark.benchmark_isNotPrivateIp                                                                                                avgt   40      1672.143 ±       2.736  ns/op
i.g.a.s.server.ssl.LanIPv4ValidatorTest._Benchmark.benchmark_isPrivateIp                                                                                                   avgt   40      2300.436 ±       8.845  ns/op
i.g.a.s.server.ssl.SslUtilsTest._Benchmark.benchmark_certificateShouldBeVersion3                                                                                           avgt   40      1449.568 ±      13.397  ns/op
i.g.a.s.server.ssl.SslUtilsTest._Benchmark.benchmark_certificateShouldContainExpectedSubjectAltIps                                                                         avgt   40      3095.818 ±      27.827  ns/op
i.g.a.s.server.ssl.SslUtilsTest._Benchmark.benchmark_certificateSigAlgNameShouldBeSHA256withRSA                                                                            avgt   40      1406.327 ±      12.381  ns/op
i.g.a.s.stubs.RegexParserTest._Benchmark.benchmark_shouldDetermineStringAsPotentialRegexPatterns                                                                           avgt   40      1857.178 ±       8.178  ns/op
i.g.a.s.stubs.RegexParserTest._Benchmark.benchmark_shouldMatchSubjectWithMultiline                                                                                         avgt   40     20683.490 ±     305.730  ns/op
i.g.a.s.stubs.RegexParserTest._Benchmark.benchmark_shouldNotMatchWhenRegexPatternWithSyntaxError                                                                           avgt   40      5774.493 ±      39.545  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldAuthorizeViaBearer_WhenAuthorizationHeaderBearerEquals                                               avgt   40     84689.898 ±    3498.373  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldFindStubHttpLifecycleEqual_WhenComparedToItself                                                      avgt   40       552.688 ±       4.945  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldFindStubHttpLifecycleNotEqual_WhenComparedToDifferentInstanceClass                                   avgt   40       585.589 ±       0.943  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldGetRawBasicAuthorizationHttpHeader                                                                   avgt   40       781.468 ±       3.447  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldGetRawBearerAuthorizationHttpHeader                                                                  avgt   40       793.663 ±       5.328  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldNotAuthorizeViaBasic_WhenAssertingAuthorizationHeaderBasicIsNotSet                                   avgt   40      1051.270 ±       6.053  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldNotAuthorizeViaBasic_WhenAuthorizationHeaderBasicIsNotTheSame                                        avgt   40     81370.712 ±    2750.807  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldNotAuthorizeViaBearer_WhenAssertingAuthorizationHeaderBearerIsNotSet                                 avgt   40     76002.074 ±    2483.571  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldNotAuthorizeViaBearer_WhenAuthorizationHeaderBearerIsNotTheSame                                      avgt   40     78851.064 ±    3935.835  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldRequireBasicAuthorization                                                                            avgt   40       770.179 ±       1.267  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldRequireBearerAuthorization                                                                           avgt   40       762.522 ±       4.099  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldReturnAjaxResponseContent_WhenStubTypeRequest                                                        avgt   40      1403.795 ±      92.863  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldReturnAjaxResponseContent_WhenStubTypeResponse                                                       avgt   40      1353.076 ±       4.609  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldReturnDescription_WhenDescription                                                                    avgt   40       533.529 ±       7.726  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldReturnSecondSequenceResponseAfterSecondCall_WhenTwoSequenceResponsePresent                           avgt   40       960.056 ±       3.399  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldReturnSequenceResponse_WhenOneSequenceResponsePresent                                                avgt   40       852.444 ±       1.432  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldThrow_WhenResponseObjectIsNotCollectionType                                                          avgt   40      3312.674 ±      15.951  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldThrow_WhenResponseObjectIsNotStubResponseType                                                        avgt   40      3328.202 ±      18.269  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldVerifyBehaviour_WhenAuthorizationHeaderBasicEquals                                                   avgt   40    186094.895 ±   13704.246  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldVerifyBehaviour_WhenAuthorizationHeaderBasicIsNotTheSame                                             avgt   40    199265.671 ±    4228.798  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldVerifyBehaviour_WhenAuthorizationHeaderBearerEquals                                                  avgt   40    186076.651 ±    7511.204  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldVerifyBehaviour_WhenAuthorizationHeaderBearerIsNotSet                                                avgt   40    191092.451 ±    4175.898  ns/op
i.g.a.s.stubs.StubHttpLifecycleBuilderTest._Benchmark.benchmark_shouldVerifyBehaviour_WhenAuthorizationHeaderBearerIsNotTheSame                                            avgt   40    193578.147 ±    5131.170  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_arraysIntersect_ShouldReturnFalse_WhenAssertingArrayEmpty                                                               avgt   40       323.056 ±       1.516  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_arraysIntersect_ShouldReturnFalse_WhenTwoArraysDontHaveTheSameElements                                                  avgt   40       349.146 ±       0.691  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_arraysIntersect_ShouldReturnTrue_WhenDataStoreArrayEmpty                                                                avgt   40       321.742 ±       1.293  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_arraysIntersect_ShouldReturnTrue_WhenTwoArraysHaveTheSameElements                                                       avgt   40       343.419 ±       0.631  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_mapsMatch_ShouldReturnFalse_WhenAssertingMapDoesNotContainDataStoreKey                                                  avgt   40       514.873 ±       1.187  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_mapsMatch_ShouldReturnFalse_WhenAssertingMapDoesNotContainDataStoreValue                                                avgt   40       991.828 ±       2.212  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_mapsMatch_ShouldReturnFalse_WhenDataStoreMapNotEmptyAndAssertingMapEmpty                                                avgt   40       356.017 ±       3.844  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_mapsMatch_ShouldReturnTrue_WhenAssertingMapMatchesDataStoreMap                                                          avgt   40      1197.359 ±      31.793  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_mapsMatch_ShouldReturnTrue_WhenDataStoreMapEmpty                                                                        avgt   40       372.840 ±       3.948  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_mapsMatch_ShouldReturnTrue_WhenDataStoreMapEmptyAndAssertingMapEmpty                                                    avgt   40       323.930 ±       1.431  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesDoNotMatch_ShouldReturnFalse_WhenDifferentXmlWithAttributes                                                   avgt   40   6148043.102 ±  650742.574  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatchUsingComplexVanillaRegex_ShouldReturnTrue                                                                avgt   40    703331.447 ±   39396.996  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatchUsingVanillaRegex_ShouldReturnTrue                                                                       avgt   40    661029.837 ±   33470.460  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatchUsingXMLUnitRegexPlaceholder_ShouldReturnTrue                                                            avgt   40   7264158.946 ±  590161.112  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnFalse_WhenAssertingBodyWhitespace                                                           avgt   40       724.812 ±       4.265  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnFalse_WhenAssertingPostBodyNull                                                             avgt   40       718.604 ±       2.836  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnFalse_WhenDifferentJson                                                                     avgt   40      2915.197 ±       9.188  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnFalse_WhenDifferentXml                                                                      avgt   40   5250778.902 ±  489783.271  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnFalse_WhenNonEquivalentStringWithInvalidContentType                                         avgt   40      1252.041 ±       5.000  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnFalse_WhenStringNotMatch                                                                    avgt   40      1001.670 ±      11.223  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentJson                                                                     avgt   40      1669.587 ±       6.079  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentJsonWithCustomContentType                                                avgt   40      1728.839 ±       6.884  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentJsonWithCustomContentTypeAndCharset                                      avgt   40      1754.779 ±       4.566  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentStringWithInvalidContentType                                             avgt   40      1352.945 ±      10.080  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentXml                                                                      avgt   40   5485697.911 ±  511963.566  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentXmlWithAttributes                                                        avgt   40   6897698.798 ±  643147.986  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentXmlWithCustomContentType                                                 avgt   40   5656507.655 ±  446598.775  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenEquivalentXmlWithCustomContentTypeAndCharset                                       avgt   40   5364318.020 ±  481937.303  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenIsPostStubbedFalse                                                                 avgt   40       430.902 ±       2.664  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_postBodiesMatch_ShouldReturnTrue_WhenStringMatch                                                                        avgt   40      1125.554 ±       4.739  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_stringsMatch_ShouldReturnFalse_WhenAssertingValueEmpty                                                                  avgt   40       316.529 ±       0.867  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_stringsMatch_ShouldReturnFalse_WhenAssertingValueNull                                                                   avgt   40       320.073 ±       1.013  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_stringsMatch_ShouldReturnTrue_WhenDataStoreValueEmpty                                                                   avgt   40       321.541 ±       0.526  ns/op
i.g.a.s.stubs.StubMatcherTest._Benchmark.benchmark_stringsMatch_ShouldReturnTrue_WhenDataStoreValueNull                                                                    avgt   40       318.444 ±       0.588  ns/op
i.g.a.s.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_shouldThrowWhenUnexpectedProxyStrategyPassedIn                                                               avgt   40      2060.732 ±      25.803  ns/op
i.g.a.s.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigAsYaml                                                                                     avgt   40       577.014 ±       5.797  ns/op
i.g.a.s.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigDefaultStrategyNotAdditive                                                                 avgt   40       491.928 ±       4.253  ns/op
i.g.a.s.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigEqualsAssertingConfig                                                                      avgt   40      1100.232 ±      11.317  ns/op
i.g.a.s.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigEqualsAssertingConfig_WhenProxyConfigDescriptionDifferent                                  avgt   40       513.848 ±       2.747  ns/op
i.g.a.s.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigEqualsAssertingConfig_WhenProxyNameNull                                                    avgt   40       519.700 ±       3.549  ns/op
i.g.a.s.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigHasDefaultUuid                                                                             avgt   40       447.946 ±       1.698  ns/op
i.g.a.s.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigHasNoHeaders                                                                               avgt   40       473.465 ±       2.990  ns/op
i.g.a.s.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigHashCode                                                                                   avgt   40       818.496 ±       4.802  ns/op
i.g.a.s.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigNameResetsToDefaultUuid                                                                    avgt   40       561.529 ±       1.318  ns/op
i.g.a.s.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigNotEqualsAssertingConfig                                                                   avgt   40       690.503 ±       1.558  ns/op
i.g.a.s.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigNotEqualsAssertingConfigWithDifferentHeader                                                avgt   40      1194.182 ±       9.553  ns/op
i.g.a.s.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigNotEqualsAssertingConfig_WhenProxyNamesDifferent                                           avgt   40       512.745 ±       3.259  ns/op
i.g.a.s.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigNotEqualsAssertingConfig_WhenProxyPropertiesDifferent                                      avgt   40       654.229 ±       2.114  ns/op
i.g.a.s.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigReturnsExpectedEndpointAndDescription                                                      avgt   40       675.881 ±       1.089  ns/op
i.g.a.s.stubs.StubProxyConfigBuilderTest._Benchmark.benchmark_stubbedProxyConfigStrategyAdditive                                                                           avgt   40       528.768 ±       1.725  ns/op
i.g.a.s.stubs.StubRepositoryTest._Benchmark.benchmark_canMatchHttpCycleByUuid                                                                                              avgt   40   1202111.890 ±  101377.519  ns/op
i.g.a.s.stubs.StubRepositoryTest._Benchmark.benchmark_shouldDeleteOriginalHttpCycleList_WhenInvalidIndexGiven                                                              avgt   40   1298884.497 ±  105590.219  ns/op
i.g.a.s.stubs.StubRepositoryTest._Benchmark.benchmark_shouldDeleteOriginalHttpCycleList_WhenStubsDontExist                                                                 avgt   40   1049296.655 ±  107284.036  ns/op
i.g.a.s.stubs.StubRepositoryTest._Benchmark.benchmark_shouldDeleteOriginalHttpCycleList_WhenStubsExist                                                                     avgt   40   1301750.984 ±   97161.257  ns/op
i.g.a.s.stubs.StubRepositoryTest._Benchmark.benchmark_shouldDeleteOriginalHttpCycleList_WhenValidIndexGiven                                                                avgt   40   1333604.653 ±  114746.094  ns/op
i.g.a.s.stubs.StubRepositoryTest._Benchmark.benchmark_shouldDeleteProxyConfigsByUuid                                                                                       avgt   40   1710629.089 ±  145393.698  ns/op
i.g.a.s.stubs.StubRepositoryTest._Benchmark.benchmark_shouldDeleteStubsByUuid                                                                                              avgt   40   1874114.288 ±  171144.761  ns/op
i.g.a.s.stubs.StubRepositoryTest._Benchmark.benchmark_shouldExpungeOriginalHttpCycleList_WhenNewHttpCyclesGiven                                                            avgt   40   1208812.662 ±  105291.249  ns/op
i.g.a.s.stubs.StubRepositoryTest._Benchmark.benchmark_shouldFailDeletingDefaultProxyConfigByUuid                                                                           avgt   40   1290889.664 ±   95139.828  ns/op
i.g.a.s.stubs.StubRepositoryTest._Benchmark.benchmark_shouldFailToGetMarshalledYamlByIndex_WhenInvalidHttpCycleListIndexGiven                                              avgt   40   1266891.910 ±  110647.628  ns/op
i.g.a.s.stubs.StubRepositoryTest._Benchmark.benchmark_shouldFailUpdatingProxyConfigByUuidWhenUuidDoNotMatch                                                                avgt   40   1355681.453 ±  104358.907  ns/op
i.g.a.s.stubs.StubRepositoryTest._Benchmark.benchmark_shouldGetMarshalledYamlByIndex_WhenValidHttpCycleListIndexGiven                                                      avgt   40   1229053.172 ±  105470.821  ns/op
i.g.a.s.stubs.StubRepositoryTest._Benchmark.benchmark_shouldMatchHttplifecycle_WhenValidIndexGiven                                                                         avgt   40   1265625.757 ±  101077.632  ns/op
i.g.a.s.stubs.StubRepositoryTest._Benchmark.benchmark_shouldMatchProxyConfig_WhenUniqueProxyNameGiven                                                                      avgt   40   1316581.494 ±   91789.108  ns/op
i.g.a.s.stubs.StubRepositoryTest._Benchmark.benchmark_shouldNotMatchHttplifecycle_WhenInvalidIndexGiven                                                                    avgt   40   1214237.025 ±  109233.516  ns/op
i.g.a.s.stubs.StubRepositoryTest._Benchmark.benchmark_shouldUpdateProxyConfigsByUuid                                                                                       avgt   40   1839696.870 ±  147851.798  ns/op
i.g.a.s.stubs.StubRepositoryTest._Benchmark.benchmark_shouldUpdateStubHttpLifecycleByIndex_WhenInvalidHttpCycleListIndexGiven                                              avgt   40   1444682.248 ±  127614.798  ns/op
i.g.a.s.stubs.StubRepositoryTest._Benchmark.benchmark_shouldUpdateStubHttpLifecycleByIndex_WhenValidHttpCycleListIndexGiven                                                avgt   40   1339076.755 ±  110027.895  ns/op
i.g.a.s.stubs.StubRepositoryTest._Benchmark.benchmark_shouldUpdateStubsByUuid                                                                                              avgt   40   2372405.444 ±  239692.027  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_isNotSecured_WhenNoAuthorizationStubbed                                                                          avgt   40       526.957 ±       1.115  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_isSecured_WhenAuthorizationBasicStubbed                                                                          avgt   40       687.985 ±       1.271  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_isSecured_WhenAuthorizationBearerStubbed                                                                         avgt   40       753.519 ±       2.188  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_isSecured_WhenAuthorizationCustomStubbed                                                                         avgt   40       845.643 ±       2.916  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldAddMethod_WhenGivenMethodArgumentEmpty                                                                     avgt   40       754.105 ±       1.896  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldAddMethod_WhenGivenMethodArgumentNull                                                                      avgt   40       764.052 ±       2.482  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldAddMethod_WhenGivenMethodArgumentSet                                                                       avgt   40       795.437 ±       2.190  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldComputeRegexPatterns                                                                                       avgt   40      8065.815 ±      60.334  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindPostNotStubbed_WhenPostEmptyAndMethodPost                                                              avgt   40       504.766 ±       1.369  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindPostNotStubbed_WhenPostEmptyAndMethodPut                                                               avgt   40       491.339 ±       1.114  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindPostNotStubbed_WhenPostNullAndMethodGet                                                                avgt   40       495.470 ±       1.050  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindPostNotStubbed_WhenPostNullAndMethodPost                                                               avgt   40       498.260 ±       7.301  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindPostNotStubbed_WhenPostNullAndMethodPut                                                                avgt   40       505.879 ±       4.750  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindPostNotStubbed_WhenPostStubbedAndMethodGet                                                             avgt   40       781.654 ±       4.602  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindRequestBodyNotStubbed_WhenJustMethodPatch                                                              avgt   40       495.509 ±       4.711  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindRequestBodyStubbed_WhenPostStubbedAndMethodPatch                                                       avgt   40       762.169 ±       2.563  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindRequestBodyStubbed_WhenPostStubbedAndMethodPost                                                        avgt   40       636.059 ±       1.496  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindRequestBodyStubbed_WhenPostStubbedAndMethodPut                                                         avgt   40       710.922 ±       1.443  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindTwoHashCodesEqual_WhenTwoRequestAreTheSame                                                             avgt   40    654858.769 ±    4513.905  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindTwoHashCodesEqual_WhenTwoRequestHaveMethodAndUrlNull                                                   avgt   40       565.809 ±       1.233  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldFindTwoHashCodesEqual_WhenTwoRequestHaveUrlNull                                                            avgt   40       667.909 ±       1.885  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetAuthorizationTypeBasic_WhenBasicAuthorizationStubbed                                                    avgt   40       666.068 ±       6.440  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetAuthorizationTypeBearer_WhenBearerAuthorizationStubbed                                                  avgt   40       836.308 ±      63.759  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetAuthorizationTypeCustom_WhenCustomAuthorizationStubbed                                                  avgt   40       737.602 ±       2.664  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetPostBody_WhenPostNotProvided_ButFileSet                                                                 avgt   40    328445.875 ±    2981.214  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetPostBody_WhenPostProvided_ButFileIsEmpty                                                                avgt   40     61375.454 ±    1312.019  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetPostBody_WhenPostProvided_ButFileIsNull                                                                 avgt   40       503.363 ±       2.275  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetStubbedRequestBodyTokenNameAsFile                                                                       avgt   40    414152.424 ±   45697.480  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldGetStubbedRequestBodyTokenNameAsPost                                                                       avgt   40       513.321 ±       2.511  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldMatchExpectedToStringOutput_WhenActualRequestHasAllNullFields                                              avgt   40       622.406 ±       4.924  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldMatchExpectedToStringOutput_WhenActualRequestHasNullBody                                                   avgt   40      1483.388 ±       4.929  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldMatchExpectedToStringOutput_WhenActualRequestHasNullHeaderValue                                            avgt   40      1504.645 ±       4.349  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldMatchExpectedToStringOutput_WhenActualRequestHasTheSameOutput                                              avgt   40      1500.852 ±      12.405  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldNotFindTwoHashCodesEqual_WhenTwoRequestHaveDifferentAmdNullPostBody                                        avgt   40      1166.516 ±       3.047  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldNotFindTwoHashCodesEqual_WhenTwoRequestHaveDifferentHeaderValue                                            avgt   40      1158.250 ±       2.554  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldNotStage_WhenConfigurablePropertyPresentButFieldValueMissing                                               avgt   40       380.933 ±       1.086  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldStage_WhenConfigurablePropertyAndFieldValuePresent                                                         avgt   40       439.145 ±       1.904  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldfindStubRequestEqual_WhenComparedToDifferentObjectWithSameProperties                                       avgt   40    135594.490 ±    8507.831  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldfindStubRequestEqual_WhenComparedToSameIdentity                                                            avgt   40       496.171 ±       0.975  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldfindStubRequestEqual_WhenComparedToSameInstanceClass                                                       avgt   40     33771.383 ±    1716.689  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldfindStubRequestNotEqual_WhenComparedToDifferentInstanceClass                                               avgt   40       550.629 ±       1.452  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_shouldfindStubRequestNotEqual_WhenComparedToNull                                                                 avgt   40       496.919 ±       1.224  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenAllHeadersStubbedCamelCased                                             avgt   40    103441.359 ±    5988.102  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenAllHeadersSubmittedCamelCased                                           avgt   40    103599.519 ±    5797.058  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenAllHttpHeadersMatch                                                     avgt   40    105635.175 ±    6503.332  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenAllQueryParamsMatch                                                     avgt   40    104938.781 ±    5978.041  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenAllStubbedHeadersMatch                                                  avgt   40    109275.211 ±    5675.908  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenComplexJsonPostRegexStubbedAndJsonPosted                                avgt   40    147839.023 ±    8377.218  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenComplexUrlRegexified_ButGoodAssertionUrlConfigured                      avgt   40    198560.473 ±   11372.657  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenEmptyUrlStubbed_AndEmptyUrlSubmitted                                    avgt   40     64169.116 ±    4926.194  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenHeaderRegexIsMatching                                                   avgt   40    105881.470 ±    6087.116  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenJsonPostRegexStubbedAndJsonPosted                                       avgt   40    137810.128 ±    7279.477  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenMethodStubbed_ButLowerCasedMethodSubmitted                              avgt   40     68441.110 ±    5431.282  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenNoHeadersWereStubbed_ButHeadersWereSetToAssert                          avgt   40     69187.578 ±    5101.853  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenNoMethodStubbed_ButMethodSubmitted                                      avgt   40     33510.927 ±    1794.473  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenNoPostBodyWasStubbed_ButPostBodyWasSubmitted                            avgt   40     66239.074 ±    4484.445  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenNoQueryParamsWereStubbed_ButQueryParamsWereSetToAssert                  avgt   40     65168.177 ±    3200.999  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenNullUrlStubbed_AndNullUrlSubmitted                                      avgt   40     64946.530 ±    3759.402  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenNullUrlStubbed_ButUrlSubmitted                                          avgt   40     67783.448 ±    3953.712  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPlainPostRegexStubbedAndPlainTextPosted                                 avgt   40    103779.465 ±    5365.323  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingAnyPostWithoutNewLineCharacter                         avgt   40     99923.529 ±    3613.609  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingPostWithCarriageReturnChar                             avgt   40    129536.449 ±    8752.510  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingPostWithCarriageReturnLinefeedChars                    avgt   40    131766.047 ±    7321.928  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingPostWithLinefeedChar                                   avgt   40    135448.565 ±    5594.216  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingPostWithSystemLineChar                                 avgt   40    127646.196 ±    9705.767  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingSingleLinePost                                         avgt   40    100663.244 ±    5885.841  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenPostRegexMatchingSubsectionOfMultiLineJsonPost                          avgt   40    103624.607 ±    5986.040  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamIsArray                                                       avgt   40    101604.063 ±    5477.329  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamRegexIsMatching                                               avgt   40    104917.989 ±    7179.300  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenQueryParamsInDifferentOrder                                             avgt   40    103615.102 ±    7156.764  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenRegexifiedUrlBeginsWithRegexSign_ItsProcessedAsRegex                    avgt   40     68129.157 ±    4826.521  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenRegexifiedUrlDoesNotBeginWithRegexSign_ItsNotProcessedAsRegex           avgt   40     67654.117 ±    4157.508  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenRootUrlsEquals                                                          avgt   40     65275.826 ±    5231.227  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStaticUrlHasRegexifiedQueryString                                       avgt   40    303504.692 ±   20920.388  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedRootUrlStartsWithRegex_ButSubmittedUrlRoot                       avgt   40     66960.595 ±    5262.718  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlHasOptionalTrailingSlash_ButNoSlashSubmitted                  avgt   40     70970.450 ±    3072.701  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlHasOptionalTrailingSlash_ButSlashSubmitted                    avgt   40     68115.408 ±    4412.273  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlRegexAnythingAround_AndUrlsEqual                              avgt   40     68647.740 ±    4338.317  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlRegexBeginsWith                                               avgt   40     67828.588 ±    3761.688  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlRegexEndsWith_AndSubmittedUrlHasExtraBeggining                avgt   40     66914.548 ±    3738.494  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlRegexExact_AndUrlsEqual                                       avgt   40     68059.017 ±    5698.344  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenStubbedUrlRegexGroups_AndUrlsEqual                                      avgt   40     68965.575 ±    3703.568  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenThereLargeSetupOfStubbedProperties                                      avgt   40    176933.575 ±    8255.330  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenThereLargeSetupOfStubbedProperties_ButNotAllHeadersSetToAssert          avgt   40    951419.765 ±   67587.854  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlConditionallyRegexified_ButGoodAssertionUrlConfigured                avgt   40    340853.581 ±   26572.907  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlConditionallyRegexified_ButGoodAssertionUrlConfigured_v2             avgt   40    272239.203 ±   14177.849  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlNotStubbed_ButUrlSubmitted                                           avgt   40     67664.391 ±    3665.795  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlPartiallyRegexified_ButGoodAssertionUrlConfigured                    avgt   40     68415.052 ±    4771.212  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlRegexifiedDoesNotAccommodateForQueryString                           avgt   40    205556.963 ±   12595.510  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlRegexified_ButGoodAssertionUrlConfigured                             avgt   40     67930.664 ±    4309.642  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestEqualsAssertingRequest_WhenUrlsEquals                                                              avgt   40     68484.752 ±    3443.591  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenComplexUrlRegexified_ButBadAssertionUrlConfigured                    avgt   40    196886.251 ±    7968.351  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenDifferentHttpMethod                                                  avgt   40     66524.485 ±    5117.233  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenDifferentPostBody                                                    avgt   40    103139.757 ±    6590.705  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenDifferentUri                                                         avgt   40     36650.688 ±    2806.512  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenHeaderRegexDoesNotMatch                                              avgt   40    105745.987 ±    6025.803  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenHeadersWereStubbed_ButNoHeadersSetToAssert                           avgt   40    102000.187 ±    5672.287  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenMethodStubbed_ButNoMethodSubmitted                                   avgt   40     66435.727 ±    4122.812  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenNotAllHeadersSetToAssert                                             avgt   40    104207.484 ±    5222.046  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenNotAllQueryParamsSetToAssert                                         avgt   40    101398.620 ±    4757.933  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenPostBodyWasStubbed_ButNoPostBodySubmitted                            avgt   40    101131.619 ±    5188.937  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamsMismatch                                                  avgt   40    102390.359 ±    7250.129  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenQueryParamsWereStubbed_ButNoQueryParamsWereSetToAssert               avgt   40     99340.221 ±    6256.661  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenSomeHeadersMismatches                                                avgt   40    103530.953 ±    5447.573  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenStubbedUrlHasRequiredTrailingSlash_ButNoSlashSubmitted               avgt   40     35333.756 ±    1914.384  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenStubbedUrlRegexBeginsWith_AndSubmittedUrlWrong                       avgt   40     35255.687 ±    1745.493  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenSubmittedUrlLonger                                                   avgt   40     33430.730 ±    2012.970  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenSubmittedUrlShorter                                                  avgt   40     35138.321 ±    2764.957  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenUrlRegexifiedAccomodatesForQueryString_ButBadAssertionUrlConfigured  avgt   40    101880.031 ±    4002.540  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenUrlRegexifiedHasQueryString                                          avgt   40    105035.144 ±    4724.413  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenUrlRegexifiedWithStaticQueryString                                   avgt   40    102861.647 ±    5104.142  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenUrlRegexified_ButBadAssertionUrlConfigured                           avgt   40     35141.292 ±    2007.841  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenUrlStubbed_ButNoUrlSubmitted                                         avgt   40     33723.151 ±    1810.360  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestNotEqualsAssertingRequest_WhenUrlStubbed_ButNullUrlSubmitted                                       avgt   40     34307.654 ±    2494.122  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnEmptyRegexGroup_WhenValidRegexHasNoMatcherGroups                                       avgt   40     67461.972 ±    3772.986  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnMultipleRegexGroups_WhenRegexHasCapturingGroupWhichIsAlsoFullRegex                     avgt   40     68992.927 ±    2925.480  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnMultipleRegexGroups_WhenValidRegexHasCapturingGroupsInMultipleProperties               avgt   40    105220.175 ±    5094.307  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnMultipleRegexGroups_WhenValidRegexHasCapturingGroupsInQuery                            avgt   40    110684.630 ±    5394.798  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnMultipleRegexGroups_WhenValidRegexHasMatcherGroups                                     avgt   40     69369.513 ±    3406.815  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnMultipleRegexGroups_WhenValidRegexHasMultipleSubCapturingGroups                        avgt   40     70417.590 ±    4612.893  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnMultipleRegexGroups_WhenValidRegexHasOneSubCapturingGroup                              avgt   40     69019.962 ±    4166.691  ns/op
i.g.a.s.stubs.StubRequestBuilderTest._Benchmark.benchmark_stubbedRequestShouldReturnOneRegexGroup_WhenValidRegexHasMatcherGroups                                           avgt   40     69639.165 ±    5053.044  ns/op
i.g.a.s.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldFindBodyNotTokenized_WhenRawFileIsTemplateFile                                                            avgt   40    420261.931 ±   52380.757  ns/op
i.g.a.s.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldFindBodyNotTokenized_WhenRawFileNotTemplateFile                                                           avgt   40    406182.166 ±   33505.327  ns/op
i.g.a.s.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldFindBodyTokenized_WhenBodyContainsTemplateTokens                                                          avgt   40       431.027 ±       0.920  ns/op
i.g.a.s.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldNotRequireRecording_WhenBodyDoesnotStartWithHttp                                                          avgt   40       441.979 ±       0.947  ns/op
i.g.a.s.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldNotRequireRecording_WhenBodyStartsWithHtt                                                                 avgt   40       441.167 ±       0.745  ns/op
i.g.a.s.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldNotStage_WhenConfigurablePropertyPresentButFieldValueMissing                                              avgt   40       343.539 ±       2.603  ns/op
i.g.a.s.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldRequireRecording_WhenBodyStartsWithHttp                                                                   avgt   40       437.377 ±       0.841  ns/op
i.g.a.s.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldRequireRecording_WhenBodyStartsWithHttpUpperCase                                                          avgt   40       467.889 ±       0.911  ns/op
i.g.a.s.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnBody_WhenFileIsEmpty                                                                                avgt   40     75024.177 ±   17347.383  ns/op
i.g.a.s.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnBody_WhenFileIsNull                                                                                 avgt   40       467.239 ±       0.872  ns/op
i.g.a.s.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnDefaultHttpStatusCode_WhenStatusFieldNull                                                           avgt   40       360.982 ±       0.976  ns/op
i.g.a.s.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnEmptyBody_WhenBodyIsEmpty                                                                           avgt   40       441.973 ±       1.872  ns/op
i.g.a.s.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnEmptyBody_WhenBodyIsEmpty_AndFileIsEmpty                                                            avgt   40       453.097 ±       2.527  ns/op
i.g.a.s.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnEmptyBody_WhenFileAndBodyAreNull                                                                    avgt   40       438.389 ±       0.777  ns/op
i.g.a.s.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnFile_WhenFileNotEmpty_AndRegardlessOfBody                                                           avgt   33    529825.183 ±   95436.689  ns/op
i.g.a.s.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldReturnRespectiveHttpStatusCode_WhenStatusFieldSet                                                         avgt   40       397.741 ±       1.122  ns/op
i.g.a.s.stubs.StubResponseBuilderTest._Benchmark.benchmark_shouldStage_WhenConfigurablePropertyAndFieldValuePresent                                                        avgt   40       402.079 ±       0.928  ns/op
i.g.a.s.stubs.websocket.StubWebSocketClientRequestTest._Benchmark.benchmark_returnsBodyAsExpectedBytesWhenOnlyBodyStubbed                                                  avgt   40       388.096 ±       2.064  ns/op
i.g.a.s.stubs.websocket.StubWebSocketClientRequestTest._Benchmark.benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed                                                  avgt   33    534055.295 ±   93707.575  ns/op
i.g.a.s.stubs.websocket.StubWebSocketClientRequestTest._Benchmark.benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed                                       avgt   36    774153.165 ±  904816.163  ns/op
i.g.a.s.stubs.websocket.StubWebSocketClientRequestTest._Benchmark.benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed                                          avgt   35    521353.132 ±  105004.253  ns/op
i.g.a.s.stubs.websocket.StubWebSocketClientRequestTest._Benchmark.benchmark_returnsBodyAsExpectedStringWhenOnlyBodyStubbed                                                 avgt   40       390.831 ±       0.626  ns/op
i.g.a.s.stubs.websocket.StubWebSocketClientRequestTest._Benchmark.benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed                                                 avgt   33    546319.751 ±  140043.331  ns/op
i.g.a.s.stubs.websocket.StubWebSocketMessageTypeTest._Benchmark.benchmark_returnsFalseOnUnknownProperties                                                                  avgt   40       384.879 ±       0.694  ns/op
i.g.a.s.stubs.websocket.StubWebSocketMessageTypeTest._Benchmark.benchmark_returnsTrueOnKnownProperties                                                                     avgt   40       422.608 ±       1.884  ns/op
i.g.a.s.stubs.websocket.StubWebSocketServerResponsePolicyTest._Benchmark.benchmark_returnsFalseOnUnknownProperties                                                         avgt   40       388.593 ±       1.396  ns/op
i.g.a.s.stubs.websocket.StubWebSocketServerResponsePolicyTest._Benchmark.benchmark_returnsTrueOnKnownProperties                                                            avgt   40       525.514 ±       3.492  ns/op
i.g.a.s.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_returnsBodyAsExpectedBytesWhenOnlyBodyStubbed                                                 avgt   40       418.239 ±       1.095  ns/op
i.g.a.s.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_returnsBodyAsExpectedBytesWhenOnlyFileStubbed                                                 avgt   33    507468.421 ±  103601.560  ns/op
i.g.a.s.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_returnsBodyAsExpectedFileBytesWhenBothBodyAndFileStubbed                                      avgt   36    535094.610 ±   93201.505  ns/op
i.g.a.s.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_returnsBodyAsExpectedStringWhenBothBodyAndFileStubbed                                         avgt   36    552354.763 ±  128780.478  ns/op
i.g.a.s.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_returnsBodyAsExpectedStringWhenOnlyBodyStubbed                                                avgt   40       418.084 ±       1.614  ns/op
i.g.a.s.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_returnsBodyAsExpectedStringWhenOnlyFileStubbed                                                avgt   34    754903.022 ±  831299.221  ns/op
i.g.a.s.stubs.websocket.StubWebSocketServerResponseTest._Benchmark.benchmark_stubbedWebSocketServerResponseHasExpectedDefaults                                             avgt   40       487.826 ±       1.467  ns/op
i.g.a.s.utils.CollectionUtilsTest._Benchmark.benchmark_chunkifyByteArrayAndQueue                                                                                           avgt   40     12203.206 ±     470.252  ns/op
i.g.a.s.utils.CollectionUtilsTest._Benchmark.benchmark_chunkifyTinyByteArrayAndQueue                                                                                       avgt   40      2643.220 ±       7.397  ns/op
i.g.a.s.utils.CollectionUtilsTest._Benchmark.benchmark_constructParamMap_ShouldConstructParamMap_WhenQueryParamHasNoValue                                                  avgt   40       804.719 ±       2.424  ns/op
i.g.a.s.utils.CollectionUtilsTest._Benchmark.benchmark_constructParamMap_ShouldConstructParamMap_WhenQueryStringGiven                                                      avgt   40       824.802 ±       2.627  ns/op
i.g.a.s.utils.CollectionUtilsTest._Benchmark.benchmark_constructParamMap_ShouldUrlDecodeQueryString_WhenQueryParamsAreAnArray                                              avgt   40      5946.628 ±      41.885  ns/op
i.g.a.s.utils.CollectionUtilsTest._Benchmark.benchmark_constructParamMap_ShouldUrlDecodeQueryString_WhenQueryParamsAreAnArrayWithQuotedElements                            avgt   40      8786.566 ±     165.771  ns/op
i.g.a.s.utils.CollectionUtilsTest._Benchmark.benchmark_constructParamMap_ShouldUrlDecodeQueryString_WhenQueryParamsAreAnArrayWithSingleQuoteElements                       avgt   40      9339.809 ±      31.824  ns/op
i.g.a.s.utils.CollectionUtilsTest._Benchmark.benchmark_constructQueryString_ShouldConstructQueryString_WhenParamMapGiven                                                   avgt   40       785.470 ±       7.931  ns/op
i.g.a.s.utils.CollectionUtilsTest._Benchmark.benchmark_givenTwoStringArraysWithOneEmpty_whenConcatWithCopy_thenGetExpectedResult                                           avgt   40      1231.948 ±       5.087  ns/op
i.g.a.s.utils.CollectionUtilsTest._Benchmark.benchmark_givenTwoStringArrays_whenConcatWithCopy_thenGetExpectedResult                                                       avgt   40      1336.572 ±       1.831  ns/op
i.g.a.s.utils.DateTimeUtilsTest._Benchmark.benchmark_systemDefaultFromMillis                                                                                               avgt   40       919.872 ±       9.778  ns/op
i.g.a.s.utils.FileUtilsTest._Benchmark.benchmark_shouldNotConvertFileToBytesWhenBadFilenameGiven                                                                           avgt   40      4306.760 ±     110.691  ns/op
i.g.a.s.utils.FileUtilsTest._Benchmark.benchmark_shouldNotLoadFileFromURWhenBadFilenameGiven                                                                               avgt   40      3923.356 ±      92.140  ns/op
i.g.a.s.utils.HandlerUtilsTest._Benchmark.benchmark_shouldEscapeHtmlEntities                                                                                               avgt   40      1038.893 ±       1.951  ns/op
i.g.a.s.utils.HandlerUtilsTest._Benchmark.benchmark_shouldGenerateUpTime_OneDay23Hours59Minutes59Seconds                                                                   avgt   40      1524.230 ±       4.866  ns/op
i.g.a.s.utils.HandlerUtilsTest._Benchmark.benchmark_shouldGenerateUpTime_OneDayOneHourOneMinuteOneSecond                                                                   avgt   40      1478.359 ±       3.071  ns/op
i.g.a.s.utils.HandlerUtilsTest._Benchmark.benchmark_shouldGenerateUpTime_TwoDaysZeroHoursZeroMinutes1Second                                                                avgt   40      1483.414 ±       3.334  ns/op
i.g.a.s.utils.HandlerUtilsTest._Benchmark.benchmark_shouldLinkifyUriString                                                                                                 avgt   40      1123.621 ±       2.806  ns/op
i.g.a.s.utils.HandlerUtilsTest._Benchmark.benchmark_shouldLinkifyUriStringForHttps                                                                                         avgt   40      1168.692 ±      23.001  ns/op
i.g.a.s.utils.HandlerUtilsTest._Benchmark.benchmark_shouldLinkifyUriStringWithSingleQuotesInQueryString                                                                    avgt   40      1538.536 ±       4.204  ns/op
i.g.a.s.utils.JarUtilsTest._Benchmark.benchmark_shouldReadManifestBuiltDate                                                                                                avgt   40      9328.838 ±     167.564  ns/op
i.g.a.s.utils.JarUtilsTest._Benchmark.benchmark_shouldReadManifestImplementationVersion                                                                                    avgt   40      8690.251 ±     192.995  ns/op
i.g.a.s.utils.ReflectionUtilsTest._Benchmark.benchmark_shouldGetObjectPropertiesAndValues                                                                                  avgt   40      8090.185 ±      13.810  ns/op
i.g.a.s.utils.ReflectionUtilsTest._Benchmark.benchmark_shouldNotSetValueOnObjectProperty_WhenIncorrectPropertyNameGiven                                                    avgt   40       906.968 ±       2.043  ns/op
i.g.a.s.utils.ReflectionUtilsTest._Benchmark.benchmark_shouldReturnNullWhenClassHasNoDeclaredMethods                                                                       avgt   40       366.229 ±       0.803  ns/op
i.g.a.s.utils.ReflectionUtilsTest._Benchmark.benchmark_shouldReturnPropertyValueWhenClassHasDeclaredMethods                                                                avgt   40       452.277 ±       3.318  ns/op
i.g.a.s.utils.ReflectionUtilsTest._Benchmark.benchmark_shouldSetValueOnObjectProperty_WhenCorrectPropertyNameGiven                                                         avgt   40       901.889 ±       1.942  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_encodeBase16                                                                                                            avgt   40      2247.636 ±       5.931  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_isNotSet                                                                                                                avgt   40       442.681 ±       2.625  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_isNumeric                                                                                                               avgt   40       422.440 ±       1.577  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_removeValueFromCsv                                                                                                      avgt   40      3308.951 ±      10.962  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldConstructUserAgentNameWhenImplementationTitleNotSet                                                               avgt   40       571.571 ±       1.316  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldConvertObjectToString_WhenObjectIsNotNull                                                                         avgt   40       375.092 ±       0.614  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldConvertObjectToString_WhenObjectIsNull                                                                            avgt   40       366.565 ±       0.990  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldConvertObjectToString_WhenObjectIsStringNull                                                                      avgt   40       374.127 ±       1.284  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldCorrectlyEncodeSingleQuotesInURL                                                                                  avgt   40      1545.607 ±      39.026  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldDetermineObjectStringValue_WhenObjectIsFailedMessage                                                              avgt   40       843.546 ±       6.102  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldEscapeCurlyBraces                                                                                                 avgt   40      1784.729 ±      17.781  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldFilterOutSpacesBetweenElementsWithQuotes                                                                          avgt   40      1658.998 ±       2.588  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldFilterOutSpacesBetweenElementsWithoutQuotes                                                                       avgt   40      1189.004 ±       4.084  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldJoinArrayString                                                                                                   avgt   40       582.033 ±       0.996  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldRemoveEncodedSquareBracketsFromString                                                                             avgt   40      1671.978 ±       7.608  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldRemoveSquareBracketsFromString                                                                                    avgt   40      1272.023 ±       2.269  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldRepeatString                                                                                                      avgt   40       787.064 ±      10.938  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldReplaceTokensInATemplateWhenAllTokensPresent                                                                      avgt   40      5241.517 ±       7.645  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldReplaceTokensInATemplateWhenNotAllTokenValuesPresent                                                              avgt   40      3071.162 ±       9.637  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnErrorWhenTryingToConvertEmptyInputStreamToString                                                            avgt   40      6290.123 ±      34.789  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnErrorWhenTryingToConvertNullInputStreamToString                                                             avgt   40       348.307 ±       3.544  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnErrorWhenTryingToConvertSpaceInputStreamToString                                                            avgt   40      4422.204 ±      18.535  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnFalseWhenStringWithinNotPairOfEscapedSquareBracket                                                          avgt   40       328.795 ±       0.655  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnFalseWhenStringWithinNotPairOfSquareBracket                                                                 avgt   40       328.391 ±       0.935  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnNullWhenTryingToUpperEmptyString                                                                            avgt   40       359.113 ±       0.826  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnNullWhenTryingTolowerEmptyString                                                                            avgt   40       360.147 ±       1.386  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnTrueWhenStringWithinEncodedSquareBrackets                                                                   avgt   40       331.435 ±       1.775  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_shouldReturnTrueWhenStringWithinSquareBrackets                                                                          avgt   40       350.709 ±       0.667  ns/op
i.g.a.s.utils.StringUtilsTest._Benchmark.benchmark_splitCsv                                                                                                                avgt   40      1084.274 ±      10.585  ns/op
i.g.a.s.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedProxyConfig                                                                                            avgt   40      1564.415 ±       3.384  ns/op
i.g.a.s.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedRequestWithMultilineStubbedResponse                                                                    avgt   40      3052.727 ±      36.259  ns/op
i.g.a.s.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedRequestWithMultipleMethods                                                                             avgt   40      1844.917 ±      46.072  ns/op
i.g.a.s.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedRequestWithStubbedResponse                                                                             avgt   40      2741.299 ±       4.720  ns/op
i.g.a.s.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedRequestWithStubbedResponseWhenBothHaveManyHeaders                                                      avgt   40      5486.031 ±     155.353  ns/op
i.g.a.s.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedResponseWithSequenceResponses                                                                          avgt   40      2807.538 ±       5.538  ns/op
i.g.a.s.yaml.YamlBuilderTest._Benchmark.benchmark_shouldBuildStubbedResponseWithSequenceResponsesFoldedBodyAndFile                                                         avgt   40      2772.991 ±       9.881  ns/op
i.g.a.s.yaml.YamlParserLoadTest._Benchmark.benchmark_loadTest_shouldUnmarshallHugeYamlIntoObjectTree_WhenYAMLValid                                                         avgt   40  81097945.036 ± 4937393.406  ns/op
i.g.a.s.yaml.YamlParserTest._Benchmark.benchmark_isMainYamlHasIncludesFoundAsFalse                                                                                         avgt   40       381.455 ±       2.096  ns/op
i.g.a.s.yaml.YamlParserTest._Benchmark.benchmark_isMainYamlHasIncludesFoundAsTrue                                                                                          avgt   40       379.773 ±       1.220  ns/op
