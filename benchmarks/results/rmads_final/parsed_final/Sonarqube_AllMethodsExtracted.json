{
    "org.sonar.scanner.rule.ActiveRulesBuilderTest.build_rules": {
        "filePath": "org\\sonar\\scanner\\rule\\ActiveRulesBuilderTest.java",
        "methodName": "build_rules",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.rule.ActiveRule.param": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 9,
                "org.assertj.core.api.Assertions.assertThat": 18,
                "org.sonar.api.batch.rule.ActiveRules.findByRepository": 3,
                "org.sonar.api.rule.RuleKey.rule": 2,
                "org.sonar.api.rule.RuleKey.of": 6,
                "org.sonar.api.batch.rule.ActiveRule.ruleKey": 4,
                "org.sonar.api.rule.RuleKey.repository": 2,
                "org.sonar.api.batch.rule.ActiveRule.internalKey": 2,
                "org.assertj.core.api.AbstractMapAssert.isEmpty": 2,
                "org.sonar.api.batch.rule.internal.NewActiveRule.Builder.setParam": 2,
                "org.sonar.api.rule.Severity.defaultSeverity": 2,
                "org.sonar.api.batch.rule.internal.ActiveRulesBuilder.addRule": 3,
                "org.assertj.core.api.AbstractMapAssert.hasSize": 1,
                "org.sonar.api.batch.rule.ActiveRules.findByInternalKey": 1,
                "org.sonar.api.batch.rule.internal.NewActiveRule.Builder.setInternalKey": 2,
                "org.sonar.api.batch.rule.internal.NewActiveRule.Builder.setName": 1,
                "org.sonar.api.batch.rule.internal.NewActiveRule.Builder.setRuleKey": 3,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 3,
                "org.sonar.api.batch.rule.ActiveRule.severity": 3,
                "org.sonar.api.batch.rule.internal.NewActiveRule.Builder.setSeverity": 2,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.assertj.core.api.AbstractAssert.isNotNull": 1,
                "org.sonar.api.batch.rule.internal.NewActiveRule.Builder.build": 3,
                "org.sonar.api.batch.rule.internal.ActiveRulesBuilder.build": 1,
                "org.sonar.api.batch.rule.ActiveRule.params": 3,
                "org.sonar.api.batch.rule.ActiveRules.findAll": 1,
                "org.sonar.api.batch.rule.ActiveRules.find": 3,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 1
            },
            "objectInstantiations": {
                "org.sonar.api.batch.rule.internal.NewActiveRule.Builder": 3,
                "org.sonar.api.batch.rule.internal.ActiveRulesBuilder": 1
            },
            "packageAccesses": {
                "org.sonar.api.batch.rule.internal": 22,
                "org.sonar.api.batch.rule": 25,
                "org.assertj.core.api": 36,
                "org.sonar.api.rule": 12
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 86,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 24,
            "linesOfCodeJunitTest": 24,
            "logicalLinesOfCode": 23,
            "logicalLinesOfCodeJunitTest": 23
        },
        "stabilityMetricValue": 2.173934639510775
    },
    "org.sonar.scanner.ci.CiConfigurationImplTest.getName_for_detected_ci": {
        "filePath": "org\\sonar\\scanner\\ci\\CiConfigurationImplTest.java",
        "methodName": "getName_for_detected_ci",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.ci.CiConfigurationImpl.getCiName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.ci.CiConfigurationImpl": 1
            },
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 0.37081433358699856
    },
    "org.sonar.scm.svn.SvnScmProviderTest.branchChangedFiles_and_lines_from_diverged": {
        "filePath": "org\\sonar\\scm\\svn\\SvnScmProviderTest.java",
        "methodName": "branchChangedFiles_and_lines_from_diverged",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractMapAssert.isEqualTo": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsExactlyInAnyOrder": 1,
                "java.util.Set.remove": 1,
                "java.util.Map.put": 3,
                "java.io.File.toPath": 2,
                "java.util.Set.add": 2,
                "org.sonar.scm.svn.SvnScmProvider.branchChangedFiles": 1,
                "org.assertj.core.api.Assertions.assertThat": 4,
                "java.nio.file.Files.createDirectories": 1,
                "java.nio.file.Path.resolve": 11,
                "org.assertj.core.api.AbstractMapAssert.isEmpty": 1,
                "org.sonar.scm.svn.SvnScmProviderTest.svnCopyAndCommitFile": 1,
                "java.util.Collections.singleton": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "java.util.Arrays.asList": 3,
                "org.junit.rules.TemporaryFolder.newFolder": 2,
                "org.sonar.scm.svn.SvnScmProviderTest.appendToAndCommitFile": 3,
                "org.sonar.scm.svn.SvnScmProviderTest.createAndCommitFile": 14,
                "org.sonar.scm.svn.SvnScmProvider.branchChangedLines": 2,
                "org.sonar.scm.svn.SvnScmProviderTest.newScmProvider": 3,
                "org.sonar.scm.svn.SvnScmProviderTest.deleteAndCommitFile": 2
            },
            "objectInstantiations": {
                "java.util.HashSet": 3,
                "java.util.HashMap": 1,
                "org.sonar.scm.svn.SvnScmProvider": 3,
                "org.sonar.scm.svn.SvnBlameCommand": 3
            },
            "packageAccesses": {
                "java.util": 16,
                "org.junit.rules": 2,
                "java.io": 2,
                "org.assertj.core.api": 8,
                "java.nio.file": 14,
                "org.sonar.scm.svn": 32
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 102,
            "numRecursiveMethodCalls": 23,
            "linesOfCode": 79,
            "linesOfCodeJunitTest": 34,
            "logicalLinesOfCode": 79,
            "logicalLinesOfCodeJunitTest": 34
        },
        "stabilityMetricValue": 0.0576068537388809
    },
    "org.sonar.scanner.scan.DefaultInputModuleHierarchyTest.test": {
        "filePath": "org\\sonar\\scanner\\scan\\DefaultInputModuleHierarchyTest.java",
        "methodName": "test",
        "stats": {
            "methodCalls": {
                "java.util.Map.put": 4,
                "org.sonar.scanner.scan.DefaultInputModuleHierarchy.root": 1,
                "org.assertj.core.api.Assertions.assertThat": 8,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.setKey": 5,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.create": 5,
                "org.junit.rules.TemporaryFolder.newFolder": 10,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.setWorkDir": 5,
                "org.assertj.core.api.AbstractIterableAssert.containsOnly": 2,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 4,
                "org.sonar.scanner.scan.DefaultInputModuleHierarchy.children": 3,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.setBaseDir": 5,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 1,
                "org.sonar.scanner.scan.DefaultInputModuleHierarchy.parent": 4
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.DefaultInputModuleHierarchy": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputModule": 5,
                "java.util.HashMap": 1
            },
            "packageAccesses": {
                "java.util": 6,
                "org.junit.rules": 10,
                "org.sonar.scanner.scan": 9,
                "org.sonar.api.batch.fs.internal": 10,
                "org.assertj.core.api": 16,
                "org.sonar.api.batch.bootstrap": 20
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 58,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 19,
            "linesOfCodeJunitTest": 19,
            "logicalLinesOfCode": 19,
            "logicalLinesOfCodeJunitTest": 19
        },
        "stabilityMetricValue": 5.722722759710558
    },
    "org.sonar.scanner.repository.settings.AbstractSettingsLoaderTest.should_load_global_multivalue_settings": {
        "filePath": "org\\sonar\\scanner\\repository\\settings\\AbstractSettingsLoaderTest.java",
        "methodName": "should_load_global_multivalue_settings",
        "stats": {
            "methodCalls": {
                "org.sonarqube.ws.Settings.Setting.Builder.build": 1,
                "org.assertj.core.api.AbstractMapAssert.containsExactly": 1,
                "org.sonarqube.ws.Settings.Setting.newBuilder": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.repository.settings.AbstractSettingsLoader.toMap": 1,
                "org.sonarqube.ws.Settings.Values.Builder.addValues": 2,
                "org.assertj.core.api.Assertions.entry": 1,
                "org.sonarqube.ws.Settings.Setting.Builder.setValues": 1,
                "org.sonarqube.ws.Settings.Setting.Builder.setKey": 1,
                "org.sonarqube.ws.Settings.Values.newBuilder": 1,
                "java.util.Collections.singletonList": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 1,
                "org.sonarqube.ws": 7,
                "org.assertj.core.api": 3,
                "org.sonar.scanner.repository.settings": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 0.3623466491990964
    },
    "org.sonar.scanner.bootstrap.ExtensionUtilsTest.shouldBeBatchInstantiationStrategy": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ExtensionUtilsTest.java",
        "methodName": "shouldBeBatchInstantiationStrategy",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 6,
                "org.sonar.scanner.bootstrap.ExtensionUtils.isInstantiationStrategy": 6,
                "org.assertj.core.api.Assertions.assertThat": 6
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ExtensionUtilsTest.ProjectService": 1,
                "org.sonar.scanner.bootstrap.ExtensionUtilsTest.DefaultScannerService": 1,
                "org.sonar.scanner.bootstrap.ExtensionUtilsTest.DefaultService": 1
            },
            "packageAccesses": {
                "org.assertj.core.api": 12,
                "org.sonar.scanner.bootstrap": 9
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 18,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 0.8082813218977112
    },
    "org.sonar.scanner.scan.ProjectReactorBuilderTest.shouldFailIfMandatoryPropertiesAreNotPresentButWithProjectKey": {
        "filePath": "org\\sonar\\scanner\\scan\\ProjectReactorBuilderTest.java",
        "methodName": "shouldFailIfMandatoryPropertiesAreNotPresentButWithProjectKey",
        "stats": {
            "methodCalls": {
                "java.util.Map.put": 2,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonar.scanner.scan.ProjectReactorBuilder.checkMandatoryProperties": 1
            },
            "objectInstantiations": {
                "java.util.HashMap": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scan": 1,
                "java.util": 4,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 0.40348040832609633
    },
    "org.sonar.scanner.repository.ContextPropertiesCacheTest.put_property": {
        "filePath": "org\\sonar\\scanner\\repository\\ContextPropertiesCacheTest.java",
        "methodName": "put_property",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.repository.ContextPropertiesCache.put": 1,
                "org.sonar.scanner.repository.ContextPropertiesCache.getAll": 2,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractMapAssert.containsOnly": 1,
                "org.assertj.core.data.MapEntry.entry": 1,
                "org.assertj.core.api.AbstractMapAssert.isEmpty": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.repository": 3,
                "org.assertj.core.api": 4,
                "org.assertj.core.data": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 1.978118328163878
    },
    "org.sonar.scanner.issue.IssuePublisherTest.ignore_null_active_rule": {
        "filePath": "org\\sonar\\scanner\\issue\\IssuePublisherTest.java",
        "methodName": "ignore_null_active_rule",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.issue.internal.AbstractDefaultIssue.at": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.selectLine": 1,
                "org.sonar.scanner.issue.IssuePublisher.initAndAddIssue": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssueLocation.on": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.api.rule.RuleKey.of": 1,
                "org.sonar.scanner.issue.IssuePublisherTest.initModuleIssues": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssueLocation.message": 1,
                "org.mockito.Mockito.verifyNoInteractions": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssue.forRule": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssueLocation.at": 1,
                "org.sonar.api.batch.rule.internal.ActiveRulesBuilder.build": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.IssuePublisher": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssue": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssueLocation": 1
            },
            "packageAccesses": {
                "org.mockito": 1,
                "org.sonar.api.batch.sensor.issue.internal": 8,
                "org.sonar.scanner.issue": 3,
                "org.sonar.api.batch.rule.internal": 1,
                "org.sonar.api.batch.fs.internal": 1,
                "org.assertj.core.api": 2,
                "org.sonar.api.rule": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 13,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 2.896175549749974
    },
    "org.sonar.scanner.util.ProgressReportTest.do_log_with_time": {
        "filePath": "org\\sonar\\scanner\\util\\ProgressReportTest.java",
        "methodName": "do_log_with_time",
        "stats": {
            "methodCalls": {
                "java.util.Collection.stream": 1,
                "org.sonar.scanner.util.ProgressReport.stopAndLogTotalTime": 1,
                "java.util.stream.Stream.anyMatch": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.util.ProgressReport.start": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "java.util.regex.Pattern.matches": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 1,
                "java.util": 1,
                "java.util.regex": 1,
                "java.util.stream": 1,
                "org.sonar.scanner.util": 2,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 2.3464450811131834
    },
    "org.sonar.scanner.repository.MultiModuleProjectRepositoryTest.test_file_data_when_module_does_not_exist": {
        "filePath": "org\\sonar\\scanner\\repository\\MultiModuleProjectRepositoryTest.java",
        "methodName": "test_file_data_when_module_does_not_exist",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.repository.MultiModuleProjectRepository.fileData": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.repository": 2,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 0.5421606091004749
    },
    "org.sonar.scanner.repository.DefaultQualityProfileLoaderTest.load_encodes_url_parameters": {
        "filePath": "org\\sonar\\scanner\\repository\\DefaultQualityProfileLoaderTest.java",
        "methodName": "load_encodes_url_parameters",
        "stats": {
            "methodCalls": {
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.Builder.build": 1,
                "java.io.ByteArrayOutputStream.toByteArray": 1,
                "org.mockito.ArgumentMatchers.argThat": 2,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.newBuilder": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.Builder.addProfiles": 1,
                "org.sonarqube.ws.client.WsResponse.contentStream": 1,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.repository.DefaultQualityProfileLoaderTest.verifyCalledPath": 1,
                "org.mockito.Mockito.verify": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.newBuilder": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 2,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.setName": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.setKey": 1,
                "org.sonar.scanner.repository.DefaultQualityProfileLoader.load": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.setLanguage": 1,
                "org.sonar.scanner.WsTestUtil.verifyCall": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.build": 1,
                "com.google.protobuf.AbstractMessageLite.writeTo": 1,
                "org.sonar.scanner.repository.DefaultQualityProfileLoaderTest.createStreamOfProfiles": 1,
                "org.sonar.scanner.WsTestUtil.mockStream": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.WsTestUtil.RequestMatcher": 2,
                "java.io.ByteArrayOutputStream": 1,
                "java.io.ByteArrayInputStream": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 2,
                "java.lang": 1,
                "org.mockito": 6,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse": 2,
                "java.io": 4,
                "org.sonar.scanner": 4,
                "com.google.protobuf": 1,
                "org.sonar.scanner.repository": 3,
                "org.sonar.scanner.bootstrap": 2,
                "org.sonarqube.ws": 8,
                "org.mockito.stubbing": 2
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 26,
            "numRecursiveMethodCalls": 4,
            "linesOfCode": 15,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 16,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 5.087756083981851
    },
    "org.sonar.batch.bootstrapper.LoggingConfigurationTest.testSetVerbose": {
        "filePath": "org\\sonar\\batch\\bootstrapper\\LoggingConfigurationTest.java",
        "methodName": "testSetVerbose",
        "stats": {
            "methodCalls": {
                "org.sonar.batch.bootstrapper.LoggingConfiguration.setVerbose": 2,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 3,
                "org.sonar.batch.bootstrapper.LoggingConfiguration.setRootLevel": 1,
                "org.sonar.batch.bootstrapper.LoggingConfiguration.getSubstitutionVariable": 3,
                "org.assertj.core.api.Assertions.assertThat": 3
            },
            "objectInstantiations": {
                "org.sonar.batch.bootstrapper.LoggingConfiguration": 3
            },
            "packageAccesses": {
                "org.assertj.core.api": 6,
                "org.sonar.batch.bootstrapper": 9
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 0.37198443916320695
    },
    "org.sonar.scanner.sensor.SensorIdTest.toString_supports_all_values": {
        "filePath": "org\\sonar\\scanner\\sensor\\SensorIdTest.java",
        "methodName": "toString_supports_all_values",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractAssert.hasToString": 2,
                "org.assertj.core.api.Assertions.assertThat": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.sensor.SensorId": 2
            },
            "packageAccesses": {
                "org.assertj.core.api": 4,
                "org.sonar.scanner.sensor": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 0.31502945540291094
    },
    "org.sonar.scanner.scan.filesystem.CharsetValidationTest.windows_1252": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\CharsetValidationTest.java",
        "methodName": "windows_1252",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.filesystem.CharsetValidation.Result.valid": 7,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 7,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isUTF8": 1,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isValidWindows1252": 6,
                "org.assertj.core.api.Assertions.assertThat": 7
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 14,
                "org.sonar.scanner.scan.filesystem": 14
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 28,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 0.4319360799872436
    },
    "org.sonar.scanner.ci.vendors.JenkinsTest.loadConfiguration_with_deprecated_pull_request_plugin": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\JenkinsTest.java",
        "methodName": "loadConfiguration_with_deprecated_pull_request_plugin",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.sonar.scanner.ci.vendors.JenkinsTest.setEnvVariable": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 1,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.mockito.Mockito.when": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 1,
                "org.sonar.api.utils": 1,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 4.8850648027099846
    },
    "org.sonar.scanner.scm.ScmChangedFilesTest.constructor_givenTwoSimiliarFileNames_shouldNotThrowException": {
        "filePath": "org\\sonar\\scanner\\scm\\ScmChangedFilesTest.java",
        "methodName": "constructor_givenTwoSimiliarFileNames_shouldNotThrowException",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.Assertions.assertThatNoException": 1,
                "java.nio.file.Path.of": 2,
                "org.sonar.scm.git.ChangedFile.of": 2,
                "java.util.stream.Stream.of": 1,
                "org.assertj.core.api.NotThrownAssert.isThrownBy": 1,
                "java.util.stream.Stream.collect": 1,
                "java.util.stream.Collectors.toSet": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scm.ScmChangedFiles": 1
            },
            "packageAccesses": {
                "java.util": 1,
                "java.util.stream": 3,
                "org.sonar.scm.git": 4,
                "org.sonar.scanner.scm": 1,
                "org.assertj.core.api": 2,
                "java.nio.file": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 1.7188141382049298
    },
    "org.sonar.scanner.scan.filesystem.StatusDetectionTest.detect_status_branches_confirm": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\StatusDetectionTest.java",
        "methodName": "detect_status_branches_confirm",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.sonar.scm.git.ChangedFile.of": 1,
                "org.sonar.scanner.scan.filesystem.StatusDetection.status": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.nio.file.Paths.get": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "java.util.Set.of": 1,
                "org.sonar.scanner.scan.filesystem.StatusDetectionTest.createFile": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.StatusDetection": 1,
                "org.sonar.scanner.scm.ScmChangedFiles": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "java.util": 1,
                "org.sonar.scm.git": 1,
                "org.sonar.scanner.scm": 2,
                "org.sonar.scanner.scan.filesystem": 4,
                "org.sonar.api.batch.fs.internal": 2,
                "org.assertj.core.api": 2,
                "java.nio.file": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 4.233008211595024
    },
    "org.sonar.scanner.scan.filesystem.LanguageDetectionTest.detectLanguageKey_shouldSolveConflictUsingFilePattern": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\LanguageDetectionTest.java",
        "methodName": "detectLanguageKey_shouldSolveConflictUsingFilePattern",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 2,
                "java.io.File.toPath": 2,
                "org.sonar.api.config.internal.MapSettings.setProperty": 2,
                "org.sonar.scanner.scan.filesystem.LanguageDetectionTest.detectLanguageKey": 2,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.sonar.scanner.repository.language.DefaultLanguagesRepository.start": 1,
                "java.nio.file.Paths.get": 2,
                "org.junit.rules.TemporaryFolder.getRoot": 2,
                "org.sonar.scanner.scan.filesystem.LanguageDetection.language": 2,
                "org.sonar.scanner.repository.language.Language.key": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.repository.language.DefaultLanguagesRepository": 1,
                "org.sonar.api.resources.Languages": 1,
                "org.sonar.scanner.scan.filesystem.LanguageDetectionTest.MockLanguage": 2,
                "org.sonar.scanner.scan.filesystem.LanguageDetection": 1,
                "org.sonar.scanner.mediumtest.FakeLanguagesLoader": 1,
                "java.io.File": 2
            },
            "packageAccesses": {
                "org.junit.rules": 2,
                "org.sonar.api.config.internal": 3,
                "java.io": 4,
                "org.sonar.api.resources": 1,
                "org.sonar.scanner.scan.filesystem": 8,
                "org.sonar.scanner.mediumtest": 1,
                "org.sonar.scanner.repository.language": 7,
                "org.assertj.core.api": 4,
                "java.nio.file": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 20,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 11,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 1.9489676229793802
    },
    "org.sonar.scanner.report.CeTaskReportDataHolderTest.getCeTaskUrl_should_fail_if_not_initialized": {
        "filePath": "org\\sonar\\scanner\\report\\CeTaskReportDataHolderTest.java",
        "methodName": "getCeTaskUrl_should_fail_if_not_initialized",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonar.scanner.report.CeTaskReportDataHolder.getCeTaskUrl": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.report": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 0.6794583231946979
    },
    "org.sonar.scanner.scan.filesystem.InputFileFilterRepositoryTest.should_return_filters_from_initialization": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\InputFileFilterRepositoryTest.java",
        "methodName": "should_return_filters_from_initialization",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.filesystem.InputFileFilterRepository.getInputFileFilters": 2,
                "org.assertj.core.api.AbstractObjectArrayAssert.hasSize": 1,
                "org.assertj.core.api.AbstractAssert.isNotNull": 1,
                "org.assertj.core.api.Assertions.assertThat": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.InputFileFilterRepository": 1
            },
            "packageAccesses": {
                "org.assertj.core.api": 4,
                "org.sonar.scanner.scan.filesystem": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 0.3201665039760225
    },
    "org.sonar.scm.svn.ChangedLinesComputerTest.handle_index_using_absolute_paths": {
        "filePath": "org\\sonar\\scm\\svn\\ChangedLinesComputerTest.java",
        "methodName": "handle_index_using_absolute_paths",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractMapAssert.isEqualTo": 1,
                "org.sonar.scm.svn.ChangedLinesComputerTest.printDiff": 1,
                "java.util.Arrays.asList": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.util.Collections.singletonMap": 1,
                "org.sonar.scm.svn.ChangedLinesComputer.receiver": 1,
                "java.nio.file.Path.resolve": 1,
                "java.io.Writer.write": 1,
                "org.sonar.scm.svn.ChangedLinesComputer.changedLines": 1
            },
            "objectInstantiations": {
                "java.util.HashSet": 1,
                "java.io.OutputStreamWriter": 1
            },
            "packageAccesses": {
                "java.util": 3,
                "java.lang": 1,
                "java.io": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scm.svn": 3,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 1.2324525147785883
    },
    "org.sonar.scanner.scan.ScanPropertiesTest.should_define_preload_file_metadata": {
        "filePath": "org\\sonar\\scanner\\scan\\ScanPropertiesTest.java",
        "methodName": "should_define_preload_file_metadata",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.ScanProperties.preloadFileMetadata": 1,
                "org.sonar.api.config.internal.MapSettings.setProperty": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan": 1,
                "org.sonar.api.config.internal": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 4.55311851694964
    },
    "org.sonar.scanner.scan.ProjectReactorBuilderTest.shouldGetEmptyList": {
        "filePath": "org\\sonar\\scanner\\scan\\ProjectReactorBuilderTest.java",
        "methodName": "shouldGetEmptyList",
        "stats": {
            "methodCalls": {
                "java.util.Map.put": 1,
                "org.assertj.core.api.AbstractObjectArrayAssert.isEmpty": 1,
                "org.sonar.scanner.scan.ProjectReactorBuilder.getListFromProperty": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "java.util.HashMap": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scan": 1,
                "java.util": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 0.5378906381880179
    },
    "org.sonar.scanner.ci.vendors.GithubActionsTest.loadConfiguration": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\GithubActionsTest.java",
        "methodName": "loadConfiguration",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 2,
                "org.sonar.scanner.ci.DevOpsPlatformInfo.getUrl": 1,
                "org.assertj.core.api.Assertions.assertThat": 4,
                "org.sonar.api.utils.System2.envVariable": 4,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.assertj.core.api.AbstractOptionalAssert.isNotEmpty": 1,
                "org.mockito.Mockito.when": 4,
                "org.sonar.scanner.ci.vendors.GithubActionsTest.checkDevOpsPlatformInfo": 1,
                "org.sonar.scanner.ci.CiConfiguration.getDevOpsPlatformInfo": 2,
                "org.sonar.scanner.ci.DevOpsPlatformInfo.getProjectIdentifier": 1,
                "java.util.Optional.get": 1,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.sonar.scanner.ci.vendors.GithubActionsTest.setEnvVariable": 4
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 1,
                "org.mockito": 4,
                "org.sonar.api.utils": 4,
                "org.sonar.scanner.ci": 8,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 8,
                "org.sonar.scanner.ci.vendors": 5
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 32,
            "numRecursiveMethodCalls": 5,
            "linesOfCode": 15,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 15,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 5.357891550339493
    },
    "org.sonar.scm.svn.SvnConfigurationTest.isEmpty_givenNullProperties_returnTrue": {
        "filePath": "org\\sonar\\scm\\svn\\SvnConfigurationTest.java",
        "methodName": "isEmpty_givenNullProperties_returnTrue",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.svn.SvnConfiguration.isEmpty": 1,
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.svn.SvnConfiguration": 1,
                "org.sonar.api.config.internal.MapSettings": 1,
                "org.sonar.api.config.PropertyDefinitions": 1
            },
            "packageAccesses": {
                "org.sonar.api.config.internal": 3,
                "org.sonar.api.config": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scm.svn": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 2.9835992843611754
    },
    "org.sonar.scanner.bootstrap.GlobalTempFolderProviderTest.dotWorkingDir": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\GlobalTempFolderProviderTest.java",
        "methodName": "dotWorkingDir",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.GlobalTempFolderProvider.provide": 1,
                "org.sonar.api.utils.TempFolder.newFile": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.assertj.core.api.AbstractCharSequenceAssert.startsWith": 1,
                "java.io.File.getParentFile": 3,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "java.io.File.getName": 1,
                "org.junit.rules.TemporaryFolder.getRoot": 1,
                "java.io.File.getAbsolutePath": 3,
                "com.google.common.collect.ImmutableMap.of": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ScannerProperties": 1
            },
            "packageAccesses": {
                "java.lang": 1,
                "org.junit.rules": 1,
                "java.io": 9,
                "org.sonar.api.utils": 2,
                "org.sonar.scanner.bootstrap": 3,
                "org.assertj.core.api": 4,
                "com.google.common.collect": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 15,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 1.0114685442794218
    },
    "org.sonar.scanner.repository.language.LanguageTest.hashCode_and_equals_depends_on_key": {
        "filePath": "org\\sonar\\scanner\\repository\\language\\LanguageTest.java",
        "methodName": "hashCode_and_equals_depends_on_key",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractAssert.hasSameHashCodeAs": 1,
                "org.assertj.core.api.Assertions.assertThat": 4,
                "org.sonar.api.resources.Language.getFileSuffixes": 3,
                "org.sonar.api.resources.Language.filenamePatterns": 3,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 15,
                "org.assertj.core.api.AbstractAssert.doesNotHaveSameHashCodeAs": 1,
                "org.mockito.Mockito.when": 15,
                "org.assertj.core.api.AbstractAssert.isNotEqualTo": 1,
                "org.sonar.scanner.repository.language.LanguageTest.mockApiLanguage": 3,
                "org.sonar.api.resources.Language.getName": 3,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.sonar.api.resources.Language.publishAllFiles": 3,
                "org.mockito.Mockito.mock": 3,
                "org.sonar.api.resources.Language.getKey": 3
            },
            "objectInstantiations": {
                "org.sonar.scanner.repository.language.Language": 3
            },
            "packageAccesses": {
                "org.sonar.api.resources": 18,
                "org.mockito": 18,
                "org.sonar.scanner.repository.language": 9,
                "org.mockito.stubbing": 15,
                "org.assertj.core.api": 8
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 61,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 28,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 28,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 4.129904223289062
    },
    "org.sonar.scanner.scan.ProjectReactorBuilderTest.shouldGetList": {
        "filePath": "org\\sonar\\scanner\\scan\\ProjectReactorBuilderTest.java",
        "methodName": "shouldGetList",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractObjectArrayAssert.containsOnly": 1,
                "java.util.Map.put": 1,
                "org.sonar.scanner.scan.ProjectReactorBuilder.getListFromProperty": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "java.util.HashMap": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scan": 1,
                "java.util": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 0.850417505279746
    },
    "org.sonar.scm.svn.SvnScmProviderTest.forkDate_returns_null": {
        "filePath": "org\\sonar\\scm\\svn\\SvnScmProviderTest.java",
        "methodName": "forkDate_returns_null",
        "stats": {
            "methodCalls": {
                "java.nio.file.Paths.get": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.sonar.scm.svn.SvnScmProvider.forkDate": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.svn.SvnBlameCommand": 1,
                "org.sonar.scm.svn.SvnScmProvider": 1
            },
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scm.svn": 4,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 0.04244759606394012
    },
    "org.sonar.scanner.ci.vendors.CirrusCiTest.configuration_of_branch": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\CirrusCiTest.java",
        "methodName": "configuration_of_branch",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.sonar.scanner.ci.vendors.CirrusCiTest.setEnvVariable": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 1,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.mockito.Mockito.when": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 1,
                "org.sonar.api.utils": 1,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 5.047905818731459
    },
    "org.sonar.batch.bootstrapper.LogCallbackAppenderTest.testChangeTarget": {
        "filePath": "org\\sonar\\batch\\bootstrapper\\LogCallbackAppenderTest.java",
        "methodName": "testChangeTarget",
        "stats": {
            "methodCalls": {
                "org.sonar.batch.bootstrapper.LogCallbackAppenderTest.testMessage": 6,
                "ch.qos.logback.classic.spi.ILoggingEvent.getFormattedMessage": 12,
                "org.sonar.batch.bootstrapper.LogCallbackAppender.append": 6,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 12,
                "org.sonar.batch.bootstrapper.LogCallbackAppender.setTarget": 1,
                "org.mockito.Mockito.when": 12,
                "ch.qos.logback.classic.spi.ILoggingEvent.getLevel": 12,
                "org.mockito.Mockito.verify": 24,
                "org.mockito.Mockito.verifyNoMoreInteractions": 6,
                "ch.qos.logback.classic.spi.ILoggingEvent.getThrowableProxy": 6,
                "org.sonar.batch.bootstrapper.LogOutput.log": 6,
                "org.mockito.Mockito.reset": 6,
                "org.sonar.batch.bootstrapper.LogCallbackAppenderTest.testLevelTranslation": 1,
                "org.mockito.Mockito.mock": 7
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "ch.qos.logback.classic.spi": 30,
                "org.sonar.batch.bootstrapper": 20,
                "org.mockito": 55,
                "org.mockito.stubbing": 12
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 117,
            "numRecursiveMethodCalls": 7,
            "linesOfCode": 69,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 69,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 4.6124062477272165
    },
    "org.sonar.scanner.report.CeTaskReportDataHolderTest.getCeTaskId_should_fail_if_not_initialized": {
        "filePath": "org\\sonar\\scanner\\report\\CeTaskReportDataHolderTest.java",
        "methodName": "getCeTaskId_should_fail_if_not_initialized",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonar.scanner.report.CeTaskReportDataHolder.getCeTaskId": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.report": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 3.3919518247420872
    },
    "org.sonar.scanner.config.DefaultConfigurationTest.testParsingMultiValues": {
        "filePath": "org\\sonar\\scanner\\config\\DefaultConfigurationTest.java",
        "methodName": "testParsingMultiValues",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractObjectArrayAssert.isEmpty": 3,
                "org.assertj.core.api.AbstractObjectArrayAssert.containsExactly": 14,
                "org.assertj.core.api.Assertions.fail": 1,
                "org.sonar.scanner.config.DefaultConfigurationTest.getStringArray": 18,
                "org.assertj.core.api.Assertions.assertThat": 18,
                "org.sonar.api.config.PropertyDefinition.Builder.build": 18,
                "org.sonar.api.config.PropertyDefinition.Builder.multiValues": 18,
                "org.sonar.scanner.config.DefaultConfiguration.getStringArray": 18,
                "com.google.common.collect.ImmutableMap.of": 18,
                "java.util.Collections.singletonList": 18,
                "org.sonar.api.config.PropertyDefinition.builder": 18
            },
            "objectInstantiations": {
                "org.sonar.scanner.config.DefaultConfiguration": 18,
                "org.sonar.api.config.internal.Encryption": 18,
                "org.sonar.api.config.PropertyDefinitions": 18
            },
            "packageAccesses": {
                "java.util": 18,
                "org.sonar.api.config.internal": 18,
                "org.sonar.scanner.config": 54,
                "org.sonar.api.config": 72,
                "org.assertj.core.api": 36,
                "com.google.common.collect": 18
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 163,
            "numRecursiveMethodCalls": 18,
            "linesOfCode": 58,
            "linesOfCodeJunitTest": 22,
            "logicalLinesOfCode": 41,
            "logicalLinesOfCodeJunitTest": 23
        },
        "stabilityMetricValue": 0.5396748207323854
    },
    "org.sonar.scanner.bootstrap.RuntimeJavaVersionTest.given_runtime20_should_notLogOrAddWarning": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\RuntimeJavaVersionTest.java",
        "methodName": "given_runtime20_should_notLogOrAddWarning",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.RuntimeJavaVersion.checkJavaVersion": 1,
                "org.mockito.Mockito.mockStatic": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.MockedStatic.when": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "java.lang.Runtime.Version.parse": 1,
                "org.mockito.Mockito.verifyNoInteractions": 1,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 1,
                "java.lang": 1,
                "org.mockito": 4,
                "java.lang.Runtime": 1,
                "org.sonar.scanner.bootstrap": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 3.1173234405189323
    },
    "org.sonar.batch.bootstrapper.LoggingConfigurationTest.test_log_listener_setter": {
        "filePath": "org\\sonar\\batch\\bootstrapper\\LoggingConfigurationTest.java",
        "methodName": "test_log_listener_setter",
        "stats": {
            "methodCalls": {
                "org.sonar.batch.bootstrapper.LoggingConfiguration.getLogOutput": 1,
                "org.sonar.batch.bootstrapper.LoggingConfiguration.setLogOutput": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.batch.bootstrapper.LoggingConfiguration": 1
            },
            "packageAccesses": {
                "org.sonar.batch.bootstrapper": 4,
                "org.mockito": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 5,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 3.2863403055045377
    },
    "org.sonar.scanner.rule.QProfileTest.testEquals": {
        "filePath": "org\\sonar\\scanner\\rule\\QProfileTest.java",
        "methodName": "testEquals",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractIntegerAssert.isNotEqualTo": 2,
                "org.assertj.core.api.AbstractAssert.hasSameHashCodeAs": 1,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.sonar.scanner.rule.QProfile.hashCode": 4,
                "org.assertj.core.api.AbstractAssert.isNotEqualTo": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.rule.QProfile": 3
            },
            "packageAccesses": {
                "org.assertj.core.api": 10,
                "org.sonar.scanner.rule": 10
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 17,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 8,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 1.2109335377885662
    },
    "org.sonar.scanner.repository.MultiModuleProjectRepositoryTest.test_file_data_when_module_and_file_exist": {
        "filePath": "org\\sonar\\scanner\\repository\\MultiModuleProjectRepositoryTest.java",
        "methodName": "test_file_data_when_module_and_file_exist",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 2,
                "org.junit.Assert.assertNotNull": 1,
                "org.sonar.scanner.repository.FileData.hash": 1,
                "org.sonar.scanner.repository.FileData.revision": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.sonar.scanner.repository.MultiModuleProjectRepository.fileData": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.repository": 4,
                "org.junit": 1,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 0.6676364588631913
    },
    "org.sonar.scanner.bootstrap.GlobalTempFolderProviderTest.homeIsSymbolicLink": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\GlobalTempFolderProviderTest.java",
        "methodName": "homeIsSymbolicLink",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.GlobalTempFolderProvider.provide": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "java.io.File.toPath": 2,
                "java.io.File.getParentFile": 3,
                "java.io.File.delete": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "java.io.File.getName": 1,
                "java.io.File.getAbsolutePath": 3,
                "java.nio.file.Files.createSymbolicLink": 1,
                "com.google.common.collect.ImmutableMap.of": 1,
                "org.sonar.api.utils.System2.isOsWindows": 1,
                "org.sonar.api.utils.TempFolder.newFile": 1,
                "org.assertj.core.api.AbstractCharSequenceAssert.startsWith": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 2,
                "org.junit.Assume.assumeTrue": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ScannerProperties": 1
            },
            "packageAccesses": {
                "org.junit.rules": 2,
                "java.io": 13,
                "org.sonar.api.utils": 3,
                "org.sonar.scanner.bootstrap": 3,
                "org.junit": 1,
                "org.assertj.core.api": 4,
                "com.google.common.collect": 1,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 22,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 10,
            "linesOfCodeJunitTest": 10,
            "logicalLinesOfCode": 10,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 1.5985423912875663
    },
    "org.sonar.scanner.repository.settings.AbstractSettingsLoaderTest.should_throw_exception_when_no_value_of_non_secured_settings": {
        "filePath": "org\\sonar\\scanner\\repository\\settings\\AbstractSettingsLoaderTest.java",
        "methodName": "should_throw_exception_when_no_value_of_non_secured_settings",
        "stats": {
            "methodCalls": {
                "org.sonarqube.ws.Settings.Setting.Builder.build": 1,
                "org.sonarqube.ws.Settings.Setting.newBuilder": 1,
                "org.assertj.core.api.AssertionsForClassTypes.assertThatThrownBy": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonar.scanner.repository.settings.AbstractSettingsLoader.toMap": 1,
                "org.sonarqube.ws.Settings.Setting.Builder.setKey": 1,
                "java.util.Collections.singletonList": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonarqube.ws.Settings": 1,
                "java.util": 2,
                "org.sonarqube.ws": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.repository.settings": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 3.18485630328064
    },
    "org.sonar.scanner.externalissue.ExternalIssueImporterTest.execute_whenNewFormatWithZeroIssues": {
        "filePath": "org\\sonar\\scanner\\externalissue\\ExternalIssueImporterTest.java",
        "methodName": "execute_whenNewFormatWithZeroIssues",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.createRule": 2,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.allIssues": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "org.sonar.scanner.externalissue.ExternalIssueImporter.execute": 1,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.allExternalIssues": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "java.lang.Enum.name": 5,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.externalissue.ExternalIssueImporter": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Impact": 2,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Rule": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.externalissue": 10,
                "org.sonar.api.testfixtures.log": 1,
                "java.lang": 5,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 4,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.assertj.core.api": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 17,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 23,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 23,
            "logicalLinesOfCodeJunitTest": 9
        },
        "stabilityMetricValue": 4.306504784738383
    },
    "org.sonar.scm.svn.SvnScmProviderTest.testAutodetection": {
        "filePath": "org\\sonar\\scm\\svn\\SvnScmProviderTest.java",
        "methodName": "testAutodetection",
        "stats": {
            "methodCalls": {
                "java.io.File.toPath": 3,
                "java.nio.file.Files.createDirectory": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 2,
                "org.junit.rules.TemporaryFolder.newFolder": 3,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.scm.svn.SvnScmProviderTest.newScmProvider": 1,
                "org.sonar.api.batch.scm.ScmProvider.supports": 3,
                "java.nio.file.Path.resolve": 2
            },
            "objectInstantiations": {
                "org.sonar.scm.svn.SvnScmProvider": 1,
                "org.sonar.scm.svn.SvnBlameCommand": 1,
                "java.io.File": 1
            },
            "packageAccesses": {
                "org.junit.rules": 3,
                "java.io": 8,
                "org.assertj.core.api": 6,
                "org.sonar.scm.svn": 3,
                "java.nio.file": 5,
                "org.sonar.api.batch.scm": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 21,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 12,
            "linesOfCodeJunitTest": 11,
            "logicalLinesOfCode": 12,
            "logicalLinesOfCodeJunitTest": 11
        },
        "stabilityMetricValue": 0.049332957443679555
    },
    "org.sonar.scanner.scan.filesystem.ModuleInputComponentStoreTest.should_not_cache_duplicates": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\ModuleInputComponentStoreTest.java",
        "methodName": "should_not_cache_duplicates",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.sonar.scanner.scan.filesystem.ModuleInputComponentStore.getFilesByExtension": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsExactly": 2,
                "org.sonar.api.batch.fs.InputComponent.key": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonar.scanner.scan.filesystem.ModuleInputComponentStoreTest.newModuleInputComponentStore": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.scan.filesystem.ModuleInputComponentStore.doAdd": 3,
                "org.mockito.Mockito.mock": 2,
                "org.sonar.scanner.scan.filesystem.ModuleInputComponentStore.getFilesByName": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.ModuleInputComponentStore": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "java.lang": 2,
                "org.mockito": 3,
                "org.sonar.scanner.scan.filesystem": 8,
                "org.sonar.api.batch.fs.internal": 2,
                "org.sonar.api.batch.fs": 3,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 16,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 12,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 12,
            "logicalLinesOfCodeJunitTest": 9
        },
        "stabilityMetricValue": 5.19737696555045
    },
    "org.sonar.scanner.scan.branch.ProjectBranchesTest.defaultBranchName": {
        "filePath": "org\\sonar\\scanner\\scan\\branch\\ProjectBranchesTest.java",
        "methodName": "defaultBranchName",
        "stats": {
            "methodCalls": {
                "java.util.List.size": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "java.util.List.add": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.scan.branch.ProjectBranches.defaultBranchName": 1,
                "org.sonar.scanner.scan.branch.BranchInfo.name": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.branch.ProjectBranches": 1,
                "java.util.ArrayList": 1
            },
            "packageAccesses": {
                "java.util": 4,
                "org.sonar.scanner.scan.branch": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 0.4480421887164021
    },
    "org.sonar.scm.git.ChangedLinesComputerTest.count_multiple_added_lines": {
        "filePath": "org\\sonar\\scm\\git\\ChangedLinesComputerTest.java",
        "methodName": "count_multiple_added_lines",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.ChangedLinesComputer.receiver": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsExactly": 1,
                "org.sonar.scm.git.ChangedLinesComputerTest.printDiff": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scm.git.ChangedLinesComputer.changedLines": 1,
                "java.io.Writer.write": 1
            },
            "objectInstantiations": {
                "java.io.OutputStreamWriter": 1
            },
            "packageAccesses": {
                "java.lang": 1,
                "java.io": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scm.git": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 0.8179131675773665
    },
    "org.sonar.scanner.bootstrap.ScannerPropertiesTest.encryption_fail": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ScannerPropertiesTest.java",
        "methodName": "encryption_fail",
        "stats": {
            "methodCalls": {
                "com.google.common.collect.ImmutableMap.Builder.build": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "com.google.common.collect.ImmutableMap.Builder.put": 1,
                "com.google.common.collect.ImmutableMap.builder": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ScannerProperties": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.bootstrap": 1,
                "org.assertj.core.api": 2,
                "com.google.common.collect": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 1.9774532760167072
    },
    "org.sonar.scanner.scan.ScanPropertiesTest.should_define_keep_report": {
        "filePath": "org\\sonar\\scanner\\scan\\ScanPropertiesTest.java",
        "methodName": "should_define_keep_report",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.ScanProperties.shouldKeepReport": 1,
                "org.sonar.api.config.internal.MapSettings.setProperty": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan": 1,
                "org.sonar.api.config.internal": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 3.506528988919353
    },
    "org.sonar.scm.svn.ChangedLinesComputerTest.count_single_added_line": {
        "filePath": "org\\sonar\\scm\\svn\\ChangedLinesComputerTest.java",
        "methodName": "count_single_added_line",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractMapAssert.isEqualTo": 1,
                "org.sonar.scm.svn.ChangedLinesComputerTest.printDiff": 1,
                "java.util.Collections.singleton": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.util.Collections.singletonMap": 1,
                "org.sonar.scm.svn.ChangedLinesComputer.receiver": 1,
                "java.nio.file.Path.resolve": 1,
                "java.io.Writer.write": 1,
                "org.sonar.scm.svn.ChangedLinesComputer.changedLines": 1
            },
            "objectInstantiations": {
                "java.io.OutputStreamWriter": 1
            },
            "packageAccesses": {
                "java.lang": 1,
                "java.util": 2,
                "java.io": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scm.svn": 3,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 1.7577808370491383
    },
    "org.sonar.scm.svn.ChangedLinesComputerTest.count_multiple_added_lines": {
        "filePath": "org\\sonar\\scm\\svn\\ChangedLinesComputerTest.java",
        "methodName": "count_multiple_added_lines",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractMapAssert.isEqualTo": 1,
                "org.sonar.scm.svn.ChangedLinesComputerTest.printDiff": 1,
                "java.util.Arrays.asList": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.util.Collections.singletonMap": 1,
                "org.sonar.scm.svn.ChangedLinesComputer.receiver": 1,
                "java.nio.file.Path.resolve": 1,
                "java.io.Writer.write": 1,
                "org.sonar.scm.svn.ChangedLinesComputer.changedLines": 1
            },
            "objectInstantiations": {
                "java.util.HashSet": 1,
                "java.io.OutputStreamWriter": 1
            },
            "packageAccesses": {
                "java.util": 3,
                "java.lang": 1,
                "java.io": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scm.svn": 3,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 1.9899671412644218
    },
    "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializerTest.shouldLogInvalidAllFilePattern": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\pattern\\IssueExclusionPatternInitializerTest.java",
        "methodName": "shouldLogInvalidAllFilePattern",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.setProperty": 2,
                "org.sonar.api.config.internal.MapSettings.asConfig": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 1,
                "org.sonar.api.config.internal": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 1.4593404665496488
    },
    "org.sonar.scm.git.ChangedLinesComputerTest.do_not_count_deleted_line": {
        "filePath": "org\\sonar\\scm\\git\\ChangedLinesComputerTest.java",
        "methodName": "do_not_count_deleted_line",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.ChangedLinesComputer.receiver": 1,
                "org.sonar.scm.git.ChangedLinesComputerTest.printDiff": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scm.git.ChangedLinesComputer.changedLines": 1,
                "java.io.Writer.write": 1,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 1
            },
            "objectInstantiations": {
                "java.io.OutputStreamWriter": 1
            },
            "packageAccesses": {
                "java.lang": 1,
                "java.io": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scm.git": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 1.5857350630212663
    },
    "org.sonar.scanner.scan.filesystem.LanguageDetectionTest.detectLanguageKey_shouldFailIfConflictingLanguageSuffix": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\LanguageDetectionTest.java",
        "methodName": "detectLanguageKey_shouldFailIfConflictingLanguageSuffix",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "java.io.File.toPath": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.sonar.scanner.scan.filesystem.LanguageDetectionTest.detectLanguageKey": 1,
                "org.sonar.scanner.repository.language.DefaultLanguagesRepository.start": 1,
                "java.nio.file.Paths.get": 1,
                "org.junit.rules.TemporaryFolder.getRoot": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonar.scanner.scan.filesystem.LanguageDetection.language": 1,
                "org.sonar.scanner.repository.language.Language.key": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.repository.language.DefaultLanguagesRepository": 1,
                "org.sonar.api.resources.Languages": 1,
                "org.sonar.scanner.scan.filesystem.LanguageDetectionTest.MockLanguage": 2,
                "org.sonar.scanner.scan.filesystem.LanguageDetection": 1,
                "org.sonar.scanner.mediumtest.FakeLanguagesLoader": 1,
                "java.io.File": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "org.sonar.api.config.internal": 1,
                "java.io": 2,
                "org.sonar.api.resources": 1,
                "org.sonar.scanner.scan.filesystem": 6,
                "org.sonar.scanner.mediumtest": 1,
                "org.sonar.scanner.repository.language": 5,
                "org.assertj.core.api": 2,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 13,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 2.6305774957953263
    },
    "org.sonar.scanner.sensor.ModuleSensorOptimizerTest.should_optimize_on_both_type_and_language": {
        "filePath": "org\\sonar\\scanner\\sensor\\ModuleSensorOptimizerTest.java",
        "methodName": "should_optimize_on_both_type_and_language",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 3,
                "org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor.onlyOnLanguages": 1,
                "org.sonar.api.batch.fs.internal.DefaultFileSystem.add": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scanner.sensor.AbstractSensorOptimizer.shouldExecute": 3,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 2,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setType": 3,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLanguage": 3
            },
            "objectInstantiations": {
                "org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 3
            },
            "packageAccesses": {
                "org.sonar.api.batch.sensor.internal": 3,
                "org.sonar.api.batch.fs.internal": 15,
                "org.sonar.scanner.sensor": 3,
                "org.assertj.core.api": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 23,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 2.2225041993532972
    },
    "org.sonar.scanner.ci.vendors.JenkinsTest.loadConfiguration_of_svn_repo": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\JenkinsTest.java",
        "methodName": "loadConfiguration_of_svn_repo",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.sonar.scanner.ci.vendors.JenkinsTest.setEnvVariable": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 1,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.mockito.Mockito.when": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 1,
                "org.sonar.api.utils": 1,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 5.549600680806386
    },
    "org.sonar.scanner.scan.DirectoryLockTest.errorTryLock": {
        "filePath": "org\\sonar\\scanner\\scan\\DirectoryLockTest.java",
        "methodName": "errorTryLock",
        "stats": {
            "methodCalls": {
                "java.nio.file.Paths.get": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonar.scanner.scan.DirectoryLock.tryLock": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.DirectoryLock": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scan": 2,
                "org.assertj.core.api": 2,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 5,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 2.452607113844002
    },
    "org.sonar.scanner.scan.filesystem.AbstractExclusionFiltersTest.should_handleAliasForTestInclusionsProperty": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\AbstractExclusionFiltersTest.java",
        "methodName": "should_handleAliasForTestInclusionsProperty",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.sonar.api.batch.fs.IndexedFile.path": 2,
                "org.sonar.api.config.internal.MapSettings.setProperty": 1,
                "org.sonar.scanner.scan.filesystem.AbstractExclusionFilters.isIncluded": 2,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.mockito.Mockito.verify": 1,
                "org.sonar.api.batch.fs.IndexedFile.relativePath": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "java.nio.file.Paths.get": 2,
                "java.lang.String.contains": 1,
                "org.sonar.api.notifications.AnalysisWarnings.addUnique": 1
            },
            "objectInstantiations": {
                "org.sonar.api.batch.fs.internal.DefaultIndexedFile": 2,
                "org.sonar.scanner.scan.filesystem.AbstractExclusionFilters": 1
            },
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 1,
                "java.lang": 2,
                "org.sonar.api.config.internal": 2,
                "org.mockito": 1,
                "org.sonar.api.notifications": 1,
                "org.sonar.scanner.scan.filesystem": 4,
                "org.sonar.api.batch.fs.internal": 2,
                "org.sonar.api.batch.fs": 5,
                "org.assertj.core.api": 6,
                "java.nio.file": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 20,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 9,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 9,
            "logicalLinesOfCodeJunitTest": 9
        },
        "stabilityMetricValue": 4.314184041814795
    },
    "org.sonar.scanner.cpd.JavaCpdBlockIndexerSensorTest.testExclusions": {
        "filePath": "org\\sonar\\scanner\\cpd\\JavaCpdBlockIndexerSensorTest.java",
        "methodName": "testExclusions",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.cpd.JavaCpdBlockIndexerSensor.execute": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.setExcludedForDuplication": 1,
                "org.mockito.Mockito.verifyNoInteractions": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.cpd.JavaCpdBlockIndexerSensor": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.cpd": 2,
                "org.mockito": 1,
                "org.sonar.api.batch.fs.internal": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 3.971112270478371
    },
    "org.sonar.scanner.util.ScannerUtilsTest.encodeForUrl": {
        "filePath": "org\\sonar\\scanner\\util\\ScannerUtilsTest.java",
        "methodName": "encodeForUrl",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 2,
                "org.assertj.core.api.AbstractCharSequenceAssert.isEmpty": 2,
                "org.sonar.api.impl.utils.ScannerUtils.encodeForUrl": 4,
                "org.assertj.core.api.Assertions.assertThat": 4
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 8,
                "org.sonar.api.impl.utils": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 3.567921562841822
    },
    "org.sonar.scanner.externalissue.ExternalIssueImporterTest.execute_whenNewFormatWithStartButNotEndColumn": {
        "filePath": "org\\sonar\\scanner\\externalissue\\ExternalIssueImporterTest.java",
        "methodName": "execute_whenNewFormatWithStartButNotEndColumn",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.DefaultInputFile.getProjectRelativePath": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.selectLine": 1,
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.runOn": 1,
                "org.sonar.api.batch.fs.TextPointer.line": 2,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.allExternalIssues": 2,
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.newIssue": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.sonar.api.batch.fs.TextRange.end": 3,
                "java.util.Random.nextInt": 1,
                "org.sonar.api.batch.fs.TextRange.start": 2,
                "org.assertj.core.api.AbstractIntegerAssert.isEqualTo": 2,
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.createRule": 2,
                "java.util.Iterator.next": 1,
                "java.util.Collection.iterator": 1,
                "org.sonar.api.batch.sensor.issue.IssueLocation.textRange": 1,
                "org.sonar.api.batch.fs.TextPointer.lineOffset": 3,
                "org.sonar.scanner.externalissue.ExternalIssueImporter.execute": 1,
                "org.sonar.api.batch.sensor.issue.IIssue.primaryLocation": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 2,
                "java.lang.Enum.name": 5,
                "org.apache.commons.lang3.RandomStringUtils.randomAlphabetic": 3
            },
            "objectInstantiations": {
                "org.sonar.scanner.externalissue.ExternalIssueImporter": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Location": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.TextRange": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Impact": 2,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Issue": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Rule": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.externalissue": 15,
                "java.lang": 5,
                "java.util": 3,
                "org.apache.commons.lang3": 3,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 6,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.sonar.api.batch.fs": 11,
                "org.sonar.api.batch.fs.internal": 2,
                "org.assertj.core.api": 10,
                "org.sonar.api.batch.sensor.issue": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 42,
            "numRecursiveMethodCalls": 4,
            "linesOfCode": 44,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 44,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 3.983256737290263
    },
    "org.sonar.scanner.issue.ignore.pattern.LineRangeTest.shouldConvertLineRangeToLines": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\pattern\\LineRangeTest.java",
        "methodName": "shouldConvertLineRangeToLines",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractIterableAssert.containsOnly": 1,
                "org.sonar.scanner.issue.ignore.pattern.LineRange.toLines": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.pattern.LineRange": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 0.7370082961603212
    },
    "org.sonar.scm.git.NativeGitBlameCommandTest.throw_exception_if_command_fails": {
        "filePath": "org\\sonar\\scm\\git\\NativeGitBlameCommandTest.java",
        "methodName": "throw_exception_if_command_fails",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.NativeGitBlameCommand.blame": 1,
                "java.io.File.toPath": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.NativeGitBlameCommand": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.io": 1,
                "org.assertj.core.api": 2,
                "java.nio.file": 1,
                "org.sonar.scm.git": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 5,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 4.820734676965521
    },
    "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.coverage_branchesToCover_in_lineToCover_should_be_a_number": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericCoverageReportParserTest.java",
        "methodName": "coverage_branchesToCover_in_lineToCover_should_be_a_number",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.internal.SensorContextTester.module": 1,
                "org.sonar.api.batch.fs.internal.DefaultFileSystem.add": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.initMetadata": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser.parse": 1,
                "org.sonar.api.batch.fs.InputComponent.key": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.setupFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setType": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.fileSystem": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.parseCoverageReport": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.addFileToFs": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLanguage": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.io": 1,
                "org.sonar.scanner.genericcoverage": 5,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.sonar.api.batch.fs.internal": 6,
                "org.sonar.api.batch.fs": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 5.3167020656133
    },
    "org.sonar.batch.bootstrapper.LoggingConfigurationTest.shouldNotSetBlankFormat": {
        "filePath": "org\\sonar\\batch\\bootstrapper\\LoggingConfigurationTest.java",
        "methodName": "shouldNotSetBlankFormat",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 3,
                "org.sonar.batch.bootstrapper.LoggingConfiguration.setFormat": 3,
                "org.sonar.batch.bootstrapper.LoggingConfiguration.getSubstitutionVariable": 3,
                "org.assertj.core.api.Assertions.assertThat": 3
            },
            "objectInstantiations": {
                "org.sonar.batch.bootstrapper.LoggingConfiguration": 3
            },
            "packageAccesses": {
                "org.assertj.core.api": 6,
                "org.sonar.batch.bootstrapper": 9
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 2.7405526772536164
    },
    "org.sonar.scanner.issue.ignore.pattern.IssuePatternTest.toString_should_include_all_fields": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\pattern\\IssuePatternTest.java",
        "methodName": "toString_should_include_all_fields",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractAssert.hasToString": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.pattern.IssuePattern": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 2,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 1.0430291270320045
    },
    "org.sonar.batch.bootstrapper.LoggingConfigurationTest.test_log_level_property": {
        "filePath": "org\\sonar\\batch\\bootstrapper\\LoggingConfigurationTest.java",
        "methodName": "test_log_level_property",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 4,
                "java.util.Map.put": 3,
                "org.sonar.batch.bootstrapper.LoggingConfiguration.getSubstitutionVariable": 4,
                "org.sonar.batch.bootstrapper.LoggingConfiguration.setProperties": 4,
                "org.assertj.core.api.Assertions.assertThat": 4
            },
            "objectInstantiations": {
                "org.sonar.batch.bootstrapper.LoggingConfiguration": 4,
                "java.util.HashMap": 1
            },
            "packageAccesses": {
                "org.sonar.batch.bootstrapper": 13,
                "java.util": 5,
                "org.assertj.core.api": 8
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 19,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 12,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 12,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 0.3110902041391399
    },
    "org.sonar.scanner.cache.WriteCacheImplTest.copyFromPrevious_reads_from_readCache": {
        "filePath": "org\\sonar\\scanner\\cache\\WriteCacheImplTest.java",
        "methodName": "copyFromPrevious_reads_from_readCache",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.cache.ReadCacheImpl.contains": 1,
                "org.sonar.scanner.cache.WriteCacheImpl.copyFromPrevious": 1,
                "java.util.Map.of": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.cache.ReadCacheImpl.read": 1
            },
            "objectInstantiations": {
                "java.io.ByteArrayInputStream": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.cache": 3,
                "java.util": 1,
                "org.mockito": 2,
                "java.io": 2,
                "org.mockito.stubbing": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 3.778292062989441
    },
    "org.sonar.scanner.externalissue.ExternalIssueImporterTest.execute_whenDeprecatedFormatWithStartColumnOnEmptyLine_shouldThrowException": {
        "filePath": "org\\sonar\\scanner\\externalissue\\ExternalIssueImporterTest.java",
        "methodName": "execute_whenDeprecatedFormatWithStartColumnOnEmptyLine_shouldThrowException",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.DefaultInputFile.getProjectRelativePath": 1,
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.runOnDeprecatedFormat": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.sonar.scanner.externalissue.ExternalIssueImporter.execute": 1,
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.newIssue": 1,
                "java.util.Random.nextInt": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.apache.commons.lang3.RandomStringUtils.randomAlphabetic": 3
            },
            "objectInstantiations": {
                "org.sonar.scanner.externalissue.ExternalIssueImporter": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Location": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Issue": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.TextRange": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.externalissue": 10,
                "java.util": 1,
                "org.apache.commons.lang3": 3,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 3,
                "org.sonar.api.batch.fs.internal": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 20,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 21,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 4.606586628880847
    },
    "org.sonar.scanner.scan.filesystem.CharsetValidationTest.invalidUTF8": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\CharsetValidationTest.java",
        "methodName": "invalidUTF8",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.filesystem.CharsetValidation.Result.valid": 4,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 4,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isUTF8": 4,
                "org.assertj.core.api.Assertions.assertThat": 4
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 8,
                "org.sonar.scanner.scan.filesystem": 8
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 16,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 8,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 1.3187089262465144
    },
    "org.sonar.scanner.externalissue.ExternalIssueImporterTest.execute_whenDeprecatedFormatWithMinimalInfo": {
        "filePath": "org\\sonar\\scanner\\externalissue\\ExternalIssueImporterTest.java",
        "methodName": "execute_whenDeprecatedFormatWithMinimalInfo",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.DefaultInputFile.getProjectRelativePath": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 2,
                "org.assertj.core.api.Assertions.assertThat": 6,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.allExternalIssues": 2,
                "org.sonar.api.batch.sensor.issue.ExternalIssue.engineId": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.sonar.api.batch.sensor.issue.ExternalIssue.ruleId": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "java.util.Iterator.next": 1,
                "java.util.Collection.iterator": 1,
                "org.sonar.api.batch.sensor.issue.ExternalIssue.severity": 1,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "org.sonar.scanner.externalissue.ExternalIssueImporter.execute": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.sonar.api.batch.rule.Severity.valueOf": 1,
                "org.sonar.api.batch.sensor.issue.ExternalIssue.remediationEffort": 1,
                "org.apache.commons.lang3.RandomStringUtils.randomAlphabetic": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.externalissue.ExternalIssueImporter": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Location": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Issue": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.externalissue": 7,
                "org.sonar.api.testfixtures.log": 1,
                "java.util": 2,
                "org.apache.commons.lang3": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 1,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.sonar.api.batch.fs.internal": 1,
                "org.sonar.api.batch.rule": 1,
                "org.assertj.core.api": 12,
                "org.sonar.api.batch.sensor.issue": 5
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 25,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 19,
            "linesOfCodeJunitTest": 19,
            "logicalLinesOfCode": 19,
            "logicalLinesOfCodeJunitTest": 19
        },
        "stabilityMetricValue": 4.574235703173645
    },
    "org.sonar.scanner.scm.ScmChangedFilesTest.testConfirm": {
        "filePath": "org\\sonar\\scanner\\scm\\ScmChangedFilesTest.java",
        "methodName": "testConfirm",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scm.ScmChangedFiles.isChanged": 2,
                "org.sonar.scanner.scm.ScmChangedFiles.isValid": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 2,
                "org.sonar.scm.git.ChangedFile.of": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "java.nio.file.Paths.get": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "java.util.Set.of": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scm.ScmChangedFiles": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scm": 4,
                "java.util": 2,
                "org.assertj.core.api": 6,
                "java.nio.file": 4,
                "org.sonar.scm.git": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 0.522799301987685
    },
    "org.sonar.scm.git.ChangedLinesComputerTest.count_single_added_line": {
        "filePath": "org\\sonar\\scm\\git\\ChangedLinesComputerTest.java",
        "methodName": "count_single_added_line",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.ChangedLinesComputer.receiver": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsExactly": 1,
                "org.sonar.scm.git.ChangedLinesComputerTest.printDiff": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scm.git.ChangedLinesComputer.changedLines": 1,
                "java.io.Writer.write": 1
            },
            "objectInstantiations": {
                "java.io.OutputStreamWriter": 1
            },
            "packageAccesses": {
                "java.lang": 1,
                "java.io": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scm.git": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 1.004805452777232
    },
    "org.sonar.scanner.scan.filesystem.InputComponentStoreTest.stores_not_analysed_cpp_file_count_in_sq_community_edition": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\InputComponentStoreTest.java",
        "methodName": "stores_not_analysed_cpp_file_count_in_sq_community_edition",
        "stats": {
            "methodCalls": {
                "java.util.Optional.ifPresent": 2,
                "java.util.Optional.ofNullable": 2,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 9,
                "org.sonar.scanner.scan.filesystem.InputComponentStoreTest.InputComponentStoreTester.addFile": 9,
                "org.sonar.api.SonarRuntime.getEdition": 1,
                "org.sonar.scanner.scan.filesystem.InputComponentStore.put": 9,
                "org.sonar.scanner.scan.filesystem.InputComponentStore.getNotAnalysedFilesByLanguage": 2,
                "org.assertj.core.api.AbstractMapAssert.hasSize": 1,
                "org.assertj.core.api.AbstractMapAssert.containsEntry": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.InputComponentStoreTest.InputComponentStoreTester": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 9
            },
            "packageAccesses": {
                "java.lang": 2,
                "java.util": 4,
                "org.mockito": 1,
                "org.sonar.scanner.scan.filesystem.InputComponentStoreTest": 1,
                "org.sonar.api": 1,
                "org.sonar.scanner.scan.filesystem": 21,
                "org.sonar.api.batch.fs.internal": 29,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 40,
            "numRecursiveMethodCalls": 9,
            "linesOfCode": 46,
            "linesOfCodeJunitTest": 15,
            "logicalLinesOfCode": 46,
            "logicalLinesOfCodeJunitTest": 15
        },
        "stabilityMetricValue": 3.0111202134674455
    },
    "org.sonar.scanner.issue.ignore.pattern.IssueInclusionPatternInitializerTest.testNoConfiguration": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\pattern\\IssueInclusionPatternInitializerTest.java",
        "methodName": "testNoConfiguration",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.scanner.issue.ignore.pattern.AbstractPatternInitializer.initPatterns": 1,
                "org.sonar.scanner.issue.ignore.pattern.AbstractPatternInitializer.hasConfiguredPatterns": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 2,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 5.17984367579392
    },
    "org.sonar.scanner.scan.DefaultInputModuleHierarchyTest.testOnlyRoot": {
        "filePath": "org\\sonar\\scanner\\scan\\DefaultInputModuleHierarchyTest.java",
        "methodName": "testOnlyRoot",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.DefaultInputModuleHierarchy.root": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.setKey": 1,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.create": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 2,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.setWorkDir": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.sonar.scanner.scan.DefaultInputModuleHierarchy.children": 1,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.setBaseDir": 1,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 1,
                "org.sonar.scanner.scan.DefaultInputModuleHierarchy.parent": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.DefaultInputModuleHierarchy": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputModule": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scan": 4,
                "org.junit.rules": 2,
                "org.sonar.api.batch.fs.internal": 2,
                "org.assertj.core.api": 6,
                "org.sonar.api.batch.bootstrap": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 15,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 1.5577678078570192
    },
    "org.sonar.scm.svn.SvnConfigurationTest.sanityCheck": {
        "filePath": "org\\sonar\\scm\\svn\\SvnConfigurationTest.java",
        "methodName": "sanityCheck",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 3,
                "org.sonar.scm.svn.SvnConfiguration.password": 2,
                "org.sonar.api.config.internal.MapSettings.setProperty": 5,
                "org.sonar.scm.svn.SvnConfiguration.username": 2,
                "org.assertj.core.api.Assertions.assertThat": 8,
                "org.sonar.scm.svn.SvnConfiguration.privateKey": 3,
                "java.io.File.getAbsolutePath": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 3,
                "org.assertj.core.api.Assertions.fail": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "org.sonar.scm.svn.SvnConfiguration.passPhrase": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.svn.SvnConfiguration": 1,
                "org.sonar.api.config.internal.MapSettings": 1,
                "org.sonar.api.config.PropertyDefinitions": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "org.sonar.api.config.internal": 8,
                "java.io": 2,
                "org.sonar.api.config": 1,
                "org.assertj.core.api": 16,
                "org.sonar.scm.svn": 10
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 33,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 20,
            "linesOfCodeJunitTest": 20,
            "logicalLinesOfCode": 21,
            "logicalLinesOfCodeJunitTest": 21
        },
        "stabilityMetricValue": 3.2397065677522847
    },
    "org.sonar.scanner.scan.filesystem.CharsetValidationTest.dontFailIfNotEnoughBytes": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\CharsetValidationTest.java",
        "methodName": "dontFailIfNotEnoughBytes",
        "stats": {
            "methodCalls": {
                "org.apache.commons.lang3.StringUtils.deleteWhitespace": 1,
                "java.lang.Character.digit": 2,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.Result.valid": 1,
                "java.lang.String.length": 1,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isUTF8": 1,
                "org.sonar.scanner.scan.filesystem.CharsetValidationTest.hexToByte": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "java.lang.String.charAt": 2,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isValidUTF16": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan.filesystem": 4,
                "java.lang": 6,
                "org.assertj.core.api": 4,
                "org.apache.commons.lang3": 1
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 10,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 11,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 0.9073081069987335
    },
    "org.sonar.scanner.sensor.ModuleSensorOptimizerTest.should_optimize_on_repository": {
        "filePath": "org\\sonar\\scanner\\sensor\\ModuleSensorOptimizerTest.java",
        "methodName": "should_optimize_on_repository",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 2,
                "org.sonar.api.batch.rule.internal.ActiveRulesBuilder.addRule": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scanner.sensor.AbstractSensorOptimizer.shouldExecute": 3,
                "org.sonar.api.batch.rule.internal.NewActiveRule.Builder.setRuleKey": 3,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 2,
                "org.sonar.api.batch.rule.internal.ActiveRulesBuilder.build": 2,
                "org.sonar.api.batch.rule.internal.NewActiveRule.Builder.build": 3,
                "org.sonar.api.rule.RuleKey.of": 3,
                "org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor.createIssuesForRuleRepositories": 1
            },
            "objectInstantiations": {
                "org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor": 1,
                "org.sonar.scanner.sensor.ModuleSensorOptimizer": 2,
                "org.sonar.api.batch.rule.internal.NewActiveRule.Builder": 3,
                "org.sonar.api.batch.rule.internal.ActiveRulesBuilder": 2
            },
            "packageAccesses": {
                "org.sonar.api.config.internal": 2,
                "org.sonar.api.batch.rule.internal": 16,
                "org.sonar.api.batch.sensor.internal": 3,
                "org.sonar.scanner.sensor": 5,
                "org.sonar.api.batch.rule": 1,
                "org.assertj.core.api": 6,
                "org.sonar.api.rule": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 26,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 8,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 2.372585780268471
    },
    "org.sonar.scanner.externalissue.ExternalIssueImporterTest.execute_whenNewFormatWithNoColumns": {
        "filePath": "org\\sonar\\scanner\\externalissue\\ExternalIssueImporterTest.java",
        "methodName": "execute_whenNewFormatWithNoColumns",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.DefaultInputFile.getProjectRelativePath": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.selectLine": 1,
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.runOn": 1,
                "org.sonar.api.batch.fs.TextPointer.line": 2,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.allExternalIssues": 2,
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.newIssue": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.sonar.api.batch.fs.TextRange.end": 3,
                "java.util.Random.nextInt": 1,
                "org.sonar.api.batch.fs.TextRange.start": 2,
                "org.assertj.core.api.AbstractIntegerAssert.isEqualTo": 1,
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.createRule": 2,
                "java.util.Iterator.next": 1,
                "java.util.Collection.iterator": 1,
                "org.sonar.api.batch.sensor.issue.IssueLocation.textRange": 1,
                "org.assertj.core.api.AbstractIntegerAssert.isZero": 1,
                "org.sonar.api.batch.fs.TextPointer.lineOffset": 3,
                "org.sonar.scanner.externalissue.ExternalIssueImporter.execute": 1,
                "org.sonar.api.batch.sensor.issue.IIssue.primaryLocation": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 2,
                "java.lang.Enum.name": 5,
                "org.apache.commons.lang3.RandomStringUtils.randomAlphabetic": 3
            },
            "objectInstantiations": {
                "org.sonar.scanner.externalissue.ExternalIssueImporter": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Location": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.TextRange": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Impact": 2,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Issue": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Rule": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.externalissue": 15,
                "java.lang": 5,
                "java.util": 3,
                "org.apache.commons.lang3": 3,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 6,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.sonar.api.batch.fs": 11,
                "org.sonar.api.batch.fs.internal": 2,
                "org.assertj.core.api": 10,
                "org.sonar.api.batch.sensor.issue": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 42,
            "numRecursiveMethodCalls": 4,
            "linesOfCode": 44,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 44,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 4.175607541842709
    },
    "org.sonar.scanner.repository.DefaultNewCodePeriodLoaderTest.loads_new_code_period": {
        "filePath": "org\\sonar\\scanner\\repository\\DefaultNewCodePeriodLoaderTest.java",
        "methodName": "loads_new_code_period",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 1,
                "org.sonar.scanner.repository.DefaultNewCodePeriodLoaderTest.verifyCalledPath": 1,
                "java.io.ByteArrayOutputStream.toByteArray": 1,
                "org.sonar.scanner.repository.DefaultNewCodePeriodLoader.load": 1,
                "org.sonar.scanner.repository.DefaultNewCodePeriodLoaderTest.prepareCallWithResults": 1,
                "org.mockito.ArgumentMatchers.argThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.sonarqube.ws.client.WsResponse.contentStream": 1,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.Builder.build": 1,
                "org.mockito.Mockito.when": 2,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.Builder.setValue": 1,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.Builder.setType": 1,
                "org.mockito.Mockito.verify": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 2,
                "org.sonar.scanner.WsTestUtil.verifyCall": 1,
                "com.google.protobuf.AbstractMessageLite.writeTo": 1,
                "org.sonar.scanner.repository.DefaultNewCodePeriodLoaderTest.createResponse": 1,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.newBuilder": 1,
                "org.sonar.scanner.WsTestUtil.mockStream": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.WsTestUtil.RequestMatcher": 1,
                "java.io.ByteArrayOutputStream": 1,
                "java.io.ByteArrayInputStream": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 2,
                "org.sonarqube.ws.NewCodePeriods": 1,
                "org.mockito": 6,
                "java.io": 4,
                "org.sonar.scanner": 3,
                "com.google.protobuf": 1,
                "org.sonar.scanner.repository": 4,
                "org.sonar.scanner.bootstrap": 2,
                "org.sonarqube.ws": 4,
                "org.mockito.stubbing": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 23,
            "numRecursiveMethodCalls": 5,
            "linesOfCode": 13,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 13,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 4.3896111128320685
    },
    "org.sonar.scm.git.ChangedFileTest.test_unMovedFile": {
        "filePath": "org\\sonar\\scm\\git\\ChangedFileTest.java",
        "methodName": "test_unMovedFile",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.ChangedFile.getOldRelativeFilePathReference": 1,
                "org.assertj.core.api.AbstractAssert.isSameAs": 1,
                "java.nio.file.Path.of": 1,
                "org.sonar.scm.git.ChangedFile.of": 1,
                "org.sonar.scm.git.ChangedFile.isMovedFile": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.sonar.scm.git.ChangedFile.getAbsolutFilePath": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 6,
                "java.nio.file": 2,
                "org.sonar.scm.git": 5
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 0.4716763262099312
    },
    "org.sonar.scanner.scan.filesystem.InputComponentStoreTest.stores_not_analysed_c_file_count_in_sq_community_edition": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\InputComponentStoreTest.java",
        "methodName": "stores_not_analysed_c_file_count_in_sq_community_edition",
        "stats": {
            "methodCalls": {
                "java.util.Optional.ifPresent": 2,
                "java.util.Optional.ofNullable": 2,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 5,
                "org.sonar.scanner.scan.filesystem.InputComponentStoreTest.InputComponentStoreTester.addFile": 5,
                "org.sonar.api.SonarRuntime.getEdition": 1,
                "org.sonar.scanner.scan.filesystem.InputComponentStore.put": 5,
                "org.sonar.scanner.scan.filesystem.InputComponentStore.getNotAnalysedFilesByLanguage": 2,
                "org.assertj.core.api.AbstractMapAssert.hasSize": 1,
                "org.assertj.core.api.AbstractMapAssert.containsEntry": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.InputComponentStoreTest.InputComponentStoreTester": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 5
            },
            "packageAccesses": {
                "java.lang": 2,
                "java.util": 4,
                "org.mockito": 1,
                "org.sonar.scanner.scan.filesystem.InputComponentStoreTest": 1,
                "org.sonar.api": 1,
                "org.sonar.scanner.scan.filesystem": 13,
                "org.sonar.api.batch.fs.internal": 17,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 28,
            "numRecursiveMethodCalls": 5,
            "linesOfCode": 30,
            "linesOfCodeJunitTest": 11,
            "logicalLinesOfCode": 30,
            "logicalLinesOfCodeJunitTest": 11
        },
        "stabilityMetricValue": 5.65990536469307
    },
    "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.createErrorMessage_whenHtml_shouldCreateErrorMsg": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\DefaultScannerWsClientTest.java",
        "methodName": "createErrorMessage_whenHtml_shouldCreateErrorMsg",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.createErrorMessage": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonarqube.ws.client.HttpException": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 1,
                "java.lang": 1,
                "org.sonar.scanner.bootstrap": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 5.4608222284589365
    },
    "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializerTest.shouldLogInvalidResourceKey": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\pattern\\IssueExclusionPatternInitializerTest.java",
        "methodName": "shouldLogInvalidResourceKey",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.setProperty": 3,
                "org.sonar.api.config.internal.MapSettings.asConfig": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 1,
                "org.sonar.api.config.internal": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 2.442616634738308
    },
    "org.sonar.scanner.scan.SpringProjectScanContainerTest.should_add_only_batch_extensions": {
        "filePath": "org\\sonar\\scanner\\scan\\SpringProjectScanContainerTest.java",
        "methodName": "should_add_only_batch_extensions",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 4,
                "org.sonar.scanner.scan.SpringProjectScanContainer.getScannerProjectExtensionsFilter": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 2,
                "org.sonar.scanner.bootstrap.ExtensionMatcher.accept": 6,
                "org.assertj.core.api.Assertions.assertThat": 6
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.SpringProjectScanContainerTest.MyServerExtension": 1,
                "org.sonar.scanner.scan.SpringProjectScanContainerTest.MyBatchExtension": 1,
                "org.sonar.scanner.scan.SpringProjectScanContainerTest.MyProjectExtension": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scan": 4,
                "org.sonar.scanner.bootstrap": 7,
                "org.assertj.core.api": 12
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 19,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 3.946701583061814
    },
    "org.sonar.scanner.sensor.SensorIdTest.equals_and_hashCode_depend_on_all_fields": {
        "filePath": "org\\sonar\\scanner\\sensor\\SensorIdTest.java",
        "methodName": "equals_and_hashCode_depend_on_all_fields",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.sensor.SensorId": 4
            },
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.sensor": 8
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 0.2992589096915237
    },
    "org.sonar.batch.bootstrapper.LoggingConfigurationTest.shouldNotBeVerboseByDefault": {
        "filePath": "org\\sonar\\batch\\bootstrapper\\LoggingConfigurationTest.java",
        "methodName": "shouldNotBeVerboseByDefault",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.batch.bootstrapper.LoggingConfiguration.getSubstitutionVariable": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.batch.bootstrapper.LoggingConfiguration": 1
            },
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.batch.bootstrapper": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 0.2408407450023492
    },
    "org.sonar.scanner.repository.SingleProjectRepositoryTest.test_file_data_when_file_exists": {
        "filePath": "org\\sonar\\scanner\\repository\\SingleProjectRepositoryTest.java",
        "methodName": "test_file_data_when_file_exists",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 2,
                "org.sonar.scanner.repository.SingleProjectRepository.fileData": 1,
                "org.junit.Assert.assertNotNull": 1,
                "org.sonar.scanner.repository.FileData.hash": 1,
                "org.sonar.scanner.repository.FileData.revision": 1,
                "org.assertj.core.api.Assertions.assertThat": 2
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.repository": 4,
                "org.junit": 1,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 0.527549169958316
    },
    "org.sonar.scanner.postjob.PostJobOptimizerTest.should_run_analyzer_with_no_metadata": {
        "filePath": "org\\sonar\\scanner\\postjob\\PostJobOptimizerTest.java",
        "methodName": "should_run_analyzer_with_no_metadata",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scanner.postjob.PostJobOptimizer.shouldExecute": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.postjob.PostJobOptimizer": 1,
                "org.sonar.api.batch.postjob.internal.DefaultPostJobDescriptor": 1
            },
            "packageAccesses": {
                "org.sonar.api.batch.postjob.internal": 2,
                "org.sonar.api.config.internal": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.postjob": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 0.38705682532859353
    },
    "org.sonar.scanner.scan.filesystem.CharsetDetectorTest.fail_if_file_doesnt_exist": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\CharsetDetectorTest.java",
        "methodName": "fail_if_file_doesnt_exist",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.filesystem.CharsetDetector.charset": 1,
                "org.sonar.scanner.scan.filesystem.CharsetDetector.run": 1,
                "java.nio.file.Path.toAbsolutePath": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.nio.file.Paths.get": 2,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonar.scanner.scan.filesystem.CharsetDetectorTest.detectCharset": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.CharsetDetector": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scan.filesystem": 5,
                "org.assertj.core.api": 4,
                "java.nio.file": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 2.7269231269717706
    },
    "org.sonar.scanner.config.DefaultConfigurationTest.getDefaultValues": {
        "filePath": "org\\sonar\\scanner\\config\\DefaultConfigurationTest.java",
        "methodName": "getDefaultValues",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.PropertyDefinition.Builder.defaultValue": 2,
                "org.assertj.core.api.AbstractObjectArrayAssert.containsExactly": 2,
                "java.util.Arrays.asList": 1,
                "org.assertj.core.api.Assertions.assertThat": 4,
                "org.sonar.api.config.PropertyDefinition.Builder.build": 2,
                "org.sonar.api.config.Configuration.get": 2,
                "org.sonar.api.config.PropertyDefinition.Builder.multiValues": 2,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 2,
                "org.sonar.api.config.Configuration.getStringArray": 2,
                "com.google.common.collect.ImmutableMap.of": 1,
                "org.sonar.api.config.PropertyDefinition.builder": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.config.DefaultConfiguration": 1,
                "org.sonar.api.config.internal.Encryption": 1,
                "org.sonar.api.config.PropertyDefinitions": 1
            },
            "packageAccesses": {
                "java.util": 1,
                "org.sonar.api.config.internal": 1,
                "org.sonar.scanner.config": 1,
                "org.sonar.api.config": 14,
                "org.assertj.core.api": 8,
                "com.google.common.collect": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 22,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 4.193294522813084
    },
    "org.sonar.scanner.cache.ReadCacheImplTest.contains_delegates_to_storage": {
        "filePath": "org\\sonar\\scanner\\cache\\ReadCacheImplTest.java",
        "methodName": "contains_delegates_to_storage",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.cache.ReadCacheImpl.contains": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.cache.AnalysisCacheStorage.contains": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.cache": 2,
                "org.mockito": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 3.2319990099782876
    },
    "org.sonar.scanner.bootstrap.GlobalTempFolderProviderTest.cleanUpOld": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\GlobalTempFolderProviderTest.java",
        "methodName": "cleanUpOld",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.GlobalTempFolderProvider.provide": 1,
                "java.io.File.toPath": 1,
                "org.assertj.core.api.AbstractFileAssert.isDirectory": 1,
                "java.lang.System.currentTimeMillis": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "java.io.File.getAbsolutePath": 1,
                "org.assertj.core.api.AbstractObjectArrayAssert.hasSize": 1,
                "java.util.concurrent.TimeUnit.toMillis": 1,
                "org.sonar.scanner.bootstrap.GlobalTempFolderProviderTest.setFileCreationDate": 1,
                "java.io.File.mkdirs": 1,
                "com.google.common.collect.ImmutableMap.of": 1,
                "java.nio.file.attribute.FileTime.fromMillis": 1,
                "org.assertj.core.api.AbstractFileAssert.exists": 1,
                "java.io.File.listFiles": 2,
                "org.sonar.scanner.bootstrap.GlobalTempFolderProviderTest.getCreatedTempDir": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "java.nio.file.Files.getFileAttributeView": 1,
                "java.nio.file.attribute.BasicFileAttributeView.setTimes": 1,
                "org.apache.commons.io.FileUtils.deleteQuietly": 1
            },
            "objectInstantiations": {
                "java.io.File": 1,
                "org.sonar.scanner.bootstrap.ScannerProperties": 1
            },
            "packageAccesses": {
                "java.lang": 1,
                "org.junit.rules": 1,
                "java.io": 8,
                "java.util.concurrent": 1,
                "org.sonar.scanner.bootstrap": 4,
                "org.assertj.core.api": 6,
                "org.apache.commons.io": 1,
                "com.google.common.collect": 1,
                "java.nio.file": 1,
                "java.nio.file.attribute": 4
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 22,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 15,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 16,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 1.8588351098964169
    },
    "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializerTest.shouldReturnBlockPattern": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\pattern\\IssueExclusionPatternInitializerTest.java",
        "methodName": "shouldReturnBlockPattern",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.sonar.api.config.internal.MapSettings.setProperty": 7,
                "org.sonar.scanner.issue.ignore.pattern.AbstractPatternInitializer.getMulticriteriaPatterns": 1,
                "org.assertj.core.api.Assertions.assertThat": 6,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.sonar.scanner.issue.ignore.pattern.AbstractPatternInitializer.hasMulticriteriaPatterns": 1,
                "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer.getBlockPatterns": 1,
                "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer.hasFileContentPattern": 1,
                "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer.getAllFilePatterns": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 2,
                "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer.hasConfiguredPatterns": 1,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 7,
                "org.sonar.api.config.internal": 8,
                "org.assertj.core.api": 12
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 26,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 14,
            "linesOfCodeJunitTest": 14,
            "logicalLinesOfCode": 14,
            "logicalLinesOfCodeJunitTest": 14
        },
        "stabilityMetricValue": 2.4659119263694027
    },
    "org.sonar.scanner.issue.IssuePublisherTest.ignore_null_rule_of_active_rule": {
        "filePath": "org\\sonar\\scanner\\issue\\IssuePublisherTest.java",
        "methodName": "ignore_null_rule_of_active_rule",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.issue.internal.AbstractDefaultIssue.at": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.selectLine": 1,
                "org.sonar.scanner.issue.IssuePublisher.initAndAddIssue": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssueLocation.on": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.scanner.issue.IssuePublisherTest.initModuleIssues": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssueLocation.message": 1,
                "org.mockito.Mockito.verifyNoInteractions": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssue.forRule": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssueLocation.at": 1,
                "org.sonar.api.batch.rule.internal.ActiveRulesBuilder.build": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.IssuePublisher": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssue": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssueLocation": 1
            },
            "packageAccesses": {
                "org.mockito": 1,
                "org.sonar.api.batch.sensor.issue.internal": 8,
                "org.sonar.scanner.issue": 3,
                "org.sonar.api.batch.rule.internal": 1,
                "org.sonar.api.batch.fs.internal": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 3.731542372176703
    },
    "org.sonar.scanner.rule.QProfileVerifierTest.should_log_all_used_profiles": {
        "filePath": "org\\sonar\\scanner\\rule\\QProfileVerifierTest.java",
        "methodName": "should_log_all_used_profiles",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 2,
                "org.sonar.scanner.scan.filesystem.InputComponentStore.put": 2,
                "org.slf4j.Logger.info": 2,
                "org.sonar.scanner.rule.QProfileVerifier.execute": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLanguage": 2,
                "org.mockito.Mockito.mock": 1,
                "org.mockito.Mockito.verify": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.rule.QProfileVerifier": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 2
            },
            "packageAccesses": {
                "org.sonar.scanner.scan.filesystem": 2,
                "org.slf4j": 3,
                "org.mockito": 3,
                "org.sonar.api.batch.fs.internal": 6,
                "org.sonar.scanner.rule": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 5.0220544039366555
    },
    "org.sonar.scanner.ci.vendors.CirrusCiTest.isDetected": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\CirrusCiTest.java",
        "methodName": "isDetected",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.vendors.CirrusCiTest.setEnvVariable": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.sonar.api.utils.System2.envVariable": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.sonar.scanner.ci.CiVendor.isDetected": 2,
                "org.mockito.Mockito.when": 2
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 2,
                "org.sonar.api.utils": 2,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 4,
                "org.sonar.scanner.ci.vendors": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 4.897900228193959
    },
    "org.sonar.scm.svn.SvnConfigurationTest.isEmpty_givenAllNotNullProperties_returnFalse": {
        "filePath": "org\\sonar\\scm\\svn\\SvnConfigurationTest.java",
        "methodName": "isEmpty_givenAllNotNullProperties_returnFalse",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.scm.svn.SvnConfiguration.isEmpty": 1,
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.sonar.api.config.internal.MapSettings.setProperty": 3,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.svn.SvnConfiguration": 1,
                "org.sonar.api.config.internal.MapSettings": 1,
                "org.sonar.api.config.PropertyDefinitions": 1
            },
            "packageAccesses": {
                "org.sonar.api.config.internal": 6,
                "org.sonar.api.config": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scm.svn": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 2.5712193024683376
    },
    "org.sonar.scanner.scan.filesystem.CharsetDetectorTest.no_encoding_found": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\CharsetDetectorTest.java",
        "methodName": "no_encoding_found",
        "stats": {
            "methodCalls": {
                "java.util.Random.nextBytes": 1,
                "org.sonar.scanner.scan.filesystem.CharsetDetector.charset": 1,
                "org.sonar.scanner.scan.filesystem.CharsetDetector.run": 1,
                "java.io.File.toPath": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "java.nio.file.Files.write": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.CharsetDetector": 1,
                "java.util.Random": 1
            },
            "packageAccesses": {
                "java.util": 2,
                "org.junit.rules": 1,
                "java.io": 1,
                "org.sonar.scanner.scan.filesystem": 4,
                "org.assertj.core.api": 4,
                "java.nio.file": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 10,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 13,
            "linesOfCodeJunitTest": 13,
            "logicalLinesOfCode": 13,
            "logicalLinesOfCodeJunitTest": 13
        },
        "stabilityMetricValue": 1.2526132525832043
    },
    "org.sonar.scanner.issue.ignore.pattern.LineRangeTest.shouldTestInclusionInRangeOfLines": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\pattern\\LineRangeTest.java",
        "methodName": "shouldTestInclusionInRangeOfLines",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 4,
                "org.sonar.scanner.issue.ignore.pattern.LineRange.in": 6,
                "org.assertj.core.api.Assertions.assertThat": 6
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.pattern.LineRange": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 8,
                "org.assertj.core.api": 12
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 18,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 0.6381857169465824
    },
    "org.sonar.scanner.scan.filesystem.ModuleInputComponentStoreTest.should_cache_files_by_filename": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\ModuleInputComponentStoreTest.java",
        "methodName": "should_cache_files_by_filename",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 3,
                "org.assertj.core.api.AbstractIterableAssert.containsExactlyInAnyOrder": 1,
                "org.sonar.api.batch.fs.InputComponent.key": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonar.scanner.scan.filesystem.ModuleInputComponentStoreTest.newModuleInputComponentStore": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.scan.filesystem.ModuleInputComponentStore.doAdd": 3,
                "org.mockito.Mockito.mock": 2,
                "org.sonar.scanner.scan.filesystem.ModuleInputComponentStore.getFilesByName": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.ModuleInputComponentStore": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 3
            },
            "packageAccesses": {
                "java.lang": 1,
                "org.mockito": 3,
                "org.sonar.scanner.scan.filesystem": 7,
                "org.sonar.api.batch.fs.internal": 6,
                "org.sonar.api.batch.fs": 5,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 15,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 12,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 12,
            "logicalLinesOfCodeJunitTest": 9
        },
        "stabilityMetricValue": 2.5674678340917763
    },
    "org.sonar.scanner.scan.filesystem.MutableFileSystemTest.return_all_files_when_not_restricted": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\MutableFileSystemTest.java",
        "methodName": "return_all_files_when_not_restricted",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.filesystem.MutableFileSystemTest.generateFilename": 6,
                "java.lang.String.toLowerCase": 6,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setStatus": 3,
                "org.sonar.scanner.scan.filesystem.MutableFileSystemTest.addFile": 3,
                "org.sonar.api.batch.fs.internal.DefaultFileSystem.add": 3,
                "org.sonar.scanner.scan.filesystem.MutableFileSystem.inputFiles": 2,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "org.sonar.scanner.scan.filesystem.MutableFileSystemTest.addFileWithAllStatus": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "java.lang.String.format": 9,
                "org.sonar.scanner.scan.filesystem.MutableFileSystem.setRestrictToChangedFiles": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 3,
                "org.sonar.api.batch.fs.FilePredicates.hasFilename": 3,
                "org.assertj.core.api.AbstractAssert.isNotNull": 3,
                "org.sonar.api.batch.fs.FilePredicates.all": 2,
                "org.sonar.api.batch.fs.internal.DefaultFileSystem.predicates": 5,
                "org.sonar.scanner.scan.filesystem.MutableFileSystem.inputFile": 3,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLanguage": 3,
                "java.lang.Enum.name": 6
            },
            "objectInstantiations": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 3
            },
            "packageAccesses": {
                "org.sonar.scanner.scan.filesystem": 16,
                "java.lang": 21,
                "org.sonar.api.batch.fs": 5,
                "org.sonar.api.batch.fs.internal": 20,
                "org.assertj.core.api": 10
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 69,
            "numRecursiveMethodCalls": 10,
            "linesOfCode": 19,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 19,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 1.5737724029066331
    },
    "org.sonar.scanner.issue.ignore.pattern.LineRangeTest.lineRangeShouldBeOrdered": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\pattern\\LineRangeTest.java",
        "methodName": "lineRangeShouldBeOrdered",
        "stats": {
            "methodCalls": {},
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.pattern.LineRange": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 0,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 1.7312144784384351
    },
    "org.sonar.batch.bootstrapper.EnvironmentInformationTest.test_bean": {
        "filePath": "org\\sonar\\batch\\bootstrapper\\EnvironmentInformationTest.java",
        "methodName": "test_bean",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 2,
                "org.sonar.batch.bootstrapper.EnvironmentInformation.getVersion": 1,
                "org.sonar.batch.bootstrapper.EnvironmentInformation.getKey": 1,
                "org.assertj.core.api.Assertions.assertThat": 2
            },
            "objectInstantiations": {
                "org.sonar.batch.bootstrapper.EnvironmentInformation": 1
            },
            "packageAccesses": {
                "org.assertj.core.api": 4,
                "org.sonar.batch.bootstrapper": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 1.6327966263799194
    },
    "org.sonar.scm.svn.SvnConfigurationTest.isEmpty_givenHalfNotNullProperties_returnFalse": {
        "filePath": "org\\sonar\\scm\\svn\\SvnConfigurationTest.java",
        "methodName": "isEmpty_givenHalfNotNullProperties_returnFalse",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.scm.svn.SvnConfiguration.isEmpty": 1,
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.sonar.api.config.internal.MapSettings.setProperty": 2,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.svn.SvnConfiguration": 1,
                "org.sonar.api.config.internal.MapSettings": 1,
                "org.sonar.api.config.PropertyDefinitions": 1
            },
            "packageAccesses": {
                "org.sonar.api.config.internal": 5,
                "org.sonar.api.config": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scm.svn": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 5.3959379092233934
    },
    "org.sonar.scm.svn.ChangedLinesComputerTest.parse_diff_with_multiple_files": {
        "filePath": "org\\sonar\\scm\\svn\\ChangedLinesComputerTest.java",
        "methodName": "parse_diff_with_multiple_files",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractMapAssert.isEqualTo": 1,
                "org.sonar.scm.svn.ChangedLinesComputerTest.printDiff": 1,
                "java.util.Map.put": 3,
                "java.util.Collections.singleton": 1,
                "java.util.Arrays.asList": 2,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scm.svn.ChangedLinesComputer.receiver": 1,
                "java.nio.file.Path.resolve": 3,
                "java.io.Writer.write": 1,
                "org.sonar.scm.svn.ChangedLinesComputer.changedLines": 1
            },
            "objectInstantiations": {
                "java.util.HashSet": 2,
                "java.io.OutputStreamWriter": 1,
                "java.util.HashMap": 1
            },
            "packageAccesses": {
                "java.util": 10,
                "java.lang": 1,
                "java.io": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scm.svn": 3,
                "java.nio.file": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 15,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 9,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 10,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 1.7925868340132545
    },
    "org.sonar.scanner.externalissue.sarif.RegionMapperTest.mapRegion_whenNullRegion_returnsEmpty": {
        "filePath": "org\\sonar\\scanner\\externalissue\\sarif\\RegionMapperTest.java",
        "methodName": "mapRegion_whenNullRegion_returnsEmpty",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractOptionalAssert.isEmpty": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.externalissue.sarif.RegionMapper.mapRegion": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.externalissue.sarif": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 1.9761285113453115
    },
    "org.sonar.scanner.scan.filesystem.ByteCharsetDetectorTest.failAll": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\ByteCharsetDetectorTest.java",
        "methodName": "failAll",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 3,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isUTF8": 1,
                "org.sonar.scanner.scan.filesystem.ByteCharsetDetector.detect": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.mockito.Mockito.when": 3,
                "org.mockito.ArgumentMatchers.anyBoolean": 2,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isValidWindows1252": 1,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isUTF16": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.CharsetValidation.Result": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scan.filesystem": 5,
                "org.mockito": 8,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 17,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 3.9025040686353227
    },
    "org.sonar.scanner.phases.ProjectCoverageExclusionsTest.shouldNotExcludeFileCoverageBasedOnPattern": {
        "filePath": "org\\sonar\\scanner\\phases\\ProjectCoverageExclusionsTest.java",
        "methodName": "shouldNotExcludeFileCoverageBasedOnPattern",
        "stats": {
            "methodCalls": {
                "java.io.File.toPath": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 2,
                "org.sonar.scanner.phases.ProjectCoverageExclusionsTest.mockConfig": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.config.DefaultConfiguration.getStringArray": 2,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.create": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.sonar.scanner.scan.filesystem.AbstractCoverageAndDuplicationExclusions.isExcludedForCoverage": 1,
                "org.sonar.scanner.scan.filesystem.AbstractCoverageAndDuplicationExclusions.isExcludedForDuplication": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setProjectBaseDir": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.io.File": 2,
                "org.sonar.scanner.scan.filesystem.ProjectCoverageAndDuplicationExclusions": 1
            },
            "packageAccesses": {
                "org.mockito": 3,
                "java.io": 3,
                "org.sonar.scanner.phases": 1,
                "org.sonar.scanner.config": 2,
                "org.sonar.scanner.scan": 1,
                "org.sonar.scanner.scan.filesystem": 3,
                "org.sonar.api.batch.fs.internal": 4,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 18,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 3.8218042423850123
    },
    "org.sonar.scanner.externalissue.ExternalIssueImporterTest.execute_whenDeprecatedFormatWithZeroIssues": {
        "filePath": "org\\sonar\\scanner\\externalissue\\ExternalIssueImporterTest.java",
        "methodName": "execute_whenDeprecatedFormatWithZeroIssues",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.internal.SensorContextTester.allIssues": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "org.sonar.scanner.externalissue.ExternalIssueImporter.execute": 1,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.allExternalIssues": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.externalissue.ExternalIssueImporter": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.externalissue": 5,
                "org.sonar.api.testfixtures.log": 1,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.assertj.core.api": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 10,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 3.118119692055086
    },
    "org.sonar.scanner.phases.ModuleCoverageAndDuplicationExclusionsTest.shouldNotExcludeFileBasedOnPattern": {
        "filePath": "org\\sonar\\scanner\\phases\\ModuleCoverageAndDuplicationExclusionsTest.java",
        "methodName": "shouldNotExcludeFileBasedOnPattern",
        "stats": {
            "methodCalls": {
                "java.io.File.toPath": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.config.DefaultConfiguration.getStringArray": 2,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.create": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.sonar.scanner.scan.filesystem.AbstractCoverageAndDuplicationExclusions.isExcludedForCoverage": 1,
                "org.sonar.scanner.phases.ModuleCoverageAndDuplicationExclusionsTest.mockConfig": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setProjectBaseDir": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.io.File": 2,
                "org.sonar.scanner.scan.filesystem.ModuleCoverageAndDuplicationExclusions": 1
            },
            "packageAccesses": {
                "org.mockito": 3,
                "java.io": 3,
                "org.sonar.scanner.phases": 1,
                "org.sonar.scanner.config": 2,
                "org.sonar.scanner.scan": 1,
                "org.sonar.scanner.scan.filesystem": 2,
                "org.sonar.api.batch.fs.internal": 4,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 15,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 3.3866328049960828
    },
    "org.sonar.scm.svn.SvnScmProviderTest.branchChangedFiles_should_return_null_when_repo_nonexistent": {
        "filePath": "org\\sonar\\scm\\svn\\SvnScmProviderTest.java",
        "methodName": "branchChangedFiles_should_return_null_when_repo_nonexistent",
        "stats": {
            "methodCalls": {
                "java.io.File.toPath": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scm.svn.SvnScmProvider.branchChangedFiles": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.sonar.scm.svn.SvnScmProviderTest.newScmProvider": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.svn.SvnBlameCommand": 1,
                "org.sonar.scm.svn.SvnScmProvider": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.io": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scm.svn": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 0.049491735458065685
    },
    "org.sonar.scanner.genericcoverage.StaxParserTest.testXMLWithXSD": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\StaxParserTest.java",
        "methodName": "testXMLWithXSD",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.genericcoverage.StaxParserTest.getTestHandler": 1,
                "java.lang.Object.getClass": 1,
                "org.codehaus.staxmate.in.SMInputCursor.advance": 1,
                "java.lang.ClassLoader.getResourceAsStream": 1,
                "org.sonar.scanner.genericcoverage.StaxParser.parse": 1,
                "java.lang.Class.getClassLoader": 1,
                "org.codehaus.staxmate.in.SMHierarchicCursor.getNext": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.StaxParser": 1,
                "org.sonar.scanner.genericcoverage.StaxParser.XmlStreamHandler": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.genericcoverage": 5,
                "java.lang": 3,
                "org.codehaus.staxmate.in": 2
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 1.6474913864154321
    },
    "org.sonar.scanner.scan.ScanPropertiesTest.validate_fails_if_metadata_file_location_is_not_absolute": {
        "filePath": "org\\sonar\\scanner\\scan\\ScanPropertiesTest.java",
        "methodName": "validate_fails_if_metadata_file_location_is_not_absolute",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.ScanProperties.validate": 1,
                "org.sonar.api.config.internal.MapSettings.setProperty": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan": 1,
                "org.sonar.api.config.internal": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 5,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 4.047033208018048
    },
    "org.sonar.scanner.scan.filesystem.ByteCharsetDetectorTest.tryOtherUserCharset": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\ByteCharsetDetectorTest.java",
        "methodName": "tryOtherUserCharset",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 3,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isUTF8": 1,
                "org.sonar.scanner.scan.filesystem.ByteCharsetDetector.detect": 1,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.tryDecode": 1,
                "org.mockito.ArgumentMatchers.eq": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.mockito.Mockito.when": 3,
                "org.mockito.ArgumentMatchers.anyBoolean": 2,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isUTF16": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.CharsetValidation.Result": 1,
                "org.sonar.scanner.scan.filesystem.ByteCharsetDetector": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scan.filesystem": 6,
                "org.mockito": 9,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 18,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 3.2891543256848137
    },
    "org.sonar.scanner.ci.vendors.BuildkiteTest.isDetected": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\BuildkiteTest.java",
        "methodName": "isDetected",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.sonar.api.utils.System2.envVariable": 7,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 7,
                "org.sonar.scanner.ci.vendors.BuildkiteTest.setEnvVariable": 7,
                "org.sonar.scanner.ci.CiVendor.isDetected": 3,
                "org.mockito.Mockito.when": 7
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 7,
                "org.sonar.api.utils": 7,
                "org.sonar.scanner.ci": 3,
                "org.mockito.stubbing": 7,
                "org.assertj.core.api": 6,
                "org.sonar.scanner.ci.vendors": 7
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 37,
            "numRecursiveMethodCalls": 7,
            "linesOfCode": 17,
            "linesOfCodeJunitTest": 10,
            "logicalLinesOfCode": 17,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 5.659740660503416
    },
    "org.sonar.scm.svn.SvnConfigurationTest.isEmpty_givenNotNullProperties_returnFalse": {
        "filePath": "org\\sonar\\scm\\svn\\SvnConfigurationTest.java",
        "methodName": "isEmpty_givenNotNullProperties_returnFalse",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.scm.svn.SvnConfiguration.isEmpty": 1,
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.sonar.api.config.internal.MapSettings.setProperty": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.svn.SvnConfiguration": 1,
                "org.sonar.api.config.internal.MapSettings": 1,
                "org.sonar.api.config.PropertyDefinitions": 1
            },
            "packageAccesses": {
                "org.sonar.api.config.internal": 4,
                "org.sonar.api.config": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scm.svn": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 5,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 3.1784638760554857
    },
    "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.unitTest_missing_path_attribute": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericCoverageReportParserTest.java",
        "methodName": "unitTest_missing_path_attribute",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.parseCoverageReport": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser.parse": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.genericcoverage": 3,
                "org.junit.rules": 1,
                "java.io": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 5.162157962839646
    },
    "org.sonar.scanner.ci.vendors.DroneCiTest.isDetected": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\DroneCiTest.java",
        "methodName": "isDetected",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scanner.ci.vendors.DroneCiTest.setEnvVariable": 4,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.sonar.api.utils.System2.envVariable": 4,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.sonar.scanner.ci.CiVendor.isDetected": 2,
                "org.mockito.Mockito.when": 4
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 4,
                "org.sonar.api.utils": 4,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 4,
                "org.sonar.scanner.ci.vendors": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 22,
            "numRecursiveMethodCalls": 4,
            "linesOfCode": 10,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 10,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 4.915621143064279
    },
    "org.sonar.scanner.repository.settings.AbstractSettingsLoaderTest.should_escape_global_multivalue_settings": {
        "filePath": "org\\sonar\\scanner\\repository\\settings\\AbstractSettingsLoaderTest.java",
        "methodName": "should_escape_global_multivalue_settings",
        "stats": {
            "methodCalls": {
                "org.sonarqube.ws.Settings.Setting.Builder.build": 1,
                "org.assertj.core.api.AbstractMapAssert.containsExactly": 1,
                "org.sonarqube.ws.Settings.Setting.newBuilder": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.repository.settings.AbstractSettingsLoader.toMap": 1,
                "org.sonarqube.ws.Settings.Values.Builder.addValues": 2,
                "org.assertj.core.api.Assertions.entry": 1,
                "org.sonarqube.ws.Settings.Setting.Builder.setValues": 1,
                "org.sonarqube.ws.Settings.Setting.Builder.setKey": 1,
                "org.sonarqube.ws.Settings.Values.newBuilder": 1,
                "java.util.Collections.singletonList": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 1,
                "org.sonarqube.ws": 7,
                "org.assertj.core.api": 3,
                "org.sonar.scanner.repository.settings": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 1.479538221017975
    },
    "org.sonar.scanner.scan.filesystem.CharsetValidationTest.detectUTF16Ascii": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\CharsetValidationTest.java",
        "methodName": "detectUTF16Ascii",
        "stats": {
            "methodCalls": {
                "java.nio.charset.CharsetEncoder.onMalformedInput": 5,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.Result.valid": 3,
                "java.nio.charset.CharsetEncoder.encode": 5,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "java.nio.charset.Charset.newEncoder": 5,
                "java.nio.charset.CharsetEncoder.onUnmappableCharacter": 5,
                "java.nio.charset.Charset.forName": 1,
                "java.nio.CharBuffer.wrap": 5,
                "java.nio.Buffer.remaining": 5,
                "java.nio.ByteBuffer.get": 5,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.Result.charset": 2,
                "org.sonar.scanner.scan.filesystem.CharsetValidationTest.encode": 5,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 5,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isUTF16": 5
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan.filesystem": 15,
                "java.lang": 1,
                "java.nio": 20,
                "org.assertj.core.api": 10,
                "java.nio.charset": 26
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 61,
            "numRecursiveMethodCalls": 5,
            "linesOfCode": 36,
            "linesOfCodeJunitTest": 11,
            "logicalLinesOfCode": 36,
            "logicalLinesOfCodeJunitTest": 11
        },
        "stabilityMetricValue": 0.39634451844382457
    },
    "org.sonar.scanner.bootstrap.RuntimeJavaVersionTest.given_runtime11_should_log_message": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\RuntimeJavaVersionTest.java",
        "methodName": "given_runtime11_should_log_message",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.RuntimeJavaVersion.checkJavaVersion": 1,
                "org.assertj.core.api.AbstractIterableAssert.extracting": 1,
                "org.mockito.Mockito.mockStatic": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.getLogs": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.MockedStatic.when": 1,
                "java.lang.Runtime.Version.parse": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 1,
                "java.lang": 1,
                "org.mockito": 3,
                "java.lang.Runtime": 1,
                "org.sonar.scanner.bootstrap": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 10,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 5.39299182403118
    },
    "org.sonar.scanner.util.ScannerUtilsTest.testDescribe": {
        "filePath": "org\\sonar\\scanner\\util\\ScannerUtilsTest.java",
        "methodName": "testDescribe",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 2,
                "org.assertj.core.api.AbstractCharSequenceAssert.endsWith": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.sonar.api.impl.utils.ScannerUtils.describe": 3
            },
            "objectInstantiations": {
                "org.sonar.scanner.util.ScannerUtilsTest.MyClass": 1,
                "java.lang.Object": 2
            },
            "packageAccesses": {
                "org.sonar.api.impl.utils": 3,
                "java.lang": 4,
                "org.sonar.scanner.util": 1,
                "org.assertj.core.api": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 9,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 0.9062360607387376
    },
    "org.sonar.scanner.ci.vendors.AzureDevopsTest.isDetected": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\AzureDevopsTest.java",
        "methodName": "isDetected",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.vendors.AzureDevopsTest.setEnvVariable": 5,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 2,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.sonar.api.utils.System2.envVariable": 5,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 5,
                "org.sonar.scanner.ci.CiVendor.isDetected": 3,
                "org.mockito.Mockito.when": 5
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 5,
                "org.sonar.api.utils": 5,
                "org.sonar.scanner.ci": 3,
                "org.mockito.stubbing": 5,
                "org.assertj.core.api": 6,
                "org.sonar.scanner.ci.vendors": 5
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 29,
            "numRecursiveMethodCalls": 5,
            "linesOfCode": 13,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 13,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 4.951524623734765
    },
    "org.sonar.scanner.scan.WorkDirectoriesInitializerTest.execute_on_hierarchy_should_clean_submodules_expect_submodule_with_same_work_directory_as_root": {
        "filePath": "org\\sonar\\scanner\\scan\\WorkDirectoriesInitializerTest.java",
        "methodName": "execute_on_hierarchy_should_clean_submodules_expect_submodule_with_same_work_directory_as_root",
        "stats": {
            "methodCalls": {
                "java.io.File.toPath": 3,
                "org.assertj.core.api.AbstractObjectArrayAssert.hasSizeGreaterThan": 1,
                "java.io.File.list": 2,
                "org.assertj.core.api.Assertions.assertThat": 6,
                "org.sonar.scanner.scan.WorkDirectoriesInitializer.execute": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.sonar.api.batch.fs.internal.AbstractProjectOrModule.getWorkDir": 3,
                "org.mockito.Mockito.when": 4,
                "org.sonar.scanner.scan.WorkDirectoriesInitializerTest.createFilesToClean": 1,
                "org.sonar.scanner.fs.InputModuleHierarchy.children": 1,
                "java.util.List.of": 1,
                "org.assertj.core.api.AbstractFileAssert.exists": 4,
                "java.io.File.createNewFile": 5,
                "org.assertj.core.api.AbstractObjectArrayAssert.containsOnly": 1,
                "org.mockito.Mockito.mock": 2,
                "java.io.File.mkdir": 3
            },
            "objectInstantiations": {
                "java.io.File": 8
            },
            "packageAccesses": {
                "org.sonar.scanner.fs": 1,
                "java.util": 1,
                "org.mockito": 6,
                "java.io": 25,
                "org.sonar.scanner.scan": 2,
                "org.sonar.api.batch.fs.internal": 5,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 12
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 43,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 27,
            "linesOfCodeJunitTest": 19,
            "logicalLinesOfCode": 27,
            "logicalLinesOfCodeJunitTest": 19
        },
        "stabilityMetricValue": 5.538156153195777
    },
    "org.sonar.scm.git.ChangedFileTest.test_movedFile": {
        "filePath": "org\\sonar\\scm\\git\\ChangedFileTest.java",
        "methodName": "test_movedFile",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.ChangedFile.getOldRelativeFilePathReference": 1,
                "org.assertj.core.api.AbstractAssert.isSameAs": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "java.nio.file.Path.of": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scm.git.ChangedFile.of": 1,
                "org.sonar.scm.git.ChangedFile.isMovedFile": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.sonar.scm.git.ChangedFile.getAbsolutFilePath": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 6,
                "java.nio.file": 2,
                "org.sonar.scm.git": 5
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 0.474053007219134
    },
    "org.sonar.scm.git.GitIgnoreCommandTest.dont_index_files_outside_basedir": {
        "filePath": "org\\sonar\\scm\\git\\GitIgnoreCommandTest.java",
        "methodName": "dont_index_files_outside_basedir",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitIgnoreCommandTest.createFolderStructure": 1000,
                "java.io.File.toPath": 1,
                "java.nio.file.Path.toFile": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "java.nio.file.Files.createFile": 1998,
                "java.nio.file.Path.resolve": 3001,
                "java.lang.Math.pow": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.sonar.scm.git.GitIgnoreCommand.isIgnored": 2,
                "org.eclipse.jgit.api.Git.init": 1,
                "java.nio.file.Files.exists": 2997,
                "java.nio.file.Files.createDirectory": 999,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scm.git.GitIgnoreCommandTest.createGitRepoWithIgnore": 1,
                "org.eclipse.jgit.api.InitCommand.call": 1,
                "java.util.Arrays.asList": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "java.nio.file.Files.write": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.setLevel": 1,
                "org.sonar.scm.git.GitIgnoreCommand.init": 1,
                "org.eclipse.jgit.api.InitCommand.setDirectory": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.GitIgnoreCommand": 1
            },
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 2,
                "org.eclipse.jgit.api": 4,
                "org.junit.rules": 1,
                "java.util": 1,
                "java.lang": 1,
                "java.io": 1,
                "org.sonar.scm.git": 1006,
                "org.assertj.core.api": 6,
                "java.nio.file": 11997
            },
            "numConditionals": 3996,
            "numLoops": 999,
            "numNestedLoops": 0,
            "numMethodCalls": 10016,
            "numRecursiveMethodCalls": 1001,
            "linesOfCode": 13002,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 17999,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 2.7687243575733618
    },
    "org.sonar.scanner.sensor.ModuleSensorOptimizerTest.should_optimize_on_type": {
        "filePath": "org\\sonar\\scanner\\sensor\\ModuleSensorOptimizerTest.java",
        "methodName": "should_optimize_on_type",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor.onlyOnFileType": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 2,
                "org.sonar.api.batch.fs.internal.DefaultFileSystem.add": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scanner.sensor.AbstractSensorOptimizer.shouldExecute": 3,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 2,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setType": 2
            },
            "objectInstantiations": {
                "org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 2
            },
            "packageAccesses": {
                "org.sonar.api.batch.sensor.internal": 3,
                "org.sonar.api.batch.fs.internal": 8,
                "org.sonar.scanner.sensor": 3,
                "org.assertj.core.api": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 16,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 2.1502649438431853
    },
    "org.sonar.scanner.scan.ScanPropertiesTest.defaults_if_no_setting_defined": {
        "filePath": "org\\sonar\\scanner\\scan\\ScanPropertiesTest.java",
        "methodName": "defaults_if_no_setting_defined",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractOptionalAssert.isEmpty": 1,
                "org.sonar.scanner.scan.ScanProperties.branch": 1,
                "org.sonar.scanner.scan.ScanProperties.metadataFilePath": 1,
                "org.assertj.core.api.Assertions.assertThat": 4,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 2,
                "org.sonar.scanner.scan.ScanProperties.preloadFileMetadata": 1,
                "org.sonar.scanner.scan.ScanProperties.shouldKeepReport": 1,
                "org.sonar.scanner.scan.ScanProperties.validate": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.sonar.api.batch.fs.internal.AbstractProjectOrModule.getWorkDir": 1,
                "java.nio.file.Path.resolve": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan": 5,
                "org.sonar.api.batch.fs.internal": 1,
                "org.assertj.core.api": 8,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 15,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 5.3694005710316866
    },
    "org.sonar.scanner.repository.settings.AbstractSettingsLoaderTest.should_load_global_propertyset_settings": {
        "filePath": "org\\sonar\\scanner\\repository\\settings\\AbstractSettingsLoaderTest.java",
        "methodName": "should_load_global_propertyset_settings",
        "stats": {
            "methodCalls": {
                "org.sonarqube.ws.Settings.Setting.Builder.build": 1,
                "org.sonarqube.ws.Settings.FieldValues.Builder.addFieldValues": 2,
                "org.sonarqube.ws.Settings.Setting.newBuilder": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractMapAssert.containsOnly": 1,
                "org.sonar.scanner.repository.settings.AbstractSettingsLoader.toMap": 1,
                "org.sonarqube.ws.Settings.FieldValues.Value.newBuilder": 1,
                "org.assertj.core.api.Assertions.entry": 5,
                "org.sonarqube.ws.Settings.Setting.Builder.setKey": 1,
                "java.util.Collections.singletonList": 1,
                "org.sonarqube.ws.Settings.FieldValues.Value.Builder.build": 2,
                "org.sonarqube.ws.Settings.FieldValues.newBuilder": 1,
                "org.sonarqube.ws.Settings.FieldValues.Value.Builder.clear": 1,
                "org.sonarqube.ws.Settings.Setting.Builder.setFieldValues": 1,
                "org.sonarqube.ws.Settings.FieldValues.Value.Builder.putValue": 4
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonarqube.ws.Settings.FieldValues.Value": 1,
                "java.util": 1,
                "org.sonarqube.ws.Settings.FieldValues": 2,
                "org.sonarqube.ws": 15,
                "org.assertj.core.api": 7,
                "org.sonar.scanner.repository.settings": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 24,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 9,
            "logicalLinesOfCodeJunitTest": 9
        },
        "stabilityMetricValue": 1.374825619139333
    },
    "org.sonar.scanner.report.CeTaskReportDataHolderTest.getDashboardUrl_should_fail_if_not_initialized": {
        "filePath": "org\\sonar\\scanner\\report\\CeTaskReportDataHolderTest.java",
        "methodName": "getDashboardUrl_should_fail_if_not_initialized",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.report.CeTaskReportDataHolder.getDashboardUrl": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.report": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 1.3496916592110266
    },
    "org.sonar.scanner.ci.CiConfigurationProviderTest.empty_configuration_if_auto_configuration_is_disabled": {
        "filePath": "org\\sonar\\scanner\\ci\\CiConfigurationProviderTest.java",
        "methodName": "empty_configuration_if_auto_configuration_is_disabled",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.sonar.api.config.internal.MapSettings.setProperty": 1,
                "org.assertj.core.api.AbstractOptionalAssert.isEmpty": 1,
                "org.sonar.scanner.ci.CiConfigurationProvider.provide": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.ci.CiConfigurationProviderTest.EnabledCiVendor": 1
            },
            "packageAccesses": {
                "org.sonar.api.config.internal": 2,
                "org.sonar.scanner.ci": 4,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 0.37232124843576386
    },
    "org.sonar.scanner.scan.DirectoryLockTest.tryLock": {
        "filePath": "org\\sonar\\scanner\\scan\\DirectoryLockTest.java",
        "methodName": "tryLock",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.DirectoryLock.unlock": 1,
                "java.io.File.toPath": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.sonar.scanner.scan.DirectoryLock.tryLock": 1,
                "org.assertj.core.api.AbstractFileAssert.isEmptyDirectory": 1,
                "org.junit.rules.TemporaryFolder.getRoot": 2,
                "java.nio.file.Path.resolve": 1,
                "org.assertj.core.api.AbstractPathAssert.exists": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan": 2,
                "org.junit.rules": 2,
                "java.io": 1,
                "org.assertj.core.api": 4,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 10,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 1.4703050871245174
    },
    "org.sonar.scanner.sensor.ModuleSensorOptimizerTest.should_run_analyzer_with_no_metadata": {
        "filePath": "org\\sonar\\scanner\\sensor\\ModuleSensorOptimizerTest.java",
        "methodName": "should_run_analyzer_with_no_metadata",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scanner.sensor.AbstractSensorOptimizer.shouldExecute": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor": 1
            },
            "packageAccesses": {
                "org.sonar.api.batch.sensor.internal": 2,
                "org.sonar.scanner.sensor": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 1.0921412539614614
    },
    "org.sonar.scanner.scan.SonarGlobalPropertiesFilterTest.should_filterSonarGlobalProperties": {
        "filePath": "org\\sonar\\scanner\\scan\\SonarGlobalPropertiesFilterTest.java",
        "methodName": "should_filterSonarGlobalProperties",
        "stats": {
            "methodCalls": {
                "java.util.Map.of": 2,
                "org.assertj.core.api.AbstractMapAssert.hasSize": 1,
                "org.sonar.scanner.scan.SonarGlobalPropertiesFilter.enforceOnlyServerSideSonarGlobalPropertiesAreUsed": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan": 1,
                "java.util": 5,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 0.2570444642942181
    },
    "org.sonar.scm.git.ChangedLinesComputerTest.compute_from_multiple_hunks": {
        "filePath": "org\\sonar\\scm\\git\\ChangedLinesComputerTest.java",
        "methodName": "compute_from_multiple_hunks",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.ChangedLinesComputer.receiver": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsExactly": 1,
                "org.sonar.scm.git.ChangedLinesComputerTest.printDiff": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scm.git.ChangedLinesComputer.changedLines": 1,
                "java.io.Writer.write": 1
            },
            "objectInstantiations": {
                "java.io.OutputStreamWriter": 1
            },
            "packageAccesses": {
                "java.lang": 1,
                "java.io": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scm.git": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 1.7243800646330596
    },
    "org.sonar.scm.svn.SvnScmProviderTest.branchChangedLines_should_return_empty_when_no_local_changes": {
        "filePath": "org\\sonar\\scm\\svn\\SvnScmProviderTest.java",
        "methodName": "branchChangedLines_should_return_empty_when_no_local_changes",
        "stats": {
            "methodCalls": {
                "java.io.File.toPath": 1,
                "java.util.Collections.emptySet": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scm.svn.SvnScmProvider.branchChangedLines": 1,
                "org.sonar.scm.svn.SvnScmProviderTest.newScmProvider": 1,
                "org.assertj.core.api.AbstractMapAssert.isEmpty": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.svn.SvnBlameCommand": 1,
                "org.sonar.scm.svn.SvnScmProvider": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.util": 1,
                "java.io": 1,
                "org.assertj.core.api": 2,
                "java.nio.file": 1,
                "org.sonar.scm.svn": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 0.20141278588458586
    },
    "org.sonar.scanner.bootstrap.ExtensionUtilsTest.testIsScannerSide": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ExtensionUtilsTest.java",
        "methodName": "testIsScannerSide",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 4,
                "org.sonar.scanner.bootstrap.ExtensionUtils.isDeprecatedScannerSide": 5,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 5
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ExtensionUtilsTest.ComputeEngineService": 1,
                "org.sonar.scanner.bootstrap.ExtensionUtilsTest.ServerService": 1,
                "org.sonar.scanner.bootstrap.ExtensionUtilsTest.WebServerService": 1
            },
            "packageAccesses": {
                "org.assertj.core.api": 10,
                "org.sonar.scanner.bootstrap": 8
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 15,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 0.2352611954714151
    },
    "org.sonar.batch.bootstrapper.LoggingConfigurationTest.testMavenFormat": {
        "filePath": "org\\sonar\\batch\\bootstrapper\\LoggingConfigurationTest.java",
        "methodName": "testMavenFormat",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.batch.bootstrapper.LoggingConfiguration.getSubstitutionVariable": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.batch.bootstrapper.LoggingConfiguration": 1,
                "org.sonar.batch.bootstrapper.EnvironmentInformation": 1
            },
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.batch.bootstrapper": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 0.19598873167962666
    },
    "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializerTest.shouldReturnAllFilePattern": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\pattern\\IssueExclusionPatternInitializerTest.java",
        "methodName": "shouldReturnAllFilePattern",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.sonar.api.config.internal.MapSettings.setProperty": 3,
                "org.sonar.scanner.issue.ignore.pattern.AbstractPatternInitializer.getMulticriteriaPatterns": 1,
                "org.assertj.core.api.Assertions.assertThat": 6,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.sonar.scanner.issue.ignore.pattern.AbstractPatternInitializer.hasMulticriteriaPatterns": 1,
                "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer.getBlockPatterns": 1,
                "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer.hasFileContentPattern": 1,
                "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer.getAllFilePatterns": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 2,
                "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer.hasConfiguredPatterns": 1,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 7,
                "org.sonar.api.config.internal": 4,
                "org.assertj.core.api": 12
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 22,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 10,
            "linesOfCodeJunitTest": 10,
            "logicalLinesOfCode": 10,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 2.4795683590258624
    },
    "org.sonar.scanner.scan.filesystem.InputComponentStoreTest.should_add_input_file": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\InputComponentStoreTest.java",
        "methodName": "should_add_input_file",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.newDefaultInputModule": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.charset": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLines": 1,
                "org.sonar.scanner.scan.filesystem.InputComponentStore.allFilesToPublish": 1,
                "org.assertj.core.api.Assertions.assertThat": 7,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.newDefaultInputProject": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.relativePath": 1,
                "org.sonar.api.batch.fs.internal.AbstractProjectOrModule.key": 1,
                "java.lang.Iterable.forEach": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 4,
                "org.sonar.scanner.scan.filesystem.InputComponentStore.inputFiles": 2,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.addSubProject": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setPublish": 2,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setModuleBaseDir": 2,
                "org.sonar.api.batch.fs.InputPath.relativePath": 1,
                "org.sonar.scanner.scan.filesystem.InputComponentStore.getFile": 1,
                "java.io.File.toPath": 2,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setStatus": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsExactly": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setCharset": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 3,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setType": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 2,
                "org.assertj.core.api.AbstractCharSequenceAssert.startsWith": 1,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.setKey": 2,
                "org.sonar.scanner.scan.filesystem.InputComponentStore.put": 3,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.create": 2,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.setWorkDir": 2,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.sonar.scanner.scan.filesystem.InputComponentStore.filesByModule": 2,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.setBaseDir": 2,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLanguage": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.InputComponentStore": 1,
                "java.util.LinkedList": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 2
            },
            "packageAccesses": {
                "java.util": 2,
                "java.lang": 3,
                "org.junit.rules": 4,
                "org.mockito": 1,
                "java.io": 3,
                "org.sonar.scanner.scan.filesystem": 11,
                "org.sonar.api.batch.fs.internal": 22,
                "org.sonar.api.batch.fs": 2,
                "org.assertj.core.api": 14,
                "org.sonar.api.batch.bootstrap": 11
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 57,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 23,
            "linesOfCodeJunitTest": 23,
            "logicalLinesOfCode": 24,
            "logicalLinesOfCodeJunitTest": 24
        },
        "stabilityMetricValue": 4.2916208849939155
    },
    "org.sonar.scanner.ci.vendors.AppVeyorTest.isDetected": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\AppVeyorTest.java",
        "methodName": "isDetected",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 2,
                "org.assertj.core.api.Assertions.assertThat": 4,
                "org.sonar.api.utils.System2.envVariable": 9,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 9,
                "org.sonar.scanner.ci.CiVendor.isDetected": 4,
                "org.mockito.Mockito.when": 9,
                "org.sonar.scanner.ci.vendors.AppVeyorTest.setEnvVariable": 9
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 9,
                "org.sonar.api.utils": 9,
                "org.sonar.scanner.ci": 4,
                "org.mockito.stubbing": 9,
                "org.assertj.core.api": 8,
                "org.sonar.scanner.ci.vendors": 9
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 48,
            "numRecursiveMethodCalls": 9,
            "linesOfCode": 22,
            "linesOfCodeJunitTest": 13,
            "logicalLinesOfCode": 22,
            "logicalLinesOfCodeJunitTest": 13
        },
        "stabilityMetricValue": 5.537567647684536
    },
    "org.sonar.scanner.scan.filesystem.StatusDetectionTest.detect_status": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\StatusDetectionTest.java",
        "methodName": "detect_status",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 3,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 3,
                "org.sonar.scanner.scan.filesystem.StatusDetectionTest.createFile": 3,
                "org.sonar.scanner.scan.filesystem.StatusDetection.status": 3,
                "org.assertj.core.api.Assertions.assertThat": 3
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.StatusDetection": 1,
                "org.sonar.scanner.scm.ScmChangedFiles": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 3
            },
            "packageAccesses": {
                "org.sonar.scanner.scm": 2,
                "org.sonar.scanner.scan.filesystem": 8,
                "org.sonar.api.batch.fs.internal": 6,
                "org.assertj.core.api": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 15,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 8,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 1.2283303984358471
    },
    "org.sonar.scm.svn.ChangedLinesComputerTest.compute_from_multiple_hunks": {
        "filePath": "org\\sonar\\scm\\svn\\ChangedLinesComputerTest.java",
        "methodName": "compute_from_multiple_hunks",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractMapAssert.isEqualTo": 1,
                "org.sonar.scm.svn.ChangedLinesComputerTest.printDiff": 1,
                "java.util.Arrays.asList": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.util.Collections.singletonMap": 1,
                "org.sonar.scm.svn.ChangedLinesComputer.receiver": 1,
                "java.nio.file.Path.resolve": 1,
                "java.io.Writer.write": 1,
                "org.sonar.scm.svn.ChangedLinesComputer.changedLines": 1
            },
            "objectInstantiations": {
                "java.util.HashSet": 1,
                "java.io.OutputStreamWriter": 1
            },
            "packageAccesses": {
                "java.util": 3,
                "java.lang": 1,
                "java.io": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scm.svn": 3,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 2.782529469523916
    },
    "org.sonar.scanner.bootstrap.ScannerWsClientProviderTest.provide_client_with_custom_settings": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ScannerWsClientProviderTest.java",
        "methodName": "provide_client_with_custom_settings",
        "stats": {
            "methodCalls": {
                "java.util.Collections.emptyMap": 1,
                "java.util.Map.put": 3,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonarqube.ws.client.HttpConnector.baseUrl": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.wsConnector": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.assertj.core.api.AbstractAssert.isNotNull": 1,
                "okhttp3.OkHttpClient.proxy": 1,
                "org.sonar.scanner.bootstrap.ScannerWsClientProvider.provide": 1,
                "org.mockito.Mockito.mock": 1,
                "org.sonarqube.ws.client.HttpConnector.okHttpClient": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.GlobalAnalysisMode": 1,
                "java.util.HashMap": 1,
                "org.sonar.scanner.bootstrap.ScannerProperties": 2
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 3,
                "java.util": 6,
                "org.mockito": 1,
                "okhttp3": 1,
                "org.sonar.scanner.bootstrap": 7,
                "org.assertj.core.api": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 16,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 11,
            "linesOfCodeJunitTest": 11,
            "logicalLinesOfCode": 11,
            "logicalLinesOfCodeJunitTest": 11
        },
        "stabilityMetricValue": 4.789647709997698
    },
    "org.sonar.scanner.rule.DefaultActiveRulesLoaderTest.load_shouldRequestRulesAndParseResponse": {
        "filePath": "org\\sonar\\scanner\\rule\\DefaultActiveRulesLoaderTest.java",
        "methodName": "load_shouldRequestRulesAndParseResponse",
        "stats": {
            "methodCalls": {
                "java.util.stream.IntStream.rangeClosed": 2,
                "org.mockito.ArgumentMatchers.argThat": 4,
                "java.util.stream.Stream.forEach": 2,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.sonar.api.rule.RuleKey.of": 2,
                "org.sonarqube.ws.Rules.ActiveList.newBuilder": 2,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 4,
                "org.sonarqube.ws.Rules.Active.Param.newBuilder": 2,
                "org.sonarqube.ws.Common.Paging.newBuilder": 2,
                "org.mockito.Mockito.verifyNoMoreInteractions": 1,
                "org.sonarqube.ws.Rules.Active.Builder.setCreatedAt": 2,
                "org.sonarqube.ws.Rules.ListResponse.Builder.setActives": 2,
                "org.sonarqube.ws.Rules.ActiveList.Builder.addActiveList": 2,
                "org.sonarqube.ws.Rules.Active.Builder.setUpdatedAt": 2,
                "org.sonar.api.rule.RuleKey.equals": 4,
                "org.sonarqube.ws.Rules.Actives.Builder.putAllActives": 2,
                "org.sonarqube.ws.Rules.ListResponse.Builder.setPaging": 2,
                "org.sonar.api.batch.rule.LoadedActiveRule.getRuleKey": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.sonarqube.ws.Rules.Active.Param.Builder.setKey": 2,
                "org.sonarqube.ws.Common.Paging.Builder.setPageIndex": 2,
                "org.sonarqube.ws.Rules.ActiveList.Builder.build": 2,
                "org.sonar.scanner.WsTestUtil.verifyCall": 2,
                "org.sonarqube.ws.Common.Paging.Builder.setPageSize": 2,
                "org.mockito.Mockito.mock": 2,
                "org.assertj.core.api.AbstractIterableAssert.filteredOn": 2,
                "org.sonarqube.ws.Rules.Rule.newBuilder": 2,
                "org.sonarqube.ws.Rules.Active.Builder.addParams": 2,
                "org.sonarqube.ws.client.WsResponse.contentStream": 2,
                "org.sonarqube.ws.Rules.ListResponse.Builder.build": 2,
                "com.google.protobuf.AbstractMessageLite.toByteArray": 2,
                "org.sonarqube.ws.Rules.Actives.newBuilder": 2,
                "org.sonarqube.ws.Rules.ListResponse.Builder.addRules": 2,
                "java.util.stream.IntStream.mapToObj": 2,
                "org.sonar.scanner.rule.DefaultActiveRulesLoader.load": 1,
                "org.sonarqube.ws.Rules.Active.Param.Builder.setValue": 2,
                "java.util.Map.of": 2,
                "org.mockito.Mockito.when": 4,
                "org.sonarqube.ws.Rules.Rule.Builder.setKey": 2,
                "org.mockito.Mockito.verify": 2,
                "org.sonarqube.ws.Rules.Active.Builder.setSeverity": 2,
                "org.sonarqube.ws.Rules.ListResponse.newBuilder": 2,
                "org.sonar.scanner.rule.DefaultActiveRulesLoaderTest.responseOfSize": 2,
                "org.sonarqube.ws.Common.Paging.Builder.build": 2,
                "org.sonarqube.ws.Common.Paging.Builder.setTotal": 2,
                "org.sonar.scanner.rule.DefaultActiveRulesLoaderTest.urlOfPage": 4,
                "org.sonarqube.ws.Rules.Active.newBuilder": 2,
                "org.sonar.scanner.WsTestUtil.mockStream": 2,
                "org.sonar.api.rule.RuleKey.toString": 4
            },
            "objectInstantiations": {
                "java.io.ByteArrayInputStream": 2,
                "org.sonar.scanner.WsTestUtil.RequestMatcher": 4
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 4,
                "org.sonarqube.ws.Rules.Rule": 2,
                "java.util": 3,
                "org.mockito": 13,
                "org.sonar.scanner": 8,
                "java.util.stream": 6,
                "com.google.protobuf": 2,
                "org.sonar.scanner.bootstrap": 4,
                "org.sonarqube.ws.Rules.Active": 2,
                "org.sonar.api.batch.rule": 2,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 6,
                "org.sonarqube.ws.Rules.Actives": 2,
                "org.sonar.api.rule": 10,
                "org.sonarqube.ws.Rules": 2,
                "org.sonarqube.ws.Rules.ListResponse": 2,
                "java.io": 2,
                "org.sonarqube.ws": 50,
                "org.sonar.scanner.rule": 7
            },
            "numConditionals": 2,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 118,
            "numRecursiveMethodCalls": 10,
            "linesOfCode": 58,
            "linesOfCodeJunitTest": 10,
            "logicalLinesOfCode": 65,
            "logicalLinesOfCodeJunitTest": 13
        },
        "stabilityMetricValue": 5.578338315857991
    },
    "org.sonar.scanner.util.ProgressReportTest.do_log": {
        "filePath": "org\\sonar\\scanner\\util\\ProgressReportTest.java",
        "methodName": "do_log",
        "stats": {
            "methodCalls": {
                "java.util.Collection.stream": 1,
                "org.sonar.scanner.util.ProgressReport.stop": 1,
                "java.util.List.contains": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 2,
                "java.util.regex.Pattern.matches": 1,
                "java.util.stream.Stream.anyMatch": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scanner.util.ProgressReport.message": 1,
                "java.lang.Thread.sleep": 2,
                "org.sonar.api.testfixtures.log.AbstractLogTester.setLevel": 1,
                "org.sonar.scanner.util.ProgressReport.start": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 3,
                "java.lang": 2,
                "java.util": 2,
                "java.util.regex": 1,
                "java.util.stream": 1,
                "org.sonar.scanner.util": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 10,
            "linesOfCodeJunitTest": 10,
            "logicalLinesOfCode": 12,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 0.020998116930955917
    },
    "org.sonar.scm.svn.SvnScmProviderTest.branchChangedFiles_should_return_empty_when_no_local_changes": {
        "filePath": "org\\sonar\\scm\\svn\\SvnScmProviderTest.java",
        "methodName": "branchChangedFiles_should_return_empty_when_no_local_changes",
        "stats": {
            "methodCalls": {
                "java.io.File.toPath": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scm.svn.SvnScmProvider.branchChangedFiles": 1,
                "org.sonar.scm.svn.SvnScmProviderTest.newScmProvider": 1,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.svn.SvnBlameCommand": 1,
                "org.sonar.scm.svn.SvnScmProvider": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.io": 1,
                "org.assertj.core.api": 2,
                "java.nio.file": 1,
                "org.sonar.scm.svn": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 0.10719724657721277
    },
    "org.sonar.scm.git.NativeGitBlameCommandTest.git_should_be_detected": {
        "filePath": "org\\sonar\\scm\\git\\NativeGitBlameCommandTest.java",
        "methodName": "git_should_be_detected",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.NativeGitBlameCommand.checkIfEnabled": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.NativeGitBlameCommand": 1
            },
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scm.git": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 4.182145496356302
    },
    "org.sonar.scanner.rule.ActiveRulesBuilderTest.no_rules": {
        "filePath": "org\\sonar\\scanner\\rule\\ActiveRulesBuilderTest.java",
        "methodName": "no_rules",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.rule.internal.ActiveRulesBuilder.build": 1,
                "org.sonar.api.batch.rule.ActiveRules.findAll": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 1
            },
            "objectInstantiations": {
                "org.sonar.api.batch.rule.internal.ActiveRulesBuilder": 1
            },
            "packageAccesses": {
                "org.sonar.api.batch.rule.internal": 3,
                "org.sonar.api.batch.rule": 2,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 0.34729906250743503
    },
    "org.sonar.scanner.scan.filesystem.InputFileFilterRepositoryTest.should_not_return_null_if_initialized_with_no_filters": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\InputFileFilterRepositoryTest.java",
        "methodName": "should_not_return_null_if_initialized_with_no_filters",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.filesystem.InputFileFilterRepository.getInputFileFilters": 1,
                "org.assertj.core.api.AbstractAssert.isNotNull": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.InputFileFilterRepository": 1
            },
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.scan.filesystem": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 0.6861184551410051
    },
    "org.sonar.scanner.bootstrap.ScannerPropertiesTest.initialization": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ScannerPropertiesTest.java",
        "methodName": "initialization",
        "stats": {
            "methodCalls": {
                "com.google.common.collect.ImmutableMap.Builder.build": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.bootstrap.ScannerProperties.properties": 1,
                "org.sonar.scanner.bootstrap.ScannerProperties.getEncryption": 1,
                "org.assertj.core.api.AbstractAssert.isNotNull": 1,
                "com.google.common.collect.ImmutableMap.builder": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.sonar.scanner.bootstrap.ScannerProperties.getProjectKey": 1,
                "org.assertj.core.api.AbstractMapAssert.containsEntry": 1,
                "com.google.common.collect.ImmutableMap.Builder.put": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ScannerProperties": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.bootstrap": 5,
                "org.assertj.core.api": 6,
                "com.google.common.collect": 5
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 0.46558423719234865
    },
    "org.sonar.scanner.scan.filesystem.DirectoryFileVisitorTest.visit_hidden_file": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\DirectoryFileVisitorTest.java",
        "methodName": "visit_hidden_file",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 1,
                "org.mockito.Mockito.never": 1,
                "java.io.File.toPath": 3,
                "org.sonar.scanner.scan.filesystem.DirectoryFileVisitor.visitFile": 1,
                "java.nio.file.Files.setAttribute": 1,
                "org.sonar.scanner.scan.filesystem.DirectoryFileVisitor.FileVisitAction.execute": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "org.mockito.Mockito.mock": 1,
                "java.nio.file.Files.readAttributes": 1,
                "org.mockito.Mockito.verify": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.DirectoryFileVisitor": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "org.mockito": 4,
                "java.io": 4,
                "org.sonar.scanner.scan.filesystem.DirectoryFileVisitor": 1,
                "org.sonar.scanner.scan.filesystem": 4,
                "java.nio.file": 2
            },
            "numConditionals": 1,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 3.962025720335169
    },
    "org.sonar.scanner.scan.filesystem.AdditionalFilePredicatesTest.key": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\AdditionalFilePredicatesTest.java",
        "methodName": "key",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.api.batch.fs.FilePredicate.apply": 2,
                "org.assertj.core.api.Assertions.assertThat": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.AdditionalFilePredicates.KeyPredicate": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 2
            },
            "packageAccesses": {
                "org.sonar.scanner.scan.filesystem": 1,
                "org.sonar.api.batch.fs.internal": 4,
                "org.sonar.api.batch.fs": 4,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 1.6408613250436657
    },
    "org.sonar.scanner.deprecated.test.DefaultTestCaseTest.getters_after_setters": {
        "filePath": "org\\sonar\\scanner\\deprecated\\test\\DefaultTestCaseTest.java",
        "methodName": "getters_after_setters",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.deprecated.test.DefaultTestCase.setStatus": 1,
                "org.sonar.scanner.deprecated.test.DefaultTestCase.status": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 2,
                "org.assertj.core.api.Assertions.assertThat": 4,
                "org.sonar.scanner.deprecated.test.DefaultTestCase.name": 1,
                "org.sonar.scanner.deprecated.test.DefaultTestCase.setDurationInMs": 1,
                "org.sonar.scanner.deprecated.test.DefaultTestCase.setType": 1,
                "org.sonar.scanner.deprecated.test.DefaultTestCase.type": 1,
                "org.assertj.core.api.AbstractLongAssert.isEqualTo": 1,
                "org.sonar.scanner.deprecated.test.DefaultTestCase.durationInMs": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.sonar.scanner.deprecated.test.DefaultTestCase.setName": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 8,
                "org.sonar.scanner.deprecated.test": 8
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 16,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 0.3180156701747646
    },
    "org.sonar.scanner.issue.ignore.pattern.LineRangeTest.testHashCode": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\pattern\\LineRangeTest.java",
        "methodName": "testHashCode",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractAssert.hasSameHashCodeAs": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.pattern.LineRange": 2
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 2,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 2,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 4.82694252828189
    },
    "org.sonar.scanner.sensor.ModuleSensorOptimizerTest.should_optimize_on_language": {
        "filePath": "org\\sonar\\scanner\\sensor\\ModuleSensorOptimizerTest.java",
        "methodName": "should_optimize_on_language",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor.onlyOnLanguages": 1,
                "org.sonar.api.batch.fs.internal.DefaultFileSystem.add": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scanner.sensor.AbstractSensorOptimizer.shouldExecute": 2,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLanguage": 1
            },
            "objectInstantiations": {
                "org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "org.sonar.api.batch.sensor.internal": 3,
                "org.sonar.api.batch.fs.internal": 4,
                "org.sonar.scanner.sensor": 2,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 10,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 2.521163658384214
    },
    "org.sonar.scanner.repository.ContextPropertiesCacheTest.put_overrides_existing_value": {
        "filePath": "org\\sonar\\scanner\\repository\\ContextPropertiesCacheTest.java",
        "methodName": "put_overrides_existing_value",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractMapAssert.containsOnly": 1,
                "org.sonar.scanner.repository.ContextPropertiesCache.put": 2,
                "org.sonar.scanner.repository.ContextPropertiesCache.getAll": 1,
                "org.assertj.core.data.MapEntry.entry": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.repository": 3,
                "org.assertj.core.api": 2,
                "org.assertj.core.data": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 1.607685117501027
    },
    "org.sonar.scanner.scan.filesystem.ProjectExclusionFiltersTest.match_exclusions": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\ProjectExclusionFiltersTest.java",
        "methodName": "match_exclusions",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.sonar.api.batch.fs.IndexedFile.path": 3,
                "org.sonar.api.config.internal.MapSettings.setProperty": 3,
                "org.sonar.api.batch.fs.IndexedFile.relativePath": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "java.nio.file.Paths.get": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 2,
                "org.sonar.scanner.scan.filesystem.AbstractExclusionFilters.isExcluded": 3,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.ProjectExclusionFilters": 1,
                "org.sonar.api.batch.fs.internal.DefaultIndexedFile": 3
            },
            "packageAccesses": {
                "org.sonar.api.config.internal": 4,
                "org.mockito": 1,
                "org.sonar.scanner.scan.filesystem": 5,
                "org.sonar.api.batch.fs.internal": 3,
                "org.sonar.api.batch.fs": 7,
                "org.assertj.core.api": 6,
                "java.nio.file": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 23,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 10,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 3.9609962588029566
    },
    "org.sonar.scanner.cpd.DuplicationPredicatesTest.testNumberOfUnitsNotLessThan": {
        "filePath": "org\\sonar\\scanner\\cpd\\DuplicationPredicatesTest.java",
        "methodName": "testNumberOfUnitsNotLessThan",
        "stats": {
            "methodCalls": {
                "org.sonar.duplications.index.CloneGroup.Builder.build": 3,
                "org.sonar.duplications.index.CloneGroup.builder": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 2,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.scanner.cpd.DuplicationPredicates.numberOfUnitsNotLessThan": 1,
                "java.util.function.Predicate.test": 3,
                "org.sonar.duplications.index.CloneGroup.Builder.setLengthInUnits": 3
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.cpd": 1,
                "java.util.function": 4,
                "org.assertj.core.api": 6,
                "org.sonar.duplications.index": 9
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 19,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 0.6116426489031639
    },
    "org.sonar.scanner.scan.filesystem.AbstractExclusionFiltersTest.AbstractExclusionFilters_whenUsedGlobalTestPropertyAndProjectTestLegacyProperty_shouldNotLogAliasWarning": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\AbstractExclusionFiltersTest.java",
        "methodName": "AbstractExclusionFilters_whenUsedGlobalTestPropertyAndProjectTestLegacyProperty_shouldNotLogAliasWarning",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.sonar.api.config.internal.MapSettings.setProperty": 3,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.AbstractExclusionFilters": 1
            },
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 1,
                "org.sonar.scanner.scan.filesystem": 1,
                "org.sonar.api.config.internal": 4,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 4.141580020383369
    },
    "org.sonar.scanner.scan.filesystem.CharsetDetectorTest.always_try_utf8": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\CharsetDetectorTest.java",
        "methodName": "always_try_utf8",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.filesystem.CharsetDetector.charset": 1,
                "java.io.ByteArrayOutputStream.toByteArray": 1,
                "org.sonar.scanner.scan.filesystem.CharsetDetector.run": 1,
                "java.io.File.toPath": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "java.nio.file.Files.write": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "java.io.ByteArrayOutputStream.write": 2,
                "org.sonar.scanner.scan.filesystem.CharsetDetectorTest.detectCharset": 1
            },
            "objectInstantiations": {
                "java.io.ByteArrayOutputStream": 1,
                "org.sonar.scanner.scan.filesystem.CharsetDetector": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scan.filesystem": 5,
                "org.junit.rules": 1,
                "java.io": 6,
                "org.assertj.core.api": 4,
                "java.nio.file": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 13,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 9,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 9,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 2.3901135105142766
    },
    "org.sonar.scanner.ci.CiConfigurationProviderTest.empty_configuration_if_no_ci_detected": {
        "filePath": "org\\sonar\\scanner\\ci\\CiConfigurationProviderTest.java",
        "methodName": "empty_configuration_if_no_ci_detected",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.assertj.core.api.AbstractOptionalAssert.isEmpty": 1,
                "org.sonar.scanner.ci.CiConfigurationProvider.provide": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.ci.CiConfigurationProviderTest.DisabledCiVendor": 2
            },
            "packageAccesses": {
                "org.sonar.api.config.internal": 1,
                "org.sonar.scanner.ci": 5,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 5,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 2.4556990562555914
    },
    "org.sonar.scanner.util.ProgressReportTest.do_not_block_app": {
        "filePath": "org\\sonar\\scanner\\util\\ProgressReportTest.java",
        "methodName": "do_not_block_app",
        "stats": {
            "methodCalls": {
                "java.util.Map.keySet": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scanner.util.ProgressReportTest.isDaemon": 1,
                "java.lang.Thread.getAllStackTraces": 1,
                "org.sonar.scanner.util.ProgressReport.stop": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.lang.Thread.isDaemon": 1,
                "org.sonar.scanner.util.ProgressReport.start": 1,
                "org.sonar.scanner.util.ProgressReportTest.getThread": 1,
                "java.lang.String.equals": 1,
                "java.lang.Thread.getName": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.lang": 6,
                "java.util": 2,
                "org.sonar.scanner.util": 4,
                "org.assertj.core.api": 2
            },
            "numConditionals": 1,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 10,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 12,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 2.377849416904472
    },
    "org.sonar.scanner.repository.settings.AbstractSettingsLoaderTest.should_not_load_inherited_properties": {
        "filePath": "org\\sonar\\scanner\\repository\\settings\\AbstractSettingsLoaderTest.java",
        "methodName": "should_not_load_inherited_properties",
        "stats": {
            "methodCalls": {
                "org.sonarqube.ws.Settings.Setting.Builder.build": 1,
                "org.sonarqube.ws.Settings.Setting.newBuilder": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.repository.settings.AbstractSettingsLoader.toMap": 1,
                "org.sonarqube.ws.Settings.Values.Builder.addValues": 1,
                "org.assertj.core.api.AbstractMapAssert.isEmpty": 1,
                "org.sonarqube.ws.Settings.Setting.Builder.setValues": 1,
                "org.sonarqube.ws.Settings.Setting.Builder.setKey": 1,
                "org.sonarqube.ws.Settings.Setting.Builder.setInherited": 1,
                "org.sonarqube.ws.Settings.Values.newBuilder": 1,
                "java.util.List.of": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 1,
                "org.sonarqube.ws": 7,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.repository.settings": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 0.6077871482702379
    },
    "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializerTest.testNoConfiguration": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\pattern\\IssueExclusionPatternInitializerTest.java",
        "methodName": "testNoConfiguration",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.sonar.scanner.issue.ignore.pattern.AbstractPatternInitializer.getMulticriteriaPatterns": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer.hasConfiguredPatterns": 1,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 3,
                "org.sonar.api.config.internal": 1,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 1.4986763924944084
    },
    "org.sonar.scanner.bootstrap.GlobalTempFolderProviderTest.createTempFolderSonarHome": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\GlobalTempFolderProviderTest.java",
        "methodName": "createTempFolderSonarHome",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.GlobalTempFolderProvider.provide": 1,
                "java.io.File.getAbsoluteFile": 1,
                "org.assertj.core.api.AbstractFileAssert.isDirectory": 2,
                "java.io.File.list": 1,
                "org.assertj.core.api.Assertions.assertThat": 6,
                "java.io.File.getAbsolutePath": 1,
                "org.assertj.core.api.AbstractObjectArrayAssert.hasSize": 3,
                "com.google.common.collect.ImmutableMap.of": 1,
                "org.assertj.core.api.AbstractFileAssert.exists": 1,
                "org.sonar.api.utils.TempFolder.newFile": 1,
                "java.io.File.listFiles": 4,
                "org.sonar.scanner.bootstrap.GlobalTempFolderProviderTest.getCreatedTempDir": 2,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.sonar.api.utils.TempFolder.newDir": 1,
                "org.apache.commons.io.FileUtils.deleteQuietly": 1
            },
            "objectInstantiations": {
                "java.io.File": 1,
                "org.sonar.scanner.bootstrap.ScannerProperties": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.io": 10,
                "org.sonar.api.utils": 3,
                "org.sonar.scanner.bootstrap": 4,
                "org.assertj.core.api": 12,
                "org.apache.commons.io": 1,
                "com.google.common.collect": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 27,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 14,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 14,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 1.6555526707555657
    },
    "org.sonar.scanner.postjob.PostJobOptimizerTest.should_optimize_on_settings": {
        "filePath": "org\\sonar\\scanner\\postjob\\PostJobOptimizerTest.java",
        "methodName": "should_optimize_on_settings",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 2,
                "org.sonar.api.config.internal.MapSettings.setProperty": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scanner.postjob.PostJobOptimizer.shouldExecute": 2,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.api.batch.postjob.internal.DefaultPostJobDescriptor.requireProperty": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.postjob.PostJobOptimizer": 2,
                "org.sonar.api.batch.postjob.internal.DefaultPostJobDescriptor": 1
            },
            "packageAccesses": {
                "org.sonar.api.batch.postjob.internal": 3,
                "org.sonar.api.config.internal": 3,
                "org.assertj.core.api": 4,
                "org.sonar.scanner.postjob": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 10,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 1.9715007795037462
    },
    "org.sonar.scanner.scan.filesystem.MutableFileSystemTest.return_only_changed_files_when_restricted": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\MutableFileSystemTest.java",
        "methodName": "return_only_changed_files_when_restricted",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.filesystem.MutableFileSystemTest.generateFilename": 6,
                "java.lang.String.toLowerCase": 6,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setStatus": 3,
                "org.sonar.scanner.scan.filesystem.MutableFileSystemTest.addFile": 3,
                "org.sonar.api.batch.fs.internal.DefaultFileSystem.add": 3,
                "org.sonar.scanner.scan.filesystem.MutableFileSystem.inputFiles": 2,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "org.sonar.scanner.scan.filesystem.MutableFileSystemTest.addFileWithAllStatus": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "java.lang.String.format": 9,
                "org.sonar.scanner.scan.filesystem.MutableFileSystem.setRestrictToChangedFiles": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 3,
                "org.sonar.api.batch.fs.FilePredicates.hasFilename": 3,
                "org.assertj.core.api.AbstractAssert.isNotNull": 2,
                "org.sonar.api.batch.fs.FilePredicates.all": 2,
                "org.sonar.api.batch.fs.internal.DefaultFileSystem.predicates": 5,
                "org.sonar.scanner.scan.filesystem.MutableFileSystem.inputFile": 3,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLanguage": 3,
                "java.lang.Enum.name": 6
            },
            "objectInstantiations": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 3
            },
            "packageAccesses": {
                "org.sonar.scanner.scan.filesystem": 16,
                "java.lang": 21,
                "org.sonar.api.batch.fs": 5,
                "org.sonar.api.batch.fs.internal": 20,
                "org.assertj.core.api": 10
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 69,
            "numRecursiveMethodCalls": 10,
            "linesOfCode": 19,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 19,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 2.6204305249726736
    },
    "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.testUnknownFile": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericCoverageReportParserTest.java",
        "methodName": "testUnknownFile",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser.parse": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.parseCoverageReportFile": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser": 1,
                "java.io.File": 1
            },
            "packageAccesses": {
                "java.io": 1,
                "org.sonar.scanner.genericcoverage": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 2,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 3.1436540357691856
    },
    "org.sonar.scanner.externalissue.ExternalIssueImporterTest.execute_whenNewFormatWithCompletePrimaryLocation": {
        "filePath": "org\\sonar\\scanner\\externalissue\\ExternalIssueImporterTest.java",
        "methodName": "execute_whenNewFormatWithCompletePrimaryLocation",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.DefaultInputFile.getProjectRelativePath": 1,
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.runOn": 1,
                "org.sonar.api.batch.fs.TextPointer.line": 2,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.allExternalIssues": 2,
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.newIssue": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.sonar.api.batch.fs.TextRange.end": 2,
                "java.util.Random.nextInt": 1,
                "org.apache.commons.lang3.ObjectUtils.defaultIfNull": 2,
                "org.sonar.api.batch.fs.TextRange.start": 2,
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.createRule": 2,
                "java.util.Iterator.next": 1,
                "java.util.Collection.iterator": 1,
                "org.sonar.api.batch.sensor.issue.IssueLocation.textRange": 1,
                "org.sonar.api.batch.fs.TextPointer.lineOffset": 2,
                "org.sonar.scanner.externalissue.ExternalIssueImporter.execute": 1,
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.assertSameRange": 1,
                "org.sonar.api.batch.sensor.issue.IIssue.primaryLocation": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 4,
                "java.lang.Enum.name": 5,
                "org.apache.commons.lang3.RandomStringUtils.randomAlphabetic": 3
            },
            "objectInstantiations": {
                "org.sonar.scanner.externalissue.ExternalIssueImporter": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Location": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.TextRange": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Impact": 2,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Issue": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Rule": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.externalissue": 16,
                "java.lang": 5,
                "java.util": 3,
                "org.apache.commons.lang3": 5,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 6,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.sonar.api.batch.fs.internal": 1,
                "org.sonar.api.batch.fs": 8,
                "org.assertj.core.api": 10,
                "org.sonar.api.batch.sensor.issue": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 42,
            "numRecursiveMethodCalls": 5,
            "linesOfCode": 45,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 45,
            "logicalLinesOfCodeJunitTest": 9
        },
        "stabilityMetricValue": 5.398334820814562
    },
    "org.sonar.scanner.scan.ProjectLockTest.tryLockTwice": {
        "filePath": "org\\sonar\\scanner\\scan\\ProjectLockTest.java",
        "methodName": "tryLockTwice",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.ProjectLock.tryLock": 2,
                "org.sonar.scanner.scan.ProjectLock.stop": 2
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 2.300524665841165
    },
    "org.sonar.scanner.sensor.DefaultSensorStorageTest.shouldIgnoreMeasuresOnModules": {
        "filePath": "org\\sonar\\scanner\\sensor\\DefaultSensorStorageTest.java",
        "methodName": "shouldIgnoreMeasuresOnModules",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.measure.internal.DefaultMeasure.on": 1,
                "org.sonar.api.batch.sensor.measure.internal.DefaultMeasure.withValue": 1,
                "org.mockito.Mockito.verifyNoMoreInteractions": 1,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.create": 2,
                "org.junit.rules.TemporaryFolder.newFolder": 2,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.setWorkDir": 1,
                "org.sonar.api.batch.sensor.measure.internal.DefaultMeasure.forMetric": 1,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.addSubProject": 1,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.setBaseDir": 1
            },
            "objectInstantiations": {
                "org.sonar.api.batch.fs.internal.DefaultInputModule": 1,
                "org.sonar.api.batch.sensor.measure.internal.DefaultMeasure": 1
            },
            "packageAccesses": {
                "org.sonar.api.batch.sensor.measure.internal": 4,
                "org.junit.rules": 2,
                "org.mockito": 1,
                "org.sonar.api.batch.fs.internal": 1,
                "org.sonar.api.batch.bootstrap": 7
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 3.0420951891564703
    },
    "org.sonar.scanner.bootstrap.ScannerWsClientProviderTest.provide_client_with_default_settings": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ScannerWsClientProviderTest.java",
        "methodName": "provide_client_with_default_settings",
        "stats": {
            "methodCalls": {
                "java.util.Collections.emptyMap": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 2,
                "org.sonarqube.ws.client.HttpConnector.baseUrl": 1,
                "okhttp3.OkHttpClient.connectTimeoutMillis": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.wsConnector": 1,
                "okhttp3.OkHttpClient.readTimeoutMillis": 1,
                "org.assertj.core.api.Assertions.assertThat": 6,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.assertj.core.api.AbstractIntegerAssert.isEqualTo": 2,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.baseUrl": 1,
                "org.assertj.core.api.AbstractAssert.isNotNull": 1,
                "okhttp3.OkHttpClient.proxy": 1,
                "org.sonar.scanner.bootstrap.ScannerWsClientProvider.provide": 1,
                "org.mockito.Mockito.mock": 1,
                "org.sonarqube.ws.client.HttpConnector.okHttpClient": 3
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.GlobalAnalysisMode": 1,
                "java.util.HashMap": 1,
                "org.sonar.scanner.bootstrap.ScannerProperties": 2
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 5,
                "java.util": 2,
                "org.mockito": 1,
                "okhttp3": 3,
                "org.sonar.scanner.bootstrap": 8,
                "org.assertj.core.api": 12
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 24,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 10,
            "linesOfCodeJunitTest": 10,
            "logicalLinesOfCode": 10,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 4.689547277710344
    },
    "org.sonar.scanner.scan.WorkDirectoriesInitializerTest.execute_doesnt_fail_if_nothing_to_clean": {
        "filePath": "org\\sonar\\scanner\\scan\\WorkDirectoriesInitializerTest.java",
        "methodName": "execute_doesnt_fail_if_nothing_to_clean",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.WorkDirectoriesInitializer.execute": 1,
                "org.junit.rules.TemporaryFolder.delete": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan": 1,
                "org.junit.rules": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 2,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 5.646842003695436
    },
    "org.sonar.scanner.scm.ScmChangedFilesTest.testGetter": {
        "filePath": "org\\sonar\\scanner\\scm\\ScmChangedFilesTest.java",
        "methodName": "testGetter",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scm.ScmChangedFiles.get": 1,
                "org.sonar.scm.git.ChangedFile.of": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.nio.file.Paths.get": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsOnly": 1,
                "java.util.Set.of": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scm.ScmChangedFiles": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scm": 2,
                "java.util": 2,
                "org.assertj.core.api": 2,
                "java.nio.file": 2,
                "org.sonar.scm.git": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 1.1319697789468108
    },
    "org.sonar.scanner.sensor.SensorIdTest.getters_are_correct": {
        "filePath": "org\\sonar\\scanner\\sensor\\SensorIdTest.java",
        "methodName": "getters_are_correct",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 2,
                "org.sonar.scanner.sensor.SensorId.getSensorName": 1,
                "org.sonar.scanner.sensor.SensorId.getPluginKey": 1,
                "org.assertj.core.api.Assertions.assertThat": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.sensor.SensorId": 1
            },
            "packageAccesses": {
                "org.assertj.core.api": 4,
                "org.sonar.scanner.sensor": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 0.5453753035812192
    },
    "org.sonar.scm.svn.SvnScmProviderTest.branchChangedLines_should_return_null_when_dir_nonexistent": {
        "filePath": "org\\sonar\\scm\\svn\\SvnScmProviderTest.java",
        "methodName": "branchChangedLines_should_return_null_when_dir_nonexistent",
        "stats": {
            "methodCalls": {
                "java.io.File.toPath": 1,
                "java.util.Collections.emptySet": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.junit.rules.TemporaryFolder.getRoot": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.sonar.scm.svn.SvnScmProvider.branchChangedLines": 1,
                "org.sonar.scm.svn.SvnScmProviderTest.newScmProvider": 1,
                "java.nio.file.Path.resolve": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.svn.SvnBlameCommand": 1,
                "org.sonar.scm.svn.SvnScmProvider": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.util": 1,
                "java.io": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scm.svn": 4,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 0.06767794081322069
    },
    "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializerTest.shouldLogInvalidRuleKey": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\pattern\\IssueExclusionPatternInitializerTest.java",
        "methodName": "shouldLogInvalidRuleKey",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.setProperty": 3,
                "org.sonar.api.config.internal.MapSettings.asConfig": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 1,
                "org.sonar.api.config.internal": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 0.7456687329917446
    },
    "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.coverage_no_report_version": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericCoverageReportParserTest.java",
        "methodName": "coverage_no_report_version",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.parseCoverageReport": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser.parse": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.genericcoverage": 3,
                "org.junit.rules": 1,
                "java.io": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 4.609699640846592
    },
    "org.sonar.scanner.repository.language.LanguageTest.getters_match_constructor": {
        "filePath": "org\\sonar\\scanner\\repository\\language\\LanguageTest.java",
        "methodName": "getters_match_constructor",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 2,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "org.sonar.api.resources.Language.getFileSuffixes": 1,
                "org.sonar.api.resources.Language.filenamePatterns": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 5,
                "org.sonar.scanner.repository.language.Language.name": 1,
                "org.mockito.Mockito.when": 5,
                "org.sonar.scanner.repository.language.Language.key": 1,
                "org.sonar.scanner.repository.language.Language.fileSuffixes": 1,
                "org.sonar.scanner.repository.language.LanguageTest.mockApiLanguage": 1,
                "org.sonar.api.resources.Language.getName": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scanner.repository.language.Language.isPublishAllFiles": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsOnly": 2,
                "org.sonar.scanner.repository.language.Language.filenamePatterns": 1,
                "org.sonar.api.resources.Language.publishAllFiles": 1,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.api.resources.Language.getKey": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.repository.language.Language": 1
            },
            "packageAccesses": {
                "org.sonar.api.resources": 6,
                "org.mockito": 6,
                "org.sonar.scanner.repository.language": 8,
                "org.mockito.stubbing": 5,
                "org.assertj.core.api": 10
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 32,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 13,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 13,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 4.620226922715802
    },
    "org.sonar.scm.git.ProcessWrapperFactoryTest.should_log_error_output_in_debug_mode": {
        "filePath": "org\\sonar\\scm\\git\\ProcessWrapperFactoryTest.java",
        "methodName": "should_log_error_output_in_debug_mode",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.ProcessWrapperFactory.create": 1,
                "org.assertj.core.api.AbstractCharSequenceAssert.startsWith": 1,
                "java.io.File.toPath": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "java.util.List.get": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.util.Map.of": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.setLevel": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 2,
                "org.junit.rules": 1,
                "java.util": 2,
                "java.io": 1,
                "org.sonar.scm.git": 1,
                "org.assertj.core.api": 3,
                "java.nio.file": 1,
                "org.sonar.scm.git.ProcessWrapperFactory": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 4.928760802032944
    },
    "org.sonar.scanner.externalissue.ExternalIssueImporterTest.execute_whenNewFormatWithStartColumnOnEmptyLine_shouldThrowException": {
        "filePath": "org\\sonar\\scanner\\externalissue\\ExternalIssueImporterTest.java",
        "methodName": "execute_whenNewFormatWithStartColumnOnEmptyLine_shouldThrowException",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.createRule": 2,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.getProjectRelativePath": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.runOn": 1,
                "org.sonar.scanner.externalissue.ExternalIssueImporter.execute": 1,
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.newIssue": 1,
                "java.util.Random.nextInt": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.apache.commons.lang3.RandomStringUtils.randomAlphabetic": 3,
                "java.lang.Enum.name": 5
            },
            "objectInstantiations": {
                "org.sonar.scanner.externalissue.ExternalIssueImporter": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Location": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.TextRange": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Issue": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Impact": 2,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Rule": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.externalissue": 15,
                "java.util": 1,
                "java.lang": 5,
                "org.apache.commons.lang3": 3,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 7,
                "org.sonar.api.batch.fs.internal": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 18,
            "numRecursiveMethodCalls": 4,
            "linesOfCode": 37,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 38,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 4.530481619262913
    },
    "org.sonar.scanner.scan.filesystem.CharsetValidationTest.invalidUTF16": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\CharsetValidationTest.java",
        "methodName": "invalidUTF16",
        "stats": {
            "methodCalls": {
                "org.apache.commons.lang3.StringUtils.deleteWhitespace": 2,
                "java.lang.Character.digit": 4,
                "java.lang.String.length": 2,
                "org.sonar.scanner.scan.filesystem.CharsetValidationTest.hexToByte": 2,
                "java.lang.String.charAt": 4,
                "org.assertj.core.api.Assertions.assertThat": 4,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 4,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isValidUTF16": 4
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan.filesystem": 6,
                "java.lang": 12,
                "org.assertj.core.api": 8,
                "org.apache.commons.lang3": 2
            },
            "numConditionals": 0,
            "numLoops": 2,
            "numNestedLoops": 0,
            "numMethodCalls": 26,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 20,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 22,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 0.3471799958187302
    },
    "org.sonar.scanner.ci.CiConfigurationImplTest.getNam_for_undetected_ci": {
        "filePath": "org\\sonar\\scanner\\ci\\CiConfigurationImplTest.java",
        "methodName": "getNam_for_undetected_ci",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.ci.CiConfigurationProvider.EmptyCiConfiguration.getCiName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.ci.CiConfigurationProvider.EmptyCiConfiguration": 1
            },
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 1.1218671976032273
    },
    "org.sonar.batch.bootstrapper.LoggingConfigurationTest.testDefaultFormat": {
        "filePath": "org\\sonar\\batch\\bootstrapper\\LoggingConfigurationTest.java",
        "methodName": "testDefaultFormat",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.batch.bootstrapper.LoggingConfiguration.getSubstitutionVariable": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.batch.bootstrapper.LoggingConfiguration": 1
            },
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.batch.bootstrapper": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 0.41626227542233063
    },
    "org.sonar.scanner.repository.ContextPropertiesCacheTest.put_throws_IAE_if_key_is_null": {
        "filePath": "org\\sonar\\scanner\\repository\\ContextPropertiesCacheTest.java",
        "methodName": "put_throws_IAE_if_key_is_null",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.repository.ContextPropertiesCache.put": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.repository": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 2.5869065355534535
    },
    "org.sonar.scm.git.ChangedLinesComputerTest.compute_from_multiple_hunks_with_extra_header_lines": {
        "filePath": "org\\sonar\\scm\\git\\ChangedLinesComputerTest.java",
        "methodName": "compute_from_multiple_hunks_with_extra_header_lines",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.ChangedLinesComputer.receiver": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsExactly": 1,
                "org.sonar.scm.git.ChangedLinesComputerTest.printDiff": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scm.git.ChangedLinesComputer.changedLines": 1,
                "java.io.Writer.write": 1
            },
            "objectInstantiations": {
                "java.io.OutputStreamWriter": 1
            },
            "packageAccesses": {
                "java.lang": 1,
                "java.io": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scm.git": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 0.38625043637160106
    },
    "org.sonar.scm.git.GitIgnoreCommandTest.test_pattern_on_deep_repo": {
        "filePath": "org\\sonar\\scm\\git\\GitIgnoreCommandTest.java",
        "methodName": "test_pattern_on_deep_repo",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitIgnoreCommandTest.createFolderStructure": 1000,
                "java.io.File.toPath": 1,
                "java.nio.file.Path.toFile": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "java.nio.file.Files.createFile": 1998,
                "java.nio.file.Path.resolve": 3000,
                "java.lang.Math.pow": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.sonar.scm.git.GitIgnoreCommand.isIgnored": 2,
                "org.eclipse.jgit.api.Git.init": 1,
                "java.nio.file.Files.exists": 2997,
                "java.nio.file.Files.createDirectory": 999,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scm.git.GitIgnoreCommandTest.createGitRepoWithIgnore": 1,
                "org.eclipse.jgit.api.InitCommand.call": 1,
                "java.util.Arrays.asList": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "java.nio.file.Files.write": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.setLevel": 1,
                "org.sonar.scm.git.GitIgnoreCommand.init": 1,
                "org.eclipse.jgit.api.InitCommand.setDirectory": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.GitIgnoreCommand": 1
            },
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 2,
                "org.eclipse.jgit.api": 4,
                "org.junit.rules": 1,
                "java.util": 1,
                "java.lang": 1,
                "java.io": 1,
                "org.sonar.scm.git": 1006,
                "org.assertj.core.api": 6,
                "java.nio.file": 11995
            },
            "numConditionals": 3996,
            "numLoops": 999,
            "numNestedLoops": 0,
            "numMethodCalls": 10015,
            "numRecursiveMethodCalls": 1001,
            "linesOfCode": 13001,
            "linesOfCodeJunitTest": 11,
            "logicalLinesOfCode": 17998,
            "logicalLinesOfCodeJunitTest": 11
        },
        "stabilityMetricValue": 3.875944557268276
    },
    "org.sonar.scanner.repository.settings.AbstractSettingsLoaderTest.should_filter_secured_settings_without_value": {
        "filePath": "org\\sonar\\scanner\\repository\\settings\\AbstractSettingsLoaderTest.java",
        "methodName": "should_filter_secured_settings_without_value",
        "stats": {
            "methodCalls": {
                "org.sonarqube.ws.Settings.Setting.Builder.build": 1,
                "org.sonarqube.ws.Settings.Setting.newBuilder": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.repository.settings.AbstractSettingsLoader.toMap": 1,
                "org.assertj.core.api.AbstractMapAssert.isEmpty": 1,
                "org.sonarqube.ws.Settings.Setting.Builder.setKey": 1,
                "java.util.Collections.singletonList": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 1,
                "org.sonarqube.ws": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.repository.settings": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 0.1962905108707317
    },
    "org.sonar.scanner.ci.CiConfigurationImplTest.getScmRevision": {
        "filePath": "org\\sonar\\scanner\\ci\\CiConfigurationImplTest.java",
        "methodName": "getScmRevision",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiConfigurationImpl.getScmRevision": 4,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.assertj.core.api.AbstractOptionalAssert.isEmpty": 3,
                "org.assertj.core.api.Assertions.assertThat": 4
            },
            "objectInstantiations": {
                "org.sonar.scanner.ci.CiConfigurationImpl": 4
            },
            "packageAccesses": {
                "org.assertj.core.api": 8,
                "org.sonar.scanner.ci": 8
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 0.44013590358048665
    },
    "org.sonar.scanner.externalissue.sarif.RegionMapperTest.mapRegion_whenStartLineIsNull_shouldThrow": {
        "filePath": "org\\sonar\\scanner\\externalissue\\sarif\\RegionMapperTest.java",
        "methodName": "mapRegion_whenStartLineIsNull_shouldThrow",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.ThrowableTypeAssert.isThrownBy": 1,
                "org.assertj.core.api.Assertions.assertThatNullPointerException": 1,
                "org.sonar.core.sarif.Region.getStartLine": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.ThrowableAssertAlternative.withMessage": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.externalissue.sarif.RegionMapper.mapRegion": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.externalissue.sarif": 1,
                "org.mockito": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 3,
                "org.sonar.core.sarif": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 4.339473325889975
    },
    "org.sonar.scanner.scan.filesystem.ByteCharsetDetectorTest.tryUTF16heuristics": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\ByteCharsetDetectorTest.java",
        "methodName": "tryUTF16heuristics",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 3,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isUTF8": 1,
                "org.sonar.scanner.scan.filesystem.ByteCharsetDetector.detect": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isValidUTF16": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.mockito.Mockito.when": 3,
                "org.mockito.ArgumentMatchers.anyBoolean": 3,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isUTF16": 1,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.Result.newValid": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan.filesystem": 5,
                "org.mockito": 9,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 19,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 4.478977821201868
    },
    "org.sonar.scm.svn.SvnScmProviderTest.computeChangedPaths_should_not_crash_when_getRepositoryRootURL_getPath_is_empty": {
        "filePath": "org\\sonar\\scm\\svn\\SvnScmProviderTest.java",
        "methodName": "computeChangedPaths_should_not_crash_when_getRepositoryRootURL_getPath_is_empty",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 2,
                "org.assertj.core.api.AbstractCharSequenceAssert.isEmpty": 2,
                "org.tmatesoft.svn.core.wc.SVNInfo.getRepositoryRootURL": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.tmatesoft.svn.core.wc.SVNClientManager.getWCClient": 1,
                "org.tmatesoft.svn.core.wc.SVNClientManager.getLogClient": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.tmatesoft.svn.core.SVNURL.parseURIEncoded": 4,
                "org.mockito.Mockito.when": 4,
                "org.sonar.scm.svn.SvnScmProvider.computeChangedPaths": 1,
                "org.tmatesoft.svn.core.wc.SVNInfo.getURL": 1,
                "java.nio.file.Paths.get": 1,
                "org.tmatesoft.svn.core.SVNURL.getPath": 2,
                "org.mockito.Mockito.mock": 4,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.tmatesoft.svn.core.wc": 8,
                "org.mockito": 10,
                "org.assertj.core.api": 6,
                "org.tmatesoft.svn.core": 6,
                "org.mockito.stubbing": 4,
                "org.sonar.scm.svn": 1,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 35,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 12,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 12,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 0.07051306040287617
    },
    "org.sonar.batch.bootstrapper.LoggingConfigurationTest.test_deprecated_log_properties": {
        "filePath": "org\\sonar\\batch\\bootstrapper\\LoggingConfigurationTest.java",
        "methodName": "test_deprecated_log_properties",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 5,
                "java.util.Map.put": 6,
                "org.sonar.batch.bootstrapper.LoggingConfiguration.getSubstitutionVariable": 5,
                "org.sonar.batch.bootstrapper.LoggingConfiguration.setProperties": 5,
                "org.assertj.core.api.Assertions.assertThat": 5
            },
            "objectInstantiations": {
                "org.sonar.batch.bootstrapper.LoggingConfiguration": 5,
                "java.util.HashMap": 1
            },
            "packageAccesses": {
                "org.sonar.batch.bootstrapper": 16,
                "java.util": 8,
                "org.assertj.core.api": 10
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 26,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 16,
            "linesOfCodeJunitTest": 16,
            "logicalLinesOfCode": 16,
            "logicalLinesOfCodeJunitTest": 16
        },
        "stabilityMetricValue": 4.337791723009335
    },
    "org.sonar.scanner.externalissue.ExternalIssueImporterTest.execute_whenDeprecatedFormatWithNoColumns": {
        "filePath": "org\\sonar\\scanner\\externalissue\\ExternalIssueImporterTest.java",
        "methodName": "execute_whenDeprecatedFormatWithNoColumns",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.DefaultInputFile.getProjectRelativePath": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.selectLine": 1,
                "org.sonar.api.batch.fs.TextPointer.line": 2,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.allExternalIssues": 2,
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.newIssue": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.sonar.api.batch.fs.TextRange.end": 3,
                "java.util.Random.nextInt": 1,
                "org.sonar.api.batch.fs.TextRange.start": 2,
                "org.assertj.core.api.AbstractIntegerAssert.isEqualTo": 1,
                "java.util.Iterator.next": 1,
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.runOnDeprecatedFormat": 1,
                "java.util.Collection.iterator": 1,
                "org.sonar.api.batch.sensor.issue.IssueLocation.textRange": 1,
                "org.assertj.core.api.AbstractIntegerAssert.isZero": 1,
                "org.sonar.api.batch.fs.TextPointer.lineOffset": 3,
                "org.sonar.scanner.externalissue.ExternalIssueImporter.execute": 1,
                "org.sonar.api.batch.sensor.issue.IIssue.primaryLocation": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 2,
                "org.apache.commons.lang3.RandomStringUtils.randomAlphabetic": 3
            },
            "objectInstantiations": {
                "org.sonar.scanner.externalissue.ExternalIssueImporter": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Location": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Issue": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.TextRange": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.externalissue": 10,
                "java.util": 3,
                "org.apache.commons.lang3": 3,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 2,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.sonar.api.batch.fs": 11,
                "org.sonar.api.batch.fs.internal": 2,
                "org.assertj.core.api": 10,
                "org.sonar.api.batch.sensor.issue": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 35,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 27,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 27,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 3.547873796738716
    },
    "org.sonar.scanner.issue.ignore.pattern.IssuePatternTest.shouldMatchRule": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\pattern\\IssuePatternTest.java",
        "methodName": "shouldMatchRule",
        "stats": {
            "methodCalls": {
                "org.sonar.api.rules.Rule.ruleKey": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 5,
                "org.assertj.core.api.Assertions.assertThat": 8,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 3,
                "org.sonar.api.rules.Rule.create": 1,
                "org.sonar.scanner.issue.ignore.pattern.IssuePattern.matchRule": 8
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.pattern.IssuePattern": 8
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 16,
                "org.assertj.core.api": 16,
                "org.sonar.api.rule": 1,
                "org.sonar.api.rules": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 26,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 9,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 9,
            "logicalLinesOfCodeJunitTest": 9
        },
        "stabilityMetricValue": 0.8697831671554882
    },
    "org.sonar.scanner.issue.DefaultIssueFilterChainTest.should_refuse_and_not_go_further_if_filter_refuses": {
        "filePath": "org\\sonar\\scanner\\issue\\DefaultIssueFilterChainTest.java",
        "methodName": "should_refuse_and_not_go_further_if_filter_refuses",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.scanner.issue.DefaultIssueFilterChain.accept": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.util.List.of": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.DefaultIssueFilterChainTest.PassingFilter": 1,
                "org.sonar.scanner.issue.DefaultIssueFilterChainTest.FailingFilter": 1,
                "org.sonar.scanner.issue.DefaultIssueFilterChain": 1,
                "org.sonar.scanner.issue.DefaultIssueFilterChainTest.RefusingFilter": 1
            },
            "packageAccesses": {
                "java.util": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.issue": 5
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 4.1148120258311325
    },
    "org.sonar.scanner.bootstrap.PluginFilesTest.getPlugin_whenTimeOutReached_thenDownloadFails": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\PluginFilesTest.java",
        "methodName": "getPlugin_whenTimeOutReached_thenDownloadFails",
        "stats": {
            "methodCalls": {
                "okhttp3.mockwebserver.MockResponse.setBody": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "okhttp3.mockwebserver.MockResponse.setBodyDelay": 1,
                "okhttp3.mockwebserver.MockResponse.setHeader": 1,
                "org.sonar.scanner.bootstrap.PluginFilesTest.newInstalledPlugin": 1,
                "okhttp3.mockwebserver.MockWebServer.enqueue": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonar.scanner.bootstrap.PluginFiles.get": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller.InstalledPlugin": 1,
                "okhttp3.mockwebserver.MockResponse": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.bootstrap": 3,
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller": 2,
                "okhttp3.mockwebserver": 6,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 9,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 10,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 0.04701030188450333
    },
    "org.sonar.scanner.bootstrap.RuntimeJavaVersionTest.given_runtime11_should_addAnalysisWarning": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\RuntimeJavaVersionTest.java",
        "methodName": "given_runtime11_should_addAnalysisWarning",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.RuntimeJavaVersion.checkJavaVersion": 1,
                "org.mockito.Mockito.mockStatic": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.MockedStatic.when": 1,
                "org.sonar.api.notifications.AnalysisWarnings.addUnique": 1,
                "java.lang.Runtime.Version.parse": 1,
                "org.mockito.Mockito.verify": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.lang": 1,
                "org.mockito": 4,
                "java.lang.Runtime": 1,
                "org.sonar.api.notifications": 1,
                "org.sonar.scanner.bootstrap": 1,
                "org.mockito.stubbing": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 5.171189057713184
    },
    "org.sonar.scanner.ci.vendors.JenkinsTest.isDetected": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\JenkinsTest.java",
        "methodName": "isDetected",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scanner.ci.vendors.JenkinsTest.setEnvVariable": 6,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.sonar.api.utils.System2.envVariable": 6,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 6,
                "org.sonar.scanner.ci.CiVendor.isDetected": 3,
                "org.mockito.Mockito.when": 6
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 6,
                "org.sonar.api.utils": 6,
                "org.sonar.scanner.ci": 3,
                "org.mockito.stubbing": 6,
                "org.assertj.core.api": 6,
                "org.sonar.scanner.ci.vendors": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 33,
            "numRecursiveMethodCalls": 6,
            "linesOfCode": 15,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 15,
            "logicalLinesOfCodeJunitTest": 9
        },
        "stabilityMetricValue": 5.690277997835193
    },
    "org.sonar.scanner.report.JavaArchitectureInformationProviderTest.is64bitJavaVersion_whenRunningWith64bitJava_shouldReturnTrue": {
        "filePath": "org\\sonar\\scanner\\report\\JavaArchitectureInformationProviderTest.java",
        "methodName": "is64bitJavaVersion_whenRunningWith64bitJava_shouldReturnTrue",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.report.JavaArchitectureInformationProvider.is64bitJavaVersion": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.report": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 0.566323941206101
    },
    "org.sonar.scanner.ci.CiConfigurationProviderTest.fail_if_multiple_ci_vendor_are_detected": {
        "filePath": "org\\sonar\\scanner\\ci\\CiConfigurationProviderTest.java",
        "methodName": "fail_if_multiple_ci_vendor_are_detected",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.assertj.core.api.Assertions.catchThrowable": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonar.scanner.ci.CiConfigurationProvider.provide": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.ci.CiConfigurationProviderTest.EnabledCiVendor": 2
            },
            "packageAccesses": {
                "java.lang": 1,
                "org.sonar.api.config.internal": 1,
                "org.sonar.scanner.ci": 3,
                "org.assertj.core.api": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 0.854449423894388
    },
    "org.sonar.scanner.scan.branch.ProjectBranchesTest.isEmpty": {
        "filePath": "org\\sonar\\scanner\\scan\\branch\\ProjectBranchesTest.java",
        "methodName": "isEmpty",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.scan.branch.ProjectBranches.isEmpty": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "java.util.Collections.emptyList": 2,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.scanner.scan.branch.ProjectBranches.defaultBranchName": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.branch.ProjectBranches": 2
            },
            "packageAccesses": {
                "org.sonar.scanner.scan.branch": 5,
                "java.util": 2,
                "org.assertj.core.api": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 4.571209761888928
    },
    "org.sonar.scanner.issue.ignore.pattern.LineRangeTest.testEquals": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\pattern\\LineRangeTest.java",
        "methodName": "testEquals",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.pattern.LineRange": 4,
                "java.lang.StringBuffer": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 5,
                "java.lang": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 0.42487215942927636
    },
    "org.sonar.scanner.scan.filesystem.ByteCharsetDetectorTest.tryUserAnsii": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\ByteCharsetDetectorTest.java",
        "methodName": "tryUserAnsii",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 4,
                "org.mockito.ArgumentMatchers.eq": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.mockito.Mockito.when": 4,
                "org.mockito.ArgumentMatchers.anyBoolean": 3,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.Result.newValid": 1,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isUTF8": 1,
                "org.sonar.scanner.scan.filesystem.ByteCharsetDetector.detect": 1,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.tryDecode": 1,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isValidUTF16": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isUTF16": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.CharsetValidation.Result": 1,
                "org.sonar.scanner.scan.filesystem.ByteCharsetDetector": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scan.filesystem": 8,
                "org.mockito": 12,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 24,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 3.677381158827537
    },
    "org.sonar.scanner.repository.ReferenceBranchSupplierTest.getFromProperties_throws_ISE_if_reference_is_the_same_as_branch": {
        "filePath": "org\\sonar\\scanner\\repository\\ReferenceBranchSupplierTest.java",
        "methodName": "getFromProperties_throws_ISE_if_reference_is_the_same_as_branch",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "java.util.Optional.of": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.sonar.api.config.Configuration.get": 1,
                "org.mockito.Mockito.when": 3,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchType": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchName": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan.branch": 2,
                "java.util": 1,
                "org.mockito": 3,
                "org.sonar.api.config": 1,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 4.860638626414227
    },
    "org.sonar.scanner.ci.CiConfigurationProviderTest.empty_configuration_if_no_ci_vendors": {
        "filePath": "org\\sonar\\scanner\\ci\\CiConfigurationProviderTest.java",
        "methodName": "empty_configuration_if_no_ci_vendors",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.assertj.core.api.AbstractOptionalAssert.isEmpty": 1,
                "org.sonar.scanner.ci.CiConfigurationProvider.provide": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.api.config.internal": 1,
                "org.sonar.scanner.ci": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 5,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 0.261286701792531
    },
    "org.sonar.scanner.scan.ProjectReactorBuilderTest.shouldMergeParentProperties": {
        "filePath": "org\\sonar\\scanner\\scan\\ProjectReactorBuilderTest.java",
        "methodName": "shouldMergeParentProperties",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractAssert.isSameAs": 1,
                "java.util.Map.put": 7,
                "java.lang.Math.random": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.sonar.scanner.scan.ProjectReactorBuilder.mergeParentProperties": 1,
                "org.assertj.core.api.AbstractMapAssert.hasSize": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "java.util.Map.get": 3
            },
            "objectInstantiations": {
                "java.util.HashMap": 2
            },
            "packageAccesses": {
                "org.sonar.scanner.scan": 1,
                "java.util": 14,
                "java.lang": 3,
                "org.assertj.core.api": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 21,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 16,
            "linesOfCodeJunitTest": 16,
            "logicalLinesOfCode": 16,
            "logicalLinesOfCodeJunitTest": 16
        },
        "stabilityMetricValue": 2.263981392975506
    },
    "org.sonar.batch.bootstrapper.EnvironmentInformationTest.test_toString": {
        "filePath": "org\\sonar\\batch\\bootstrapper\\EnvironmentInformationTest.java",
        "methodName": "test_toString",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractAssert.hasToString": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.batch.bootstrapper.EnvironmentInformation": 1
            },
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.batch.bootstrapper": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 2,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 2.211628400902576
    },
    "org.sonar.scanner.issue.ignore.pattern.LineRangeTest.testToString": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\pattern\\LineRangeTest.java",
        "methodName": "testToString",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractAssert.hasToString": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.pattern.LineRange": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 2,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 0.4341483292893943
    },
    "org.sonar.scm.git.ChangedLinesComputerTest.throw_exception_invalid_start_line_format": {
        "filePath": "org\\sonar\\scm\\git\\ChangedLinesComputerTest.java",
        "methodName": "throw_exception_invalid_start_line_format",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.ChangedLinesComputer.receiver": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.sonar.scm.git.ChangedLinesComputerTest.printDiff": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "java.io.Writer.write": 1
            },
            "objectInstantiations": {
                "java.io.OutputStreamWriter": 1
            },
            "packageAccesses": {
                "java.lang": 1,
                "java.io": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scm.git": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 5,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 0.9285625192946969
    },
    "org.sonar.scanner.genericcoverage.StaxParserTest.testXMLWithDTD": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\StaxParserTest.java",
        "methodName": "testXMLWithDTD",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.genericcoverage.StaxParserTest.getTestHandler": 1,
                "java.lang.Object.getClass": 1,
                "org.codehaus.staxmate.in.SMInputCursor.advance": 1,
                "java.lang.ClassLoader.getResourceAsStream": 1,
                "org.sonar.scanner.genericcoverage.StaxParser.parse": 1,
                "java.lang.Class.getClassLoader": 1,
                "org.codehaus.staxmate.in.SMHierarchicCursor.getNext": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.StaxParser": 1,
                "org.sonar.scanner.genericcoverage.StaxParser.XmlStreamHandler": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.genericcoverage": 5,
                "java.lang": 3,
                "org.codehaus.staxmate.in": 2
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 2.061535822725036
    },
    "org.sonar.scanner.ci.vendors.JenkinsTest.loadConfiguration_of_git_repo_with_branch_plugin_without_git_repo": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\JenkinsTest.java",
        "methodName": "loadConfiguration_of_git_repo_with_branch_plugin_without_git_repo",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "java.io.File.toPath": 1,
                "org.sonar.scanner.ci.vendors.JenkinsTest.setEnvVariable": 3,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 3,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.mockito.Mockito.when": 4,
                "org.sonar.api.batch.fs.internal.AbstractProjectOrModule.getBaseDir": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.junit.rules": 1,
                "org.mockito": 4,
                "java.io": 1,
                "org.sonar.api.utils": 3,
                "org.sonar.api.batch.fs.internal": 1,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 3,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 21,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 9,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 9,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 4.515840540841055
    },
    "org.sonar.scanner.issue.ignore.pattern.IssuePatternTest.shouldMatchJavaFile": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\pattern\\IssuePatternTest.java",
        "methodName": "shouldMatchJavaFile",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 5,
                "org.sonar.scanner.issue.ignore.pattern.IssuePattern.matchFile": 10,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 5,
                "org.assertj.core.api.Assertions.assertThat": 10
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.pattern.IssuePattern": 10
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 20,
                "java.lang": 1,
                "org.assertj.core.api": 20
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 30,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 11,
            "logicalLinesOfCodeJunitTest": 11
        },
        "stabilityMetricValue": 0.40200725273575383
    },
    "org.sonar.scanner.externalissue.ExternalIssueImporterTest.execute_whenNewFormatContainsNonExistentImpactSeverity_shouldThrowException": {
        "filePath": "org\\sonar\\scanner\\externalissue\\ExternalIssueImporterTest.java",
        "methodName": "execute_whenNewFormatContainsNonExistentImpactSeverity_shouldThrowException",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.createRule": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "java.lang.Enum.name": 4
            },
            "objectInstantiations": {
                "org.sonar.scanner.externalissue.ExternalIssueImporter": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Impact": 2,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Rule": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.externalissue": 8,
                "java.lang": 4,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 4,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 19,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 19,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 2.7190550216850498
    },
    "org.sonar.scanner.scan.ScanPropertiesTest.should_define_report_publish_timeout": {
        "filePath": "org\\sonar\\scanner\\scan\\ScanPropertiesTest.java",
        "methodName": "should_define_report_publish_timeout",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.ScanProperties.reportPublishTimeout": 2,
                "org.sonar.api.config.internal.MapSettings.setProperty": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractIntegerAssert.isEqualTo": 2
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan": 2,
                "org.sonar.api.config.internal": 1,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 2.907667607793907
    },
    "org.sonar.scanner.util.ProgressReportTest.stop_thread_on_stop": {
        "filePath": "org\\sonar\\scanner\\util\\ProgressReportTest.java",
        "methodName": "stop_thread_on_stop",
        "stats": {
            "methodCalls": {
                "java.util.Map.keySet": 2,
                "org.sonar.scanner.util.ProgressReport.stop": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.scanner.util.ProgressReportTest.isThreadAlive": 2,
                "org.sonar.scanner.util.ProgressReportTest.getThread": 2,
                "java.lang.Thread.getName": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "java.lang.Thread.getAllStackTraces": 2,
                "org.sonar.scanner.util.ProgressReport.start": 1,
                "java.lang.Thread.isAlive": 2,
                "java.lang.String.equals": 2
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.lang": 12,
                "java.util": 4,
                "org.sonar.scanner.util": 6,
                "org.assertj.core.api": 4
            },
            "numConditionals": 2,
            "numLoops": 2,
            "numNestedLoops": 0,
            "numMethodCalls": 20,
            "numRecursiveMethodCalls": 4,
            "linesOfCode": 18,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 22,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 1.1042676128616264
    },
    "org.sonar.scanner.sensor.ModuleSensorOptimizerTest.should_optimize_on_settings": {
        "filePath": "org\\sonar\\scanner\\sensor\\ModuleSensorOptimizerTest.java",
        "methodName": "should_optimize_on_settings",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.setProperty": 1,
                "org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor.onlyWhenConfiguration": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scanner.sensor.AbstractSensorOptimizer.shouldExecute": 2,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.api.config.Configuration.hasKey": 1
            },
            "objectInstantiations": {
                "org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor": 1
            },
            "packageAccesses": {
                "org.sonar.api.batch.sensor.internal": 3,
                "org.sonar.api.config.internal": 1,
                "org.sonar.api.config": 1,
                "org.sonar.scanner.sensor": 2,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 1.6387303599652168
    },
    "org.sonar.scanner.repository.settings.AbstractSettingsLoaderTest.should_always_load_language_detection_properties": {
        "filePath": "org\\sonar\\scanner\\repository\\settings\\AbstractSettingsLoaderTest.java",
        "methodName": "should_always_load_language_detection_properties",
        "stats": {
            "methodCalls": {
                "org.sonarqube.ws.Settings.Setting.Builder.build": 2,
                "org.assertj.core.api.AbstractMapAssert.containsExactly": 1,
                "org.sonarqube.ws.Settings.Setting.newBuilder": 2,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.repository.settings.AbstractSettingsLoader.toMap": 1,
                "org.sonarqube.ws.Settings.Values.Builder.addValues": 2,
                "org.assertj.core.api.Assertions.entry": 2,
                "org.sonarqube.ws.Settings.Setting.Builder.setKey": 2,
                "org.sonarqube.ws.Settings.Setting.Builder.setInherited": 2,
                "java.util.List.of": 1,
                "org.sonarqube.ws.Settings.Setting.Builder.setValues": 2,
                "org.sonarqube.ws.Settings.Values.newBuilder": 2
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 1,
                "org.sonarqube.ws": 14,
                "org.assertj.core.api": 4,
                "org.sonar.scanner.repository.settings": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 20,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 2.134922301054933
    },
    "org.sonar.scanner.scan.filesystem.InputComponentStoreTest.does_not_store_not_analysed_file_counts_in_sq_non_community_editions": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\InputComponentStoreTest.java",
        "methodName": "does_not_store_not_analysed_file_counts_in_sq_non_community_editions",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 5,
                "org.sonar.scanner.scan.filesystem.InputComponentStoreTest.InputComponentStoreTester.addFile": 5,
                "org.sonar.api.SonarRuntime.getEdition": 1,
                "java.util.Optional.ifPresent": 2,
                "org.sonar.scanner.scan.filesystem.InputComponentStore.put": 5,
                "org.sonar.scanner.scan.filesystem.InputComponentStore.getNotAnalysedFilesByLanguage": 1,
                "java.util.Optional.ofNullable": 2,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.assertj.core.api.AbstractMapAssert.isEmpty": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.InputComponentStoreTest.InputComponentStoreTester": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 5
            },
            "packageAccesses": {
                "java.lang": 2,
                "java.util": 4,
                "org.mockito": 1,
                "org.sonar.scanner.scan.filesystem.InputComponentStoreTest": 1,
                "org.sonar.api": 1,
                "org.sonar.scanner.scan.filesystem": 12,
                "org.sonar.api.batch.fs.internal": 17,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 25,
            "numRecursiveMethodCalls": 5,
            "linesOfCode": 29,
            "linesOfCodeJunitTest": 10,
            "logicalLinesOfCode": 29,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 3.28012172885451
    },
    "org.sonar.scm.git.GitScmSupportTest.getClasses": {
        "filePath": "org\\sonar\\scm\\git\\GitScmSupportTest.java",
        "methodName": "getClasses",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitScmSupport.getObjects": 1,
                "org.assertj.core.api.AbstractIterableAssert.isNotEmpty": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scm.git": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 1.9729105607834745
    },
    "org.sonar.scanner.scan.filesystem.DirectoryFileVisitorTest.test_visit_file_failed_file_system_loop_exception": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\DirectoryFileVisitorTest.java",
        "methodName": "test_visit_file_failed_file_system_loop_exception",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.filesystem.DirectoryFileVisitor.visitFileFailed": 1,
                "java.io.File.toPath": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.io.File.getPath": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.DirectoryFileVisitor": 1,
                "java.nio.file.FileSystemLoopException": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "org.mockito": 1,
                "java.io": 3,
                "org.sonar.scanner.scan.filesystem.DirectoryFileVisitor": 1,
                "org.sonar.scanner.scan.filesystem": 3,
                "org.assertj.core.api": 2,
                "java.nio.file": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 5.054154121981886
    },
    "org.sonar.scanner.externalissue.ExternalIssueImporterTest.execute_whenNewFormatContainsNonExistentCleanCodeAttribute_shouldThrowException": {
        "filePath": "org\\sonar\\scanner\\externalissue\\ExternalIssueImporterTest.java",
        "methodName": "execute_whenNewFormatContainsNonExistentCleanCodeAttribute_shouldThrowException",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.createRule": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "java.lang.Enum.name": 4
            },
            "objectInstantiations": {
                "org.sonar.scanner.externalissue.ExternalIssueImporter": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Impact": 2,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Rule": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.externalissue": 8,
                "java.lang": 4,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 4,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 19,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 19,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 1.8621195081140056
    },
    "org.sonar.scanner.sensor.DefaultSensorStorageTest.shouldFailIfUnknownMetric": {
        "filePath": "org\\sonar\\scanner\\sensor\\DefaultSensorStorageTest.java",
        "methodName": "shouldFailIfUnknownMetric",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.sonar.api.batch.sensor.measure.internal.DefaultMeasure.on": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.sonar.api.batch.sensor.measure.internal.DefaultMeasure.withValue": 1,
                "org.sonar.api.batch.sensor.measure.internal.DefaultMeasure.forMetric": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1
            },
            "objectInstantiations": {
                "org.sonar.api.batch.sensor.measure.internal.DefaultMeasure": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "org.sonar.api.batch.sensor.measure.internal": 4,
                "org.sonar.api.batch.fs.internal": 2,
                "org.sonar.api.batch.fs": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 5.55875503978718
    },
    "org.sonar.scanner.postjob.DefaultPostJobContextTest.getConfig": {
        "filePath": "org\\sonar\\scanner\\postjob\\DefaultPostJobContextTest.java",
        "methodName": "getConfig",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.sonar.scanner.postjob.DefaultPostJobContext.config": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.postjob": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 1.3576085557146262
    },
    "org.sonar.scanner.report.AnalysisCachePublisherTest.publish_closes_cache": {
        "filePath": "org\\sonar\\scanner\\report\\AnalysisCachePublisherTest.java",
        "methodName": "publish_closes_cache",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.cache.ScannerWriteCache.close": 1,
                "org.sonar.scanner.report.AnalysisCachePublisher.publish": 1,
                "org.mockito.Mockito.verify": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.report": 1,
                "org.sonar.scanner.cache": 1,
                "org.mockito": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 3.5022159616403163
    },
    "org.sonar.scanner.bootstrap.PluginFilesTest.download_a_new_version_of_plugin_during_blue_green_switch": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\PluginFilesTest.java",
        "methodName": "download_a_new_version_of_plugin_during_blue_green_switch",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.PluginFilesTest.enqueueDownload": 4,
                "org.sonar.scanner.bootstrap.PluginFilesTest.verifySameContent": 3,
                "okhttp3.mockwebserver.MockResponse.setBody": 2,
                "org.assertj.core.api.AbstractFileAssert.isFile": 6,
                "org.sonar.scanner.bootstrap.PluginFilesTest.newInstalledPlugin": 2,
                "org.assertj.core.api.Assertions.assertThat": 11,
                "org.assertj.core.api.AbstractFileAssert.hasSameContentAs": 3,
                "org.sonar.scanner.bootstrap.PluginFiles.get": 3,
                "okhttp3.mockwebserver.MockWebServer.getRequestCount": 2,
                "org.assertj.core.api.AbstractIntegerAssert.isEqualTo": 1,
                "org.assertj.core.api.AbstractIntegerAssert.isOne": 1,
                "okhttp3.mockwebserver.MockResponse.setHeader": 2,
                "okio.Buffer.write": 2,
                "java.util.Optional.get": 3,
                "org.apache.commons.io.FileUtils.readFileToByteArray": 2,
                "okhttp3.mockwebserver.MockWebServer.enqueue": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller.InstalledPlugin": 2,
                "okio.Buffer": 2,
                "okhttp3.mockwebserver.MockResponse": 2,
                "org.sonar.scanner.bootstrap.PluginFilesTest.FileAndMd5": 1
            },
            "packageAccesses": {
                "java.util": 3,
                "java.io": 1,
                "okio": 6,
                "org.sonar.scanner.bootstrap.PluginFilesTest": 1,
                "org.sonar.scanner.bootstrap": 15,
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller": 4,
                "okhttp3.mockwebserver": 12,
                "org.apache.commons.io": 2,
                "org.assertj.core.api": 22
            },
            "numConditionals": 2,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 55,
            "numRecursiveMethodCalls": 9,
            "linesOfCode": 44,
            "linesOfCodeJunitTest": 13,
            "logicalLinesOfCode": 46,
            "logicalLinesOfCodeJunitTest": 13
        },
        "stabilityMetricValue": 1.0905237608023155
    },
    "org.sonar.scanner.scan.DefaultInputModuleHierarchyTest.testRelativePathToRoot": {
        "filePath": "org\\sonar\\scanner\\scan\\DefaultInputModuleHierarchyTest.java",
        "methodName": "testRelativePathToRoot",
        "stats": {
            "methodCalls": {
                "java.util.Map.put": 3,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 2,
                "org.assertj.core.api.AbstractCharSequenceAssert.isEmpty": 1,
                "org.sonar.scanner.scan.DefaultInputModuleHierarchy.relativePathToRoot": 4,
                "org.assertj.core.api.Assertions.assertThat": 4,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.setKey": 4,
                "org.junit.rules.TemporaryFolder.newFolder": 5,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.create": 4,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.setWorkDir": 4,
                "org.apache.commons.io.FileUtils.forceMkdir": 2,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.setBaseDir": 4
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.DefaultInputModuleHierarchy": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputModule": 4,
                "java.util.HashMap": 1,
                "java.io.File": 2
            },
            "packageAccesses": {
                "java.util": 5,
                "org.junit.rules": 5,
                "java.io": 5,
                "org.sonar.scanner.scan": 5,
                "org.sonar.api.batch.fs.internal": 8,
                "org.apache.commons.io": 2,
                "org.assertj.core.api": 8,
                "org.sonar.api.batch.bootstrap": 16
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 38,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 18,
            "linesOfCodeJunitTest": 18,
            "logicalLinesOfCode": 18,
            "logicalLinesOfCodeJunitTest": 18
        },
        "stabilityMetricValue": 3.0825679367159293
    },
    "org.sonar.scanner.bootstrap.RuntimeJavaVersionTest.given_runtime17_should_notLogOrAddWarning": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\RuntimeJavaVersionTest.java",
        "methodName": "given_runtime17_should_notLogOrAddWarning",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.RuntimeJavaVersion.checkJavaVersion": 1,
                "org.mockito.Mockito.mockStatic": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.MockedStatic.when": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "java.lang.Runtime.Version.parse": 1,
                "org.mockito.Mockito.verifyNoInteractions": 1,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 1,
                "java.lang": 1,
                "org.mockito": 4,
                "java.lang.Runtime": 1,
                "org.sonar.scanner.bootstrap": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 4.273134399818755
    },
    "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.inheritAnnotations": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ModuleSensorExtensionDictionaryTest.java",
        "methodName": "inheritAnnotations",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.AbstractExtensionDictionary.select": 2,
                "java.util.List.get": 4,
                "org.sonar.core.platform.Container.getComponentsByType": 2,
                "java.util.Arrays.asList": 2,
                "org.assertj.core.api.Assertions.assertThat": 6,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 2,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 4,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.newSelector": 2,
                "org.mockito.Mockito.mock": 4
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.SubClass": 1,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.MethodDependentOf": 1,
                "org.sonar.scanner.sensor.ModuleSensorExtensionDictionary": 2,
                "java.util.ArrayList": 2
            },
            "packageAccesses": {
                "java.util": 9,
                "java.lang": 2,
                "org.mockito": 6,
                "org.sonar.scanner.bootstrap": 6,
                "org.sonar.core.platform": 4,
                "org.sonar.scanner.sensor": 3,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 12
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 32,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 18,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 18,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 10.92762590260495
    },
    "org.sonar.scanner.rule.QProfileVerifierTest.should_not_fail_if_default_profile_used_at_least_once": {
        "filePath": "org\\sonar\\scanner\\rule\\QProfileVerifierTest.java",
        "methodName": "should_not_fail_if_default_profile_used_at_least_once",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.sonar.scanner.rule.QProfileVerifier.execute": 1,
                "org.sonar.scanner.scan.filesystem.InputComponentStore.put": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLanguage": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.rule.QProfileVerifier": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scan.filesystem": 1,
                "org.sonar.api.batch.fs.internal": 3,
                "org.sonar.scanner.rule": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 5.7917018268836475
    },
    "org.sonar.scanner.ci.vendors.SemaphoreCiTest.loadConfiguration": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\SemaphoreCiTest.java",
        "methodName": "loadConfiguration",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 3,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.sonar.scanner.ci.vendors.SemaphoreCiTest.setEnvVariable": 3,
                "org.mockito.Mockito.when": 3
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 3,
                "org.sonar.api.utils": 3,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 16,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 9.804083979874267
    },
    "org.sonar.scanner.ci.vendors.CircleCiTest.isDetected": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\CircleCiTest.java",
        "methodName": "isDetected",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scanner.ci.vendors.CircleCiTest.setEnvVariable": 7,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.sonar.api.utils.System2.envVariable": 7,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 7,
                "org.sonar.scanner.ci.CiVendor.isDetected": 3,
                "org.mockito.Mockito.when": 7
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 7,
                "org.sonar.api.utils": 7,
                "org.sonar.scanner.ci": 3,
                "org.mockito.stubbing": 7,
                "org.assertj.core.api": 6,
                "org.sonar.scanner.ci.vendors": 7
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 37,
            "numRecursiveMethodCalls": 7,
            "linesOfCode": 17,
            "linesOfCodeJunitTest": 10,
            "logicalLinesOfCode": 17,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 6.812556619820059
    },
    "org.sonar.scm.git.NativeGitBlameCommandTest.blame_mail_with_spaces_doesnt_fail": {
        "filePath": "org\\sonar\\scm\\git\\NativeGitBlameCommandTest.java",
        "methodName": "blame_mail_with_spaces_doesnt_fail",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitUtils.createFile": 1,
                "org.eclipse.jgit.api.Git.commit": 1,
                "java.nio.file.Path.getParent": 1,
                "java.lang.String.getBytes": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.eclipse.jgit.api.AddCommand.call": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.sonar.scm.git.NativeGitBlameCommand.blame": 1,
                "java.nio.file.Path.resolve": 2,
                "org.eclipse.jgit.api.CommitCommand.call": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "java.nio.file.Files.write": 1,
                "org.eclipse.jgit.api.CommitCommand.setCommitter": 1,
                "java.io.File.toPath": 1,
                "java.nio.file.Path.toFile": 1,
                "org.eclipse.jgit.api.Git.add": 1,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 1,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 1,
                "org.sonar.api.batch.scm.BlameLine.author": 1,
                "org.eclipse.jgit.storage.file.FileRepositoryBuilder.create": 1,
                "org.sonar.scm.git.NativeGitBlameCommand.checkIfEnabled": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "java.nio.file.Files.createDirectories": 1,
                "org.sonar.scm.git.NativeGitBlameCommandTest.commit": 1,
                "java.util.List.get": 1,
                "org.eclipse.jgit.lib.Repository.create": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scm.git.GitUtils.createRepository": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.NativeGitBlameCommand": 1,
                "org.eclipse.jgit.api.Git": 1
            },
            "packageAccesses": {
                "org.eclipse.jgit.storage.file": 1,
                "org.eclipse.jgit.api": 9,
                "java.lang": 2,
                "java.util": 2,
                "org.junit.rules": 1,
                "java.io": 1,
                "org.sonar.scm.git": 7,
                "org.eclipse.jgit.lib": 2,
                "org.assertj.core.api": 6,
                "java.nio.file": 8,
                "org.sonar.api.batch.scm": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 31,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 18,
            "linesOfCodeJunitTest": 10,
            "logicalLinesOfCode": 18,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 5.9463749809505595
    },
    "org.sonar.scanner.bootstrap.PostJobExtensionDictionaryTest.dependsUponPhaseForPostJob": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\PostJobExtensionDictionaryTest.java",
        "methodName": "dependsUponPhaseForPostJob",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.PostJobExtensionDictionary.selectPostJobs": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsExactly": 1,
                "org.sonar.core.platform.Container.getComponentsByType": 1,
                "org.assertj.core.api.AbstractIterableAssert.extracting": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.mockito.Mockito.mock": 2,
                "java.util.List.of": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.PostJobExtensionDictionaryTest.NormalPostJob": 1,
                "org.sonar.scanner.bootstrap.PostJobExtensionDictionaryTest.PrePostJob": 1,
                "org.sonar.scanner.bootstrap.PostJobExtensionDictionary": 1
            },
            "packageAccesses": {
                "java.util": 1,
                "org.mockito": 3,
                "org.sonar.scanner.bootstrap.PostJobExtensionDictionaryTest": 2,
                "org.sonar.scanner.bootstrap": 5,
                "org.sonar.core.platform": 2,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 10,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 6.427130899522693
    },
    "org.sonar.scanner.bootstrap.PluginFilesTest.fail_if_cached_file_is_outside_cache_dir": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\PluginFilesTest.java",
        "methodName": "fail_if_cached_file_is_outside_cache_dir",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.PluginFilesTest.enqueueDownload": 2,
                "okhttp3.mockwebserver.MockResponse.setBody": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "okhttp3.mockwebserver.MockResponse.setHeader": 1,
                "okio.Buffer.write": 1,
                "org.sonar.scanner.bootstrap.PluginFilesTest.newInstalledPlugin": 1,
                "org.apache.commons.io.FileUtils.readFileToByteArray": 1,
                "okhttp3.mockwebserver.MockWebServer.enqueue": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonar.scanner.bootstrap.PluginFiles.get": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller.InstalledPlugin": 1,
                "okio.Buffer": 1,
                "okhttp3.mockwebserver.MockResponse": 1,
                "org.sonar.scanner.bootstrap.PluginFilesTest.FileAndMd5": 1
            },
            "packageAccesses": {
                "okio": 3,
                "org.sonar.scanner.bootstrap.PluginFilesTest": 1,
                "org.sonar.scanner.bootstrap": 6,
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller": 2,
                "okhttp3.mockwebserver": 5,
                "org.apache.commons.io": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 1,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 15,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 17,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 10.142604165406727
    },
    "org.sonar.scanner.sensor.SensorIdTest.constructor_fails_if_sensorName_is_null": {
        "filePath": "org\\sonar\\scanner\\sensor\\SensorIdTest.java",
        "methodName": "constructor_fails_if_sensorName_is_null",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.sensor.SensorId": 1
            },
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.sensor": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 2,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 10.712226608518414
    },
    "org.sonar.scanner.scan.DirectoryLockTest.unlockWithoutLock": {
        "filePath": "org\\sonar\\scanner\\scan\\DirectoryLockTest.java",
        "methodName": "unlockWithoutLock",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.DirectoryLock.unlock": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 1,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 7.913982658042172
    },
    "org.sonar.scanner.bootstrap.ScannerPluginInstallerTest.installLocals_always_returns_empty": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ScannerPluginInstallerTest.java",
        "methodName": "installLocals_always_returns_empty",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller.installLocals": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.bootstrap": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 7.2018034823834824
    },
    "org.sonar.scanner.issue.ignore.scanner.IssueExclusionsLoaderTest.createComputer": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\scanner\\IssueExclusionsLoaderTest.java",
        "methodName": "createComputer",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.create": 2,
                "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer.getAllFilePatterns": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 2,
                "org.sonar.scanner.issue.ignore.scanner.IssueExclusionsLoader.createCharHandlerFor": 2,
                "org.assertj.core.api.AbstractAssert.isNotNull": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.mockito.Mockito.when": 1,
                "java.util.Collections.singletonList": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.scanner.IssueExclusionsLoader": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.scanner": 3,
                "org.sonar.scanner.issue.ignore.pattern": 1,
                "java.util": 1,
                "org.mockito": 2,
                "org.sonar.api.batch.fs.internal": 4,
                "org.assertj.core.api": 4,
                "org.mockito.stubbing": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 15,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 8.912220259531805
    },
    "org.sonar.scanner.ci.vendors.AzureDevopsTest.loadConfiguration_on_branch": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\AzureDevopsTest.java",
        "methodName": "loadConfiguration_on_branch",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.vendors.AzureDevopsTest.setEnvVariable": 1,
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 1,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.mockito.Mockito.when": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 1,
                "org.sonar.api.utils": 1,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 7.716505454708394
    },
    "org.sonar.scanner.repository.ReferenceBranchSupplierTest.get_returns_null_if_pull_request": {
        "filePath": "org\\sonar\\scanner\\repository\\ReferenceBranchSupplierTest.java",
        "methodName": "get_returns_null_if_pull_request",
        "stats": {
            "methodCalls": {
                "org.mockito.Mockito.verifyNoMoreInteractions": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.repository.ReferenceBranchSupplier.get": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.isPullRequest": 2,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.mockito.Mockito.when": 1,
                "org.mockito.Mockito.verify": 1,
                "org.mockito.Mockito.verifyNoInteractions": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.repository": 1,
                "org.sonar.scanner.scan.branch": 2,
                "org.mockito": 4,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 10,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 6.6760586504167145
    },
    "org.sonar.scanner.bootstrap.ScannerPluginInstallerTest.fail_if_json_of_installed_plugins_is_not_valid": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ScannerPluginInstallerTest.java",
        "methodName": "fail_if_json_of_installed_plugins_is_not_valid",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller.installRequiredPlugins": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.mockito.ArgumentMatchers.argThat": 1,
                "org.sonarqube.ws.client.WsResponse.contentReader": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.sonar.scanner.WsTestUtil.mockReader": 1,
                "org.mockito.Mockito.when": 3,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "java.io.StringReader": 1,
                "org.sonar.scanner.WsTestUtil.RequestMatcher": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 4,
                "org.mockito": 6,
                "java.io": 1,
                "org.sonar.scanner": 2,
                "org.sonar.scanner.bootstrap": 2,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 17,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 10,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 12,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 7.574485969295952
    },
    "org.sonar.scanner.ci.vendors.BitbucketPipelinesTest.getName": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\BitbucketPipelinesTest.java",
        "methodName": "getName",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.ci.CiVendor.getName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 8.668068235534093
    },
    "org.sonar.scanner.scan.filesystem.ByteCharsetDetectorTest.failAnsii": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\ByteCharsetDetectorTest.java",
        "methodName": "failAnsii",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 3,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isUTF8": 1,
                "org.sonar.scanner.scan.filesystem.ByteCharsetDetector.detect": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isValidUTF16": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.mockito.Mockito.when": 3,
                "org.mockito.ArgumentMatchers.anyBoolean": 3,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isUTF16": 1,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.Result.newValid": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.CharsetValidation.Result": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scan.filesystem": 6,
                "org.mockito": 9,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 19,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 7.14072712660419
    },
    "org.sonar.scanner.scan.DeprecatedPropertiesWarningGeneratorTest.execute_whenUsingLoginAndDotNetScanner_shouldAddWarning": {
        "filePath": "org\\sonar\\scanner\\scan\\DeprecatedPropertiesWarningGeneratorTest.java",
        "methodName": "execute_whenUsingLoginAndDotNetScanner_shouldAddWarning",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.setProperty": 1,
                "org.sonar.batch.bootstrapper.EnvironmentInformation.getKey": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.times": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.scan.DeprecatedPropertiesWarningGenerator.execute": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.mockito.Mockito.verify": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.batch.bootstrapper": 1,
                "org.sonar.api.testfixtures.log": 1,
                "org.sonar.api.config.internal": 1,
                "org.mockito": 3,
                "org.sonar.scanner.scan": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 8.602805008369424
    },
    "org.sonar.scanner.ci.vendors.BitriseTest.loadConfiguration": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\BitriseTest.java",
        "methodName": "loadConfiguration",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.vendors.BitriseTest.setEnvVariable": 3,
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 3,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.mockito.Mockito.when": 3
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 3,
                "org.sonar.api.utils": 3,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 16,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 7.115629845710631
    },
    "org.sonar.scanner.externalissue.sarif.ResultMapperTest.mapResult_mapsSimpleFieldsCorrectly": {
        "filePath": "org\\sonar\\scanner\\externalissue\\sarif\\ResultMapperTest.java",
        "methodName": "mapResult_mapsSimpleFieldsCorrectly",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.issue.NewExternalIssue.severity": 1,
                "org.sonar.api.batch.sensor.issue.NewExternalIssue.engineId": 1,
                "org.sonar.api.batch.sensor.issue.NewExternalIssue.ruleId": 1,
                "org.sonar.scanner.externalissue.sarif.ResultMapper.mapResult": 1,
                "org.sonar.api.batch.sensor.issue.NewExternalIssue.type": 1,
                "org.mockito.Mockito.verify": 4
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.externalissue.sarif": 1,
                "org.mockito": 4,
                "org.sonar.api.batch.sensor.issue": 5
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 6.5911392913519915
    },
    "org.sonar.scanner.externalissue.sarif.ResultMapperTest.mapResult_whenLocationExistsButLocationMapperReturnsNull_createsProjectLocation": {
        "filePath": "org\\sonar\\scanner\\externalissue\\sarif\\ResultMapperTest.java",
        "methodName": "mapResult_whenLocationExistsButLocationMapperReturnsNull_createsProjectLocation",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 5,
                "org.sonar.api.batch.sensor.issue.NewExternalIssue.at": 1,
                "org.mockito.Mockito.never": 2,
                "org.sonar.core.sarif.Result.getLocations": 1,
                "org.sonar.scanner.externalissue.sarif.LocationMapper.fillIssueInProjectLocation": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "java.util.Set.of": 1,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.scanner.externalissue.sarif.ResultMapper.mapResult": 1,
                "org.mockito.Mockito.verify": 4
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 1,
                "org.mockito": 13,
                "org.sonar.core.sarif": 2,
                "org.sonar.scanner.externalissue.sarif": 2,
                "org.mockito.stubbing": 1,
                "org.sonar.api.batch.sensor.issue": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 24,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 8,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 7.425459485360952
    },
    "org.sonar.scanner.bootstrap.ExtensionInstallerTest.should_filter_extensions_to_install": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ExtensionInstallerTest.java",
        "methodName": "should_filter_extensions_to_install",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.ExtensionInstallerTest.newPluginInstance": 1,
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.sonar.scanner.bootstrap.ScannerPluginRepository.getPluginInstance": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.bootstrap.ScannerPluginRepository.getPluginInfos": 1,
                "org.sonar.scanner.bootstrap.ExtensionInstaller.install": 1,
                "java.util.Arrays.asList": 2,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "org.sonar.api.Plugin.Context.addExtensions": 1,
                "org.sonar.core.platform.ListContainer.getAddedObjects": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.core.platform.ListContainer": 1,
                "org.sonar.scanner.bootstrap.ExtensionInstallerTest.FooMatcher": 1,
                "org.sonar.core.platform.PluginInfo": 1,
                "org.sonar.scanner.bootstrap.ExtensionInstaller": 1
            },
            "packageAccesses": {
                "java.util": 2,
                "org.mockito": 3,
                "org.sonar.api.config.internal": 1,
                "org.sonar.api": 1,
                "org.sonar.core.platform": 4,
                "org.sonar.scanner.bootstrap": 7,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 17,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 10.209221617103065
    },
    "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.coverage_coveredBranches_should_not_be_greater_than_branchesToCover": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericCoverageReportParserTest.java",
        "methodName": "coverage_coveredBranches_should_not_be_greater_than_branchesToCover",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.internal.SensorContextTester.module": 1,
                "org.sonar.api.batch.fs.internal.DefaultFileSystem.add": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.initMetadata": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser.parse": 1,
                "org.sonar.api.batch.fs.InputComponent.key": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.setupFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setType": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.fileSystem": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.parseCoverageReport": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.addFileToFs": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLanguage": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.io": 1,
                "org.sonar.scanner.genericcoverage": 5,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.sonar.api.batch.fs.internal": 6,
                "org.sonar.api.batch.fs": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 6.296774614289218
    },
    "org.sonar.scanner.sensor.UnchangedFilesHandlerTest.not_active_if_its_pr": {
        "filePath": "org\\sonar\\scanner\\sensor\\UnchangedFilesHandlerTest.java",
        "methodName": "not_active_if_its_pr",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.sonar.scanner.scan.branch.BranchConfiguration.isPullRequest": 1,
                "org.mockito.Mockito.when": 3,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.sonar.scanner.sensor.UnchangedFilesHandlerTest.branchConfiguration": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchName": 1,
                "org.mockito.Mockito.verifyNoInteractions": 1,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.setLevel": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.referenceBranchName": 1,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.scanner.sensor.UnchangedFilesHandler.markAsUnchanged": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.sensor.UnchangedFilesHandler": 1
            },
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 2,
                "org.sonar.scanner.scan.branch": 5,
                "org.mockito": 5,
                "org.sonar.scanner.sensor": 4,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 17,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 11,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 11,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 8.55371149337658
    },
    "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.coverage_missing_path_attribute": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericCoverageReportParserTest.java",
        "methodName": "coverage_missing_path_attribute",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.parseCoverageReport": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser.parse": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.genericcoverage": 3,
                "org.junit.rules": 1,
                "java.io": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 7.913373668538956
    },
    "org.sonar.scanner.repository.ReferenceBranchSupplierTest.get_uses_scanner_property_with_higher_priority": {
        "filePath": "org\\sonar\\scanner\\repository\\ReferenceBranchSupplierTest.java",
        "methodName": "get_uses_scanner_property_with_higher_priority",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "java.util.Optional.of": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.repository.ReferenceBranchSupplier.get": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.sonar.api.config.Configuration.get": 1,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.Builder.build": 1,
                "org.mockito.Mockito.when": 4,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.Builder.setValue": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchName": 1,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.Builder.setType": 1,
                "org.sonar.scanner.repository.ReferenceBranchSupplierTest.createResponse": 1,
                "org.sonar.scanner.repository.NewCodePeriodLoader.load": 1,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.newBuilder": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchType": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan.branch": 2,
                "java.util": 1,
                "org.mockito": 4,
                "org.sonar.scanner.repository": 3,
                "org.sonarqube.ws": 4,
                "org.sonar.api.config": 1,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 21,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 9.268596026306392
    },
    "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.coverage_missing_covered_in_lineToCover": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericCoverageReportParserTest.java",
        "methodName": "coverage_missing_covered_in_lineToCover",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.internal.SensorContextTester.module": 1,
                "org.sonar.api.batch.fs.internal.DefaultFileSystem.add": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.initMetadata": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser.parse": 1,
                "org.sonar.api.batch.fs.InputComponent.key": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.setupFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setType": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.fileSystem": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.parseCoverageReport": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.addFileToFs": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLanguage": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.io": 1,
                "org.sonar.scanner.genericcoverage": 5,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.sonar.api.batch.fs.internal": 6,
                "org.sonar.api.batch.fs": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 8.54659438616836
    },
    "org.sonar.scanner.ci.vendors.DroneCiTest.getName": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\DroneCiTest.java",
        "methodName": "getName",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.ci.CiVendor.getName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 9.393457970308997
    },
    "org.sonar.scanner.ci.vendors.TravisCiTest.loadConfiguration_of_branch": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\TravisCiTest.java",
        "methodName": "loadConfiguration_of_branch",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.sonar.scanner.ci.vendors.TravisCiTest.setEnvVariable": 5,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 5,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 5,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.mockito.Mockito.when": 5
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 5,
                "org.sonar.api.utils": 5,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 5,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 5
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 24,
            "numRecursiveMethodCalls": 5,
            "linesOfCode": 11,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 11,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 7.147549053171924
    },
    "org.sonar.scanner.repository.DefaultQualityProfileLoaderTest.load_tries_default_if_no_profiles_found_for_project": {
        "filePath": "org\\sonar\\scanner\\repository\\DefaultQualityProfileLoaderTest.java",
        "methodName": "load_tries_default_if_no_profiles_found_for_project",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.argThat": 4,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.newBuilder": 1,
                "org.sonar.scanner.WsTestUtil.mockException": 1,
                "org.sonarqube.ws.client.WsResponse.contentStream": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 4,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.setName": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.setKey": 1,
                "org.mockito.stubbing.OngoingStubbing.thenThrow": 1,
                "org.sonar.scanner.repository.DefaultQualityProfileLoader.load": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.setLanguage": 1,
                "com.google.protobuf.AbstractMessageLite.writeTo": 1,
                "org.sonar.scanner.repository.DefaultQualityProfileLoaderTest.createStreamOfProfiles": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.Builder.build": 1,
                "java.io.ByteArrayOutputStream.toByteArray": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.Builder.addProfiles": 1,
                "org.mockito.Mockito.when": 3,
                "org.sonar.scanner.repository.DefaultQualityProfileLoaderTest.verifyCalledPath": 2,
                "org.mockito.Mockito.verify": 2,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.newBuilder": 1,
                "org.sonar.scanner.WsTestUtil.verifyCall": 2,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.build": 1,
                "org.sonar.scanner.WsTestUtil.mockStream": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonarqube.ws.client.HttpException": 1,
                "org.sonar.scanner.WsTestUtil.RequestMatcher": 4,
                "java.io.ByteArrayOutputStream": 1,
                "java.io.ByteArrayInputStream": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 4,
                "java.lang": 1,
                "org.mockito": 10,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse": 2,
                "java.io": 4,
                "org.sonar.scanner": 8,
                "com.google.protobuf": 1,
                "org.sonar.scanner.repository": 4,
                "org.sonar.scanner.bootstrap": 4,
                "org.sonarqube.ws": 8,
                "org.mockito.stubbing": 3
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 36,
            "numRecursiveMethodCalls": 7,
            "linesOfCode": 21,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 22,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 6.2945064758825735
    },
    "org.sonar.scanner.sensor.ModuleSensorContextTest.pull_request_can_skip_unchanged_files": {
        "filePath": "org\\sonar\\scanner\\sensor\\ModuleSensorContextTest.java",
        "methodName": "pull_request_can_skip_unchanged_files",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.isPullRequest": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.sensor.ProjectSensorContext.canSkipUnchangedFiles": 1,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.sensor.ModuleSensorContext": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scan.branch": 1,
                "org.mockito": 3,
                "org.sonar.api.config.internal": 1,
                "org.sonar.scanner.sensor": 2,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 8.609037851965155
    },
    "org.sonar.scm.git.GitIgnoreCommandTest.include_submodules": {
        "filePath": "org\\sonar\\scm\\git\\GitIgnoreCommandTest.java",
        "methodName": "include_submodules",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitIgnoreCommandTest.createFolderStructure": 1999,
                "org.eclipse.jgit.api.Git.commit": 1,
                "org.eclipse.jgit.api.AddCommand.call": 1,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 2,
                "java.nio.file.Path.resolve": 5997,
                "org.eclipse.jgit.api.Git.submoduleAdd": 1,
                "org.sonar.scm.git.GitIgnoreCommand.isIgnored": 4,
                "org.eclipse.jgit.api.CommitCommand.call": 1,
                "java.util.Arrays.asList": 2,
                "org.junit.rules.TemporaryFolder.newFolder": 2,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "java.nio.file.Files.write": 2,
                "org.eclipse.jgit.api.Git.submoduleUpdate": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.setLevel": 1,
                "java.net.URI.toString": 1,
                "org.sonar.scm.git.GitIgnoreCommand.init": 1,
                "java.io.File.toPath": 2,
                "java.nio.file.Path.toFile": 2,
                "org.eclipse.jgit.api.Git.add": 1,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 1,
                "org.eclipse.jgit.api.SubmoduleAddCommand.setURI": 1,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 1,
                "org.eclipse.jgit.api.SubmoduleUpdateCommand.call": 1,
                "java.nio.file.Files.createFile": 3994,
                "org.eclipse.jgit.api.SubmoduleAddCommand.setPath": 1,
                "org.eclipse.jgit.api.SubmoduleAddCommand.call": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "java.nio.file.Path.toUri": 1,
                "org.eclipse.jgit.api.Git.init": 2,
                "org.sonar.scm.git.GitIgnoreCommandTest.createSubmoduleWithFiles": 1,
                "java.nio.file.Files.exists": 5991,
                "java.nio.file.Files.createDirectory": 1997,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 2,
                "org.eclipse.jgit.api.InitCommand.call": 2,
                "org.eclipse.jgit.api.InitCommand.setDirectory": 2
            },
            "objectInstantiations": {
                "org.sonar.scm.git.GitIgnoreCommand": 1
            },
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 2,
                "org.eclipse.jgit.api": 21,
                "org.junit.rules": 2,
                "java.util": 2,
                "java.net": 1,
                "java.io": 2,
                "org.sonar.scm.git": 2007,
                "org.eclipse.jgit.lib": 1,
                "org.assertj.core.api": 10,
                "java.nio.file": 23977
            },
            "numConditionals": 7988,
            "numLoops": 1997,
            "numNestedLoops": 0,
            "numMethodCalls": 20026,
            "numRecursiveMethodCalls": 2000,
            "linesOfCode": 25982,
            "linesOfCodeJunitTest": 13,
            "logicalLinesOfCode": 35971,
            "logicalLinesOfCodeJunitTest": 14
        },
        "stabilityMetricValue": 10.800320239473786
    },
    "org.sonar.scanner.externalissue.ExternalIssueReportParserTest.parse_whenDoesntExist_shouldFail": {
        "filePath": "org\\sonar\\scanner\\externalissue\\ExternalIssueReportParserTest.java",
        "methodName": "parse_whenDoesntExist_shouldFail",
        "stats": {
            "methodCalls": {
                "java.nio.file.Paths.get": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReportParser.parse": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.externalissue": 1,
                "org.assertj.core.api": 2,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 5,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 5.740752699753791
    },
    "org.sonar.scanner.sensor.ModuleSensorContextTest.should_delegate_to_unchanged_files_handler": {
        "filePath": "org\\sonar\\scanner\\sensor\\ModuleSensorContextTest.java",
        "methodName": "should_delegate_to_unchanged_files_handler",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.sensor.ProjectSensorContext.markAsUnchanged": 1,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.scanner.sensor.UnchangedFilesHandler.markAsUnchanged": 1,
                "org.mockito.Mockito.verify": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 2,
                "org.sonar.api.batch.fs.internal": 1,
                "org.sonar.scanner.sensor": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 9.44757958254527
    },
    "org.sonar.scanner.ci.vendors.AppVeyorTest.getName": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\AppVeyorTest.java",
        "methodName": "getName",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.ci.CiVendor.getName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 6.958533542118229
    },
    "org.sonar.scanner.scan.filesystem.AbstractExclusionFiltersTest.should_handleAliasForTestExclusionsProperty": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\AbstractExclusionFiltersTest.java",
        "methodName": "should_handleAliasForTestExclusionsProperty",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.sonar.api.batch.fs.IndexedFile.path": 2,
                "org.sonar.api.config.internal.MapSettings.setProperty": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.mockito.Mockito.verify": 1,
                "org.sonar.api.batch.fs.IndexedFile.relativePath": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "java.nio.file.Paths.get": 2,
                "org.sonar.scanner.scan.filesystem.AbstractExclusionFilters.isExcluded": 2,
                "java.lang.String.contains": 1,
                "org.sonar.api.notifications.AnalysisWarnings.addUnique": 1
            },
            "objectInstantiations": {
                "org.sonar.api.batch.fs.internal.DefaultIndexedFile": 2,
                "org.sonar.scanner.scan.filesystem.AbstractExclusionFilters": 1
            },
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 1,
                "java.lang": 2,
                "org.sonar.api.config.internal": 2,
                "org.mockito": 1,
                "org.sonar.api.notifications": 1,
                "org.sonar.scanner.scan.filesystem": 4,
                "org.sonar.api.batch.fs.internal": 2,
                "org.sonar.api.batch.fs": 5,
                "org.assertj.core.api": 6,
                "java.nio.file": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 20,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 9,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 9,
            "logicalLinesOfCodeJunitTest": 9
        },
        "stabilityMetricValue": 8.897794817231375
    },
    "org.sonar.scanner.scan.branch.BranchConfigurationProviderTest.should_return_default_if_no_loader": {
        "filePath": "org\\sonar\\scanner\\scan\\branch\\BranchConfigurationProviderTest.java",
        "methodName": "should_return_default_if_no_loader",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.targetBranchName": 1,
                "org.sonar.scanner.scan.branch.BranchConfigurationProvider.provide": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchType": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 4,
                "org.sonar.scanner.scan.branch": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 8.844359008106501
    },
    "org.sonar.scanner.issue.ignore.scanner.IssueExclusionsLoaderTest.populateRuleExclusionPatterns": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\scanner\\IssueExclusionsLoaderTest.java",
        "methodName": "populateRuleExclusionPatterns",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.issue.ignore.pattern.AbstractPatternInitializer.getMulticriteriaPatterns": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.issue.ignore.IgnoreIssuesFilter.addRuleExclusionPatternForComponent": 2,
                "org.mockito.Mockito.verify": 2,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.create": 3,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 3,
                "org.sonar.scanner.issue.ignore.scanner.IssueExclusionsLoader.addMulticriteriaPatterns": 3,
                "org.mockito.Mockito.verifyNoMoreInteractions": 1,
                "java.util.Arrays.asList": 1,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.scanner.issue.ignore.pattern.IssuePattern.getRulePattern": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.pattern.IssuePattern": 2,
                "org.sonar.scanner.issue.ignore.scanner.IssueExclusionsLoader": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 7,
                "org.sonar.scanner.issue.ignore.scanner": 5,
                "java.util": 1,
                "org.mockito": 5,
                "org.sonar.scanner.issue.ignore": 2,
                "org.sonar.api.batch.fs.internal": 9,
                "org.mockito.stubbing": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 21,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 13,
            "linesOfCodeJunitTest": 13,
            "logicalLinesOfCode": 13,
            "logicalLinesOfCodeJunitTest": 13
        },
        "stabilityMetricValue": 11.115714921113547
    },
    "org.sonar.scanner.ci.vendors.AzureDevopsTest.getName": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\AzureDevopsTest.java",
        "methodName": "getName",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.ci.CiVendor.getName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 8.290584588000131
    },
    "org.sonar.scanner.cache.AnalysisCacheProviderTest.provide_noop_writer_cache_if_pr": {
        "filePath": "org\\sonar\\scanner\\cache\\AnalysisCacheProviderTest.java",
        "methodName": "provide_noop_writer_cache_if_pr",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.cache.AnalysisCacheProvider.provideWriter": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.sonar.scanner.scan.branch.BranchConfiguration.isPullRequest": 1,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.cache.AnalysisCacheEnabled.isEnabled": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.cache": 3,
                "org.sonar.scanner.scan.branch": 1,
                "org.mockito": 2,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 8.636966210075068
    },
    "org.sonar.scanner.scan.filesystem.MetadataGeneratorTest.non_existing_file_should_throw_exception": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\MetadataGeneratorTest.java",
        "methodName": "non_existing_file_should_throw_exception",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.Assertions.assertThat": 2,
                "java.nio.file.Path.resolve": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "java.nio.file.Path.toAbsolutePath": 1,
                "org.sonar.scanner.scan.filesystem.MetadataGenerator.setMetadata": 1,
                "java.nio.file.Paths.get": 2,
                "org.sonar.scanner.scan.filesystem.MetadataGeneratorTest.createInputFileWithMetadata": 1,
                "org.junit.Assert.fail": 1,
                "java.lang.Throwable.getMessage": 1,
                "org.assertj.core.api.AbstractCharSequenceAssert.endsWith": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "java.lang.Throwable.getCause": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setModuleBaseDir": 1
            },
            "objectInstantiations": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "java.lang": 2,
                "org.sonar.scanner.scan.filesystem": 2,
                "org.sonar.api.batch.fs.internal": 4,
                "org.junit": 1,
                "org.assertj.core.api": 4,
                "java.nio.file": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 15,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 9,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 10,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 8.309901264200706
    },
    "org.sonar.scanner.notifications.DefaultAnalysisWarningsTest.addUnique_adds_same_message_once": {
        "filePath": "org\\sonar\\scanner\\notifications\\DefaultAnalysisWarningsTest.java",
        "methodName": "addUnique_adds_same_message_once",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.notifications.DefaultAnalysisWarnings.addUnique": 2,
                "org.sonar.scanner.notifications.DefaultAnalysisWarnings.warnings": 1,
                "org.assertj.core.api.AbstractIterableAssert.extracting": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.util.Collections.singletonList": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.lang": 1,
                "java.util": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.notifications": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 10.306629365943072
    },
    "org.sonar.scanner.report.ReportPublisherTest.test_ws_parameters": {
        "filePath": "org\\sonar\\scanner\\report\\ReportPublisherTest.java",
        "methodName": "test_ws_parameters",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.api.impl.utils.JUnitTempFolder.newFile": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.sonarqube.ws.client.WsResponse.contentStream": 1,
                "org.sonarqube.ws.Ce.SubmitResponse.newBuilder": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 2,
                "org.mockito.ArgumentCaptor.getValue": 1,
                "org.sonar.scanner.report.ReportPublisher.upload": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsOnly": 1,
                "com.google.protobuf.AbstractMessageLite.writeTo": 1,
                "org.sonarqube.ws.client.WsResponse.failIfNotSuccessful": 1,
                "org.sonarqube.ws.client.Parameters.getValue": 1,
                "org.sonarqube.ws.client.Parameters.getValues": 1,
                "org.mockito.ArgumentCaptor.capture": 1,
                "org.sonarqube.ws.Ce.SubmitResponse.Builder.build": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.mockito.Mockito.when": 3,
                "org.sonarqube.ws.client.WsRequest.getParameters": 3,
                "org.sonarqube.ws.client.Parameters.getKeys": 1,
                "org.mockito.Mockito.verify": 1,
                "java.io.PipedOutputStream.close": 1,
                "org.mockito.ArgumentCaptor.forClass": 1,
                "org.mockito.Mockito.mock": 1,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 1
            },
            "objectInstantiations": {
                "java.io.PipedInputStream": 1,
                "java.io.PipedOutputStream": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 10,
                "org.sonar.api.impl.utils": 1,
                "org.mockito": 10,
                "java.io": 5,
                "com.google.protobuf": 1,
                "org.sonar.scanner.report": 1,
                "org.sonarqube.ws": 2,
                "org.sonar.scanner.bootstrap": 2,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 34,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 15,
            "linesOfCodeJunitTest": 15,
            "logicalLinesOfCode": 15,
            "logicalLinesOfCodeJunitTest": 15
        },
        "stabilityMetricValue": 11.233219685172397
    },
    "org.sonar.scanner.ci.vendors.GithubActionsTest.isDetected": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\GithubActionsTest.java",
        "methodName": "isDetected",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.sonar.api.utils.System2.envVariable": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.sonar.scanner.ci.CiVendor.isDetected": 2,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.ci.vendors.GithubActionsTest.setEnvVariable": 2
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 2,
                "org.sonar.api.utils": 2,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 4,
                "org.sonar.scanner.ci.vendors": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 8.306348050868104
    },
    "org.sonar.scm.git.strategy.DefaultBlameStrategyTest.useRepositoryBlame_whenFileBlamePropsEnabled_shouldDisableRepoBlame": {
        "filePath": "org\\sonar\\scm\\git\\strategy\\DefaultBlameStrategyTest.java",
        "methodName": "useRepositoryBlame_whenFileBlamePropsEnabled_shouldDisableRepoBlame",
        "stats": {
            "methodCalls": {
                "java.util.Optional.of": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonar.api.config.Configuration.get": 1,
                "org.sonar.scm.git.strategy.BlameStrategy.getBlameAlgorithm": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.mockito.Mockito.when": 1,
                "java.lang.Enum.name": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 1,
                "java.lang": 1,
                "org.mockito": 1,
                "org.sonar.scm.git.strategy": 1,
                "org.sonar.api.config": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 7.954288619923319
    },
    "org.sonar.scanner.externalissue.sarif.ResultMapperTest.mapResult_mapsCorrectlyCleanCodeAttribute": {
        "filePath": "org\\sonar\\scanner\\externalissue\\sarif\\ResultMapperTest.java",
        "methodName": "mapResult_mapsCorrectlyCleanCodeAttribute",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.issue.NewExternalIssue.cleanCodeAttribute": 1,
                "org.sonar.scanner.externalissue.sarif.ResultMapper.mapResult": 1,
                "org.mockito.Mockito.verify": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.externalissue.sarif": 1,
                "org.mockito": 1,
                "org.sonar.api.batch.sensor.issue": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 8.094089125673607
    },
    "org.sonar.scanner.scm.DefaultBlameOutputTest.addWarningIfFilesMissing": {
        "filePath": "org\\sonar\\scanner\\scm\\DefaultBlameOutputTest.java",
        "methodName": "addWarningIfFilesMissing",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.sonar.scanner.scm.DefaultBlameOutput.finish": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLines": 1,
                "org.assertj.core.api.AbstractIterableAssert.extracting": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.notifications.DefaultAnalysisWarnings.warnings": 1,
                "java.util.Collections.singletonList": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scm.DefaultBlameOutput": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "java.util": 1,
                "org.sonar.scanner.scm": 2,
                "org.sonar.api.batch.fs.internal": 3,
                "org.sonar.api.batch.fs": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.notifications": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 7.350136487379047
    },
    "org.sonar.scanner.externalissue.sarif.ResultMapperTest.mapResult_whenLocationsIsEmpty_createsProjectLocation": {
        "filePath": "org\\sonar\\scanner\\externalissue\\sarif\\ResultMapperTest.java",
        "methodName": "mapResult_whenLocationsIsEmpty_createsProjectLocation",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 2,
                "org.sonar.api.batch.sensor.issue.NewExternalIssue.at": 1,
                "org.mockito.Mockito.never": 2,
                "org.mockito.Mockito.verifyNoMoreInteractions": 1,
                "org.sonar.scanner.externalissue.sarif.LocationMapper.fillIssueInProjectLocation": 1,
                "org.sonar.scanner.externalissue.sarif.ResultMapper.mapResult": 1,
                "org.mockito.Mockito.verify": 4
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.externalissue.sarif": 2,
                "org.mockito": 9,
                "org.sonar.api.batch.sensor.issue": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 5.814440817190982
    },
    "org.sonar.scanner.cache.DefaultAnalysisCacheLoaderTest.throw_error_if_cant_decompress_content": {
        "filePath": "org\\sonar\\scanner\\cache\\DefaultAnalysisCacheLoaderTest.java",
        "methodName": "throw_error_if_cant_decompress_content",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.cache.DefaultAnalysisCacheLoaderTest.setInvalidCompressedResponse": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "java.util.Optional.of": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonarqube.ws.client.WsResponse.contentStream": 1,
                "org.mockito.Mockito.when": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1
            },
            "objectInstantiations": {
                "java.io.ByteArrayInputStream": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 1,
                "java.util": 1,
                "org.mockito": 1,
                "java.io": 1,
                "org.sonar.scanner.cache": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 7.272613716612907
    },
    "org.sonar.scanner.ci.vendors.TravisCiTest.loadConfiguration_of_pull_request": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\TravisCiTest.java",
        "methodName": "loadConfiguration_of_pull_request",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.sonar.scanner.ci.vendors.TravisCiTest.setEnvVariable": 5,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 5,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 5,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.mockito.Mockito.when": 5
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 5,
                "org.sonar.api.utils": 5,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 5,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 5
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 24,
            "numRecursiveMethodCalls": 5,
            "linesOfCode": 11,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 11,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 5.816065760892456
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedFiles_finds_branch_in_specific_origin": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedFiles_finds_branch_in_specific_origin",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitUtils.createFile": 1,
                "org.eclipse.jgit.api.Git.commit": 1,
                "java.nio.file.Path.getParent": 1,
                "java.lang.String.getBytes": 1,
                "org.eclipse.jgit.api.AddCommand.call": 1,
                "org.eclipse.jgit.api.CheckoutCommand.setName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.lang.StringBuilder.append": 4,
                "java.lang.StringBuilder.toString": 2,
                "org.eclipse.jgit.api.CheckoutCommand.call": 1,
                "org.eclipse.jgit.api.CloneCommand.setDirectory": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedLine": 1,
                "java.util.Random.nextInt": 1,
                "java.nio.file.Path.resolve": 2,
                "org.mockito.Mockito.verifyNoInteractions": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.setName": 1,
                "org.eclipse.jgit.api.CommitCommand.call": 1,
                "java.lang.String.join": 1,
                "org.eclipse.jgit.api.CloneCommand.setRemote": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsOnly": 1,
                "java.nio.file.Files.write": 1,
                "org.eclipse.jgit.api.CloneCommand.call": 1,
                "org.sonar.scm.git.GitScmProviderTest.createAndCommitFile": 2,
                "org.eclipse.jgit.api.Git.cloneRepository": 1,
                "java.io.File.toPath": 1,
                "java.nio.file.Path.toFile": 1,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "org.eclipse.jgit.api.Git.add": 1,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 1,
                "org.eclipse.jgit.api.Git.branchCreate": 1,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.call": 1,
                "java.nio.file.Files.createDirectories": 1,
                "org.eclipse.jgit.api.CloneCommand.setURI": 1,
                "java.nio.file.Path.toString": 1,
                "org.eclipse.jgit.api.CommitCommand.setAuthor": 1,
                "org.sonar.scm.git.GitScmProvider.branchChangedFiles": 1,
                "java.lang.String.length": 1,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "org.sonar.scm.git.GitScmProviderTest.commit": 1,
                "org.eclipse.jgit.api.Git.checkout": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedContent": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.lang.StringBuilder": 2,
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "org.eclipse.jgit.api": 18,
                "java.lang": 15,
                "java.util": 1,
                "org.junit.rules": 1,
                "org.mockito": 2,
                "java.io": 1,
                "org.sonar.scm.git": 10,
                "org.assertj.core.api": 2,
                "java.nio.file": 9
            },
            "numConditionals": 0,
            "numLoops": 4,
            "numNestedLoops": 1,
            "numMethodCalls": 50,
            "numRecursiveMethodCalls": 8,
            "linesOfCode": 30,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 34,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 10.960584776478068
    },
    "org.sonar.scanner.repository.ReferenceBranchSupplierTest.get_uses_default_branch_if_no_branch_specified": {
        "filePath": "org\\sonar\\scanner\\repository\\ReferenceBranchSupplierTest.java",
        "methodName": "get_uses_default_branch_if_no_branch_specified",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.repository.ReferenceBranchSupplier.get": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.Builder.build": 1,
                "org.mockito.Mockito.when": 4,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.Builder.setValue": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchName": 1,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.Builder.setType": 1,
                "org.sonar.scanner.repository.ReferenceBranchSupplierTest.createResponse": 1,
                "org.sonar.scanner.repository.NewCodePeriodLoader.load": 1,
                "org.sonar.scanner.scan.branch.ProjectBranches.defaultBranchName": 1,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.newBuilder": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchType": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan.branch": 3,
                "org.mockito": 4,
                "org.sonar.scanner.repository": 3,
                "org.sonarqube.ws": 4,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 20,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 6.924212598799909
    },
    "org.sonar.scanner.ci.vendors.BitbucketPipelinesTest.configuration_of_branch": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\BitbucketPipelinesTest.java",
        "methodName": "configuration_of_branch",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 3,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.mockito.Mockito.when": 3,
                "org.sonar.scanner.ci.vendors.BitbucketPipelinesTest.setEnvVariable": 3
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 3,
                "org.sonar.api.utils": 3,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 16,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 6.98869001494276
    },
    "org.sonar.scanner.scan.filesystem.AbstractExclusionFiltersTest.should_keepLegacyValue_when_legacyAndAliasPropertiesAreUsedForTestInclusions": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\AbstractExclusionFiltersTest.java",
        "methodName": "should_keepLegacyValue_when_legacyAndAliasPropertiesAreUsedForTestInclusions",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.sonar.api.batch.fs.IndexedFile.path": 2,
                "org.sonar.api.config.internal.MapSettings.setProperty": 2,
                "org.sonar.scanner.scan.filesystem.AbstractExclusionFilters.isIncluded": 2,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.mockito.Mockito.verify": 1,
                "org.sonar.api.batch.fs.IndexedFile.relativePath": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "java.nio.file.Paths.get": 2,
                "java.lang.String.contains": 1,
                "org.sonar.api.notifications.AnalysisWarnings.addUnique": 1
            },
            "objectInstantiations": {
                "org.sonar.api.batch.fs.internal.DefaultIndexedFile": 2,
                "org.sonar.scanner.scan.filesystem.AbstractExclusionFilters": 1
            },
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 1,
                "java.lang": 2,
                "org.sonar.api.config.internal": 3,
                "org.mockito": 1,
                "org.sonar.api.notifications": 1,
                "org.sonar.scanner.scan.filesystem": 4,
                "org.sonar.api.batch.fs.internal": 2,
                "org.sonar.api.batch.fs": 5,
                "org.assertj.core.api": 6,
                "java.nio.file": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 21,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 9,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 10,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 7.2791899629555274
    },
    "org.sonar.scanner.bootstrap.ExtensionUtilsTest.shouldBeProjectInstantiationStrategy": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ExtensionUtilsTest.java",
        "methodName": "shouldBeProjectInstantiationStrategy",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.ExtensionUtils.isInstantiationStrategy": 6,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 6,
                "org.assertj.core.api.Assertions.assertThat": 6
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ExtensionUtilsTest.ProjectService": 1,
                "org.sonar.scanner.bootstrap.ExtensionUtilsTest.DefaultScannerService": 1,
                "org.sonar.scanner.bootstrap.ExtensionUtilsTest.DefaultService": 1
            },
            "packageAccesses": {
                "org.assertj.core.api": 12,
                "org.sonar.scanner.bootstrap": 9
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 18,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 8.080681494105162
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedFiles_should_not_crash_if_branches_have_no_common_ancestors": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedFiles_should_not_crash_if_branches_have_no_common_ancestors",
        "stats": {
            "methodCalls": {
                "org.eclipse.jgit.api.Git.commit": 1,
                "org.eclipse.jgit.api.AddCommand.call": 1,
                "org.eclipse.jgit.api.CheckoutCommand.setName": 1,
                "java.nio.file.Files.move": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.lang.StringBuilder.append": 2,
                "java.lang.StringBuilder.toString": 1,
                "org.eclipse.jgit.api.CheckoutCommand.call": 1,
                "java.nio.file.Files.readAllLines": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedLine": 1,
                "java.util.Random.nextInt": 1,
                "java.nio.file.Path.resolve": 2,
                "org.eclipse.jgit.api.Git.rm": 1,
                "org.eclipse.jgit.api.CheckoutCommand.setOrphan": 1,
                "org.eclipse.jgit.api.RmCommand.addFilepattern": 1,
                "org.eclipse.jgit.api.CommitCommand.call": 1,
                "java.lang.String.join": 1,
                "java.nio.file.Files.write": 1,
                "java.util.List.add": 1,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "org.eclipse.jgit.api.Git.add": 1,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 1,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 1,
                "java.nio.file.Path.resolveSibling": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.eclipse.jgit.api.CommitCommand.setAuthor": 1,
                "org.sonar.scm.git.GitScmProvider.branchChangedFiles": 1,
                "java.lang.String.length": 1,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "org.eclipse.jgit.api.RmCommand.call": 1,
                "org.sonar.scm.git.GitScmProviderTest.commit": 2,
                "org.eclipse.jgit.api.Git.checkout": 1,
                "org.sonar.scm.git.GitScmProviderTest.addLineToFile": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.lang.StringBuilder": 1,
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "java.lang": 11,
                "java.util": 4,
                "org.eclipse.jgit.api": 14,
                "org.mockito": 1,
                "org.sonar.scm.git": 8,
                "org.assertj.core.api": 2,
                "java.nio.file": 9
            },
            "numConditionals": 0,
            "numLoops": 3,
            "numNestedLoops": 1,
            "numMethodCalls": 37,
            "numRecursiveMethodCalls": 6,
            "linesOfCode": 28,
            "linesOfCodeJunitTest": 11,
            "logicalLinesOfCode": 31,
            "logicalLinesOfCodeJunitTest": 11
        },
        "stabilityMetricValue": 8.09634941060043
    },
    "org.sonar.scanner.issue.DefaultIssueFilterChainTest.should_accept_and_not_go_further_if_filter_accepts": {
        "filePath": "org\\sonar\\scanner\\issue\\DefaultIssueFilterChainTest.java",
        "methodName": "should_accept_and_not_go_further_if_filter_accepts",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.issue.DefaultIssueFilterChain.accept": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.util.List.of": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.DefaultIssueFilterChainTest.PassingFilter": 1,
                "org.sonar.scanner.issue.DefaultIssueFilterChainTest.AcceptingFilter": 1,
                "org.sonar.scanner.issue.DefaultIssueFilterChainTest.FailingFilter": 1,
                "org.sonar.scanner.issue.DefaultIssueFilterChain": 1
            },
            "packageAccesses": {
                "java.util": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.issue": 5
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 10.171454976452123
    },
    "org.sonar.scanner.ci.vendors.CirrusCiTest.getName": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\CirrusCiTest.java",
        "methodName": "getName",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.ci.CiVendor.getName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 11.004092291823952
    },
    "org.sonar.scanner.ci.vendors.SemaphoreCiTest.isDetected": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\SemaphoreCiTest.java",
        "methodName": "isDetected",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 4,
                "org.sonar.api.utils.System2.envVariable": 8,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 3,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 8,
                "org.sonar.scanner.ci.CiVendor.isDetected": 4,
                "org.sonar.scanner.ci.vendors.SemaphoreCiTest.setEnvVariable": 8,
                "org.mockito.Mockito.when": 8
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 8,
                "org.sonar.api.utils": 8,
                "org.sonar.scanner.ci": 4,
                "org.mockito.stubbing": 8,
                "org.assertj.core.api": 8,
                "org.sonar.scanner.ci.vendors": 8
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 44,
            "numRecursiveMethodCalls": 8,
            "linesOfCode": 20,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 20,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 6.37997757076226
    },
    "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.selectSensors": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ModuleSensorExtensionDictionaryTest.java",
        "methodName": "selectSensors",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractIterableAssert.containsExactly": 2,
                "org.sonar.core.platform.Container.getComponentsByType": 1,
                "java.util.Arrays.asList": 1,
                "org.assertj.core.api.AbstractIterableAssert.extracting": 2,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.newSelector": 1,
                "org.sonar.scanner.sensor.ModuleSensorExtensionDictionary.selectSensors": 2,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.sensor.ModuleSensorExtensionDictionary": 1,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.FakeGlobalSensor": 1,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.FakeSensor": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest": 2,
                "java.util": 2,
                "org.mockito": 3,
                "org.sonar.scanner.bootstrap": 3,
                "org.sonar.core.platform": 2,
                "org.sonar.scanner.sensor": 4,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 8
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 17,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 11,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 11,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 6.560207329513214
    },
    "org.sonar.scanner.repository.DefaultQualityProfileLoaderTest.load_gets_all_profiles_for_specified_project": {
        "filePath": "org\\sonar\\scanner\\repository\\DefaultQualityProfileLoaderTest.java",
        "methodName": "load_gets_all_profiles_for_specified_project",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 1,
                "org.mockito.ArgumentMatchers.argThat": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.newBuilder": 1,
                "org.sonarqube.ws.client.WsResponse.contentStream": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 2,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.setName": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.setKey": 1,
                "org.sonar.scanner.repository.DefaultQualityProfileLoader.load": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.setLanguage": 1,
                "com.google.protobuf.AbstractMessageLite.writeTo": 1,
                "org.sonar.scanner.repository.DefaultQualityProfileLoaderTest.createStreamOfProfiles": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.Builder.build": 1,
                "java.io.ByteArrayOutputStream.toByteArray": 1,
                "org.sonar.scanner.repository.DefaultQualityProfileLoaderTest.prepareCallWithResults": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.Builder.addProfiles": 1,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.repository.DefaultQualityProfileLoaderTest.verifyCalledPath": 1,
                "org.mockito.Mockito.verify": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.newBuilder": 1,
                "org.sonar.scanner.WsTestUtil.verifyCall": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.build": 1,
                "org.sonar.scanner.WsTestUtil.mockStream": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.WsTestUtil.RequestMatcher": 1,
                "java.io.ByteArrayOutputStream": 1,
                "java.io.ByteArrayInputStream": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 2,
                "java.lang": 1,
                "org.mockito": 6,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse": 2,
                "java.io": 4,
                "org.sonar.scanner": 3,
                "com.google.protobuf": 1,
                "org.sonar.scanner.repository": 4,
                "org.sonar.scanner.bootstrap": 2,
                "org.sonarqube.ws": 8,
                "org.mockito.stubbing": 2
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 27,
            "numRecursiveMethodCalls": 5,
            "linesOfCode": 16,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 17,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 8.724408668517254
    },
    "org.sonar.scanner.issue.ignore.IgnoreIssuesFilterTest.shouldRejectIfRulePatternMatches": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\IgnoreIssuesFilterTest.java",
        "methodName": "shouldRejectIfRulePatternMatches",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.issue.ignore.IgnoreIssuesFilter.accept": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.api.utils.WildcardPattern.match": 1,
                "org.sonar.api.rule.RuleKey.toString": 1,
                "com.google.common.collect.ImmutableSet.of": 1,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.scanner.issue.ignore.IgnoreIssuesFilter.addRuleExclusionPatternForComponent": 1,
                "org.mockito.Mockito.verifyNoInteractions": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.IgnoreIssuesFilter": 1,
                "org.sonar.api.batch.rule.internal.DefaultActiveRules": 1
            },
            "packageAccesses": {
                "org.mockito": 3,
                "org.sonar.api.utils": 2,
                "org.sonar.api.batch.rule.internal": 2,
                "org.sonar.scanner.issue.ignore": 4,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2,
                "com.google.common.collect": 1,
                "org.sonar.api.rule": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 9.84992798296105
    },
    "org.sonar.scanner.cache.DefaultAnalysisCacheLoaderTest.returns_empty_if_404": {
        "filePath": "org\\sonar\\scanner\\cache\\DefaultAnalysisCacheLoaderTest.java",
        "methodName": "returns_empty_if_404",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 1,
                "org.assertj.core.api.AbstractIterableAssert.anyMatch": 1,
                "org.assertj.core.api.AbstractOptionalAssert.isEmpty": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.sonar.scanner.cache.DefaultAnalysisCacheLoader.load": 1,
                "java.lang.String.startsWith": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1
            },
            "objectInstantiations": {
                "org.sonarqube.ws.client.HttpException": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 1,
                "org.sonar.api.testfixtures.log": 1,
                "java.lang": 1,
                "org.mockito": 1,
                "org.sonar.scanner.cache": 1,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 7.948825906860252
    },
    "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.useMethodAnnotationsToSortExtensions": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ModuleSensorExtensionDictionaryTest.java",
        "methodName": "useMethodAnnotationsToSortExtensions",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.AbstractExtensionDictionary.select": 2,
                "java.util.List.get": 4,
                "org.sonar.core.platform.Container.getComponentsByType": 2,
                "java.util.Arrays.asList": 2,
                "org.assertj.core.api.Assertions.assertThat": 6,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 2,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 4,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.newSelector": 2,
                "org.mockito.Mockito.mock": 4
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.MethodDependentOf": 1,
                "org.sonar.scanner.sensor.ModuleSensorExtensionDictionary": 2,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.GeneratesSomething": 1,
                "java.util.ArrayList": 2
            },
            "packageAccesses": {
                "java.util": 9,
                "java.lang": 2,
                "org.mockito": 6,
                "org.sonar.scanner.bootstrap": 6,
                "org.sonar.core.platform": 4,
                "org.sonar.scanner.sensor": 3,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 12
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 32,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 18,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 18,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 7.477731989945122
    },
    "org.sonar.scanner.cache.AnalysisCacheProviderTest.provide_noop_writer_cache_when_disable": {
        "filePath": "org\\sonar\\scanner\\cache\\AnalysisCacheProviderTest.java",
        "methodName": "provide_noop_writer_cache_when_disable",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.cache.AnalysisCacheProvider.provideWriter": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.cache.AnalysisCacheEnabled.isEnabled": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.cache": 3,
                "org.mockito": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 8.131708910437572
    },
    "org.sonar.scanner.cache.ReadCacheImplTest.read_delegates_to_storage": {
        "filePath": "org\\sonar\\scanner\\cache\\ReadCacheImplTest.java",
        "methodName": "read_delegates_to_storage",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.cache.AnalysisCacheStorage.get": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.cache.AnalysisCacheStorage.contains": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.cache.ReadCacheImpl.read": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.cache": 3,
                "org.mockito": 3,
                "java.io": 1,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 10,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 6.128098291402111
    },
    "org.sonar.scanner.DefaultFileLinesContextTest.shouldSave": {
        "filePath": "org\\sonar\\scanner\\DefaultFileLinesContextTest.java",
        "methodName": "shouldSave",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.DefaultFileLinesContext.save": 1,
                "org.sonar.api.batch.sensor.measure.internal.DefaultMeasure.metric": 1,
                "org.mockito.ArgumentCaptor.capture": 1,
                "org.assertj.core.api.Assertions.assertThat": 4,
                "org.sonar.api.batch.measure.Metric.key": 1,
                "org.mockito.Mockito.verify": 1,
                "org.assertj.core.api.AbstractAssert.hasToString": 1,
                "org.mockito.ArgumentCaptor.forClass": 1,
                "org.sonar.api.batch.sensor.measure.internal.DefaultMeasure.inputComponent": 1,
                "org.mockito.ArgumentCaptor.getValue": 1,
                "org.sonar.scanner.DefaultFileLinesContext.setIntValue": 2,
                "org.sonar.api.batch.sensor.internal.SensorStorage.store": 1,
                "org.sonar.api.batch.sensor.measure.internal.DefaultMeasure.value": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 2
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.api.batch.measure": 1,
                "org.sonar.api.batch.sensor.measure.internal": 4,
                "org.mockito": 5,
                "org.sonar.scanner": 3,
                "org.sonar.api.batch.sensor.internal": 1,
                "org.assertj.core.api": 8
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 20,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 10,
            "linesOfCodeJunitTest": 10,
            "logicalLinesOfCode": 10,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 7.119881332152824
    },
    "org.sonar.scanner.report.ReportPublisherTest.should_upload_and_dump_information": {
        "filePath": "org\\sonar\\scanner\\report\\ReportPublisherTest.java",
        "methodName": "should_upload_and_dump_information",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 1,
                "org.sonar.scanner.scan.ScanProperties.metadataFilePath": 2,
                "org.sonar.scanner.report.ReportPublisher.execute": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.sonar.scanner.report.CeTaskReportDataHolder.getDashboardUrl": 1,
                "org.sonarqube.ws.Ce.SubmitResponse.Builder.setTaskId": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.sonarqube.ws.Ce.SubmitResponse.Builder.build": 1,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.report.CeTaskReportDataHolder.getCeTaskUrl": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 2,
                "org.sonarqube.ws.Ce.SubmitResponse.newBuilder": 1,
                "com.google.protobuf.AbstractMessageLite.toByteArray": 1,
                "org.assertj.core.api.AbstractIterableAssert.contains": 2,
                "java.lang.String.contains": 1,
                "org.sonarqube.ws.client.MockWsResponse.setContent": 1,
                "org.sonar.scanner.report.ReportPublisher.start": 1,
                "org.assertj.core.api.AbstractPathAssert.exists": 1
            },
            "objectInstantiations": {
                "org.sonarqube.ws.client.MockWsResponse": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 3,
                "org.sonar.api.testfixtures.log": 2,
                "java.lang": 1,
                "org.mockito": 3,
                "com.google.protobuf": 1,
                "org.sonar.scanner.scan": 2,
                "org.sonar.scanner.report": 4,
                "org.sonarqube.ws": 3,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 28,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 10,
            "linesOfCodeJunitTest": 10,
            "logicalLinesOfCode": 10,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 10.478825106904992
    },
    "org.sonar.scm.git.NativeGitBlameCommandTest.blame_without_email_doesnt_fail": {
        "filePath": "org\\sonar\\scm\\git\\NativeGitBlameCommandTest.java",
        "methodName": "blame_without_email_doesnt_fail",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitUtils.createFile": 1,
                "org.eclipse.jgit.api.Git.commit": 1,
                "java.nio.file.Path.getParent": 1,
                "java.lang.String.getBytes": 1,
                "org.eclipse.jgit.api.AddCommand.call": 1,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "org.sonar.scm.git.NativeGitBlameCommand.blame": 1,
                "java.nio.file.Path.resolve": 2,
                "org.sonar.api.batch.scm.BlameLine.date": 1,
                "org.eclipse.jgit.api.CommitCommand.call": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "java.nio.file.Files.write": 1,
                "org.eclipse.jgit.api.CommitCommand.setCommitter": 1,
                "java.io.File.toPath": 1,
                "java.nio.file.Path.toFile": 1,
                "org.eclipse.jgit.api.Git.add": 1,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 1,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 1,
                "org.sonar.api.batch.scm.BlameLine.author": 1,
                "org.eclipse.jgit.storage.file.FileRepositoryBuilder.create": 1,
                "org.sonar.scm.git.NativeGitBlameCommand.checkIfEnabled": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "java.nio.file.Files.createDirectories": 1,
                "org.sonar.scm.git.NativeGitBlameCommandTest.commitWithNoEmail": 1,
                "org.sonar.api.batch.scm.BlameLine.revision": 1,
                "org.sonar.scm.git.NativeGitBlameCommandTest.commit": 1,
                "java.util.List.get": 1,
                "org.eclipse.jgit.lib.Repository.create": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.AbstractAssert.isNotNull": 2,
                "org.sonar.scm.git.GitUtils.createRepository": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.NativeGitBlameCommand": 1,
                "org.eclipse.jgit.api.Git": 1
            },
            "packageAccesses": {
                "org.eclipse.jgit.storage.file": 1,
                "org.eclipse.jgit.api": 9,
                "java.lang": 2,
                "java.util": 2,
                "org.junit.rules": 1,
                "java.io": 1,
                "org.sonar.scm.git": 8,
                "org.eclipse.jgit.lib": 2,
                "org.assertj.core.api": 10,
                "java.nio.file": 8,
                "org.sonar.api.batch.scm": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 38,
            "numRecursiveMethodCalls": 4,
            "linesOfCode": 22,
            "linesOfCodeJunitTest": 13,
            "logicalLinesOfCode": 22,
            "logicalLinesOfCodeJunitTest": 13
        },
        "stabilityMetricValue": 7.853568987953817
    },
    "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.coverage_invalid_lineToCover_node_name": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericCoverageReportParserTest.java",
        "methodName": "coverage_invalid_lineToCover_node_name",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.internal.SensorContextTester.module": 1,
                "org.sonar.api.batch.fs.internal.DefaultFileSystem.add": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.initMetadata": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser.parse": 1,
                "org.sonar.api.batch.fs.InputComponent.key": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.setupFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setType": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.fileSystem": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.parseCoverageReport": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.addFileToFs": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLanguage": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.io": 1,
                "org.sonar.scanner.genericcoverage": 5,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.sonar.api.batch.fs.internal": 6,
                "org.sonar.api.batch.fs": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 8.915507800016623
    },
    "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.coverage_lineNumber_in_lineToCover_should_be_a_number": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericCoverageReportParserTest.java",
        "methodName": "coverage_lineNumber_in_lineToCover_should_be_a_number",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.internal.SensorContextTester.module": 1,
                "org.sonar.api.batch.fs.internal.DefaultFileSystem.add": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.initMetadata": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser.parse": 1,
                "org.sonar.api.batch.fs.InputComponent.key": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.setupFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setType": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.fileSystem": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.parseCoverageReport": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.addFileToFs": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLanguage": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.io": 1,
                "org.sonar.scanner.genericcoverage": 5,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.sonar.api.batch.fs.internal": 6,
                "org.sonar.api.batch.fs": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 8.244301148097348
    },
    "org.sonar.scanner.notifications.DefaultAnalysisWarningsTest.addUnique_fails_with_IAE_when_message_is_empty": {
        "filePath": "org\\sonar\\scanner\\notifications\\DefaultAnalysisWarningsTest.java",
        "methodName": "addUnique_fails_with_IAE_when_message_is_empty",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.notifications.DefaultAnalysisWarnings.addUnique": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.notifications": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 1,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 10.587142871306996
    },
    "org.sonar.scm.git.GitScmProviderTest.sanityCheck": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "sanityCheck",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitScmProvider.key": 1,
                "org.sonar.scm.git.GitScmProviderTest.newGitScmProvider": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "org.mockito": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scm.git": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 5,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 11.071945230386993
    },
    "org.sonar.scanner.cache.WriteCacheImplTest.write_bytes_adds_entries": {
        "filePath": "org\\sonar\\scanner\\cache\\WriteCacheImplTest.java",
        "methodName": "write_bytes_adds_entries",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.cache.WriteCacheImpl.write": 2,
                "java.util.Map.of": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.cache": 2,
                "java.util": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 7.2916334241933685
    },
    "org.sonar.scanner.ci.vendors.CirrusCiTest.configuration_of_pull_request": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\CirrusCiTest.java",
        "methodName": "configuration_of_pull_request",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.sonar.scanner.ci.vendors.CirrusCiTest.setEnvVariable": 3,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 3,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.mockito.Mockito.when": 3
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 3,
                "org.sonar.api.utils": 3,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 16,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 6.096285377553751
    },
    "org.sonar.scanner.repository.settings.DefaultGlobalSettingsLoaderTest.loadGlobalSettings": {
        "filePath": "org\\sonar\\scanner\\repository\\settings\\DefaultGlobalSettingsLoaderTest.java",
        "methodName": "loadGlobalSettings",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 1,
                "org.sonarqube.ws.Settings.Setting.Builder.build": 2,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.sonarqube.ws.client.WsResponse.contentStream": 1,
                "org.sonar.scanner.repository.settings.DefaultGlobalSettingsLoader.loadGlobalSettings": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "org.mockito.ArgumentCaptor.getValue": 1,
                "org.sonarqube.ws.Settings.ValuesWsResponse.Builder.build": 1,
                "com.google.protobuf.AbstractMessageLite.writeTo": 1,
                "org.sonarqube.ws.client.BaseRequest.getPath": 1,
                "org.sonarqube.ws.Settings.ValuesWsResponse.newBuilder": 1,
                "org.mockito.ArgumentCaptor.capture": 1,
                "org.sonarqube.ws.Settings.ValuesWsResponse.Builder.addSettings": 2,
                "org.sonarqube.ws.Settings.Setting.newBuilder": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.times": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonarqube.ws.Settings.Setting.Builder.setKey": 2,
                "org.mockito.Mockito.verify": 1,
                "java.io.PipedOutputStream.close": 1,
                "org.assertj.core.api.AbstractMapAssert.isNotNull": 1,
                "org.mockito.ArgumentCaptor.forClass": 1,
                "org.sonarqube.ws.Settings.Setting.Builder.setValue": 2,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.io.PipedInputStream": 1,
                "java.io.PipedOutputStream": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 3,
                "java.util": 1,
                "org.mockito": 9,
                "java.io": 5,
                "com.google.protobuf": 1,
                "org.sonarqube.ws": 12,
                "org.sonar.scanner.bootstrap": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 4,
                "org.sonar.scanner.repository.settings": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 37,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 12,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 12,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 10.820198238561076
    },
    "org.sonar.scanner.repository.ReferenceBranchSupplierTest.get_returns_null_if_no_branches": {
        "filePath": "org\\sonar\\scanner\\repository\\ReferenceBranchSupplierTest.java",
        "methodName": "get_returns_null_if_no_branches",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.branch.ProjectBranches.isEmpty": 2,
                "org.mockito.Mockito.verifyNoMoreInteractions": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.repository.ReferenceBranchSupplier.get": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.isPullRequest": 1,
                "org.mockito.Mockito.when": 1,
                "org.mockito.Mockito.verify": 2,
                "org.mockito.Mockito.verifyNoInteractions": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.repository": 1,
                "org.sonar.scanner.scan.branch": 3,
                "org.mockito": 5,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 6.407710616303912
    },
    "org.sonar.scanner.phases.PostJobsExecutorTest.should_execute_post_jobs": {
        "filePath": "org\\sonar\\scanner\\phases\\PostJobsExecutorTest.java",
        "methodName": "should_execute_post_jobs",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.PostJobExtensionDictionary.selectPostJobs": 1,
                "org.mockito.Mockito.verifyNoMoreInteractions": 1,
                "java.util.Arrays.asList": 1,
                "org.sonar.scanner.postjob.PostJobsExecutor.execute": 1,
                "org.sonar.scanner.postjob.PostJobWrapper.shouldExecute": 3,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.postjob.PostJobWrapper.execute": 1,
                "org.mockito.Mockito.verify": 3
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 1,
                "org.sonar.scanner.bootstrap": 1,
                "org.mockito": 6,
                "org.mockito.stubbing": 2,
                "org.sonar.scanner.postjob": 5
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 15,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 9.536837516909248
    },
    "org.sonar.scanner.ci.vendors.CirrusCiTest.log_warning_if_missing_commit_variable": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\CirrusCiTest.java",
        "methodName": "log_warning_if_missing_commit_variable",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.sonar.scanner.ci.vendors.CirrusCiTest.setEnvVariable": 1,
                "org.assertj.core.api.AbstractOptionalAssert.isEmpty": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "org.sonar.api.utils.System2.envVariable": 1,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 1,
                "org.mockito": 1,
                "org.sonar.api.utils": 1,
                "org.sonar.scanner.ci": 3,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 4,
                "org.sonar.scanner.ci.vendors": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 10.09941170296563
    },
    "org.sonar.scanner.platform.DefaultServerTest.shouldLoadServerProperties": {
        "filePath": "org\\sonar\\scanner\\platform\\DefaultServerTest.java",
        "methodName": "shouldLoadServerProperties",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 3,
                "org.sonar.scanner.platform.DefaultServer.getId": 1,
                "org.sonar.api.config.internal.MapSettings.setProperty": 2,
                "org.sonar.api.utils.Version.parse": 1,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.platform.DefaultServer.getContextPath": 1,
                "org.sonar.scanner.platform.DefaultServer.getStartedAt": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.baseUrl": 1,
                "org.assertj.core.api.AbstractAssert.isNotNull": 1,
                "org.sonar.scanner.platform.DefaultServer.getVersion": 1,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.scanner.platform.DefaultServer.getPublicRootUrl": 1
            },
            "objectInstantiations": {
                "org.sonar.core.platform.SonarQubeVersion": 1,
                "org.sonar.api.config.internal.MapSettings": 1,
                "org.sonar.scanner.platform.DefaultServer": 1
            },
            "packageAccesses": {
                "org.sonar.api.config.internal": 5,
                "org.mockito": 2,
                "org.sonar.api.utils": 1,
                "org.sonar.core.platform": 1,
                "org.sonar.scanner.bootstrap": 2,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 10,
                "org.sonar.scanner.platform": 7
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 23,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 11,
            "linesOfCodeJunitTest": 11,
            "logicalLinesOfCode": 11,
            "logicalLinesOfCodeJunitTest": 11
        },
        "stabilityMetricValue": 7.000481037680142
    },
    "org.sonar.scanner.repository.DefaultQualityProfileLoaderTest.load_throws_MessageException_if_no_profiles_are_available_for_specified_project": {
        "filePath": "org\\sonar\\scanner\\repository\\DefaultQualityProfileLoaderTest.java",
        "methodName": "load_throws_MessageException_if_no_profiles_are_available_for_specified_project",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.repository.DefaultQualityProfileLoaderTest.prepareCallWithEmptyResults": 1,
                "org.mockito.ArgumentMatchers.any": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.Builder.build": 1,
                "java.io.ByteArrayOutputStream.toByteArray": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.newBuilder": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.Builder.addProfiles": 1,
                "org.sonarqube.ws.client.WsResponse.contentStream": 1,
                "org.mockito.Mockito.when": 2,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.newBuilder": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.setName": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.setKey": 1,
                "org.sonar.scanner.repository.DefaultQualityProfileLoader.load": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.setLanguage": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.build": 1,
                "com.google.protobuf.AbstractMessageLite.writeTo": 1,
                "org.sonar.scanner.repository.DefaultQualityProfileLoaderTest.createStreamOfProfiles": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonar.scanner.WsTestUtil.mockStream": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.io.ByteArrayOutputStream": 1,
                "java.io.ByteArrayInputStream": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 2,
                "org.mockito": 4,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse": 2,
                "org.sonar.scanner": 1,
                "com.google.protobuf": 1,
                "org.sonar.scanner.repository": 3,
                "org.sonar.scanner.bootstrap": 1,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 2,
                "java.lang": 1,
                "java.io": 4,
                "org.sonarqube.ws": 8
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 25,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 13,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 15,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 10.72939514298162
    },
    "org.sonar.scanner.ci.vendors.CircleCiTest.getName": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\CircleCiTest.java",
        "methodName": "getName",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.ci.CiVendor.getName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 7.653011462311785
    },
    "org.sonar.scanner.scan.filesystem.DirectoryFileVisitorTest.test_visit_file_failed_generic_io_exception": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\DirectoryFileVisitorTest.java",
        "methodName": "test_visit_file_failed_generic_io_exception",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.filesystem.DirectoryFileVisitor.visitFileFailed": 1,
                "java.io.File.toPath": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "org.junit.Assert.assertThrows": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.DirectoryFileVisitor": 1,
                "java.io.IOException": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "org.mockito": 1,
                "java.io": 3,
                "org.sonar.scanner.scan.filesystem.DirectoryFileVisitor": 1,
                "org.sonar.scanner.scan.filesystem": 3,
                "org.junit": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 5,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 9.525972771567845
    },
    "org.sonar.scanner.issue.IssuePublisherTest.should_accept_issues_on_no_sonar_rules": {
        "filePath": "org\\sonar\\scanner\\issue\\IssuePublisherTest.java",
        "methodName": "should_accept_issues_on_no_sonar_rules",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 3,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.noSonarAt": 1,
                "org.mockito.ArgumentMatchers.eq": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssueLocation.on": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.batch.rule.internal.NewActiveRule.Builder.setQProfileKey": 1,
                "java.util.Collections.singletonList": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputComponent.scannerId": 1,
                "org.sonar.api.batch.rule.internal.ActiveRulesBuilder.addRule": 1,
                "org.sonar.api.batch.sensor.issue.internal.AbstractDefaultIssue.at": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.selectLine": 1,
                "org.sonar.api.batch.rule.internal.NewActiveRule.Builder.setRuleKey": 1,
                "org.sonar.scanner.issue.IssuePublisher.initAndAddIssue": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonar.api.batch.rule.internal.NewActiveRule.Builder.setSeverity": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.issue.IssuePublisherTest.initModuleIssues": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssueLocation.message": 1,
                "org.mockito.Mockito.verify": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssue.forRule": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssueLocation.at": 1,
                "org.sonar.scanner.issue.IssueFilters.accept": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.api.batch.rule.internal.NewActiveRule.Builder.build": 1,
                "org.sonar.api.batch.rule.internal.ActiveRulesBuilder.build": 1,
                "org.sonar.scanner.report.ReportPublisher.getWriter": 1
            },
            "objectInstantiations": {
                "java.util.HashSet": 1,
                "org.sonar.scanner.issue.IssuePublisher": 1,
                "org.sonar.api.batch.rule.internal.NewActiveRule.Builder": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssue": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssueLocation": 1
            },
            "packageAccesses": {
                "java.util": 2,
                "org.mockito": 6,
                "org.sonar.api.batch.sensor.issue.internal": 8,
                "org.sonar.scanner.issue": 4,
                "org.sonar.api.batch.rule.internal": 7,
                "org.sonar.scanner.report": 1,
                "org.sonar.api.batch.fs.internal": 3,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 29,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 9,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 9,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 10.59247580484898
    },
    "org.sonar.scanner.scan.filesystem.LanguageDetectionTest.detectLanguageKey_shouldAllowPluginsToDeclareFileExtensionTwiceForCaseSensitivity": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\LanguageDetectionTest.java",
        "methodName": "detectLanguageKey_shouldAllowPluginsToDeclareFileExtensionTwiceForCaseSensitivity",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "java.io.File.toPath": 1,
                "org.sonar.scanner.scan.filesystem.LanguageDetectionTest.detectLanguageKey": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.repository.language.DefaultLanguagesRepository.start": 1,
                "java.nio.file.Paths.get": 1,
                "org.junit.rules.TemporaryFolder.getRoot": 1,
                "org.sonar.scanner.scan.filesystem.LanguageDetection.language": 1,
                "org.sonar.scanner.repository.language.Language.key": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.repository.language.DefaultLanguagesRepository": 1,
                "org.sonar.api.resources.Languages": 1,
                "org.sonar.scanner.scan.filesystem.LanguageDetectionTest.MockLanguage": 1,
                "org.sonar.scanner.scan.filesystem.LanguageDetection": 1,
                "org.sonar.scanner.mediumtest.FakeLanguagesLoader": 1,
                "java.io.File": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "org.sonar.api.config.internal": 1,
                "java.io": 2,
                "org.sonar.api.resources": 1,
                "org.sonar.scanner.scan.filesystem": 5,
                "org.sonar.scanner.mediumtest": 1,
                "org.sonar.scanner.repository.language": 5,
                "org.assertj.core.api": 2,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 10,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 5.79191241788403
    },
    "org.sonar.scanner.bootstrap.GlobalConfigurationProviderTest.should_load_global_settings": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\GlobalConfigurationProviderTest.java",
        "methodName": "should_load_global_settings",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.GlobalServerSettings.properties": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.bootstrap.GlobalConfigurationProvider.provide": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.config.DefaultConfiguration.get": 1,
                "com.google.common.collect.ImmutableMap.of": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.GlobalConfigurationProvider": 1,
                "org.sonar.api.config.PropertyDefinitions": 1
            },
            "packageAccesses": {
                "org.mockito": 1,
                "org.sonar.scanner.config": 1,
                "org.sonar.scanner.bootstrap": 4,
                "org.sonar.api.config": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2,
                "com.google.common.collect": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 6.627351702431325
    },
    "org.sonar.scm.git.NativeGitBlameCommandTest.do_not_execute": {
        "filePath": "org\\sonar\\scm\\git\\NativeGitBlameCommandTest.java",
        "methodName": "do_not_execute",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitUtils.createFile": 1,
                "org.eclipse.jgit.api.Git.commit": 1,
                "java.nio.file.Path.getParent": 1,
                "java.lang.String.getBytes": 1,
                "org.eclipse.jgit.api.AddCommand.call": 1,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "org.sonar.scm.git.NativeGitBlameCommand.blame": 1,
                "java.nio.file.Path.resolve": 2,
                "org.sonar.api.batch.scm.BlameLine.date": 1,
                "org.eclipse.jgit.api.CommitCommand.call": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "java.nio.file.Files.write": 1,
                "org.eclipse.jgit.api.CommitCommand.setCommitter": 1,
                "java.io.File.toPath": 1,
                "java.nio.file.Path.toFile": 1,
                "org.eclipse.jgit.api.Git.add": 1,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 1,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 1,
                "org.sonar.api.batch.scm.BlameLine.author": 1,
                "org.eclipse.jgit.storage.file.FileRepositoryBuilder.create": 1,
                "org.sonar.scm.git.NativeGitBlameCommand.checkIfEnabled": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "java.nio.file.Files.createDirectories": 1,
                "org.sonar.scm.git.NativeGitBlameCommandTest.commitWithNoEmail": 1,
                "org.sonar.api.batch.scm.BlameLine.revision": 1,
                "org.sonar.scm.git.NativeGitBlameCommandTest.commit": 1,
                "java.util.List.get": 1,
                "org.eclipse.jgit.lib.Repository.create": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.AbstractAssert.isNotNull": 2,
                "org.sonar.scm.git.GitUtils.createRepository": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.NativeGitBlameCommand": 1,
                "org.eclipse.jgit.api.Git": 1
            },
            "packageAccesses": {
                "org.eclipse.jgit.storage.file": 1,
                "org.eclipse.jgit.api": 9,
                "java.lang": 2,
                "java.util": 2,
                "org.junit.rules": 1,
                "java.io": 1,
                "org.sonar.scm.git": 8,
                "org.eclipse.jgit.lib": 2,
                "org.assertj.core.api": 10,
                "java.nio.file": 8,
                "org.sonar.api.batch.scm": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 38,
            "numRecursiveMethodCalls": 4,
            "linesOfCode": 22,
            "linesOfCodeJunitTest": 13,
            "logicalLinesOfCode": 22,
            "logicalLinesOfCodeJunitTest": 13
        },
        "stabilityMetricValue": 8.676646538619703
    },
    "org.sonar.scanner.platform.DefaultServerTest.publicRootUrl": {
        "filePath": "org\\sonar\\scanner\\platform\\DefaultServerTest.java",
        "methodName": "publicRootUrl",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.baseUrl": 1,
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 2,
                "org.sonar.api.config.internal.Settings.removeProperty": 1,
                "org.sonar.api.config.internal.MapSettings.setProperty": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.scanner.platform.DefaultServer.getPublicRootUrl": 2
            },
            "objectInstantiations": {
                "org.sonar.api.config.internal.MapSettings": 1,
                "org.sonar.scanner.platform.DefaultServer": 1
            },
            "packageAccesses": {
                "org.sonar.api.config.internal": 5,
                "org.mockito": 2,
                "org.sonar.scanner.bootstrap": 2,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 4,
                "org.sonar.scanner.platform": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 13,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 8,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 6.369647046147846
    },
    "org.sonar.scanner.bootstrap.PluginFilesTest.download_and_add_jar_to_cache_if_missing": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\PluginFilesTest.java",
        "methodName": "download_and_add_jar_to_cache_if_missing",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.PluginFilesTest.enqueueDownload": 2,
                "org.sonar.scanner.bootstrap.PluginFilesTest.verifySameContent": 2,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 2,
                "okhttp3.mockwebserver.MockResponse.setBody": 1,
                "org.assertj.core.api.AbstractFileAssert.isFile": 4,
                "okhttp3.mockwebserver.RecordedRequest.getRequestUrl": 1,
                "org.sonar.scanner.bootstrap.PluginFilesTest.newInstalledPlugin": 1,
                "okhttp3.HttpUrl.encodedQuery": 1,
                "org.assertj.core.api.Assertions.assertThat": 9,
                "okhttp3.HttpUrl.encodedPath": 1,
                "org.assertj.core.api.AbstractFileAssert.hasSameContentAs": 2,
                "okhttp3.mockwebserver.MockWebServer.takeRequest": 1,
                "org.sonar.scanner.bootstrap.PluginFiles.get": 2,
                "okhttp3.mockwebserver.MockWebServer.getRequestCount": 1,
                "org.assertj.core.api.AbstractIntegerAssert.isOne": 1,
                "okhttp3.mockwebserver.MockResponse.setHeader": 1,
                "okio.Buffer.write": 1,
                "java.util.Optional.get": 2,
                "org.apache.commons.io.FileUtils.readFileToByteArray": 1,
                "okhttp3.mockwebserver.MockWebServer.enqueue": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller.InstalledPlugin": 1,
                "okio.Buffer": 1,
                "okhttp3.mockwebserver.MockResponse": 1,
                "org.sonar.scanner.bootstrap.PluginFilesTest.FileAndMd5": 1
            },
            "packageAccesses": {
                "java.util": 2,
                "java.io": 1,
                "okhttp3": 3,
                "okio": 3,
                "org.sonar.scanner.bootstrap.PluginFilesTest": 1,
                "org.sonar.scanner.bootstrap": 9,
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller": 2,
                "okhttp3.mockwebserver": 8,
                "org.apache.commons.io": 1,
                "org.assertj.core.api": 18
            },
            "numConditionals": 1,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 41,
            "numRecursiveMethodCalls": 5,
            "linesOfCode": 28,
            "linesOfCodeJunitTest": 11,
            "logicalLinesOfCode": 29,
            "logicalLinesOfCodeJunitTest": 11
        },
        "stabilityMetricValue": 11.224340566588758
    },
    "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.testGetFilteredExtensions": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ModuleSensorExtensionDictionaryTest.java",
        "methodName": "testGetFilteredExtensions",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.AbstractExtensionDictionary.select": 1,
                "org.sonar.core.platform.Container.getComponentsByType": 1,
                "java.util.Arrays.asList": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsOnly": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.newSelector": 1,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.sensor.ModuleSensorExtensionDictionary": 1,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.FakeSensor": 2
            },
            "packageAccesses": {
                "java.util": 2,
                "org.mockito": 3,
                "org.sonar.scanner.bootstrap": 4,
                "org.sonar.core.platform": 2,
                "org.sonar.scanner.sensor": 2,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2,
                "org.sonar.api.batch.sensor": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 10,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 8,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 8.224371690300496
    },
    "org.sonar.scanner.notifications.DefaultAnalysisWarningsTest.addUnique_preserves_order_and_takes_first_unique_item": {
        "filePath": "org\\sonar\\scanner\\notifications\\DefaultAnalysisWarningsTest.java",
        "methodName": "addUnique_preserves_order_and_takes_first_unique_item",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.notifications.DefaultAnalysisWarnings.addUnique": 4,
                "org.sonar.api.utils.System2.now": 1,
                "org.assertj.core.api.Assertions.tuple": 3,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.notifications.DefaultAnalysisWarnings.warnings": 1,
                "org.assertj.core.api.AbstractAssert.extracting": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.lang": 3,
                "org.mockito": 1,
                "org.sonar.api.utils": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 5,
                "org.sonar.scanner.notifications": 5
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 16,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 12,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 12,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 8.403138780157134
    },
    "org.sonar.scanner.DefaultFileLinesContextTest.optimizeValues": {
        "filePath": "org\\sonar\\scanner\\DefaultFileLinesContextTest.java",
        "methodName": "optimizeValues",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentCaptor.getAllValues": 1,
                "org.sonar.scanner.DefaultFileLinesContext.save": 1,
                "org.mockito.ArgumentCaptor.forClass": 1,
                "org.mockito.ArgumentCaptor.capture": 1,
                "org.assertj.core.api.Assertions.tuple": 2,
                "org.assertj.core.api.AbstractIterableAssert.extracting": 1,
                "org.sonar.scanner.DefaultFileLinesContext.setIntValue": 4,
                "org.sonar.api.batch.sensor.internal.SensorStorage.store": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.Mockito.times": 1,
                "org.mockito.Mockito.verify": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 1,
                "org.sonar.api.batch.sensor.internal": 1,
                "org.mockito": 6,
                "org.assertj.core.api": 4,
                "org.sonar.scanner": 5
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 18,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 9,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 10,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 7.438039905042807
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedFiles_should_not_fail_with_patience_diff_algo": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedFiles_should_not_fail_with_patience_diff_algo",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitScmProvider.branchChangedFiles": 1,
                "java.lang.String.getBytes": 1,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "java.nio.file.Path.toFile": 1,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.nio.file.Files.write": 1,
                "org.eclipse.jgit.storage.file.FileRepositoryBuilder.create": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "java.nio.file.Path.resolve": 3,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.GitScmProvider": 1,
                "org.eclipse.jgit.api.Git": 1
            },
            "packageAccesses": {
                "org.eclipse.jgit.storage.file": 1,
                "org.eclipse.jgit.api": 1,
                "java.lang": 1,
                "org.mockito": 1,
                "org.eclipse.jgit.lib": 1,
                "org.sonar.scm.git": 4,
                "org.assertj.core.api": 2,
                "java.nio.file": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 13,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 8.023698503278666
    },
    "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.methodDependsUponArray": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ModuleSensorExtensionDictionaryTest.java",
        "methodName": "methodDependsUponArray",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.AbstractExtensionDictionary.select": 2,
                "java.util.List.get": 4,
                "org.sonar.core.platform.Container.getComponentsByType": 2,
                "java.util.Arrays.asList": 2,
                "org.assertj.core.api.Assertions.assertThat": 6,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 2,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 4,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.newSelector": 2,
                "org.mockito.Mockito.mock": 4
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.MethodDependentOf": 1,
                "org.sonar.scanner.sensor.ModuleSensorExtensionDictionary": 2,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.GeneratesSomething": 1,
                "java.util.ArrayList": 2
            },
            "packageAccesses": {
                "java.util": 9,
                "java.lang": 2,
                "org.mockito": 6,
                "org.sonar.scanner.bootstrap": 6,
                "org.sonar.core.platform": 4,
                "org.sonar.scanner.sensor": 3,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 12
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 32,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 18,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 18,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 8.241759696942287
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedFiles_when_git_work_tree_is_above_project_basedir": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedFiles_when_git_work_tree_is_above_project_basedir",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitUtils.createFile": 1,
                "org.eclipse.jgit.api.Git.commit": 1,
                "java.nio.file.Path.getParent": 1,
                "java.lang.String.getBytes": 1,
                "org.eclipse.jgit.api.AddCommand.call": 1,
                "org.eclipse.jgit.api.CheckoutCommand.setName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.lang.StringBuilder.append": 4,
                "java.lang.StringBuilder.toString": 2,
                "org.eclipse.jgit.api.CheckoutCommand.call": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedLine": 1,
                "java.util.Random.nextInt": 1,
                "java.nio.file.Path.resolve": 3,
                "org.eclipse.jgit.api.CreateBranchCommand.setName": 1,
                "org.eclipse.jgit.api.CommitCommand.call": 1,
                "java.lang.String.join": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsOnly": 1,
                "java.nio.file.Files.write": 1,
                "org.sonar.scm.git.GitScmProviderTest.createAndCommitFile": 2,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "org.eclipse.jgit.api.Git.add": 1,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 1,
                "org.eclipse.jgit.api.Git.branchCreate": 1,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.call": 1,
                "java.nio.file.Files.createDirectories": 1,
                "org.eclipse.jgit.api.CommitCommand.setAuthor": 1,
                "org.sonar.scm.git.GitScmProvider.branchChangedFiles": 1,
                "java.lang.String.length": 1,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "java.nio.file.Files.createDirectory": 1,
                "org.sonar.scm.git.GitScmProviderTest.commit": 1,
                "org.eclipse.jgit.api.Git.checkout": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedContent": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.lang.StringBuilder": 2,
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "org.eclipse.jgit.api": 13,
                "java.lang": 15,
                "java.util": 1,
                "org.mockito": 1,
                "org.sonar.scm.git": 10,
                "org.assertj.core.api": 2,
                "java.nio.file": 9
            },
            "numConditionals": 0,
            "numLoops": 4,
            "numNestedLoops": 1,
            "numMethodCalls": 42,
            "numRecursiveMethodCalls": 8,
            "linesOfCode": 29,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 33,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 10.478504998164953
    },
    "org.sonar.scanner.sensor.UnchangedFilesHandlerTest.mark_file_if_sensor_is_enabled": {
        "filePath": "org\\sonar\\scanner\\sensor\\UnchangedFilesHandlerTest.java",
        "methodName": "mark_file_if_sensor_is_enabled",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.DefaultInputFile.status": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.setMarkedAsUnchanged": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.sensor.ExecutingSensorContext.setSensorExecuting": 1,
                "org.sonar.scanner.sensor.UnchangedFilesHandler.markAsUnchanged": 1,
                "org.mockito.Mockito.verify": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.sensor.UnchangedFilesHandler": 1,
                "org.sonar.scanner.sensor.SensorId": 1
            },
            "packageAccesses": {
                "org.mockito": 2,
                "org.sonar.scanner.sensor": 5,
                "org.sonar.api.batch.fs.internal": 2,
                "org.mockito.stubbing": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 11.315034083382958
    },
    "org.sonar.scanner.ci.vendors.SemaphoreCiTest.getName": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\SemaphoreCiTest.java",
        "methodName": "getName",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.ci.CiVendor.getName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 10.669230599448081
    },
    "org.sonar.scanner.ci.vendors.TravisCiTest.isDetected": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\TravisCiTest.java",
        "methodName": "isDetected",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.vendors.TravisCiTest.setEnvVariable": 5,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.sonar.api.utils.System2.envVariable": 5,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 5,
                "org.sonar.scanner.ci.CiVendor.isDetected": 2,
                "org.mockito.Mockito.when": 5
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 5,
                "org.sonar.api.utils": 5,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 5,
                "org.assertj.core.api": 4,
                "org.sonar.scanner.ci.vendors": 5
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 26,
            "numRecursiveMethodCalls": 5,
            "linesOfCode": 12,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 12,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 7.908140168480501
    },
    "org.sonar.scm.git.GitScmProviderTest.forkDate_returns_null": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "forkDate_returns_null",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitScmProvider.forkDate": 1,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "org.mockito": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scm.git": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 10.588457989555732
    },
    "org.sonar.scanner.issue.ignore.EnforceIssuesFilterTest.shouldRefuseIssueIfRuleMatchesAndNotFile": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\EnforceIssuesFilterTest.java",
        "methodName": "shouldRefuseIssueIfRuleMatchesAndNotFile",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.issue.DefaultFilterableIssue.ruleKey": 1,
                "org.sonar.scanner.issue.DefaultFilterableIssue.getComponent": 1,
                "org.sonar.scanner.issue.ignore.pattern.AbstractPatternInitializer.getMulticriteriaPatterns": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.newDefaultInputProject": 1,
                "org.sonar.api.rule.RuleKey.of": 1,
                "org.mockito.Mockito.when": 3,
                "org.mockito.Mockito.verifyNoInteractions": 1,
                "org.sonar.scanner.issue.ignore.EnforceIssuesFilter.accept": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.sonar.api.rule.RuleKey.toString": 1,
                "com.google.common.collect.ImmutableSet.of": 1,
                "com.google.common.collect.ImmutableList.of": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.EnforceIssuesFilter": 1,
                "org.sonar.api.batch.rule.internal.DefaultActiveRules": 1,
                "org.sonar.scanner.issue.ignore.pattern.IssuePattern": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 3,
                "org.mockito": 4,
                "org.sonar.scanner.issue": 2,
                "org.sonar.api.batch.rule.internal": 2,
                "org.sonar.api.batch.fs.internal": 1,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2,
                "org.sonar.api.rule": 3,
                "java.lang": 1,
                "org.junit.rules": 1,
                "org.sonar.scanner.issue.ignore": 2,
                "com.google.common.collect": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 19,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 10,
            "linesOfCodeJunitTest": 10,
            "logicalLinesOfCode": 10,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 9.291344618816396
    },
    "org.sonar.scanner.ci.vendors.CodeMagicTest.isDetected_givenNoEnvVariable_dontDetectCodeMagic": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\CodeMagicTest.java",
        "methodName": "isDetected_givenNoEnvVariable_dontDetectCodeMagic",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.scanner.ci.CiVendor.isDetected": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 11.152126524037724
    },
    "org.sonar.scanner.repository.ReferenceBranchSupplierTest.get_returns_null_if_new_code_period_is_not_ref": {
        "filePath": "org\\sonar\\scanner\\repository\\ReferenceBranchSupplierTest.java",
        "methodName": "get_returns_null_if_new_code_period_is_not_ref",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.repository.ReferenceBranchSupplier.get": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.sonar.scanner.scan.branch.BranchConfiguration.isPullRequest": 1,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.Builder.build": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.mockito.Mockito.when": 3,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.Builder.setValue": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchName": 1,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.Builder.setType": 1,
                "org.sonar.scanner.repository.ReferenceBranchSupplierTest.createResponse": 1,
                "org.sonar.scanner.repository.NewCodePeriodLoader.load": 1,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.newBuilder": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan.branch": 2,
                "org.mockito": 3,
                "org.sonar.scanner.repository": 3,
                "org.sonarqube.ws": 4,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 17,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 8.920656489873302
    },
    "org.sonar.scanner.report.ReportPublisherTest.should_not_dump_information_when_medium_test_enabled": {
        "filePath": "org\\sonar\\scanner\\report\\ReportPublisherTest.java",
        "methodName": "should_not_dump_information_when_medium_test_enabled",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.ScanProperties.metadataFilePath": 1,
                "org.sonar.scanner.bootstrap.GlobalAnalysisMode.isMediumTest": 1,
                "org.sonar.scanner.report.ReportPublisher.execute": 1,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractPathAssert.doesNotExist": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.report.ReportPublisher.start": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 1,
                "org.mockito": 1,
                "org.sonar.scanner.scan": 1,
                "org.sonar.scanner.report": 2,
                "org.sonar.scanner.bootstrap": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 8.239987034172191
    },
    "org.sonar.scanner.scan.branch.ProjectBranchesProviderTest.should_return_default_if_no_loader": {
        "filePath": "org\\sonar\\scanner\\scan\\branch\\ProjectBranchesProviderTest.java",
        "methodName": "should_return_default_if_no_loader",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.branch.ProjectBranches.isEmpty": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scanner.scan.branch.ProjectBranchesProvider.provide": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.scan.branch": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 11.281407722711617
    },
    "org.sonar.scanner.ci.vendors.BambooTest.getName": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\BambooTest.java",
        "methodName": "getName",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.ci.CiVendor.getName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 9.135536240936878
    },
    "org.sonar.scanner.scan.filesystem.ProjectExclusionFiltersTest.match_exclusion_by_absolute_path": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\ProjectExclusionFiltersTest.java",
        "methodName": "match_exclusion_by_absolute_path",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.sonar.api.batch.fs.IndexedFile.path": 2,
                "org.sonar.api.config.internal.MapSettings.setProperty": 2,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "java.io.File.getAbsolutePath": 1,
                "java.nio.file.Path.toString": 1,
                "org.sonar.api.batch.fs.IndexedFile.relativePath": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "java.nio.file.Paths.get": 2,
                "org.sonar.scanner.scan.filesystem.AbstractExclusionFilters.isExcluded": 2,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.ProjectExclusionFilters": 1,
                "org.sonar.api.batch.fs.internal.DefaultIndexedFile": 2,
                "java.io.File": 1
            },
            "packageAccesses": {
                "org.sonar.api.config.internal": 3,
                "org.mockito": 1,
                "java.io": 3,
                "org.sonar.scanner.scan.filesystem": 4,
                "org.sonar.api.batch.fs.internal": 2,
                "org.sonar.api.batch.fs": 5,
                "org.assertj.core.api": 4,
                "java.nio.file": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 18,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 6.180906031957613
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedFiles_falls_back_to_origin_when_local_branch_does_not_exist": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedFiles_falls_back_to_origin_when_local_branch_does_not_exist",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitUtils.createFile": 1,
                "org.eclipse.jgit.api.Git.commit": 1,
                "java.nio.file.Path.getParent": 1,
                "java.lang.String.getBytes": 1,
                "org.eclipse.jgit.api.AddCommand.call": 1,
                "org.eclipse.jgit.api.CheckoutCommand.setName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.lang.StringBuilder.append": 4,
                "java.lang.StringBuilder.toString": 2,
                "org.eclipse.jgit.api.CheckoutCommand.call": 1,
                "org.eclipse.jgit.api.CloneCommand.setDirectory": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedLine": 1,
                "java.util.Random.nextInt": 1,
                "java.nio.file.Path.resolve": 2,
                "org.mockito.Mockito.verifyNoInteractions": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.setName": 1,
                "org.eclipse.jgit.api.CommitCommand.call": 1,
                "java.lang.String.join": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsOnly": 1,
                "java.nio.file.Files.write": 1,
                "org.eclipse.jgit.api.CloneCommand.call": 1,
                "org.sonar.scm.git.GitScmProviderTest.createAndCommitFile": 2,
                "org.eclipse.jgit.api.Git.cloneRepository": 1,
                "java.io.File.toPath": 1,
                "java.nio.file.Path.toFile": 1,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "org.eclipse.jgit.api.Git.add": 1,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 1,
                "org.eclipse.jgit.api.Git.branchCreate": 1,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.call": 1,
                "java.nio.file.Files.createDirectories": 1,
                "org.eclipse.jgit.api.CloneCommand.setURI": 1,
                "java.nio.file.Path.toString": 1,
                "org.eclipse.jgit.api.CommitCommand.setAuthor": 1,
                "org.sonar.scm.git.GitScmProvider.branchChangedFiles": 1,
                "java.lang.String.length": 1,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "org.sonar.scm.git.GitScmProviderTest.commit": 1,
                "org.eclipse.jgit.api.Git.checkout": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedContent": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.lang.StringBuilder": 2,
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "org.eclipse.jgit.api": 17,
                "java.lang": 15,
                "java.util": 1,
                "org.junit.rules": 1,
                "org.mockito": 2,
                "java.io": 1,
                "org.sonar.scm.git": 10,
                "org.assertj.core.api": 2,
                "java.nio.file": 9
            },
            "numConditionals": 0,
            "numLoops": 4,
            "numNestedLoops": 1,
            "numMethodCalls": 49,
            "numRecursiveMethodCalls": 8,
            "linesOfCode": 30,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 34,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 10.670388440905832
    },
    "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.coverage_coveredBranches_in_lineToCover_should_not_be_negative": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericCoverageReportParserTest.java",
        "methodName": "coverage_coveredBranches_in_lineToCover_should_not_be_negative",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.internal.SensorContextTester.module": 1,
                "org.sonar.api.batch.fs.internal.DefaultFileSystem.add": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.initMetadata": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser.parse": 1,
                "org.sonar.api.batch.fs.InputComponent.key": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.setupFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setType": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.fileSystem": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.parseCoverageReport": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.addFileToFs": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLanguage": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.io": 1,
                "org.sonar.scanner.genericcoverage": 5,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.sonar.api.batch.fs.internal": 6,
                "org.sonar.api.batch.fs": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 8.644125370310139
    },
    "org.sonar.scanner.cache.AnalysisCacheProviderTest.provide_real_writer_cache_when_enable": {
        "filePath": "org\\sonar\\scanner\\cache\\AnalysisCacheProviderTest.java",
        "methodName": "provide_real_writer_cache_when_enable",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.cache.AnalysisCacheProvider.provideWriter": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.cache.AnalysisCacheEnabled.isEnabled": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.cache": 3,
                "org.mockito": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 8.742740366541268
    },
    "org.sonar.scanner.externalissue.sarif.ResultMapperTest.mapResult_ifRuleIdMissing_fails": {
        "filePath": "org\\sonar\\scanner\\externalissue\\sarif\\ResultMapperTest.java",
        "methodName": "mapResult_ifRuleIdMissing_fails",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.ThrowableTypeAssert.isThrownBy": 1,
                "org.assertj.core.api.Assertions.assertThatNullPointerException": 1,
                "org.sonar.core.sarif.Result.getRuleId": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.ThrowableAssertAlternative.withMessage": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.externalissue.sarif.ResultMapper.mapResult": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.externalissue.sarif": 1,
                "org.mockito": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 3,
                "org.sonar.core.sarif": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 6.559601681071552
    },
    "org.sonar.scanner.repository.ReferenceBranchSupplierTest.getFromProperties_returns_null_if_no_property": {
        "filePath": "org\\sonar\\scanner\\repository\\ReferenceBranchSupplierTest.java",
        "methodName": "getFromProperties_returns_null_if_no_property",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.repository.ReferenceBranchSupplier.getFromProperties": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.repository": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 10.964491085684786
    },
    "org.sonar.scm.git.GitScmProviderTest.revisionId_should_return_different_sha1_after_commit": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "revisionId_should_return_different_sha1_after_commit",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitUtils.createFile": 1,
                "org.eclipse.jgit.api.Git.commit": 1,
                "java.nio.file.Path.getParent": 1,
                "java.lang.String.getBytes": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.eclipse.jgit.api.AddCommand.call": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "java.lang.StringBuilder.append": 4,
                "java.lang.StringBuilder.toString": 2,
                "org.sonar.scm.git.GitScmProviderTest.randomizedLine": 1,
                "java.util.Random.nextInt": 1,
                "java.nio.file.Path.resolve": 2,
                "org.eclipse.jgit.api.CommitCommand.call": 1,
                "java.lang.String.join": 1,
                "java.nio.file.Files.write": 1,
                "org.assertj.core.api.AbstractCharSequenceAssert.hasSize": 2,
                "org.sonar.scm.git.GitScmProviderTest.createAndCommitFile": 2,
                "org.sonar.scm.git.GitScmProvider.revisionId": 3,
                "org.eclipse.jgit.api.Git.add": 1,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 1,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 1,
                "java.nio.file.Files.createDirectories": 1,
                "org.eclipse.jgit.api.CommitCommand.setAuthor": 1,
                "org.sonar.scm.git.GitScmProviderTest.newGitScmProvider": 1,
                "java.lang.String.length": 1,
                "java.nio.file.Files.createDirectory": 1,
                "org.sonar.scm.git.GitScmProviderTest.commit": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedContent": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.lang.StringBuilder": 2,
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "java.lang": 17,
                "org.eclipse.jgit.api": 7,
                "java.util": 1,
                "org.mockito": 1,
                "org.sonar.scm.git": 12,
                "org.assertj.core.api": 6,
                "java.nio.file": 8
            },
            "numConditionals": 0,
            "numLoops": 4,
            "numNestedLoops": 1,
            "numMethodCalls": 41,
            "numRecursiveMethodCalls": 7,
            "linesOfCode": 31,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 35,
            "logicalLinesOfCodeJunitTest": 9
        },
        "stabilityMetricValue": 9.250564860806145
    },
    "org.sonar.scanner.ci.vendors.BitbucketPipelinesTest.isDetected": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\BitbucketPipelinesTest.java",
        "methodName": "isDetected",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.sonar.api.utils.System2.envVariable": 4,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.sonar.scanner.ci.CiVendor.isDetected": 2,
                "org.mockito.Mockito.when": 4,
                "org.sonar.scanner.ci.vendors.BitbucketPipelinesTest.setEnvVariable": 4
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 4,
                "org.sonar.api.utils": 4,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 4,
                "org.sonar.scanner.ci.vendors": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 22,
            "numRecursiveMethodCalls": 4,
            "linesOfCode": 10,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 10,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 8.61746691847693
    },
    "org.sonar.scanner.ci.vendors.BitbucketPipelinesTest.configuration_of_pull_request": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\BitbucketPipelinesTest.java",
        "methodName": "configuration_of_pull_request",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 3,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.mockito.Mockito.when": 3,
                "org.sonar.scanner.ci.vendors.BitbucketPipelinesTest.setEnvVariable": 3
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 3,
                "org.sonar.api.utils": 3,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 16,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 8.0889824175309
    },
    "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.createErrorMessage_whenJsonError_shouldCreateErrorMsg": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\DefaultScannerWsClientTest.java",
        "methodName": "createErrorMessage_whenJsonError_shouldCreateErrorMsg",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.createErrorMessage": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonarqube.ws.client.HttpException": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 1,
                "java.lang": 1,
                "org.sonar.scanner.bootstrap": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 8.455206069838182
    },
    "org.sonar.scanner.repository.ReferenceBranchSupplierTest.get_returns_null_if_reference_branch_is_the_branch_being_analyzed": {
        "filePath": "org\\sonar\\scanner\\repository\\ReferenceBranchSupplierTest.java",
        "methodName": "get_returns_null_if_reference_branch_is_the_branch_being_analyzed",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.repository.ReferenceBranchSupplier.get": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.Builder.build": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.mockito.Mockito.times": 2,
                "org.sonar.scanner.scan.branch.BranchConfiguration.isPullRequest": 1,
                "org.mockito.Mockito.when": 3,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.Builder.setValue": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchName": 2,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.Builder.setType": 1,
                "org.mockito.Mockito.verify": 3,
                "org.sonar.scanner.repository.ReferenceBranchSupplierTest.createResponse": 1,
                "org.mockito.Mockito.verifyNoMoreInteractions": 1,
                "org.sonar.scanner.repository.NewCodePeriodLoader.load": 2,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.newBuilder": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchType": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan.branch": 4,
                "org.mockito": 9,
                "org.sonar.scanner.repository": 4,
                "org.sonarqube.ws": 4,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 26,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 9,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 9,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 6.928984243701331
    },
    "org.sonar.scanner.issue.DefaultIssueFilterChainTest.should_accept_when_no_filter": {
        "filePath": "org\\sonar\\scanner\\issue\\DefaultIssueFilterChainTest.java",
        "methodName": "should_accept_when_no_filter",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.issue.DefaultIssueFilterChain.accept": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.util.List.of": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.DefaultIssueFilterChain": 1
            },
            "packageAccesses": {
                "java.util": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.issue": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 6.812981954293893
    },
    "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.annotatedMethodsCanNotBePrivate": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ModuleSensorExtensionDictionaryTest.java",
        "methodName": "annotatedMethodsCanNotBePrivate",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.AbstractExtensionDictionary.evaluateAnnotatedClasses": 1,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.sensor.ModuleSensorExtensionDictionary": 1,
                "java.lang.Object": 1
            },
            "packageAccesses": {
                "java.lang": 2,
                "org.sonar.scanner.bootstrap": 1,
                "org.mockito": 2,
                "org.sonar.scanner.sensor": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 6.766892371866261
    },
    "org.sonar.scanner.repository.settings.DefaultProjectSettingsLoaderTest.loadProjectSettings": {
        "filePath": "org\\sonar\\scanner\\repository\\settings\\DefaultProjectSettingsLoaderTest.java",
        "methodName": "loadProjectSettings",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 1,
                "org.sonarqube.ws.Settings.Setting.Builder.build": 2,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.sonarqube.ws.client.WsResponse.contentStream": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "org.mockito.ArgumentCaptor.getValue": 1,
                "org.sonarqube.ws.Settings.ValuesWsResponse.Builder.build": 1,
                "com.google.protobuf.AbstractMessageLite.writeTo": 1,
                "org.sonar.scanner.bootstrap.ScannerProperties.getProjectKey": 1,
                "org.sonarqube.ws.client.BaseRequest.getPath": 1,
                "org.sonarqube.ws.Settings.ValuesWsResponse.newBuilder": 1,
                "org.mockito.ArgumentCaptor.capture": 1,
                "org.sonarqube.ws.Settings.ValuesWsResponse.Builder.addSettings": 2,
                "org.sonarqube.ws.Settings.Setting.newBuilder": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.mockito.Mockito.times": 1,
                "org.mockito.Mockito.when": 2,
                "org.sonarqube.ws.Settings.Setting.Builder.setKey": 2,
                "org.mockito.Mockito.verify": 1,
                "org.sonar.scanner.repository.settings.DefaultProjectSettingsLoader.loadProjectSettings": 1,
                "java.io.PipedOutputStream.close": 1,
                "org.assertj.core.api.AbstractMapAssert.isNotNull": 1,
                "org.mockito.ArgumentCaptor.forClass": 1,
                "org.sonarqube.ws.Settings.Setting.Builder.setValue": 2,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.io.PipedInputStream": 1,
                "java.io.PipedOutputStream": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 3,
                "java.util": 1,
                "org.mockito": 10,
                "java.io": 5,
                "com.google.protobuf": 1,
                "org.sonarqube.ws": 12,
                "org.sonar.scanner.bootstrap": 2,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 4,
                "org.sonar.scanner.repository.settings": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 40,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 13,
            "linesOfCodeJunitTest": 13,
            "logicalLinesOfCode": 13,
            "logicalLinesOfCodeJunitTest": 13
        },
        "stabilityMetricValue": 7.783135183319055
    },
    "org.sonar.scanner.platform.DefaultServerTest.invalid_startup_date_throws_exception": {
        "filePath": "org\\sonar\\scanner\\platform\\DefaultServerTest.java",
        "methodName": "invalid_startup_date_throws_exception",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.sonar.api.config.internal.MapSettings.setProperty": 1,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.scanner.platform.DefaultServer.getStartedAt": 1
            },
            "objectInstantiations": {
                "org.sonar.api.config.internal.MapSettings": 1,
                "org.sonar.scanner.platform.DefaultServer": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.bootstrap": 1,
                "org.sonar.api.config.internal": 4,
                "org.mockito": 1,
                "org.sonar.scanner.platform": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 8.294917092145411
    },
    "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.unitTest_invalid_file_node_name": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericCoverageReportParserTest.java",
        "methodName": "unitTest_invalid_file_node_name",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.parseCoverageReport": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser.parse": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.genericcoverage": 3,
                "org.junit.rules": 1,
                "java.io": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 6.443832521225683
    },
    "org.sonar.scm.git.strategy.DefaultBlameStrategyTest.useRepositoryBlame_whenFileBlamePropsInvalid_shouldThrowException": {
        "filePath": "org\\sonar\\scm\\git\\strategy\\DefaultBlameStrategyTest.java",
        "methodName": "useRepositoryBlame_whenFileBlamePropsInvalid_shouldThrowException",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "java.util.Optional.of": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonar.api.config.Configuration.get": 1,
                "org.sonar.scm.git.strategy.BlameStrategy.getBlameAlgorithm": 1,
                "org.mockito.Mockito.when": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 1,
                "org.mockito": 1,
                "org.sonar.scm.git.strategy": 1,
                "org.sonar.api.config": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 7.046519827074961
    },
    "org.sonar.scanner.scan.filesystem.ModuleInputComponentStoreTest.should_cache_files_by_extension": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\ModuleInputComponentStoreTest.java",
        "methodName": "should_cache_files_by_extension",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 3,
                "org.assertj.core.api.AbstractIterableAssert.containsExactlyInAnyOrder": 1,
                "org.sonar.scanner.scan.filesystem.ModuleInputComponentStore.getFilesByExtension": 1,
                "org.sonar.api.batch.fs.InputComponent.key": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonar.scanner.scan.filesystem.ModuleInputComponentStoreTest.newModuleInputComponentStore": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.scan.filesystem.ModuleInputComponentStore.doAdd": 3,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.ModuleInputComponentStore": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 3
            },
            "packageAccesses": {
                "org.mockito": 3,
                "org.sonar.scanner.scan.filesystem": 7,
                "org.sonar.api.batch.fs.internal": 6,
                "org.sonar.api.batch.fs": 5,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 15,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 11,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 11,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 7.275485392302571
    },
    "org.sonar.scanner.bootstrap.PluginFilesTest.fail_if_integrity_of_download_is_not_valid": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\PluginFilesTest.java",
        "methodName": "fail_if_integrity_of_download_is_not_valid",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.PluginFilesTest.enqueueDownload": 1,
                "okhttp3.mockwebserver.MockResponse.setBody": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "okhttp3.mockwebserver.MockResponse.setHeader": 1,
                "okio.Buffer.write": 1,
                "org.sonar.scanner.bootstrap.PluginFilesTest.newInstalledPlugin": 1,
                "org.apache.commons.io.FileUtils.readFileToByteArray": 1,
                "okhttp3.mockwebserver.MockWebServer.enqueue": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonar.scanner.bootstrap.PluginFilesTest.expectISE": 1,
                "org.sonar.scanner.bootstrap.PluginFiles.get": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller.InstalledPlugin": 1,
                "okio.Buffer": 1,
                "okhttp3.mockwebserver.MockResponse": 1,
                "org.sonar.scanner.bootstrap.PluginFilesTest.FileAndMd5": 1
            },
            "packageAccesses": {
                "okio": 3,
                "org.sonar.scanner.bootstrap.PluginFilesTest": 1,
                "org.sonar.scanner.bootstrap": 6,
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller": 2,
                "okhttp3.mockwebserver": 5,
                "org.apache.commons.io": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 1,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 13,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 15,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 17,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 7.492235100926194
    },
    "org.sonar.scanner.cpd.CpdSettingsTest.defaultMinimumTokens": {
        "filePath": "org\\sonar\\scanner\\cpd\\CpdSettingsTest.java",
        "methodName": "defaultMinimumTokens",
        "stats": {
            "methodCalls": {
                "java.util.Optional.empty": 1,
                "org.sonar.api.config.Configuration.getInt": 1,
                "org.sonar.scanner.cpd.CpdSettings.getMinimumTokens": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.mockito.ArgumentMatchers.anyString": 1,
                "org.assertj.core.api.AbstractIntegerAssert.isEqualTo": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 1,
                "org.mockito": 2,
                "org.sonar.scanner.cpd": 1,
                "org.sonar.api.config": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 10.749151775396044
    },
    "org.sonar.scanner.DefaultFileLinesContextTest.shouldSaveSeveral": {
        "filePath": "org\\sonar\\scanner\\DefaultFileLinesContextTest.java",
        "methodName": "shouldSaveSeveral",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentCaptor.getAllValues": 1,
                "org.sonar.scanner.DefaultFileLinesContext.save": 2,
                "org.sonar.scanner.DefaultFileLinesContext.setStringValue": 2,
                "org.mockito.ArgumentCaptor.capture": 1,
                "org.assertj.core.api.Assertions.tuple": 3,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.Mockito.times": 1,
                "org.mockito.Mockito.verify": 1,
                "org.mockito.ArgumentCaptor.forClass": 1,
                "org.assertj.core.api.AbstractIterableAssert.extracting": 1,
                "org.sonar.scanner.DefaultFileLinesContext.setIntValue": 4,
                "org.sonar.api.batch.sensor.internal.SensorStorage.store": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 1,
                "org.sonar.api.batch.sensor.internal": 1,
                "org.mockito": 6,
                "org.assertj.core.api": 5,
                "org.sonar.scanner": 8
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 22,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 12,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 13,
            "logicalLinesOfCodeJunitTest": 13
        },
        "stabilityMetricValue": 10.673400945148439
    },
    "org.sonar.scanner.phases.ProjectCoverageExclusionsTest.shouldExcludeFileCoverageBasedOnPattern": {
        "filePath": "org\\sonar\\scanner\\phases\\ProjectCoverageExclusionsTest.java",
        "methodName": "shouldExcludeFileCoverageBasedOnPattern",
        "stats": {
            "methodCalls": {
                "java.io.File.toPath": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.scanner.phases.ProjectCoverageExclusionsTest.mockConfig": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.config.DefaultConfiguration.getStringArray": 2,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.create": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scanner.scan.filesystem.AbstractCoverageAndDuplicationExclusions.isExcludedForCoverage": 1,
                "org.sonar.scanner.scan.filesystem.AbstractCoverageAndDuplicationExclusions.isExcludedForDuplication": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setProjectBaseDir": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.io.File": 2,
                "org.sonar.scanner.scan.filesystem.ProjectCoverageAndDuplicationExclusions": 1
            },
            "packageAccesses": {
                "org.mockito": 3,
                "java.io": 3,
                "org.sonar.scanner.phases": 1,
                "org.sonar.scanner.config": 2,
                "org.sonar.scanner.scan": 1,
                "org.sonar.scanner.scan.filesystem": 3,
                "org.sonar.api.batch.fs.internal": 4,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 18,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 5.8520638691846445
    },
    "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.coverage_missing_lineNumber_in_lineToCover": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericCoverageReportParserTest.java",
        "methodName": "coverage_missing_lineNumber_in_lineToCover",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.internal.SensorContextTester.module": 1,
                "org.sonar.api.batch.fs.internal.DefaultFileSystem.add": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.initMetadata": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser.parse": 1,
                "org.sonar.api.batch.fs.InputComponent.key": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.setupFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setType": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.fileSystem": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.parseCoverageReport": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.addFileToFs": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLanguage": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.io": 1,
                "org.sonar.scanner.genericcoverage": 5,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.sonar.api.batch.fs.internal": 6,
                "org.sonar.api.batch.fs": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 7.771368014160253
    },
    "org.sonar.scanner.scan.ProjectLockTest.tryLockConcurrently": {
        "filePath": "org\\sonar\\scanner\\scan\\ProjectLockTest.java",
        "methodName": "tryLockConcurrently",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.ProjectLock.tryLock": 2,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan": 2,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 5,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 9.452571385003319
    },
    "org.sonar.scanner.ci.vendors.GithubActionsTest.log_warning_if_missing_GITHUB_SHA": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\GithubActionsTest.java",
        "methodName": "log_warning_if_missing_GITHUB_SHA",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.assertj.core.api.AbstractOptionalAssert.isEmpty": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "org.sonar.api.utils.System2.envVariable": 1,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.ci.vendors.GithubActionsTest.setEnvVariable": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 1,
                "org.mockito": 1,
                "org.sonar.api.utils": 1,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 4,
                "org.sonar.scanner.ci.vendors": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 11.057236451844236
    },
    "org.sonar.scanner.ci.vendors.AwsCodeBuildTest.isDetected": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\AwsCodeBuildTest.java",
        "methodName": "isDetected",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 2,
                "org.sonar.api.utils.System2.envVariable": 3,
                "org.sonar.scanner.ci.vendors.AwsCodeBuildTest.setEnvVariable": 3,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.sonar.scanner.ci.CiVendor.isDetected": 3,
                "org.mockito.Mockito.when": 3
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 3,
                "org.sonar.api.utils": 3,
                "org.sonar.scanner.ci": 3,
                "org.assertj.core.api": 6,
                "org.mockito.stubbing": 3,
                "org.sonar.scanner.ci.vendors": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 21,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 9,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 9,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 6.848803263020642
    },
    "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.dependsUponPhaseForSensors": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ModuleSensorExtensionDictionaryTest.java",
        "methodName": "dependsUponPhaseForSensors",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractIterableAssert.containsExactly": 1,
                "org.sonar.core.platform.Container.getComponentsByType": 1,
                "java.util.Arrays.asList": 1,
                "org.assertj.core.api.AbstractIterableAssert.extracting": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.newSelector": 1,
                "org.sonar.scanner.sensor.ModuleSensorExtensionDictionary.selectSensors": 1,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.sensor.ModuleSensorExtensionDictionary": 1,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.PreSensor": 1,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.NormalSensor": 1,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.PostSensor": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest": 3,
                "java.util": 1,
                "org.mockito": 3,
                "org.sonar.scanner.bootstrap": 4,
                "org.sonar.core.platform": 2,
                "org.sonar.scanner.sensor": 3,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 8,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 7.416756090910198
    },
    "org.sonar.scanner.ci.vendors.JenkinsTest.loadConfiguration_of_git_repo": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\JenkinsTest.java",
        "methodName": "loadConfiguration_of_git_repo",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.sonar.scanner.ci.vendors.JenkinsTest.setEnvVariable": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 1,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.mockito.Mockito.when": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 1,
                "org.sonar.api.utils": 1,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 7.2914709303024665
    },
    "org.sonar.scanner.issue.ignore.EnforceIssuesFilterTest.shouldPassToChainIfNoConfiguredPatterns": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\EnforceIssuesFilterTest.java",
        "methodName": "shouldPassToChainIfNoConfiguredPatterns",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.issue.ignore.EnforceIssuesFilter.accept": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.scan.issue.filter.IssueFilterChain.accept": 1,
                "com.google.common.collect.ImmutableSet.of": 1,
                "org.mockito.Mockito.verify": 1
            },
            "objectInstantiations": {
                "org.sonar.api.batch.rule.internal.DefaultActiveRules": 1,
                "org.sonar.scanner.issue.ignore.EnforceIssuesFilter": 1
            },
            "packageAccesses": {
                "org.mockito": 1,
                "org.sonar.api.batch.rule.internal": 2,
                "org.sonar.api.scan.issue.filter": 1,
                "org.sonar.scanner.issue.ignore": 2,
                "org.assertj.core.api": 2,
                "com.google.common.collect": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 8.702290775634621
    },
    "org.sonar.scm.svn.SvnScmSupportTest.getObjects_shouldNotBeEmpty": {
        "filePath": "org\\sonar\\scm\\svn\\SvnScmSupportTest.java",
        "methodName": "getObjects_shouldNotBeEmpty",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractIterableAssert.isNotEmpty": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scm.svn.SvnScmSupport.getObjects": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scm.svn": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 8.696153788835995
    },
    "org.sonar.scanner.ci.vendors.BitriseTest.getName": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\BitriseTest.java",
        "methodName": "getName",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.ci.CiVendor.getName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 8.465181580315887
    },
    "org.sonar.scanner.scm.ScmChangedFilesTest.testNullable": {
        "filePath": "org\\sonar\\scanner\\scm\\ScmChangedFilesTest.java",
        "methodName": "testNullable",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scm.ScmChangedFiles.isChanged": 1,
                "org.sonar.scanner.scm.ScmChangedFiles.isValid": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.sonar.scanner.scm.ScmChangedFiles.get": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "java.nio.file.Paths.get": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scm.ScmChangedFiles": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scm": 4,
                "org.assertj.core.api": 6,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 10,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 8.483195079367496
    },
    "org.sonar.scanner.externalissue.sarif.RegionMapperTest.mapRegion_whenStartEndLinesDefinedAndEndColumn": {
        "filePath": "org\\sonar\\scanner\\externalissue\\sarif\\RegionMapperTest.java",
        "methodName": "mapRegion_whenStartEndLinesDefinedAndEndColumn",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.externalissue.sarif.RegionMapperTest.mockRegion": 1,
                "org.sonar.api.batch.fs.TextPointer.line": 2,
                "org.sonar.core.sarif.Region.getStartLine": 2,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.sonar.api.batch.fs.TextRange.end": 2,
                "org.mockito.Mockito.when": 4,
                "org.sonar.api.batch.fs.TextRange.start": 2,
                "org.sonar.core.sarif.Region.getEndLine": 2,
                "org.assertj.core.api.AbstractIntegerAssert.isEqualTo": 1,
                "org.sonar.core.sarif.Region.getStartColumn": 1,
                "org.assertj.core.api.AbstractIntegerAssert.isZero": 1,
                "java.util.Optional.get": 1,
                "org.sonar.api.batch.fs.TextPointer.lineOffset": 2,
                "org.assertj.core.api.AbstractOptionalAssert.isPresent": 1,
                "org.sonar.core.sarif.Region.getEndColumn": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 2,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.scanner.externalissue.sarif.RegionMapper.mapRegion": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 2,
                "org.mockito": 5,
                "org.sonar.core.sarif": 8,
                "org.sonar.scanner.externalissue.sarif": 2,
                "org.sonar.api.batch.fs": 9,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 10
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 36,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 14,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 14,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 8.881692823524208
    },
    "org.sonar.scanner.externalissue.sarif.RegionMapperTest.mapRegion_whenAllCoordinatesDefined": {
        "filePath": "org\\sonar\\scanner\\externalissue\\sarif\\RegionMapperTest.java",
        "methodName": "mapRegion_whenAllCoordinatesDefined",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.externalissue.sarif.RegionMapperTest.mockRegion": 1,
                "org.sonar.api.batch.fs.TextPointer.line": 2,
                "org.sonar.core.sarif.Region.getStartLine": 2,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.sonar.api.batch.fs.TextRange.end": 2,
                "org.mockito.Mockito.when": 4,
                "org.sonar.api.batch.fs.TextRange.start": 2,
                "org.sonar.core.sarif.Region.getEndLine": 2,
                "org.assertj.core.api.AbstractIntegerAssert.isEqualTo": 1,
                "org.sonar.core.sarif.Region.getStartColumn": 1,
                "org.assertj.core.api.AbstractIntegerAssert.isZero": 1,
                "java.util.Optional.get": 1,
                "org.sonar.api.batch.fs.TextPointer.lineOffset": 2,
                "org.assertj.core.api.AbstractOptionalAssert.isPresent": 1,
                "org.sonar.core.sarif.Region.getEndColumn": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 2,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.scanner.externalissue.sarif.RegionMapper.mapRegion": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 2,
                "org.mockito": 5,
                "org.sonar.core.sarif": 8,
                "org.sonar.scanner.externalissue.sarif": 2,
                "org.sonar.api.batch.fs": 9,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 10
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 36,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 14,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 14,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 9.162654473643334
    },
    "org.sonar.scanner.externalissue.sarif.ResultMapperTest.mapResult_whenLocationExists_createsFileLocation": {
        "filePath": "org\\sonar\\scanner\\externalissue\\sarif\\ResultMapperTest.java",
        "methodName": "mapResult_whenLocationExists_createsFileLocation",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 2,
                "org.sonar.core.sarif.Result.getLocations": 1,
                "org.sonar.scanner.externalissue.sarif.LocationMapper.fillIssueInFileLocation": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.externalissue.sarif.ResultMapper.mapResult": 1,
                "org.mockito.Mockito.verify": 4,
                "org.sonar.api.batch.sensor.issue.NewExternalIssue.at": 1,
                "org.mockito.Mockito.never": 2,
                "org.mockito.Mockito.verifyNoMoreInteractions": 1,
                "java.util.Set.of": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 1,
                "org.mockito": 11,
                "org.sonar.core.sarif": 2,
                "org.sonar.scanner.externalissue.sarif": 2,
                "org.mockito.stubbing": 1,
                "org.sonar.api.batch.sensor.issue": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 19,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 8,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 6.7384512738226805
    },
    "org.sonar.scanner.genericcoverage.GenericTestExecutionReportParserTest.unittest_invalid_root_node_name": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericTestExecutionReportParserTest.java",
        "methodName": "unittest_invalid_root_node_name",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.genericcoverage.GenericTestExecutionReportParserTest.parseUnitTestReport": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "org.sonar.scanner.genericcoverage.GenericTestExecutionReportParser.parse": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericTestExecutionReportParser": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.genericcoverage": 4,
                "org.junit.rules": 1,
                "java.io": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 11.341048702186075
    },
    "org.sonar.scanner.cache.AnalysisCacheProviderTest.provide_noop_reader_cache_when_disable": {
        "filePath": "org\\sonar\\scanner\\cache\\AnalysisCacheProviderTest.java",
        "methodName": "provide_noop_reader_cache_when_disable",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.cache.AnalysisCacheProvider.provideReader": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.cache.AnalysisCacheEnabled.isEnabled": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.cache": 2,
                "org.mockito": 1,
                "org.sonar.api.batch.sensor.cache": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 10.883874646065733
    },
    "org.sonar.scanner.phases.ModuleCoverageAndDuplicationExclusionsTest.shouldExcludeFileBasedOnPattern": {
        "filePath": "org\\sonar\\scanner\\phases\\ModuleCoverageAndDuplicationExclusionsTest.java",
        "methodName": "shouldExcludeFileBasedOnPattern",
        "stats": {
            "methodCalls": {
                "java.io.File.toPath": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.config.DefaultConfiguration.getStringArray": 2,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.create": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scanner.scan.filesystem.AbstractCoverageAndDuplicationExclusions.isExcludedForCoverage": 1,
                "org.sonar.scanner.phases.ModuleCoverageAndDuplicationExclusionsTest.mockConfig": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setProjectBaseDir": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.io.File": 2,
                "org.sonar.scanner.scan.filesystem.ModuleCoverageAndDuplicationExclusions": 1
            },
            "packageAccesses": {
                "org.mockito": 3,
                "java.io": 3,
                "org.sonar.scanner.phases": 1,
                "org.sonar.scanner.config": 2,
                "org.sonar.scanner.scan": 1,
                "org.sonar.scanner.scan.filesystem": 2,
                "org.sonar.api.batch.fs.internal": 4,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 15,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 5.737430540125999
    },
    "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.coverage_branchesToCover_in_lineToCover_should_not_be_negative": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericCoverageReportParserTest.java",
        "methodName": "coverage_branchesToCover_in_lineToCover_should_not_be_negative",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.internal.SensorContextTester.module": 1,
                "org.sonar.api.batch.fs.internal.DefaultFileSystem.add": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.initMetadata": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser.parse": 1,
                "org.sonar.api.batch.fs.InputComponent.key": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.setupFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setType": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.fileSystem": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.parseCoverageReport": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.addFileToFs": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLanguage": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.io": 1,
                "org.sonar.scanner.genericcoverage": 5,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.sonar.api.batch.fs.internal": 6,
                "org.sonar.api.batch.fs": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 7.5921021571353515
    },
    "org.sonar.scanner.ci.vendors.GitlabCiTest.loadConfiguration": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\GitlabCiTest.java",
        "methodName": "loadConfiguration",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 2,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.ci.vendors.GitlabCiTest.setEnvVariable": 2
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 2,
                "org.sonar.api.utils": 2,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 5.932787198176827
    },
    "org.sonar.scanner.externalissue.sarif.RuleMapperTest.mapRule_shouldCorrectlyMapToNewAdHocRule": {
        "filePath": "org\\sonar\\scanner\\externalissue\\sarif\\RuleMapperTest.java",
        "methodName": "mapRule_shouldCorrectlyMapToNewAdHocRule",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.rule.internal.DefaultAdHocRule.cleanCodeAttribute": 1,
                "org.sonar.api.batch.sensor.rule.internal.DefaultAdHocRule.name": 1,
                "org.sonar.core.sarif.Rule.RuleBuilder.build": 1,
                "org.sonar.api.batch.sensor.rule.internal.DefaultAdHocRule.addDefaultImpact": 1,
                "org.sonar.api.batch.sensor.rule.internal.DefaultAdHocRule.severity": 1,
                "org.sonar.core.sarif.Rule.builder": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.batch.sensor.rule.internal.DefaultAdHocRule.engineId": 1,
                "org.sonar.api.batch.sensor.rule.internal.DefaultAdHocRule.ruleId": 1,
                "org.sonar.api.batch.sensor.rule.internal.DefaultAdHocRule.type": 1,
                "java.lang.String.join": 1,
                "org.sonar.core.sarif.Rule.RuleBuilder.id": 1,
                "org.assertj.core.api.RecursiveComparisonAssert.isEqualTo": 1,
                "org.assertj.core.api.AbstractObjectAssert.usingRecursiveComparison": 1,
                "org.sonar.scanner.externalissue.sarif.RuleMapper.mapRule": 1
            },
            "objectInstantiations": {
                "org.sonar.api.batch.sensor.rule.internal.DefaultAdHocRule": 1
            },
            "packageAccesses": {
                "java.lang": 1,
                "org.sonar.api.batch.sensor.rule": 2,
                "org.sonar.core.sarif": 4,
                "org.sonar.scanner.externalissue.sarif": 1,
                "org.assertj.core.api": 3,
                "org.sonar.api.batch.sensor.rule.internal": 8
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 15,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 6.820274226840517
    },
    "org.sonar.scanner.externalissue.sarif.ResultMapperTest.mapResult_whenLocationsIsNull_createsProjectLocation": {
        "filePath": "org\\sonar\\scanner\\externalissue\\sarif\\ResultMapperTest.java",
        "methodName": "mapResult_whenLocationsIsNull_createsProjectLocation",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 2,
                "org.sonar.api.batch.sensor.issue.NewExternalIssue.at": 1,
                "org.mockito.Mockito.never": 2,
                "org.mockito.Mockito.verifyNoMoreInteractions": 1,
                "org.sonar.core.sarif.Result.getLocations": 1,
                "org.sonar.scanner.externalissue.sarif.LocationMapper.fillIssueInProjectLocation": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.externalissue.sarif.ResultMapper.mapResult": 1,
                "org.mockito.Mockito.verify": 4
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.externalissue.sarif": 2,
                "org.mockito": 10,
                "org.mockito.stubbing": 1,
                "org.sonar.core.sarif": 1,
                "org.sonar.api.batch.sensor.issue": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 17,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 10.202553758638226
    },
    "org.sonar.scanner.issue.IssuePublisherTest.filter_issue": {
        "filePath": "org\\sonar\\scanner\\issue\\IssuePublisherTest.java",
        "methodName": "filter_issue",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 2,
                "org.sonar.api.batch.sensor.issue.internal.AbstractDefaultIssue.at": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.selectLine": 1,
                "org.sonar.scanner.issue.IssuePublisher.initAndAddIssue": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssueLocation.on": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssueLocation.message": 1,
                "org.mockito.Mockito.verifyNoInteractions": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssue.forRule": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssueLocation.at": 1,
                "org.sonar.scanner.issue.IssueFilters.accept": 1
            },
            "objectInstantiations": {
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssue": 1,
                "org.sonar.api.batch.sensor.issue.internal.DefaultIssueLocation": 1
            },
            "packageAccesses": {
                "org.mockito": 4,
                "org.sonar.api.batch.sensor.issue.internal": 8,
                "org.sonar.scanner.issue": 2,
                "org.sonar.api.batch.fs.internal": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 15,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 8.100131379341612
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedLines_returns_null_on_io_errors_of_repo_builder": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedLines_returns_null_on_io_errors_of_repo_builder",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "java.util.Collections.emptySet": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scm.git.GitScmProvider.branchChangedLines": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.io.IOException": 1,
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "java.util": 1,
                "org.mockito": 1,
                "java.io": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scm.git": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 10.991297839000271
    },
    "org.sonar.scanner.DefaultFileLinesContextTest.validateLineGreaterThanZero": {
        "filePath": "org\\sonar\\scanner\\DefaultFileLinesContextTest.java",
        "methodName": "validateLineGreaterThanZero",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractThrowableAssert.hasMessage": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.sonar.scanner.DefaultFileLinesContext.setIntValue": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 5.782648020665202
    },
    "org.sonar.scanner.rule.QProfileVerifierTest.should_not_fail_if_no_language_on_project": {
        "filePath": "org\\sonar\\scanner\\rule\\QProfileVerifierTest.java",
        "methodName": "should_not_fail_if_no_language_on_project",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.rule.QProfileVerifier.execute": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.rule.QProfileVerifier": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.rule": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 1,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 7.993054914948513
    },
    "org.sonar.scanner.issue.ignore.EnforceIssuesFilterTest.shouldRefuseIssueIfRuleMatchesButNotPath": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\EnforceIssuesFilterTest.java",
        "methodName": "shouldRefuseIssueIfRuleMatchesButNotPath",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.issue.DefaultFilterableIssue.ruleKey": 1,
                "org.sonar.scanner.issue.DefaultFilterableIssue.getComponent": 1,
                "org.sonar.scanner.issue.ignore.pattern.AbstractPatternInitializer.getMulticriteriaPatterns": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.sonar.scanner.issue.DefaultFilterableIssue.componentKey": 1,
                "org.sonar.api.rule.RuleKey.of": 1,
                "org.mockito.Mockito.when": 4,
                "org.mockito.Mockito.verifyNoInteractions": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.sonar.scanner.issue.ignore.EnforceIssuesFilterTest.createComponentWithPath": 1,
                "org.sonar.scanner.issue.ignore.EnforceIssuesFilter.accept": 1,
                "com.google.common.collect.ImmutableSet.of": 1,
                "com.google.common.collect.ImmutableList.of": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.EnforceIssuesFilter": 1,
                "org.sonar.api.batch.rule.internal.DefaultActiveRules": 1,
                "org.sonar.scanner.issue.ignore.pattern.IssuePattern": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 3,
                "java.lang": 2,
                "org.mockito": 5,
                "org.sonar.scanner.issue": 3,
                "org.sonar.api.batch.rule.internal": 2,
                "org.sonar.scanner.issue.ignore": 3,
                "org.sonar.api.batch.fs.internal": 2,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 2,
                "org.sonar.api.rule": 2,
                "com.google.common.collect": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 21,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 13,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 13,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 10.423489909644749
    },
    "org.sonar.scm.git.GitIgnoreCommandTest.skip_submodules_if_not_cloned": {
        "filePath": "org\\sonar\\scm\\git\\GitIgnoreCommandTest.java",
        "methodName": "skip_submodules_if_not_cloned",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitIgnoreCommandTest.createFolderStructure": 1999,
                "org.eclipse.jgit.api.Git.commit": 1,
                "org.eclipse.jgit.api.AddCommand.call": 1,
                "org.assertj.core.api.Assertions.assertThat": 4,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "java.nio.file.Path.resolve": 5995,
                "org.apache.commons.io.FileUtils.cleanDirectory": 1,
                "org.eclipse.jgit.api.Git.submoduleAdd": 1,
                "org.sonar.scm.git.GitIgnoreCommand.isIgnored": 2,
                "org.eclipse.jgit.api.CommitCommand.call": 1,
                "java.util.Arrays.asList": 2,
                "org.junit.rules.TemporaryFolder.newFolder": 2,
                "org.assertj.core.api.AbstractIterableAssert.contains": 2,
                "java.nio.file.Files.write": 2,
                "org.eclipse.jgit.api.Git.submoduleUpdate": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.setLevel": 1,
                "java.net.URI.toString": 1,
                "org.sonar.scm.git.GitIgnoreCommand.init": 1,
                "java.io.File.toPath": 2,
                "java.nio.file.Path.toFile": 2,
                "org.eclipse.jgit.api.Git.add": 1,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 1,
                "org.eclipse.jgit.api.SubmoduleAddCommand.setURI": 1,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 1,
                "org.eclipse.jgit.api.SubmoduleUpdateCommand.call": 1,
                "java.nio.file.Files.createFile": 3994,
                "org.eclipse.jgit.api.SubmoduleAddCommand.setPath": 1,
                "org.eclipse.jgit.api.SubmoduleAddCommand.call": 1,
                "java.nio.file.Path.toString": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 2,
                "java.nio.file.Path.toUri": 1,
                "org.eclipse.jgit.api.Git.init": 2,
                "org.sonar.scm.git.GitIgnoreCommandTest.createSubmoduleWithFiles": 1,
                "java.nio.file.Files.exists": 5991,
                "java.nio.file.Files.createDirectory": 1997,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.eclipse.jgit.api.InitCommand.call": 2,
                "org.eclipse.jgit.api.InitCommand.setDirectory": 2
            },
            "objectInstantiations": {
                "java.io.File": 1,
                "org.sonar.scm.git.GitIgnoreCommand": 1
            },
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 3,
                "org.eclipse.jgit.api": 21,
                "org.junit.rules": 2,
                "java.util": 2,
                "java.net": 1,
                "java.io": 3,
                "org.sonar.scm.git": 2005,
                "org.eclipse.jgit.lib": 1,
                "org.apache.commons.io": 1,
                "org.assertj.core.api": 8,
                "java.nio.file": 23976
            },
            "numConditionals": 7988,
            "numLoops": 1997,
            "numNestedLoops": 0,
            "numMethodCalls": 20023,
            "numRecursiveMethodCalls": 2000,
            "linesOfCode": 25982,
            "linesOfCodeJunitTest": 13,
            "logicalLinesOfCode": 35971,
            "logicalLinesOfCodeJunitTest": 14
        },
        "stabilityMetricValue": 9.702671254487525
    },
    "org.sonar.scanner.ci.vendors.AppVeyorTest.loadConfiguration": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\AppVeyorTest.java",
        "methodName": "loadConfiguration",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 3,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.mockito.Mockito.when": 3,
                "org.sonar.scanner.ci.vendors.AppVeyorTest.setEnvVariable": 3
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 3,
                "org.sonar.api.utils": 3,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 16,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 7.889391438112421
    },
    "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.coverage_invalid_file_node_name": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericCoverageReportParserTest.java",
        "methodName": "coverage_invalid_file_node_name",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.parseCoverageReport": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser.parse": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.genericcoverage": 3,
                "org.junit.rules": 1,
                "java.io": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 7.4334885053373325
    },
    "org.sonar.scanner.ci.vendors.AwsCodeBuildTest.getName": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\AwsCodeBuildTest.java",
        "methodName": "getName",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.ci.CiVendor.getName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 8.599077709056697
    },
    "org.sonar.scanner.ci.vendors.CodeMagicTest.isDetected_givenBuildID_detectCodeMagic": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\CodeMagicTest.java",
        "methodName": "isDetected_givenBuildID_detectCodeMagic",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.vendors.CodeMagicTest.setEnvVariable": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonar.scanner.ci.CiVendor.isDetected": 1,
                "org.mockito.Mockito.when": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 1,
                "org.sonar.api.utils": 1,
                "org.sonar.scanner.ci": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 7.3373546132665695
    },
    "org.sonar.scanner.sensor.DefaultSensorStorageTest.shouldIgnoreMeasuresOnFolders": {
        "filePath": "org\\sonar\\scanner\\sensor\\DefaultSensorStorageTest.java",
        "methodName": "shouldIgnoreMeasuresOnFolders",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.measure.internal.DefaultMeasure.forMetric": 1,
                "org.sonar.api.batch.sensor.measure.internal.DefaultMeasure.on": 1,
                "org.sonar.api.batch.sensor.measure.internal.DefaultMeasure.withValue": 1,
                "org.mockito.Mockito.verifyNoMoreInteractions": 1
            },
            "objectInstantiations": {
                "org.sonar.api.batch.fs.internal.DefaultInputDir": 1,
                "org.sonar.api.batch.sensor.measure.internal.DefaultMeasure": 1
            },
            "packageAccesses": {
                "org.sonar.api.batch.sensor.measure.internal": 4,
                "org.mockito": 1,
                "org.sonar.api.batch.fs.internal": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 5,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 6.62117470718889
    },
    "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.useClassAnnotationsToSortExtensions": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ModuleSensorExtensionDictionaryTest.java",
        "methodName": "useClassAnnotationsToSortExtensions",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.AbstractExtensionDictionary.select": 2,
                "java.util.List.get": 4,
                "org.sonar.core.platform.Container.getComponentsByType": 2,
                "java.util.Arrays.asList": 2,
                "org.assertj.core.api.Assertions.assertThat": 6,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 2,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 4,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.newSelector": 2,
                "org.mockito.Mockito.mock": 4
            },
            "objectInstantiations": {
                "org.sonar.scanner.sensor.ModuleSensorExtensionDictionary": 2,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.ClassDependedUpon": 1,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.ClassDependsUpon": 1,
                "java.util.ArrayList": 2
            },
            "packageAccesses": {
                "java.util": 9,
                "java.lang": 2,
                "org.mockito": 6,
                "org.sonar.scanner.bootstrap": 6,
                "org.sonar.core.platform": 4,
                "org.sonar.scanner.sensor": 3,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 12
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 32,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 18,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 18,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 10.042765107615983
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedFiles_falls_back_to_local_ref_if_origin_branch_does_not_exist_when_running_on_circle_ci": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedFiles_falls_back_to_local_ref_if_origin_branch_does_not_exist_when_running_on_circle_ci",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitUtils.createFile": 1,
                "org.eclipse.jgit.api.Git.commit": 1,
                "java.nio.file.Path.getParent": 1,
                "java.lang.String.getBytes": 1,
                "org.eclipse.jgit.api.CheckoutCommand.setStartPoint": 1,
                "org.eclipse.jgit.api.AddCommand.call": 1,
                "org.eclipse.jgit.api.CheckoutCommand.setName": 3,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 1,
                "java.lang.StringBuilder.append": 4,
                "java.lang.StringBuilder.toString": 2,
                "org.eclipse.jgit.api.CheckoutCommand.call": 3,
                "org.eclipse.jgit.api.CloneCommand.setDirectory": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedLine": 1,
                "java.util.Random.nextInt": 1,
                "java.nio.file.Path.resolve": 2,
                "org.mockito.Mockito.verifyNoInteractions": 1,
                "org.eclipse.jgit.api.CommitCommand.call": 1,
                "java.lang.String.join": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsOnly": 1,
                "java.nio.file.Files.write": 1,
                "org.eclipse.jgit.api.CloneCommand.call": 1,
                "org.sonar.scm.git.GitScmProviderTest.createAndCommitFile": 2,
                "org.eclipse.jgit.api.Git.cloneRepository": 1,
                "java.io.File.toPath": 1,
                "java.nio.file.Path.toFile": 1,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "org.eclipse.jgit.api.Git.add": 1,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 1,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "java.nio.file.Files.createDirectories": 1,
                "org.eclipse.jgit.api.CloneCommand.setURI": 1,
                "java.nio.file.Path.toString": 1,
                "org.eclipse.jgit.api.CommitCommand.setAuthor": 1,
                "org.sonar.scm.git.GitScmProvider.branchChangedFiles": 1,
                "java.lang.String.length": 1,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "org.sonar.scm.git.GitScmProviderTest.commit": 1,
                "org.eclipse.jgit.api.Git.checkout": 3,
                "org.sonar.scm.git.GitScmProviderTest.randomizedContent": 1,
                "org.eclipse.jgit.api.CheckoutCommand.setCreateBranch": 2,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.lang.StringBuilder": 2,
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "org.eclipse.jgit.api": 24,
                "java.lang": 15,
                "java.util": 1,
                "org.junit.rules": 1,
                "org.mockito": 3,
                "org.sonar.api.utils": 1,
                "java.io": 1,
                "org.sonar.scm.git": 10,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2,
                "java.nio.file": 9
            },
            "numConditionals": 0,
            "numLoops": 4,
            "numNestedLoops": 1,
            "numMethodCalls": 58,
            "numRecursiveMethodCalls": 8,
            "linesOfCode": 32,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 36,
            "logicalLinesOfCodeJunitTest": 9
        },
        "stabilityMetricValue": 8.964448187375398
    },
    "org.sonar.scanner.cache.AnalysisCacheProviderTest.provide_real_reader_cache_when_enable": {
        "filePath": "org\\sonar\\scanner\\cache\\AnalysisCacheProviderTest.java",
        "methodName": "provide_real_reader_cache_when_enable",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.cache.AnalysisCacheProvider.provideReader": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.cache.AnalysisCacheMemoryStorage.load": 1,
                "org.sonar.scanner.cache.AnalysisCacheEnabled.isEnabled": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.mockito.Mockito.verify": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.cache": 3,
                "org.mockito": 2,
                "org.sonar.api.batch.sensor.cache": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 7.925286480698353
    },
    "org.sonar.scanner.scan.DeprecatedPropertiesWarningGeneratorTest.execute_whenNotUsingLoginOrPassword_shouldNotAddWarning": {
        "filePath": "org\\sonar\\scanner\\scan\\DeprecatedPropertiesWarningGeneratorTest.java",
        "methodName": "execute_whenNotUsingLoginOrPassword_shouldNotAddWarning",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.DeprecatedPropertiesWarningGenerator.execute": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.Mockito.verifyNoInteractions": 1,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan": 1,
                "org.sonar.api.testfixtures.log": 1,
                "org.mockito": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 5,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 6.855975119424032
    },
    "org.sonar.scm.git.NativeGitBlameCommandTest.git_should_not_be_detected": {
        "filePath": "org\\sonar\\scm\\git\\NativeGitBlameCommandTest.java",
        "methodName": "git_should_not_be_detected",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.scm.git.NativeGitBlameCommand.checkIfEnabled": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.NativeGitBlameCommand": 1
            },
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scm.git": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 8.133113128769914
    },
    "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.coverage_invalid_root_node_name": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericCoverageReportParserTest.java",
        "methodName": "coverage_invalid_root_node_name",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.parseCoverageReport": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser.parse": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.genericcoverage": 3,
                "org.junit.rules": 1,
                "java.io": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 6.447889047397883
    },
    "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.sortExtensionsByDependency": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ModuleSensorExtensionDictionaryTest.java",
        "methodName": "sortExtensionsByDependency",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.AbstractExtensionDictionary.select": 1,
                "java.util.List.get": 3,
                "org.sonar.core.platform.Container.getComponentsByType": 1,
                "java.util.Arrays.asList": 1,
                "org.assertj.core.api.Assertions.assertThat": 4,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 3,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.newSelector": 1,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.MethodDependentOf": 3,
                "org.sonar.scanner.sensor.ModuleSensorExtensionDictionary": 1,
                "java.util.ArrayList": 1
            },
            "packageAccesses": {
                "java.util": 6,
                "java.lang": 3,
                "org.mockito": 3,
                "org.sonar.scanner.bootstrap": 5,
                "org.sonar.core.platform": 2,
                "org.sonar.scanner.sensor": 2,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 8
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 19,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 12,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 12,
            "logicalLinesOfCodeJunitTest": 9
        },
        "stabilityMetricValue": 8.699224837742541
    },
    "org.sonar.scanner.report.ReportPublisherTest.test_log_and_add_warning_if_using_non64bit_jre": {
        "filePath": "org\\sonar\\scanner\\report\\ReportPublisherTest.java",
        "methodName": "test_log_and_add_warning_if_using_non64bit_jre",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.GlobalAnalysisMode.isMediumTest": 1,
                "org.sonar.scanner.report.ReportPublisher.execute": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.sonar.scanner.report.JavaArchitectureInformationProvider.is64bitJavaVersion": 1,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.report.ReportPublisher.start": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.mockito.Mockito.verify": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 1,
                "org.mockito": 3,
                "org.sonar.scanner.report": 3,
                "org.sonar.scanner.bootstrap": 1,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 13,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 10.510014251309016
    },
    "org.sonar.scanner.ci.vendors.JenkinsTest.loadConfiguration_of_git_repo_with_branch_plugin": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\JenkinsTest.java",
        "methodName": "loadConfiguration_of_git_repo_with_branch_plugin",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "java.io.File.toPath": 2,
                "java.nio.file.Path.toFile": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 3,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.mockito.Mockito.when": 4,
                "org.sonar.api.batch.fs.internal.AbstractProjectOrModule.getBaseDir": 1,
                "java.nio.file.Path.resolve": 1,
                "java.lang.Object.getClass": 1,
                "org.sonar.scanner.ci.vendors.JenkinsTest.setEnvVariable": 3,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "java.lang.Class.getResourceAsStream": 1,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.sonar.api.utils.ZipUtils.unzip": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.lang": 2,
                "org.mockito": 4,
                "java.io": 3,
                "org.sonar.api.utils": 4,
                "org.sonar.api.batch.fs.internal": 1,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 3,
                "java.nio.file": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 27,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 10,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 10,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 10.374351547330917
    },
    "org.sonar.scanner.scan.ScanPropertiesTest.should_define_metadata_file_path": {
        "filePath": "org\\sonar\\scanner\\scan\\ScanPropertiesTest.java",
        "methodName": "should_define_metadata_file_path",
        "stats": {
            "methodCalls": {
                "java.io.File.toPath": 1,
                "org.sonar.api.config.internal.MapSettings.setProperty": 1,
                "org.sonar.scanner.scan.ScanProperties.metadataFilePath": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "java.nio.file.Path.toString": 1,
                "java.nio.file.Path.resolve": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.junit.rules": 1,
                "org.sonar.api.config.internal": 1,
                "java.io": 1,
                "org.sonar.scanner.scan": 1,
                "org.assertj.core.api": 2,
                "java.nio.file": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 5.85688325038486
    },
    "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.coverage_lineNumber_in_lineToCover_should_be_positive": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericCoverageReportParserTest.java",
        "methodName": "coverage_lineNumber_in_lineToCover_should_be_positive",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.internal.SensorContextTester.module": 1,
                "org.sonar.api.batch.fs.internal.DefaultFileSystem.add": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.initMetadata": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser.parse": 1,
                "org.sonar.api.batch.fs.InputComponent.key": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.setupFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setType": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.fileSystem": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.parseCoverageReport": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.addFileToFs": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLanguage": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.io": 1,
                "org.sonar.scanner.genericcoverage": 5,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.sonar.api.batch.fs.internal": 6,
                "org.sonar.api.batch.fs": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 6.90644137275737
    },
    "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.coverage_invalid_report_version": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericCoverageReportParserTest.java",
        "methodName": "coverage_invalid_report_version",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.parseCoverageReport": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser.parse": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.genericcoverage": 3,
                "org.junit.rules": 1,
                "java.io": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 6.9186564592525395
    },
    "org.sonar.scanner.scan.filesystem.InputComponentStoreTest.should_find_files_per_module_and_globally": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\InputComponentStoreTest.java",
        "methodName": "should_find_files_per_module_and_globally",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 2,
                "org.assertj.core.api.AbstractIterableAssert.containsExactlyInAnyOrder": 1,
                "org.sonar.scanner.scan.filesystem.InputComponentStoreTest.InputComponentStoreTester.addFile": 2,
                "org.assertj.core.api.AbstractIterableAssert.containsExactly": 2,
                "java.util.Optional.ifPresent": 2,
                "org.sonar.scanner.scan.filesystem.InputComponentStore.put": 2,
                "java.util.Optional.ofNullable": 2,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.sonar.scanner.scan.filesystem.InputComponentStore.filesByModule": 2,
                "org.sonar.scanner.scan.filesystem.InputComponentStore.inputFiles": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.filesystem.InputComponentStoreTest.InputComponentStoreTester": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 2
            },
            "packageAccesses": {
                "java.lang": 2,
                "java.util": 4,
                "org.sonar.scanner.scan.filesystem.InputComponentStoreTest": 1,
                "org.sonar.scanner.scan.filesystem": 8,
                "org.sonar.api.batch.fs": 2,
                "org.sonar.api.batch.fs.internal": 8,
                "org.assertj.core.api": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 19,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 18,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 18,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 6.97209481328137
    },
    "org.sonar.scanner.phases.ProjectCoverageExclusionsTest.shouldExcludeFileDuplicationBasedOnPattern": {
        "filePath": "org\\sonar\\scanner\\phases\\ProjectCoverageExclusionsTest.java",
        "methodName": "shouldExcludeFileDuplicationBasedOnPattern",
        "stats": {
            "methodCalls": {
                "java.io.File.toPath": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.scanner.phases.ProjectCoverageExclusionsTest.mockConfig": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.config.DefaultConfiguration.getStringArray": 2,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.create": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.scanner.scan.filesystem.AbstractCoverageAndDuplicationExclusions.isExcludedForCoverage": 1,
                "org.sonar.scanner.scan.filesystem.AbstractCoverageAndDuplicationExclusions.isExcludedForDuplication": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setProjectBaseDir": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.io.File": 2,
                "org.sonar.scanner.scan.filesystem.ProjectCoverageAndDuplicationExclusions": 1
            },
            "packageAccesses": {
                "org.mockito": 3,
                "java.io": 3,
                "org.sonar.scanner.phases": 1,
                "org.sonar.scanner.config": 2,
                "org.sonar.scanner.scan": 1,
                "org.sonar.scanner.scan.filesystem": 3,
                "org.sonar.api.batch.fs.internal": 4,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 18,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 8.755376223585937
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedLines_should_not_fail_with_patience_diff_algo": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedLines_should_not_fail_with_patience_diff_algo",
        "stats": {
            "methodCalls": {
                "java.lang.String.getBytes": 1,
                "java.nio.file.Path.toFile": 1,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scm.git.GitScmProvider.branchChangedLines": 1,
                "org.eclipse.jgit.storage.file.FileRepositoryBuilder.create": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "java.nio.file.Path.resolve": 3,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "java.util.Collections.singleton": 1,
                "java.nio.file.Paths.get": 1,
                "java.nio.file.Files.write": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.GitScmProvider": 1,
                "org.eclipse.jgit.api.Git": 1
            },
            "packageAccesses": {
                "org.eclipse.jgit.storage.file": 1,
                "org.eclipse.jgit.api": 1,
                "java.lang": 1,
                "java.util": 1,
                "org.mockito": 1,
                "org.eclipse.jgit.lib": 1,
                "org.sonar.scm.git": 4,
                "org.assertj.core.api": 2,
                "java.nio.file": 7
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 15,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 7.156298095827234
    },
    "org.sonar.scanner.analysis.AnalysisTempFolderProviderTest.createTempFolder": {
        "filePath": "org\\sonar\\scanner\\analysis\\AnalysisTempFolderProviderTest.java",
        "methodName": "createTempFolder",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractFileAssert.exists": 1,
                "org.sonar.scanner.analysis.AnalysisTempFolderProvider.provide": 1,
                "org.sonar.api.utils.TempFolder.newFile": 1,
                "java.io.File.list": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.junit.rules.TemporaryFolder.getRoot": 1,
                "org.assertj.core.api.AbstractObjectArrayAssert.hasSize": 1,
                "org.sonar.api.utils.TempFolder.newDir": 1
            },
            "objectInstantiations": {
                "java.io.File": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.analysis": 1,
                "org.junit.rules": 1,
                "java.io": 3,
                "org.sonar.api.utils": 3,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 11.339517971707922
    },
    "org.sonar.scanner.scan.filesystem.ByteCharsetDetectorTest.tryUTF8First": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\ByteCharsetDetectorTest.java",
        "methodName": "tryUTF8First",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 1,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isUTF8": 1,
                "org.sonar.scanner.scan.filesystem.ByteCharsetDetector.detect": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.mockito.Mockito.when": 1,
                "org.mockito.ArgumentMatchers.anyBoolean": 1,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.Result.newValid": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan.filesystem": 3,
                "org.mockito": 3,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 6.856722703560362
    },
    "org.sonar.batch.bootstrapper.LogCallbackAppenderTest.testLevelTranslation": {
        "filePath": "org\\sonar\\batch\\bootstrapper\\LogCallbackAppenderTest.java",
        "methodName": "testLevelTranslation",
        "stats": {
            "methodCalls": {
                "org.sonar.batch.bootstrapper.LogCallbackAppenderTest.testMessage": 6,
                "ch.qos.logback.classic.spi.ILoggingEvent.getFormattedMessage": 12,
                "org.sonar.batch.bootstrapper.LogCallbackAppender.append": 6,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 12,
                "org.mockito.Mockito.when": 12,
                "ch.qos.logback.classic.spi.ILoggingEvent.getLevel": 12,
                "org.mockito.Mockito.verify": 24,
                "org.mockito.Mockito.verifyNoMoreInteractions": 6,
                "ch.qos.logback.classic.spi.ILoggingEvent.getThrowableProxy": 6,
                "org.sonar.batch.bootstrapper.LogOutput.log": 6,
                "org.mockito.Mockito.reset": 6,
                "org.mockito.Mockito.mock": 6
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "ch.qos.logback.classic.spi": 30,
                "org.sonar.batch.bootstrapper": 18,
                "org.mockito": 54,
                "org.mockito.stubbing": 12
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 114,
            "numRecursiveMethodCalls": 6,
            "linesOfCode": 66,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 66,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 7.4360573923607625
    },
    "org.sonar.scanner.report.ReportPublisherTest.fail_if_public_url_malformed": {
        "filePath": "org\\sonar\\scanner\\report\\ReportPublisherTest.java",
        "methodName": "fail_if_public_url_malformed",
        "stats": {
            "methodCalls": {
                "org.sonar.api.platform.Server.getPublicRootUrl": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.report.ReportPublisher.start": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.report": 1,
                "org.mockito": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2,
                "org.sonar.api.platform": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 11.205196253787731
    },
    "org.sonar.scanner.scan.filesystem.MetadataGeneratorTest.start_with_bom": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\MetadataGeneratorTest.java",
        "methodName": "start_with_bom",
        "stats": {
            "methodCalls": {
                "java.nio.file.Path.getParent": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "java.io.File.toPath": 1,
                "java.nio.file.Path.toFile": 1,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.originalLineStartOffsets": 1,
                "org.assertj.core.api.AbstractIntArrayAssert.containsOnly": 2,
                "java.nio.file.Path.toString": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.md5Hash": 1,
                "org.assertj.core.api.AbstractIntegerAssert.isEqualTo": 2,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.originalLineEndOffsets": 1,
                "org.sonar.scanner.scan.filesystem.MetadataGenerator.setMetadata": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "java.nio.file.Path.getFileName": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.nonBlankLines": 1,
                "org.apache.commons.codec.digest.DigestUtils.md5Hex": 1,
                "org.sonar.scanner.scan.filesystem.MetadataGeneratorTest.createInputFileWithMetadata": 2,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.lines": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setModuleBaseDir": 1
            },
            "objectInstantiations": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.io": 1,
                "org.sonar.scanner.scan.filesystem": 3,
                "org.sonar.api.batch.fs.internal": 10,
                "org.apache.commons.io": 1,
                "org.assertj.core.api": 10,
                "java.nio.file": 5,
                "org.apache.commons.codec.digest": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 28,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 12,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 12,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 6.765295575173718
    },
    "org.sonar.scanner.cache.AnalysisCacheEnabledTest.disabled_if_property_set": {
        "filePath": "org\\sonar\\scanner\\cache\\AnalysisCacheEnabledTest.java",
        "methodName": "disabled_if_property_set",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.scanner.cache.AnalysisCacheEnabled.isEnabled": 1,
                "java.util.Optional.of": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.cache": 1,
                "java.util": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 7.099405155415922
    },
    "org.sonar.scanner.externalissue.ExternalIssueImporterTest.execute_whenDeprecatedFormatWithStartButNotEndColumn": {
        "filePath": "org\\sonar\\scanner\\externalissue\\ExternalIssueImporterTest.java",
        "methodName": "execute_whenDeprecatedFormatWithStartButNotEndColumn",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.DefaultInputFile.getProjectRelativePath": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.selectLine": 1,
                "org.sonar.api.batch.fs.TextPointer.line": 2,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.allExternalIssues": 2,
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.newIssue": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.sonar.api.batch.fs.TextRange.end": 3,
                "java.util.Random.nextInt": 1,
                "org.sonar.api.batch.fs.TextRange.start": 2,
                "org.assertj.core.api.AbstractIntegerAssert.isEqualTo": 2,
                "java.util.Iterator.next": 1,
                "org.sonar.scanner.externalissue.ExternalIssueImporterTest.runOnDeprecatedFormat": 1,
                "java.util.Collection.iterator": 1,
                "org.sonar.api.batch.sensor.issue.IssueLocation.textRange": 1,
                "org.sonar.api.batch.fs.TextPointer.lineOffset": 3,
                "org.sonar.scanner.externalissue.ExternalIssueImporter.execute": 1,
                "org.sonar.api.batch.sensor.issue.IIssue.primaryLocation": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 2,
                "org.apache.commons.lang3.RandomStringUtils.randomAlphabetic": 3
            },
            "objectInstantiations": {
                "org.sonar.scanner.externalissue.ExternalIssueImporter": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Location": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.Issue": 1,
                "org.sonar.scanner.externalissue.ExternalIssueReport.TextRange": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.externalissue": 10,
                "java.util": 3,
                "org.apache.commons.lang3": 3,
                "org.sonar.scanner.externalissue.ExternalIssueReport": 2,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.sonar.api.batch.fs": 11,
                "org.sonar.api.batch.fs.internal": 2,
                "org.assertj.core.api": 10,
                "org.sonar.api.batch.sensor.issue": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 35,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 27,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 27,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 8.565256045823597
    },
    "org.sonar.scanner.ci.vendors.TravisCiTest.getName": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\TravisCiTest.java",
        "methodName": "getName",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.ci.CiVendor.getName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 7.617333404453311
    },
    "org.sonar.scanner.bootstrap.GlobalTempFolderProviderTest.createTempFolderDefault": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\GlobalTempFolderProviderTest.java",
        "methodName": "createTempFolderDefault",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.GlobalTempFolderProvider.provide": 1,
                "java.util.Collections.emptyMap": 1,
                "java.io.File.getAbsoluteFile": 1,
                "org.assertj.core.api.AbstractFileAssert.isDirectory": 2,
                "org.sonar.api.utils.System2.property": 1,
                "java.io.File.list": 1,
                "org.assertj.core.api.Assertions.assertThat": 6,
                "org.sonar.api.utils.System2.envVariable": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "java.io.File.getAbsolutePath": 2,
                "org.assertj.core.api.AbstractObjectArrayAssert.hasSize": 3,
                "org.mockito.Mockito.when": 2,
                "org.assertj.core.api.AbstractFileAssert.exists": 1,
                "org.sonar.api.utils.TempFolder.newFile": 1,
                "java.io.File.listFiles": 4,
                "org.sonar.scanner.bootstrap.GlobalTempFolderProviderTest.getCreatedTempDir": 2,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.sonar.api.utils.TempFolder.newDir": 1,
                "org.apache.commons.io.FileUtils.deleteQuietly": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.GlobalTempFolderProvider": 1,
                "org.sonar.scanner.bootstrap.ScannerProperties": 1,
                "java.io.File": 2
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.util": 1,
                "org.mockito": 3,
                "java.io": 13,
                "org.sonar.api.utils": 6,
                "org.sonar.scanner.bootstrap": 5,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 12,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 35,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 21,
            "linesOfCodeJunitTest": 15,
            "logicalLinesOfCode": 22,
            "logicalLinesOfCodeJunitTest": 16
        },
        "stabilityMetricValue": 6.922607604861013
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedFiles_from_merged_and_diverged": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedFiles_from_merged_and_diverged",
        "stats": {
            "methodCalls": {
                "org.eclipse.jgit.api.Git.commit": 13,
                "org.eclipse.jgit.api.MergeCommand.call": 1,
                "java.nio.file.Path.getParent": 9,
                "org.eclipse.jgit.api.AddCommand.call": 13,
                "org.eclipse.jgit.api.CheckoutCommand.setName": 1,
                "org.assertj.core.api.Assertions.assertThat": 4,
                "org.eclipse.jgit.api.MergeCommand.include": 1,
                "java.lang.StringBuilder.toString": 18,
                "org.eclipse.jgit.api.CheckoutCommand.call": 1,
                "java.util.Random.nextInt": 9,
                "java.nio.file.Path.resolve": 21,
                "org.assertj.core.api.AbstractMapAssert.isEmpty": 1,
                "org.eclipse.jgit.lib.Repository.exactRef": 2,
                "org.eclipse.jgit.api.CreateBranchCommand.setName": 1,
                "org.eclipse.jgit.api.Git.rm": 2,
                "org.eclipse.jgit.api.RmCommand.addFilepattern": 2,
                "java.util.Collections.singleton": 1,
                "java.util.Arrays.asList": 2,
                "java.util.Set.remove": 1,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 3,
                "org.eclipse.jgit.api.Git.add": 13,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 13,
                "org.eclipse.jgit.lib.AnyObjectId.getName": 1,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 13,
                "org.eclipse.jgit.api.Git.branchCreate": 1,
                "org.sonar.scm.git.GitScmProvider.branchChangedLines": 2,
                "org.eclipse.jgit.api.CreateBranchCommand.call": 1,
                "java.nio.file.Files.createDirectories": 9,
                "java.lang.String.length": 9,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.eclipse.jgit.api.RmCommand.call": 2,
                "org.sonar.scm.git.GitScmProviderTest.commit": 13,
                "org.eclipse.jgit.api.Git.checkout": 1,
                "org.assertj.core.data.MapEntry.entry": 3,
                "org.mockito.Mockito.mock": 3,
                "org.sonar.scm.git.GitUtils.createFile": 9,
                "java.lang.String.getBytes": 11,
                "org.assertj.core.api.AbstractIterableAssert.containsExactlyInAnyOrder": 1,
                "java.util.Set.add": 2,
                "org.sonar.scm.git.GitScmProviderTest.appendToAndCommitFile": 2,
                "java.lang.StringBuilder.append": 36,
                "org.assertj.core.api.AbstractMapAssert.containsOnly": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedLine": 9,
                "java.util.List.of": 1,
                "org.eclipse.jgit.api.CommitCommand.call": 13,
                "java.lang.String.join": 13,
                "java.nio.file.Files.write": 11,
                "org.sonar.scm.git.GitScmProviderTest.createAndCommitFile": 18,
                "org.eclipse.jgit.api.Git.getRepository": 2,
                "org.eclipse.jgit.api.CreateBranchCommand.setStartPoint": 1,
                "org.eclipse.jgit.api.CommitCommand.setAuthor": 13,
                "org.sonar.scm.git.GitScmProvider.branchChangedFiles": 1,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 3,
                "org.eclipse.jgit.api.Git.merge": 1,
                "org.eclipse.jgit.lib.Ref.getObjectId": 2,
                "org.sonar.scm.git.GitScmProviderTest.deleteAndCommitFile": 2,
                "org.sonar.scm.git.GitScmProviderTest.randomizedContent": 9
            },
            "objectInstantiations": {
                "java.util.HashSet": 3,
                "java.lang.StringBuilder": 18,
                "org.sonar.scm.git.GitScmProvider": 3
            },
            "packageAccesses": {
                "java.util": 20,
                "java.lang": 149,
                "org.eclipse.jgit.api": 109,
                "org.mockito": 3,
                "org.eclipse.jgit.lib": 7,
                "org.sonar.scm.git": 74,
                "org.assertj.core.api": 8,
                "org.assertj.core.data": 3,
                "java.nio.file": 59
            },
            "numConditionals": 0,
            "numLoops": 40,
            "numNestedLoops": 9,
            "numMethodCalls": 352,
            "numRecursiveMethodCalls": 68,
            "linesOfCode": 244,
            "linesOfCodeJunitTest": 25,
            "logicalLinesOfCode": 284,
            "logicalLinesOfCodeJunitTest": 25
        },
        "stabilityMetricValue": 9.744241022770868
    },
    "org.sonar.scanner.cpd.CpdSettingsTest.minimumTokensByLanguage": {
        "filePath": "org\\sonar\\scanner\\cpd\\CpdSettingsTest.java",
        "methodName": "minimumTokensByLanguage",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.Configuration.getInt": 2,
                "org.sonar.scanner.cpd.CpdSettings.getMinimumTokens": 2,
                "java.util.Optional.of": 2,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.mockito.Mockito.when": 2,
                "org.assertj.core.api.AbstractIntegerAssert.isEqualTo": 2
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 2,
                "org.mockito": 2,
                "org.sonar.scanner.cpd": 2,
                "org.sonar.api.config": 2,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 7.063173838322398
    },
    "org.sonar.scanner.ci.vendors.GitlabCiTest.getName": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\GitlabCiTest.java",
        "methodName": "getName",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.ci.CiVendor.getName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 6.779284512714691
    },
    "org.sonar.scanner.bootstrap.ScannerPluginRepositoryTest.install_and_load_plugins": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ScannerPluginRepositoryTest.java",
        "methodName": "install_and_load_plugins",
        "stats": {
            "methodCalls": {
                "org.sonar.core.platform.PluginClassLoader.load": 1,
                "org.mockito.ArgumentMatchers.anySet": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsExactlyInAnyOrder": 3,
                "org.sonar.api.config.Configuration.getBoolean": 1,
                "java.util.Optional.of": 1,
                "org.sonar.scanner.bootstrap.PluginInstaller.installRequiredPlugins": 1,
                "org.assertj.core.api.Assertions.assertThat": 8,
                "org.mockito.ArgumentMatchers.anyMap": 1,
                "org.sonar.scanner.bootstrap.PluginInstaller.installPluginsForLanguages": 1,
                "org.sonar.scanner.bootstrap.ScannerPluginRepository.installPluginsForLanguages": 1,
                "java.util.Map.values": 1,
                "java.util.List.of": 1,
                "org.assertj.core.api.AbstractAssert.isSameAs": 2,
                "org.sonar.scanner.bootstrap.ScannerPluginRepository.getPluginsByKey": 2,
                "org.sonar.scanner.bootstrap.ScannerPluginRepository.start": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsOnly": 2,
                "java.util.Map.get": 2,
                "org.assertj.core.api.AbstractMapAssert.isEqualTo": 1,
                "org.sonar.core.platform.PluginClassLoader.unload": 1,
                "org.sonar.scanner.bootstrap.ScannerPluginRepository.getPluginInstance": 1,
                "java.util.Map.of": 2,
                "org.sonar.scanner.bootstrap.ScannerPluginRepository.stop": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.mockito.Mockito.when": 4,
                "org.sonar.scanner.bootstrap.ScannerPluginRepository.getPluginInfos": 2,
                "com.google.common.collect.ImmutableMap.of": 2,
                "org.mockito.Mockito.verify": 1,
                "org.mockito.ArgumentMatchers.anyCollection": 1,
                "org.sonar.scanner.bootstrap.ScannerPluginRepository.getPluginInfo": 1,
                "org.sonar.scanner.bootstrap.ScannerPluginRepository.getExternalPluginsInfos": 1,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "java.util.HashSet": 1,
                "org.sonar.core.platform.PluginInfo": 2,
                "org.sonar.scanner.bootstrap.ScannerPlugin": 2
            },
            "packageAccesses": {
                "java.util": 11,
                "org.mockito": 10,
                "org.sonar.api": 2,
                "org.sonar.core.platform": 6,
                "org.sonar.scanner.bootstrap": 14,
                "org.sonar.api.config": 1,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 16,
                "com.google.common.collect": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 55,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 22,
            "linesOfCodeJunitTest": 22,
            "logicalLinesOfCode": 22,
            "logicalLinesOfCodeJunitTest": 22
        },
        "stabilityMetricValue": 5.732908891327553
    },
    "org.sonar.scanner.rule.ActiveRulesProviderTest.testCombinationOfRules": {
        "filePath": "org\\sonar\\scanner\\rule\\ActiveRulesProviderTest.java",
        "methodName": "testCombinationOfRules",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.newBuilder": 1,
                "org.sonar.api.rule.RuleKey.of": 10,
                "org.sonar.scanner.rule.ActiveRulesProvider.provide": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.setKey": 1,
                "org.mockito.Mockito.verifyNoMoreInteractions": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.setLanguage": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsOnly": 2,
                "org.sonar.scanner.rule.ActiveRulesProviderTest.mockProfiles": 1,
                "org.sonar.api.batch.rule.internal.DefaultActiveRules.getDeprecatedRuleKeys": 1,
                "org.sonar.api.utils.DateUtils.formatDateTime": 1,
                "com.google.common.collect.ImmutableSet.of": 3,
                "com.google.common.collect.ImmutableList.of": 3,
                "java.util.List.add": 1,
                "org.sonar.scanner.rule.DefaultActiveRulesLoader.load": 6,
                "org.sonar.scanner.rule.ActiveRulesProviderTest.mockRule": 3,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.mockito.Mockito.when": 3,
                "org.sonar.api.batch.rule.LoadedActiveRule.setDeprecatedKeys": 3,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.setRulesUpdatedAt": 1,
                "org.sonar.api.batch.rule.LoadedActiveRule.setName": 3,
                "org.sonar.api.batch.rule.internal.DefaultActiveRules.findAll": 2,
                "org.mockito.Mockito.verify": 3,
                "org.assertj.core.api.AbstractIterableAssert.extracting": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.build": 1,
                "org.sonar.api.batch.rule.LoadedActiveRule.setRuleKey": 3
            },
            "objectInstantiations": {
                "org.sonar.api.batch.rule.LoadedActiveRule": 3,
                "org.sonar.scanner.rule.QualityProfiles": 1,
                "java.util.LinkedList": 1,
                "java.util.Date": 1
            },
            "packageAccesses": {
                "java.util": 7,
                "org.mockito": 7,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse": 1,
                "org.sonar.api.utils": 1,
                "org.sonar.api.batch.rule.internal": 4,
                "org.sonar.api.batch.rule": 18,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 7,
                "org.sonar.api.rule": 10,
                "java.lang": 1,
                "org.sonarqube.ws": 5,
                "org.sonar.scanner.rule": 13,
                "com.google.common.collect": 6
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 63,
            "numRecursiveMethodCalls": 4,
            "linesOfCode": 38,
            "linesOfCodeJunitTest": 18,
            "logicalLinesOfCode": 39,
            "logicalLinesOfCodeJunitTest": 18
        },
        "stabilityMetricValue": 9.965098942988796
    },
    "org.sonar.scm.git.strategy.DefaultBlameStrategyTest.useRepositoryBlame_whenFileBlamePropsDisableOrUnspecified_shouldEnableRepoBlame": {
        "filePath": "org\\sonar\\scm\\git\\strategy\\DefaultBlameStrategyTest.java",
        "methodName": "useRepositoryBlame_whenFileBlamePropsDisableOrUnspecified_shouldEnableRepoBlame",
        "stats": {
            "methodCalls": {
                "java.util.Optional.of": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonar.api.config.Configuration.get": 1,
                "org.sonar.scm.git.strategy.BlameStrategy.getBlameAlgorithm": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.mockito.Mockito.when": 1,
                "java.lang.Enum.name": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 1,
                "java.lang": 1,
                "org.mockito": 1,
                "org.sonar.scm.git.strategy": 1,
                "org.sonar.api.config": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 6.411757109041844
    },
    "org.sonar.scanner.ci.vendors.JenkinsTest.getName": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\JenkinsTest.java",
        "methodName": "getName",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.ci.CiVendor.getName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 6.522969305496801
    },
    "org.sonar.scanner.cache.AnalysisCacheMemoryStorageTest.get_throws_IAE_if_doesnt_contain_key": {
        "filePath": "org\\sonar\\scanner\\cache\\AnalysisCacheMemoryStorageTest.java",
        "methodName": "get_throws_IAE_if_doesnt_contain_key",
        "stats": {
            "methodCalls": {
                "java.util.Optional.empty": 1,
                "org.sonar.scanner.cache.AnalysisCacheLoader.load": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.cache.AnalysisCacheMemoryStorage.load": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonar.scanner.cache.AnalysisCacheMemoryStorage.contains": 1,
                "org.sonar.scanner.cache.AnalysisCacheMemoryStorage.get": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.cache": 4,
                "java.util": 1,
                "org.mockito": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 7.846465218958213
    },
    "org.sonar.scanner.report.ReportPublisherTest.upload_error_message": {
        "filePath": "org\\sonar\\scanner\\report\\ReportPublisherTest.java",
        "methodName": "upload_error_message",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 1,
                "org.sonarqube.ws.client.WsResponse.failIfNotSuccessful": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.mockito.stubbing.OngoingStubbing.thenThrow": 2,
                "org.sonar.scanner.report.ReportPublisher.upload": 1,
                "org.sonar.api.impl.utils.JUnitTempFolder.newFile": 1,
                "org.mockito.Mockito.when": 2,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.lang.IllegalStateException": 1,
                "org.sonarqube.ws.client.HttpException": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 4,
                "org.sonar.api.impl.utils": 1,
                "java.lang": 1,
                "org.mockito": 4,
                "org.sonar.scanner.report": 1,
                "org.sonar.scanner.bootstrap": 1,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 13,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 9.82547634253037
    },
    "org.sonar.scanner.issue.ignore.pattern.IssueInclusionPatternInitializerTest.shouldHavePatternsBasedOnMulticriteriaPattern": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\pattern\\IssueInclusionPatternInitializerTest.java",
        "methodName": "shouldHavePatternsBasedOnMulticriteriaPattern",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.issue.ignore.pattern.AbstractPatternInitializer.initPatterns": 1,
                "org.sonar.api.config.internal.MapSettings.setProperty": 5,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 2,
                "org.sonar.scanner.issue.ignore.pattern.AbstractPatternInitializer.getMulticriteriaPatterns": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.sonar.scanner.issue.ignore.pattern.AbstractPatternInitializer.hasConfiguredPatterns": 1,
                "org.sonar.scanner.issue.ignore.pattern.AbstractPatternInitializer.hasMulticriteriaPatterns": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 4,
                "org.sonar.api.config.internal": 5,
                "org.assertj.core.api": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 15,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 9,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 9,
            "logicalLinesOfCodeJunitTest": 9
        },
        "stabilityMetricValue": 6.454099949537137
    },
    "org.sonar.scanner.genericcoverage.GenericTestExecutionReportParserTest.unittest_duration_in_testCase_should_not_be_negative": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericTestExecutionReportParserTest.java",
        "methodName": "unittest_duration_in_testCase_should_not_be_negative",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.genericcoverage.GenericTestExecutionReportParserTest.addFileToFs": 1,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.module": 1,
                "org.sonar.api.batch.fs.internal.DefaultFileSystem.add": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.initMetadata": 1,
                "org.sonar.api.batch.fs.InputComponent.key": 1,
                "org.sonar.scanner.genericcoverage.GenericTestExecutionReportParserTest.setupFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setType": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.fileSystem": 1,
                "org.sonar.scanner.genericcoverage.GenericTestExecutionReportParserTest.parseUnitTestReport": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "org.sonar.scanner.genericcoverage.GenericTestExecutionReportParser.parse": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLanguage": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericTestExecutionReportParser": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.io": 1,
                "org.sonar.scanner.genericcoverage": 6,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.sonar.api.batch.fs.internal": 6,
                "org.sonar.api.batch.fs": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 9,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 9,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 11.145126872862173
    },
    "org.sonar.scanner.repository.ReferenceBranchSupplierTest.get_returns_reference_branch_when_set": {
        "filePath": "org\\sonar\\scanner\\repository\\ReferenceBranchSupplierTest.java",
        "methodName": "get_returns_reference_branch_when_set",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.repository.ReferenceBranchSupplier.get": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.Builder.build": 1,
                "org.mockito.Mockito.when": 3,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.Builder.setValue": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchName": 1,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.Builder.setType": 1,
                "org.sonar.scanner.repository.ReferenceBranchSupplierTest.createResponse": 1,
                "org.sonar.scanner.repository.NewCodePeriodLoader.load": 1,
                "org.sonarqube.ws.NewCodePeriods.ShowWSResponse.newBuilder": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchType": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan.branch": 2,
                "org.mockito": 3,
                "org.sonar.scanner.repository": 3,
                "org.sonarqube.ws": 4,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 17,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 6.900234522066782
    },
    "org.sonar.scanner.sensor.ModuleSensorContextTest.shouldProvideComponents_returnsNotNull": {
        "filePath": "org\\sonar\\scanner\\sensor\\ModuleSensorContextTest.java",
        "methodName": "shouldProvideComponents_returnsNotNull",
        "stats": {
            "methodCalls": {
                "org.sonar.api.utils.Version.parse": 1,
                "org.sonar.scanner.sensor.ProjectSensorContext.runtime": 1,
                "org.assertj.core.api.Assertions.assertThat": 14,
                "org.sonar.scanner.sensor.ProjectSensorContext.newIssue": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 2,
                "org.sonar.scanner.sensor.ProjectSensorContext.newMeasure": 1,
                "org.sonar.scanner.sensor.ProjectSensorContext.newAnalysisError": 1,
                "org.sonar.scanner.sensor.ProjectSensorContext.canSkipUnchangedFiles": 1,
                "org.sonar.scanner.sensor.ProjectSensorContext.newAdHocRule": 1,
                "org.sonar.scanner.sensor.ProjectSensorContext.previousCache": 1,
                "org.assertj.core.api.AbstractAssert.isNotNull": 5,
                "org.sonar.scanner.sensor.ProjectSensorContext.newExternalIssue": 1,
                "org.sonar.scanner.sensor.ProjectSensorContext.activeRules": 1,
                "org.sonar.scanner.sensor.ProjectSensorContext.isCancelled": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 7,
                "org.sonar.scanner.sensor.ProjectSensorContext.fileSystem": 1,
                "org.sonar.scanner.sensor.ProjectSensorContext.getSonarQubeVersion": 1,
                "org.sonar.scanner.sensor.ProjectSensorContext.newSignificantCode": 1,
                "org.sonar.scanner.sensor.ProjectSensorContext.nextCache": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.sensor": 14,
                "org.sonar.api.utils": 1,
                "org.assertj.core.api": 28
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 43,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 14,
            "linesOfCodeJunitTest": 14,
            "logicalLinesOfCode": 14,
            "logicalLinesOfCodeJunitTest": 14
        },
        "stabilityMetricValue": 7.16048743173215
    },
    "org.sonar.scanner.ci.vendors.BuildkiteTest.getName": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\BuildkiteTest.java",
        "methodName": "getName",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.ci.CiVendor.getName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 8.707070829699648
    },
    "org.sonar.scanner.ci.vendors.BuildkiteTest.loadConfiguration": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\BuildkiteTest.java",
        "methodName": "loadConfiguration",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 3,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.sonar.scanner.ci.vendors.BuildkiteTest.setEnvVariable": 3,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.mockito.Mockito.when": 3
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 3,
                "org.sonar.api.utils": 3,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 16,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 6.025571812779327
    },
    "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.coverage_lineNumber_in_lineToCover_can_appear_several_times_for_same_file": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericCoverageReportParserTest.java",
        "methodName": "coverage_lineNumber_in_lineToCover_can_appear_several_times_for_same_file",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.internal.SensorContextTester.module": 1,
                "org.sonar.api.batch.fs.internal.DefaultFileSystem.add": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.initMetadata": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser.parse": 1,
                "org.sonar.api.batch.fs.InputComponent.key": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.setupFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setType": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.fileSystem": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.parseCoverageReport": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.addFileToFs": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLanguage": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.io": 1,
                "org.sonar.scanner.genericcoverage": 5,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.sonar.api.batch.fs.internal": 6,
                "org.sonar.api.batch.fs": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 9.137917184251593
    },
    "org.sonar.scanner.ci.vendors.CodeMagicTest.loadConfiguration_commitEnvVariableAvailable_addScmRevisionToConfig": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\CodeMagicTest.java",
        "methodName": "loadConfiguration_commitEnvVariableAvailable_addScmRevisionToConfig",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.sonar.scanner.ci.vendors.CodeMagicTest.setEnvVariable": 2,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 2,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.mockito.Mockito.when": 2
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 2,
                "org.sonar.api.utils": 2,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 5.73792496442407
    },
    "org.sonar.scanner.scan.WorkDirectoriesInitializerTest.execute_on_hierarchy_should_clean_submodules": {
        "filePath": "org\\sonar\\scanner\\scan\\WorkDirectoriesInitializerTest.java",
        "methodName": "execute_on_hierarchy_should_clean_submodules",
        "stats": {
            "methodCalls": {
                "java.io.File.toPath": 2,
                "java.io.File.list": 2,
                "org.assertj.core.api.Assertions.assertThat": 7,
                "org.sonar.scanner.scan.WorkDirectoriesInitializer.execute": 2,
                "org.assertj.core.api.AbstractFileAssert.isEmptyDirectory": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.sonar.api.batch.fs.internal.AbstractProjectOrModule.getWorkDir": 2,
                "org.mockito.Mockito.when": 4,
                "org.sonar.scanner.fs.InputModuleHierarchy.children": 2,
                "org.assertj.core.api.AbstractFileAssert.exists": 4,
                "java.io.File.createNewFile": 2,
                "java.util.Arrays.asList": 2,
                "org.assertj.core.api.AbstractObjectArrayAssert.containsOnly": 2,
                "org.mockito.Mockito.mock": 2,
                "java.io.File.mkdir": 2
            },
            "objectInstantiations": {
                "java.io.File": 4
            },
            "packageAccesses": {
                "org.sonar.scanner.fs": 2,
                "java.util": 2,
                "org.mockito": 6,
                "java.io": 14,
                "org.sonar.scanner.scan": 2,
                "org.sonar.api.batch.fs.internal": 4,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 14
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 40,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 21,
            "linesOfCodeJunitTest": 21,
            "logicalLinesOfCode": 21,
            "logicalLinesOfCodeJunitTest": 21
        },
        "stabilityMetricValue": 6.214583464695206
    },
    "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.testGetFilteredExtensionWithExtensionMatcher": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ModuleSensorExtensionDictionaryTest.java",
        "methodName": "testGetFilteredExtensionWithExtensionMatcher",
        "stats": {
            "methodCalls": {
                "java.util.Collection.size": 1,
                "org.sonar.scanner.bootstrap.AbstractExtensionDictionary.select": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.core.platform.Container.getComponentsByType": 1,
                "java.util.Arrays.asList": 1,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "java.lang.Object.equals": 1,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.newSelector": 1,
                "org.junit.Assert.assertEquals": 1,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.sensor.ModuleSensorExtensionDictionary": 1,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.FakeSensor": 2
            },
            "packageAccesses": {
                "java.util": 3,
                "java.lang": 1,
                "org.mockito": 3,
                "org.sonar.scanner.bootstrap": 4,
                "org.sonar.core.platform": 2,
                "org.sonar.scanner.sensor": 2,
                "org.junit": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2,
                "org.sonar.api.batch.sensor": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 13,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 9,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 10,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 8.259257570655718
    },
    "org.sonar.scanner.scan.ProjectReactorBuilderTest.shouldFailIfMandatoryPropertiesAreNotPresent": {
        "filePath": "org\\sonar\\scanner\\scan\\ProjectReactorBuilderTest.java",
        "methodName": "shouldFailIfMandatoryPropertiesAreNotPresent",
        "stats": {
            "methodCalls": {
                "java.util.Map.put": 2,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonar.scanner.scan.ProjectReactorBuilder.checkMandatoryProperties": 1
            },
            "objectInstantiations": {
                "java.util.HashMap": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scan": 1,
                "java.util": 4,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 8.874598833075865
    },
    "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.coverage_covered_in_lineToCover_should_be_a_boolean": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericCoverageReportParserTest.java",
        "methodName": "coverage_covered_in_lineToCover_should_be_a_boolean",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.sensor.internal.SensorContextTester.module": 1,
                "org.sonar.api.batch.fs.internal.DefaultFileSystem.add": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.initMetadata": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser.parse": 1,
                "org.sonar.api.batch.fs.InputComponent.key": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.setupFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setType": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.fileSystem": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.parseCoverageReport": 1,
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParserTest.addFileToFs": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setLanguage": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericCoverageReportParser": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.io": 1,
                "org.sonar.scanner.genericcoverage": 5,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.sonar.api.batch.fs.internal": 6,
                "org.sonar.api.batch.fs": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 6.333815731028333
    },
    "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.methodDependsUponCollection": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ModuleSensorExtensionDictionaryTest.java",
        "methodName": "methodDependsUponCollection",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.AbstractExtensionDictionary.select": 2,
                "java.util.List.get": 4,
                "org.sonar.core.platform.Container.getComponentsByType": 2,
                "java.util.Arrays.asList": 3,
                "org.assertj.core.api.Assertions.assertThat": 6,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 2,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 4,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.newSelector": 2,
                "org.mockito.Mockito.mock": 4
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.MethodDependentOf": 1,
                "org.sonar.scanner.sensor.ModuleSensorExtensionDictionary": 2,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.GeneratesSomething": 1,
                "java.util.ArrayList": 2
            },
            "packageAccesses": {
                "java.util": 10,
                "java.lang": 2,
                "org.mockito": 6,
                "org.sonar.scanner.bootstrap": 6,
                "org.sonar.core.platform": 4,
                "org.sonar.scanner.sensor": 3,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 12
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 33,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 18,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 18,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 7.24578868893145
    },
    "org.sonar.scanner.scan.filesystem.MetadataGeneratorTest.complete_input_file": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\MetadataGeneratorTest.java",
        "methodName": "complete_input_file",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 3,
                "org.sonar.scanner.scan.filesystem.StatusDetection.status": 1,
                "org.sonar.api.utils.PathUtils.sanitize": 1,
                "org.assertj.core.api.Assertions.assertThat": 6,
                "java.nio.file.Path.resolve": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.relativePath": 1,
                "org.assertj.core.api.AbstractIntegerAssert.isOne": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.key": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.absolutePath": 1,
                "org.apache.commons.io.FileUtils.touch": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.lines": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.setModuleBaseDir": 1,
                "java.io.File.toPath": 1,
                "java.nio.file.Path.toFile": 3,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.type": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "java.nio.file.Path.toString": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.file": 1,
                "java.nio.file.Path.toAbsolutePath": 1,
                "org.sonar.scanner.scan.filesystem.MetadataGenerator.setMetadata": 1,
                "java.nio.file.Path.toRealPath": 1,
                "org.sonar.scanner.scan.filesystem.MetadataGeneratorTest.createInputFileWithMetadata": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 2
            },
            "objectInstantiations": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "org.mockito": 1,
                "java.io": 1,
                "org.sonar.api.utils": 1,
                "org.sonar.scanner.scan.filesystem": 3,
                "org.sonar.api.batch.fs.internal": 11,
                "org.apache.commons.io": 2,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 12,
                "java.nio.file": 9
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 37,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 15,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 15,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 6.7279229187198
    },
    "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializerTest.shouldLogInvalidStartBlockPattern": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\pattern\\IssueExclusionPatternInitializerTest.java",
        "methodName": "shouldLogInvalidStartBlockPattern",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.setProperty": 3,
                "org.sonar.api.config.internal.MapSettings.asConfig": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 1,
                "org.sonar.api.config.internal": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 7.66204905898554
    },
    "org.sonar.batch.bootstrapper.LoggingConfiguratorTest.testNoStdout": {
        "filePath": "org\\sonar\\batch\\bootstrapper\\LoggingConfiguratorTest.java",
        "methodName": "testNoStdout",
        "stats": {
            "methodCalls": {
                "org.sonar.batch.bootstrapper.LoggingConfigurator.apply": 1,
                "java.lang.System.setOut": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.slf4j.Logger.info": 1,
                "org.slf4j.Logger.error": 1,
                "org.sonar.batch.bootstrapper.LoggingConfiguration.setLogOutput": 1,
                "org.assertj.core.api.AbstractIntegerAssert.isZero": 1,
                "java.nio.charset.Charset.name": 1,
                "java.lang.Object.getClass": 1,
                "org.slf4j.Logger.debug": 1,
                "org.slf4j.LoggerFactory.getLogger": 1,
                "java.io.ByteArrayOutputStream.size": 1
            },
            "objectInstantiations": {
                "java.io.PrintStream": 1
            },
            "packageAccesses": {
                "org.sonar.batch.bootstrapper": 2,
                "java.lang": 2,
                "org.slf4j": 5,
                "java.io": 2,
                "org.assertj.core.api": 2,
                "java.nio.charset": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 8,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 39.34630500272987
    },
    "org.sonar.scanner.issue.ignore.IgnoreIssuesFilterTest.shouldRejectIfRulePatternMatchesDeprecatedRule": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\IgnoreIssuesFilterTest.java",
        "methodName": "shouldRejectIfRulePatternMatchesDeprecatedRule",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.issue.ignore.IgnoreIssuesFilter.accept": 1,
                "org.sonar.api.batch.rule.internal.NewActiveRule.Builder.setRuleKey": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.api.rule.RuleKey.of": 1,
                "org.sonar.api.utils.WildcardPattern.create": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.sonar.scanner.issue.ignore.IgnoreIssuesFilter.addRuleExclusionPatternForComponent": 1,
                "org.mockito.Mockito.verify": 1,
                "org.sonar.api.batch.rule.internal.NewActiveRule.Builder.setDeprecatedKeys": 1,
                "java.util.Collections.singleton": 1,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "org.sonar.api.batch.rule.internal.NewActiveRule.Builder.build": 1,
                "org.sonar.api.notifications.AnalysisWarnings.addUnique": 1,
                "com.google.common.collect.ImmutableSet.of": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.IgnoreIssuesFilter": 1,
                "org.sonar.api.batch.rule.internal.NewActiveRule.Builder": 1,
                "org.sonar.api.batch.rule.internal.DefaultActiveRules": 1
            },
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 1,
                "java.util": 1,
                "org.mockito": 1,
                "org.sonar.api.utils": 2,
                "org.sonar.api.batch.rule.internal": 6,
                "org.sonar.api.notifications": 1,
                "org.sonar.scanner.issue.ignore": 4,
                "org.assertj.core.api": 4,
                "com.google.common.collect": 1,
                "org.sonar.api.rule": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 16,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 15.144511857368018
    },
    "org.sonar.scanner.cache.AnalysisCacheEnabledTest.enabled_by_default_if_not_pr": {
        "filePath": "org\\sonar\\scanner\\cache\\AnalysisCacheEnabledTest.java",
        "methodName": "enabled_by_default_if_not_pr",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.cache.AnalysisCacheEnabled.isEnabled": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.cache": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 13.071555483726154
    },
    "org.sonar.scanner.bootstrap.ScannerPluginInstallerTest.fail_if_plugin_not_found_two_times": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ScannerPluginInstallerTest.java",
        "methodName": "fail_if_plugin_not_found_two_times",
        "stats": {
            "methodCalls": {
                "java.util.Optional.empty": 1,
                "java.util.Map.put": 2,
                "org.mockito.ArgumentMatchers.argThat": 4,
                "java.util.Optional.of": 2,
                "org.sonar.scanner.bootstrap.ScannerPluginInstallerTest.enqueueDownload": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "java.util.jar.Manifest.getMainAttributes": 4,
                "org.sonar.scanner.WsTestUtil.mockReader": 1,
                "org.mockito.Mockito.when": 3,
                "org.sonar.scanner.bootstrap.ScannerPluginInstallerTest.enqueueNotFoundDownload": 1,
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller.installRequiredPlugins": 1,
                "java.util.jar.Attributes.putValue": 2,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "java.lang.Object.getClass": 2,
                "org.apache.commons.io.FileUtils.openOutputStream": 2,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.sonarqube.ws.client.WsResponse.contentReader": 2,
                "java.lang.Class.getResourceAsStream": 2,
                "org.mockito.stubbing.Stubber.when": 3,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.junit.rules.TemporaryFolder.newFile": 2,
                "org.mockito.Mockito.doReturn": 3,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "java.util.jar.Manifest": 2,
                "org.sonar.scanner.WsTestUtil.RequestMatcher": 1,
                "java.io.InputStreamReader": 2,
                "java.util.jar.JarOutputStream": 2
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 4,
                "java.util": 5,
                "org.mockito": 12,
                "org.sonar.scanner": 2,
                "org.sonar.scanner.bootstrap": 5,
                "org.mockito.stubbing": 6,
                "org.apache.commons.io": 2,
                "org.assertj.core.api": 2,
                "java.lang": 4,
                "org.junit.rules": 2,
                "java.io": 4,
                "java.util.jar": 14
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 57,
            "numRecursiveMethodCalls": 4,
            "linesOfCode": 26,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 33,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 20.650898548074956
    },
    "org.sonar.scanner.scan.ModuleIndexerTest.testIndex": {
        "filePath": "org\\sonar\\scanner\\scan\\ModuleIndexerTest.java",
        "methodName": "testIndex",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.DefaultInputModuleHierarchy.root": 2,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 12,
                "org.sonar.scanner.scan.ModuleIndexerTest.createIndexer": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.mockito.Mockito.when": 12,
                "org.sonar.api.batch.fs.internal.AbstractProjectOrModule.definition": 4,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.getParent": 2,
                "org.sonar.api.batch.fs.internal.AbstractProjectOrModule.key": 4,
                "org.assertj.core.api.AbstractAssert.isNotNull": 1,
                "java.util.Arrays.asList": 1,
                "org.sonar.scanner.scan.DefaultInputModuleHierarchy.children": 2,
                "org.sonar.scanner.scan.ModuleIndexer.start": 1,
                "org.mockito.Mockito.mock": 9
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.ModuleIndexer": 1,
                "org.sonar.scanner.scan.filesystem.InputComponentStore": 1
            },
            "packageAccesses": {
                "java.util": 1,
                "org.mockito": 21,
                "org.sonar.scanner.scan": 7,
                "org.sonar.scanner.scan.filesystem": 2,
                "org.sonar.api.batch.fs.internal": 13,
                "org.mockito.stubbing": 12,
                "org.assertj.core.api": 4,
                "org.sonar.api.batch.bootstrap": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 54,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 26,
            "linesOfCodeJunitTest": 23,
            "logicalLinesOfCode": 26,
            "logicalLinesOfCodeJunitTest": 23
        },
        "stabilityMetricValue": 24.652878949695044
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedLines_should_be_correct_when_change_is_not_committed": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedLines_should_be_correct_when_change_is_not_committed",
        "stats": {
            "methodCalls": {
                "org.eclipse.jgit.api.Git.commit": 1,
                "org.eclipse.jgit.api.AddCommand.call": 1,
                "org.eclipse.jgit.api.CheckoutCommand.setName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.lang.StringBuilder.append": 4,
                "java.lang.StringBuilder.toString": 2,
                "org.eclipse.jgit.api.CheckoutCommand.call": 1,
                "java.nio.file.Files.readAllLines": 2,
                "org.sonar.scm.git.GitScmProviderTest.randomizedLine": 2,
                "java.util.Random.nextInt": 2,
                "java.nio.file.Path.resolve": 3,
                "org.eclipse.jgit.api.CreateBranchCommand.setName": 1,
                "org.eclipse.jgit.api.CommitCommand.call": 1,
                "java.lang.String.join": 1,
                "java.util.Collections.singleton": 1,
                "java.util.Arrays.asList": 1,
                "java.nio.file.Files.write": 2,
                "java.util.List.add": 2,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "org.eclipse.jgit.api.Git.add": 1,
                "org.assertj.core.api.AbstractMapAssert.containsExactly": 1,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 1,
                "org.eclipse.jgit.api.Git.branchCreate": 1,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 1,
                "org.sonar.scm.git.GitScmProvider.branchChangedLines": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.call": 1,
                "org.eclipse.jgit.api.CommitCommand.setAuthor": 1,
                "java.lang.String.length": 2,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "org.sonar.scm.git.GitScmProviderTest.commit": 2,
                "org.eclipse.jgit.api.Git.checkout": 1,
                "org.sonar.scm.git.GitScmProviderTest.addLineToFile": 2,
                "org.assertj.core.data.MapEntry.entry": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.util.HashSet": 1,
                "java.lang.StringBuilder": 2,
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "java.util": 10,
                "java.lang": 16,
                "org.eclipse.jgit.api": 13,
                "org.mockito": 1,
                "org.sonar.scm.git": 10,
                "org.assertj.core.api": 2,
                "org.assertj.core.data": 1,
                "java.nio.file": 10
            },
            "numConditionals": 0,
            "numLoops": 5,
            "numNestedLoops": 2,
            "numMethodCalls": 48,
            "numRecursiveMethodCalls": 8,
            "linesOfCode": 36,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 41,
            "logicalLinesOfCodeJunitTest": 9
        },
        "stabilityMetricValue": 12.233619385162795
    },
    "org.sonar.scanner.ci.vendors.BitriseTest.isDetected": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\BitriseTest.java",
        "methodName": "isDetected",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.vendors.BitriseTest.setEnvVariable": 5,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 4,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 3,
                "org.sonar.api.utils.System2.envVariable": 5,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 5,
                "org.sonar.scanner.ci.CiVendor.isDetected": 4,
                "org.mockito.Mockito.when": 5
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 5,
                "org.sonar.api.utils": 5,
                "org.sonar.scanner.ci": 4,
                "org.assertj.core.api": 8,
                "org.mockito.stubbing": 5,
                "org.sonar.scanner.ci.vendors": 5
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 32,
            "numRecursiveMethodCalls": 5,
            "linesOfCode": 14,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 14,
            "logicalLinesOfCodeJunitTest": 9
        },
        "stabilityMetricValue": 11.896415276531474
    },
    "org.sonar.scanner.phases.ModuleSensorsExecutorTest.should_not_execute_global_sensor_for_submodule": {
        "filePath": "org\\sonar\\scanner\\phases\\ModuleSensorsExecutorTest.java",
        "methodName": "should_not_execute_global_sensor_for_submodule",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.sensor.ModuleSensorsExecutor.execute": 1,
                "org.sonar.scanner.sensor.AbstractSensorWrapper.wrappedSensor": 1,
                "org.mockito.Mockito.verifyNoMoreInteractions": 1,
                "org.sonar.scanner.sensor.AbstractSensorWrapper.analyse": 1,
                "org.mockito.Mockito.verify": 2,
                "org.mockito.Mockito.verifyNoInteractions": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 4,
                "org.sonar.scanner.sensor": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 11.703259019427852
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedLines_should_always_ignore_different_line_endings": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedLines_should_always_ignore_different_line_endings",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitUtils.createFile": 1,
                "org.eclipse.jgit.api.Git.commit": 2,
                "java.nio.file.Path.getParent": 1,
                "java.lang.String.getBytes": 2,
                "org.eclipse.jgit.api.AddCommand.call": 2,
                "org.eclipse.jgit.api.CheckoutCommand.setName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.lang.StringBuilder.append": 4,
                "java.lang.StringBuilder.toString": 2,
                "org.eclipse.jgit.api.CheckoutCommand.call": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedLine": 1,
                "java.util.Random.nextInt": 1,
                "java.nio.file.Path.resolve": 2,
                "org.assertj.core.api.AbstractMapAssert.isEmpty": 1,
                "org.eclipse.jgit.lib.Repository.exactRef": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.setName": 1,
                "org.eclipse.jgit.api.CommitCommand.call": 2,
                "java.lang.String.join": 2,
                "java.util.Collections.singleton": 1,
                "java.nio.file.Files.write": 2,
                "java.nio.file.Files.readString": 1,
                "org.sonar.scm.git.GitScmProviderTest.createAndCommitFile": 2,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "org.eclipse.jgit.api.Git.add": 2,
                "java.lang.String.replaceAll": 1,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 2,
                "org.eclipse.jgit.api.Git.getRepository": 1,
                "org.eclipse.jgit.lib.AnyObjectId.getName": 1,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 2,
                "org.eclipse.jgit.api.Git.branchCreate": 1,
                "org.sonar.scm.git.GitScmProvider.branchChangedLines": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.call": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.setStartPoint": 1,
                "java.nio.file.Files.createDirectories": 1,
                "org.eclipse.jgit.api.CommitCommand.setAuthor": 2,
                "java.lang.String.length": 1,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "org.eclipse.jgit.lib.Ref.getObjectId": 1,
                "org.sonar.scm.git.GitScmProviderTest.commit": 3,
                "org.eclipse.jgit.api.Git.checkout": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedContent": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.lang.StringBuilder": 2,
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "java.lang": 21,
                "org.eclipse.jgit.api": 22,
                "java.util": 2,
                "org.mockito": 1,
                "org.eclipse.jgit.lib": 4,
                "org.sonar.scm.git": 12,
                "org.assertj.core.api": 2,
                "java.nio.file": 9
            },
            "numConditionals": 0,
            "numLoops": 5,
            "numNestedLoops": 1,
            "numMethodCalls": 60,
            "numRecursiveMethodCalls": 10,
            "linesOfCode": 37,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 42,
            "logicalLinesOfCodeJunitTest": 9
        },
        "stabilityMetricValue": 13.141823072343922
    },
    "org.sonar.scanner.repository.ProjectRepositoriesProviderTest.testValidation": {
        "filePath": "org\\sonar\\scanner\\repository\\ProjectRepositoriesProviderTest.java",
        "methodName": "testValidation",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.sonar.scanner.repository.ProjectRepositoriesProvider.projectRepositories": 1,
                "org.mockito.ArgumentMatchers.eq": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.repository": 1,
                "org.mockito": 2,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 13.361839042219003
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedLines_given2NestedSubmodulesWithChangesInTheBottomSubmodule_detectChanges": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedLines_given2NestedSubmodulesWithChangesInTheBottomSubmodule_detectChanges",
        "stats": {
            "methodCalls": {
                "org.eclipse.jgit.api.Git.commit": 4,
                "java.nio.file.Path.getParent": 1,
                "org.eclipse.jgit.lib.BaseRepositoryBuilder.build": 1,
                "org.eclipse.jgit.api.AddCommand.call": 2,
                "org.eclipse.jgit.api.CheckoutCommand.setName": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "java.lang.StringBuilder.toString": 4,
                "org.eclipse.jgit.api.CheckoutCommand.call": 1,
                "java.util.Random.nextInt": 2,
                "org.eclipse.jgit.lib.BaseRepositoryBuilder.findGitDir": 1,
                "java.nio.file.Path.resolve": 5,
                "org.eclipse.jgit.api.CreateBranchCommand.setName": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsOnly": 1,
                "org.assertj.core.api.AbstractMapAssert.hasSize": 1,
                "java.net.URI.toString": 3,
                "org.eclipse.jgit.api.Git.cloneRepository": 1,
                "java.io.File.toPath": 5,
                "java.nio.file.Path.toFile": 4,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "org.eclipse.jgit.api.Git.add": 2,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 2,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 4,
                "org.eclipse.jgit.api.Git.branchCreate": 1,
                "org.sonar.scm.git.GitScmProvider.branchChangedLines": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.call": 1,
                "java.nio.file.Files.createDirectories": 1,
                "org.eclipse.jgit.api.SubmoduleAddCommand.call": 2,
                "org.eclipse.jgit.api.SubmoduleAddCommand.setPath": 2,
                "java.lang.String.length": 2,
                "java.nio.file.Path.toRealPath": 1,
                "org.sonar.scm.git.GitScmProviderTest.commit": 1,
                "org.eclipse.jgit.api.Git.checkout": 1,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.scm.git.GitUtils.createFile": 1,
                "java.lang.String.getBytes": 2,
                "java.lang.StringBuilder.append": 8,
                "org.eclipse.jgit.api.CloneCommand.setDirectory": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedLine": 2,
                "org.eclipse.jgit.api.Git.submoduleAdd": 2,
                "java.util.Iterator.next": 1,
                "java.util.Set.iterator": 1,
                "org.sonar.scm.git.GitScmProviderTest.addSubmodule": 2,
                "org.eclipse.jgit.api.CommitCommand.call": 4,
                "java.lang.String.join": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 3,
                "java.nio.file.Files.write": 2,
                "java.util.Set.of": 1,
                "org.eclipse.jgit.api.CloneCommand.call": 1,
                "org.sonar.scm.git.GitScmProviderTest.createAndCommitFile": 2,
                "java.util.Map.entrySet": 1,
                "org.eclipse.jgit.api.SubmoduleAddCommand.setURI": 2,
                "org.eclipse.jgit.api.CloneCommand.setCloneSubmodules": 1,
                "org.eclipse.jgit.storage.file.FileRepositoryBuilder.create": 2,
                "org.eclipse.jgit.api.CloneCommand.setURI": 1,
                "org.eclipse.jgit.api.CommitCommand.setAuthor": 4,
                "java.nio.file.Path.toUri": 3,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "java.util.Map.Entry.getValue": 1,
                "org.eclipse.jgit.lib.Repository.create": 2,
                "org.sonar.scm.git.GitScmProviderTest.randomizedContent": 2,
                "org.sonar.scm.git.GitUtils.createRepository": 2
            },
            "objectInstantiations": {
                "java.lang.StringBuilder": 4,
                "org.eclipse.jgit.lib.RepositoryBuilder": 1,
                "org.eclipse.jgit.api.Git": 3,
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "java.util": 8,
                "org.mockito": 1,
                "org.eclipse.jgit.lib": 8,
                "org.assertj.core.api": 4,
                "java.nio.file": 22,
                "org.eclipse.jgit.storage.file": 2,
                "org.eclipse.jgit.api": 47,
                "org.junit.rules": 3,
                "java.lang": 27,
                "java.net": 3,
                "java.io": 6,
                "org.sonar.scm.git": 16
            },
            "numConditionals": 0,
            "numLoops": 7,
            "numNestedLoops": 2,
            "numMethodCalls": 119,
            "numRecursiveMethodCalls": 14,
            "linesOfCode": 67,
            "linesOfCodeJunitTest": 23,
            "logicalLinesOfCode": 74,
            "logicalLinesOfCodeJunitTest": 23
        },
        "stabilityMetricValue": 11.990331106973775
    },
    "org.sonar.scanner.report.ReportPublisherTest.dump_public_url_if_defined_for_pull_request": {
        "filePath": "org\\sonar\\scanner\\report\\ReportPublisherTest.java",
        "methodName": "dump_public_url_if_defined_for_pull_request",
        "stats": {
            "methodCalls": {
                "org.sonar.api.platform.Server.getPublicRootUrl": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "java.nio.file.Path.toFile": 1,
                "org.sonar.scanner.scan.ScanProperties.metadataFilePath": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.sonar.scanner.report.ReportPublisher.prepareAndDumpMetadata": 1,
                "org.mockito.Mockito.when": 4,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchName": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.pullRequestKey": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchType": 1,
                "org.apache.commons.io.FileUtils.readFileToString": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.report.ReportPublisher": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scan.branch": 3,
                "org.mockito": 5,
                "org.sonar.api.platform": 1,
                "org.sonar.scanner.scan": 1,
                "org.sonar.scanner.report": 3,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 2,
                "org.apache.commons.io": 1,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 19,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 13.677085886145997
    },
    "org.sonar.scanner.ci.vendors.CodeMagicTest.getName": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\CodeMagicTest.java",
        "methodName": "getName",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.ci.CiVendor.getName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 15.467706455016971
    },
    "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.createErrorMessage_whenLongContent_shouldCreateErrorMsg": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\DefaultScannerWsClientTest.java",
        "methodName": "createErrorMessage_whenLongContent_shouldCreateErrorMsg",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.createErrorMessage": 1,
                "org.assertj.core.api.AbstractCharSequenceAssert.hasSize": 1,
                "org.apache.commons.lang3.StringUtils.repeat": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonarqube.ws.client.HttpException": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 1,
                "java.lang": 1,
                "org.sonar.scanner.bootstrap": 1,
                "org.assertj.core.api": 2,
                "org.apache.commons.lang3": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 26.702032376354428
    },
    "org.sonar.scanner.phases.ModuleSensorsExecutorTest.should_not_restrict_filesystem_when_pull_request_and_non_expected_sensor": {
        "filePath": "org\\sonar\\scanner\\phases\\ModuleSensorsExecutorTest.java",
        "methodName": "should_not_restrict_filesystem_when_pull_request_and_non_expected_sensor",
        "stats": {
            "methodCalls": {
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.newDefaultInputModule": 1,
                "org.sonar.scanner.sensor.ModuleSensorsExecutor.execute": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.scanner.scan.filesystem.MutableFileSystem.setRestrictToChangedFiles": 1,
                "java.util.Collections.singleton": 2,
                "java.util.stream.Stream.anyMatch": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 2,
                "java.lang.String.contains": 1,
                "org.sonar.scanner.sensor.ModuleSensorExtensionDictionary.selectSensors": 2,
                "java.util.Collection.stream": 1,
                "org.sonar.scanner.fs.InputModuleHierarchy.isRoot": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.mockito.Mockito.times": 1,
                "org.mockito.Mockito.when": 4,
                "org.sonar.scanner.phases.ModuleSensorsExecutorTest.createModuleExecutor": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "java.lang.String.format": 1,
                "org.mockito.Mockito.verify": 1,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.setKey": 1,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.create": 1,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.setWorkDir": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchType": 1,
                "org.mockito.Mockito.mock": 2,
                "org.sonar.api.batch.bootstrap.ProjectDefinition.setBaseDir": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.sensor.ModuleSensorsExecutor": 1,
                "org.sonar.scanner.phases.ModuleSensorsExecutorTest.TestSensor": 1,
                "org.sonar.scanner.sensor.ModuleSensorWrapper": 1
            },
            "packageAccesses": {
                "java.util": 3,
                "org.mockito": 8,
                "java.util.stream": 1,
                "org.sonar.scanner.scan.filesystem": 1,
                "org.sonar.api.batch.fs.internal": 2,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 2,
                "org.sonar.api.testfixtures.log": 1,
                "java.lang": 3,
                "org.sonar.scanner.scan.branch": 1,
                "org.sonar.scanner.fs": 2,
                "org.junit.rules": 2,
                "org.sonar.scanner.phases": 2,
                "org.sonar.scanner.sensor": 8,
                "org.sonar.api.batch.sensor": 1,
                "org.sonar.api.batch.bootstrap": 5
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 35,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 16,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 17,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 18.931788231471437
    },
    "org.sonar.scanner.ci.vendors.GithubActionsTest.getName": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\GithubActionsTest.java",
        "methodName": "getName",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.ci.CiVendor.getName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 1,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 1,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 12.13303107594683
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedFiles_falls_back_to_upstream_ref": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedFiles_falls_back_to_upstream_ref",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitUtils.createFile": 1,
                "org.eclipse.jgit.api.Git.commit": 1,
                "java.nio.file.Path.getParent": 1,
                "java.lang.String.getBytes": 1,
                "org.eclipse.jgit.api.AddCommand.call": 1,
                "org.eclipse.jgit.api.CheckoutCommand.setName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.lang.StringBuilder.append": 4,
                "java.lang.StringBuilder.toString": 2,
                "org.eclipse.jgit.api.CheckoutCommand.call": 1,
                "org.eclipse.jgit.api.CloneCommand.setDirectory": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedLine": 1,
                "java.util.Random.nextInt": 1,
                "java.nio.file.Path.resolve": 2,
                "org.mockito.Mockito.verifyNoInteractions": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.setName": 1,
                "org.eclipse.jgit.api.CommitCommand.call": 1,
                "java.lang.String.join": 1,
                "org.eclipse.jgit.api.CloneCommand.setRemote": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsOnly": 1,
                "java.nio.file.Files.write": 1,
                "org.eclipse.jgit.api.CloneCommand.call": 1,
                "org.sonar.scm.git.GitScmProviderTest.createAndCommitFile": 2,
                "org.eclipse.jgit.api.Git.cloneRepository": 1,
                "java.io.File.toPath": 1,
                "java.nio.file.Path.toFile": 1,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "org.eclipse.jgit.api.Git.add": 1,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 1,
                "org.eclipse.jgit.api.Git.branchCreate": 1,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.call": 1,
                "java.nio.file.Files.createDirectories": 1,
                "org.eclipse.jgit.api.CloneCommand.setURI": 1,
                "java.nio.file.Path.toString": 1,
                "org.eclipse.jgit.api.CommitCommand.setAuthor": 1,
                "org.sonar.scm.git.GitScmProvider.branchChangedFiles": 1,
                "java.lang.String.length": 1,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "org.sonar.scm.git.GitScmProviderTest.commit": 1,
                "org.eclipse.jgit.api.Git.checkout": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedContent": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.lang.StringBuilder": 2,
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "org.eclipse.jgit.api": 18,
                "java.lang": 15,
                "java.util": 1,
                "org.junit.rules": 1,
                "org.mockito": 2,
                "java.io": 1,
                "org.sonar.scm.git": 10,
                "org.assertj.core.api": 2,
                "java.nio.file": 9
            },
            "numConditionals": 0,
            "numLoops": 4,
            "numNestedLoops": 1,
            "numMethodCalls": 50,
            "numRecursiveMethodCalls": 8,
            "linesOfCode": 30,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 34,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 14.454936158181223
    },
    "org.sonar.scanner.repository.DefaultMetricsRepositoryLoaderTest.testCloseError": {
        "filePath": "org\\sonar\\scanner\\repository\\DefaultMetricsRepositoryLoaderTest.java",
        "methodName": "testCloseError",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 2,
                "java.io.Reader.close": 1,
                "org.sonar.scanner.repository.DefaultMetricsRepositoryLoader.load": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.mockito.Mockito.when": 3,
                "org.sonar.scanner.WsTestUtil.mockReader": 1,
                "org.mockito.Mockito.doThrow": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.sonarqube.ws.client.WsResponse.contentReader": 1,
                "org.mockito.stubbing.Stubber.when": 1,
                "java.io.Reader.read": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.mockito.ArgumentMatchers.anyInt": 2,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "java.io.IOException": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 2,
                "org.mockito": 10,
                "java.io": 4,
                "org.sonar.scanner": 1,
                "org.sonar.scanner.repository": 1,
                "org.sonar.scanner.bootstrap": 1,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 22,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 8,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 9,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 51.5067649802076
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedFiles_should_throw_when_repo_nonexistent": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedFiles_should_throw_when_repo_nonexistent",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitScmProvider.branchChangedFiles": 1,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "java.io.File.toPath": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "org.mockito": 1,
                "java.io": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scm.git": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 14.869881207663912
    },
    "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.call_whenDebugLevel_shouldLogAndProfileRequest": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\DefaultScannerWsClientTest.java",
        "methodName": "call_whenDebugLevel_shouldLogAndProfileRequest",
        "stats": {
            "methodCalls": {
                "java.util.Collections.emptyMap": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.newRequest": 1,
                "org.sonarqube.ws.client.WsClient.wsConnector": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.newResponse": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.assertj.core.api.AbstractAssert.isSameAs": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "java.util.List.get": 1,
                "org.assertj.core.api.AbstractCharSequenceAssert.contains": 1,
                "org.sonarqube.ws.client.MockWsResponse.setRequestUrl": 2,
                "org.sonar.api.testfixtures.log.AbstractLogTester.setLevel": 1,
                "org.sonarqube.ws.client.WsConnector.call": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.GlobalAnalysisMode": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient": 1,
                "org.sonar.scanner.bootstrap.ScannerProperties": 1,
                "org.sonarqube.ws.client.GetRequest": 1,
                "org.sonarqube.ws.client.MockWsResponse": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 9,
                "org.sonar.api.testfixtures.log": 2,
                "java.util": 3,
                "org.mockito": 1,
                "org.sonar.scanner.bootstrap": 7,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 19,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 12,
            "linesOfCodeJunitTest": 10,
            "logicalLinesOfCode": 12,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 31.13579314297978
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedFiles_should_return_null_if_repo_exactref_is_null": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedFiles_should_return_null_if_repo_exactref_is_null",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.mockito.Mockito.when": 2,
                "org.eclipse.jgit.lib.RefDatabase.findRef": 1,
                "org.sonar.api.testfixtures.log.LogAndArguments.getRawMsg": 1,
                "org.mockito.Mockito.verify": 1,
                "org.sonar.scm.git.GitScmProvider.branchChangedFiles": 1,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "java.util.List.get": 1,
                "org.eclipse.jgit.lib.Repository.getRefDatabase": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.getLogs": 1,
                "org.sonar.api.notifications.AnalysisWarnings.addUnique": 1,
                "org.mockito.Mockito.mock": 3
            },
            "objectInstantiations": {
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 3,
                "java.lang": 2,
                "java.util": 1,
                "org.mockito": 6,
                "org.sonar.scm.git": 4,
                "org.eclipse.jgit.lib": 4,
                "org.sonar.api.notifications": 1,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 20,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 16,
            "linesOfCodeJunitTest": 15,
            "logicalLinesOfCode": 14,
            "logicalLinesOfCodeJunitTest": 13
        },
        "stabilityMetricValue": 18.074120269159984
    },
    "org.sonar.scanner.sensor.UnchangedFilesHandlerTest.log_if_active": {
        "filePath": "org\\sonar\\scanner\\sensor\\UnchangedFilesHandlerTest.java",
        "methodName": "log_if_active",
        "stats": {
            "methodCalls": {
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.sensor.UnchangedFilesHandler": 1
            },
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 1,
                "org.sonar.scanner.sensor": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 36.322594524028474
    },
    "org.sonar.scanner.repository.ReferenceBranchSupplierTest.getFromProperties_uses_scanner_property": {
        "filePath": "org\\sonar\\scanner\\repository\\ReferenceBranchSupplierTest.java",
        "methodName": "getFromProperties_uses_scanner_property",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "java.util.Optional.of": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.sonar.api.config.Configuration.get": 1,
                "org.mockito.Mockito.when": 3,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchType": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchName": 1,
                "org.sonar.scanner.repository.ReferenceBranchSupplier.getFromProperties": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan.branch": 2,
                "java.util": 1,
                "org.mockito": 3,
                "org.sonar.scanner.repository": 1,
                "org.sonar.api.config": 1,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 13,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 11.400660572070674
    },
    "org.sonar.scm.git.NativeGitBlameCommandTest.execution_on_windows_should_fallback_to_full_path": {
        "filePath": "org\\sonar\\scm\\git\\NativeGitBlameCommandTest.java",
        "methodName": "execution_on_windows_should_fallback_to_full_path",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.isNull": 2,
                "org.mockito.ArgumentMatchers.any": 2,
                "org.mockito.ArgumentMatchers.eq": 4,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonar.scm.git.NativeGitBlameCommand.checkIfEnabled": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.sonar.api.utils.System2.isOsWindows": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "java.util.function.Consumer.accept": 2,
                "org.sonar.api.testfixtures.log.AbstractLogTester.setLevel": 1,
                "org.sonar.scm.git.NativeGitBlameCommandTest.mockGitWhereOnWindows": 1,
                "org.mockito.Mockito.mock": 4
            },
            "objectInstantiations": {
                "org.sonar.scm.git.NativeGitBlameCommand": 1
            },
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 2,
                "org.mockito": 13,
                "org.sonar.api.utils": 2,
                "org.sonar.scm.git": 5,
                "java.util.function": 4,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 4,
                "org.sonar.scm.git.ProcessWrapperFactory": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 33,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 19,
            "linesOfCodeJunitTest": 14,
            "logicalLinesOfCode": 19,
            "logicalLinesOfCodeJunitTest": 14
        },
        "stabilityMetricValue": 20.3620810754632
    },
    "org.sonar.scanner.scan.DeprecatedPropertiesWarningGeneratorTest.execute_whenUsingPassword_shouldAddWarning": {
        "filePath": "org\\sonar\\scanner\\scan\\DeprecatedPropertiesWarningGeneratorTest.java",
        "methodName": "execute_whenUsingPassword_shouldAddWarning",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.setProperty": 2,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.Mockito.times": 1,
                "org.sonar.scanner.scan.DeprecatedPropertiesWarningGenerator.execute": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.mockito.Mockito.verify": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan": 1,
                "org.sonar.api.testfixtures.log": 1,
                "org.sonar.api.config.internal": 2,
                "org.mockito": 2,
                "org.assertj.core.api": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 14.768001410605647
    },
    "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.call_whenBadRequest_shouldFailWithMessage": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\DefaultScannerWsClientTest.java",
        "methodName": "call_whenBadRequest_shouldFailWithMessage",
        "stats": {
            "methodCalls": {
                "java.util.Collections.emptyMap": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.newRequest": 1,
                "org.sonarqube.ws.client.WsClient.wsConnector": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.newResponse": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonarqube.ws.client.MockWsResponse.setCode": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "org.sonarqube.ws.client.MockWsResponse.setRequestUrl": 1,
                "org.sonarqube.ws.client.MockWsResponse.setContent": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonarqube.ws.client.WsConnector.call": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.GlobalAnalysisMode": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient": 1,
                "org.sonar.scanner.bootstrap.ScannerProperties": 1,
                "org.sonarqube.ws.client.GetRequest": 1,
                "org.sonarqube.ws.client.MockWsResponse": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 9,
                "java.util": 1,
                "org.mockito": 1,
                "org.sonar.scanner.bootstrap": 7,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 28.57981975603545
    },
    "org.sonar.scanner.report.ReportPublisherTest.dump_public_url_if_defined_for_branches": {
        "filePath": "org\\sonar\\scanner\\report\\ReportPublisherTest.java",
        "methodName": "dump_public_url_if_defined_for_branches",
        "stats": {
            "methodCalls": {
                "org.sonar.api.platform.Server.getPublicRootUrl": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "java.nio.file.Path.toFile": 1,
                "org.sonar.scanner.scan.ScanProperties.metadataFilePath": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.sonar.scanner.report.ReportPublisher.prepareAndDumpMetadata": 1,
                "org.mockito.Mockito.when": 3,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchName": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchType": 1,
                "org.apache.commons.io.FileUtils.readFileToString": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.report.ReportPublisher": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scan.branch": 2,
                "org.mockito": 4,
                "org.sonar.api.platform": 1,
                "org.sonar.scanner.scan": 1,
                "org.sonar.scanner.report": 3,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2,
                "org.apache.commons.io": 1,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 16,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 13.557915150341016
    },
    "org.sonar.scanner.cpd.JavaCpdBlockIndexerSensorTest.testJavaIndexing": {
        "filePath": "org\\sonar\\scanner\\cpd\\JavaCpdBlockIndexerSensorTest.java",
        "methodName": "testJavaIndexing",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentCaptor.capture": 1,
                "org.mockito.ArgumentCaptor.getValue": 1,
                "org.mockito.ArgumentMatchers.eq": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.sonar.scanner.cpd.index.SonarCpdBlockIndex.insert": 1,
                "org.sonar.scanner.cpd.JavaCpdBlockIndexerSensor.execute": 1,
                "org.mockito.Mockito.verify": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.cpd.JavaCpdBlockIndexerSensor": 1
            },
            "packageAccesses": {
                "java.util": 1,
                "org.sonar.scanner.cpd": 2,
                "org.mockito": 4,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.cpd.index": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 33.46301412575487
    },
    "org.sonar.scanner.bootstrap.ScannerPluginInstallerTest.download_all_plugins": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ScannerPluginInstallerTest.java",
        "methodName": "download_all_plugins",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractIterableAssert.containsExactlyInAnyOrder": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 2,
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller.installAllPlugins": 1,
                "org.mockito.ArgumentMatchers.argThat": 3,
                "java.util.Optional.of": 2,
                "org.assertj.core.api.Assertions.assertThat": 7,
                "org.sonar.scanner.bootstrap.ScannerPluginInstallerTest.enqueueDownload": 2,
                "java.util.jar.Manifest.getMainAttributes": 4,
                "org.assertj.core.api.AbstractFileAssert.exists": 2,
                "java.util.jar.Attributes.putValue": 2,
                "org.sonar.scanner.bootstrap.ScannerPlugin.getKey": 2,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "java.lang.Object.getClass": 1,
                "java.lang.Class.getResourceAsStream": 1,
                "java.util.Map.get": 2,
                "org.junit.rules.TemporaryFolder.newFile": 2,
                "org.mockito.Mockito.doReturn": 2,
                "java.util.Map.put": 2,
                "java.util.Map.keySet": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.sonar.scanner.WsTestUtil.mockReader": 1,
                "org.mockito.Mockito.when": 3,
                "org.sonar.scanner.bootstrap.ScannerPlugin.getUpdatedAt": 2,
                "org.sonar.core.platform.PluginInfo.getNonNullJarFile": 2,
                "org.apache.commons.io.FileUtils.openOutputStream": 2,
                "org.sonar.scanner.bootstrap.ScannerPlugin.getInfo": 2,
                "org.sonarqube.ws.client.WsResponse.contentReader": 2,
                "org.assertj.core.api.AbstractLongAssert.isEqualTo": 2,
                "org.mockito.stubbing.Stubber.when": 2,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "java.util.jar.Manifest": 2,
                "org.sonar.scanner.WsTestUtil.RequestMatcher": 1,
                "java.io.InputStreamReader": 1,
                "java.util.jar.JarOutputStream": 2
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 4,
                "java.util": 8,
                "org.mockito": 10,
                "org.sonar.scanner": 2,
                "org.sonar.scanner.bootstrap": 12,
                "org.mockito.stubbing": 5,
                "org.apache.commons.io": 2,
                "org.assertj.core.api": 14,
                "java.lang": 2,
                "org.junit.rules": 2,
                "java.io": 3,
                "java.util.jar": 14,
                "org.sonar.core.platform": 2
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 71,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 33,
            "linesOfCodeJunitTest": 13,
            "logicalLinesOfCode": 38,
            "logicalLinesOfCodeJunitTest": 13
        },
        "stabilityMetricValue": 16.696368392823597
    },
    "org.sonar.batch.bootstrapper.LoggingConfiguratorTest.testConfigureMultipleTimes": {
        "filePath": "org\\sonar\\batch\\bootstrapper\\LoggingConfiguratorTest.java",
        "methodName": "testConfigureMultipleTimes",
        "stats": {
            "methodCalls": {
                "org.sonar.batch.bootstrapper.LoggingConfiguration.setLogOutput": 1,
                "org.sonar.batch.bootstrapper.LoggingConfiguration.setVerbose": 1,
                "org.sonar.batch.bootstrapper.LoggingConfigurator.apply": 2,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "java.lang.System.setOut": 1,
                "java.nio.charset.Charset.name": 1,
                "java.lang.Object.getClass": 1,
                "org.slf4j.Logger.debug": 2,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.slf4j.LoggerFactory.getLogger": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1
            },
            "objectInstantiations": {
                "java.io.PrintStream": 1
            },
            "packageAccesses": {
                "org.sonar.batch.bootstrapper": 4,
                "java.lang": 2,
                "org.slf4j": 4,
                "java.io": 1,
                "org.assertj.core.api": 4,
                "java.nio.charset": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 10,
            "linesOfCodeJunitTest": 10,
            "logicalLinesOfCode": 10,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 26.258183515273764
    },
    "org.sonar.scanner.extension.ScannerCoreExtensionsInstallerTest.install_only_adds_ScannerSide_annotated_extension_to_container": {
        "filePath": "org\\sonar\\scanner\\extension\\ScannerCoreExtensionsInstallerTest.java",
        "methodName": "install_only_adds_ScannerSide_annotated_extension_to_container",
        "stats": {
            "methodCalls": {
                "org.sonar.core.extension.CoreExtension.Context.addExtensions": 1,
                "org.sonar.core.extension.CoreExtensionsInstaller.noAdditionalSideFilter": 1,
                "org.sonar.core.extension.CoreExtensionsInstaller.noExtensionFilter": 1,
                "java.util.stream.Stream.of": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.sonar.core.extension.CoreExtensionRepository.loadedCoreExtensions": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.core.platform.ListContainer.getAddedObjects": 1,
                "org.sonar.core.extension.CoreExtensionsInstaller.install": 1
            },
            "objectInstantiations": {
                "org.sonar.core.extension.CoreExtension": 1,
                "org.sonar.core.platform.ListContainer": 1
            },
            "packageAccesses": {
                "org.mockito": 1,
                "java.util.stream": 1,
                "org.sonar.core.platform": 3,
                "org.sonar.core.extension": 6,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 11,
            "linesOfCodeJunitTest": 11,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 21.510338261153677
    },
    "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.call_whenUnauthenticatedAndDebugEnabled_shouldLogResponseDetails": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\DefaultScannerWsClientTest.java",
        "methodName": "call_whenUnauthenticatedAndDebugEnabled_shouldLogResponseDetails",
        "stats": {
            "methodCalls": {
                "java.util.Collections.emptyMap": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.newRequest": 1,
                "org.sonarqube.ws.client.WsClient.wsConnector": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.newResponse": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.sonarqube.ws.client.MockWsResponse.setHeader": 1,
                "org.sonarqube.ws.client.MockWsResponse.setCode": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "java.util.List.get": 1,
                "org.assertj.core.api.AbstractCharSequenceAssert.contains": 1,
                "org.sonarqube.ws.client.MockWsResponse.setRequestUrl": 1,
                "org.sonarqube.ws.client.MockWsResponse.setContent": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.setLevel": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonarqube.ws.client.WsConnector.call": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.GlobalAnalysisMode": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient": 1,
                "org.sonar.scanner.bootstrap.ScannerProperties": 1,
                "org.sonarqube.ws.client.GetRequest": 1,
                "org.sonarqube.ws.client.MockWsResponse": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 10,
                "org.sonar.api.testfixtures.log": 2,
                "java.util": 3,
                "org.mockito": 1,
                "org.sonar.scanner.bootstrap": 7,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 22,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 11,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 12,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 22.144985330434533
    },
    "org.sonar.scanner.scan.ProjectReactorBuilderTest.shouldInitRootWorkDirWithCustomAbsoluteFolder": {
        "filePath": "org\\sonar\\scanner\\scan\\ProjectReactorBuilderTest.java",
        "methodName": "shouldInitRootWorkDirWithCustomAbsoluteFolder",
        "stats": {
            "methodCalls": {
                "java.io.File.getAbsoluteFile": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.io.File.getAbsolutePath": 1,
                "java.util.Collections.singletonMap": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.sonar.scanner.scan.ProjectReactorBuilder.initRootProjectWorkDir": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ScannerProperties": 1,
                "org.sonar.scanner.scan.ProjectReactorBuilder": 1,
                "java.io.File": 3
            },
            "packageAccesses": {
                "java.util": 2,
                "org.mockito": 1,
                "java.io": 7,
                "org.sonar.scanner.scan": 3,
                "org.sonar.scanner.bootstrap": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 19.9568877193731
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedLinesWithFileMovementDetection_detects_modified_lines_on_renamed_pr_files_compared_to_original_files_on_target_branch": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedLinesWithFileMovementDetection_detects_modified_lines_on_renamed_pr_files_compared_to_original_files_on_target_branch",
        "stats": {
            "methodCalls": {
                "org.eclipse.jgit.api.Git.commit": 6,
                "java.nio.file.Path.getParent": 2,
                "org.eclipse.jgit.api.AddCommand.call": 8,
                "org.eclipse.jgit.api.CheckoutCommand.setName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.lang.StringBuilder.toString": 6,
                "org.eclipse.jgit.api.CheckoutCommand.call": 1,
                "java.util.Random.nextInt": 4,
                "java.nio.file.Path.resolve": 9,
                "org.eclipse.jgit.lib.Repository.exactRef": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.setName": 1,
                "org.sonar.scm.git.GitScmProviderTest.editLineOfFile": 2,
                "org.eclipse.jgit.api.AddCommand.setUpdate": 2,
                "java.util.List.set": 2,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "org.eclipse.jgit.api.Git.add": 8,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 8,
                "org.eclipse.jgit.lib.AnyObjectId.getName": 1,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 6,
                "org.eclipse.jgit.api.Git.branchCreate": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.call": 1,
                "java.nio.file.Path.resolveSibling": 2,
                "java.nio.file.Files.createDirectories": 2,
                "java.lang.String.format": 2,
                "java.lang.String.length": 4,
                "org.sonar.scm.git.ChangedFile.of": 2,
                "org.sonar.scm.git.GitScmProviderTest.commit": 6,
                "org.eclipse.jgit.api.Git.checkout": 1,
                "org.assertj.core.data.MapEntry.entry": 2,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.scm.git.GitUtils.createFile": 2,
                "org.sonar.scm.git.GitScmProviderTest.moveAndCommitFile": 2,
                "java.lang.String.getBytes": 2,
                "org.sonar.scm.git.GitScmProvider.branchChangedLinesWithFileMovementDetection": 1,
                "java.nio.file.Files.move": 2,
                "java.lang.StringBuilder.append": 12,
                "org.assertj.core.api.AbstractMapAssert.containsOnly": 1,
                "java.nio.file.Files.readAllLines": 2,
                "org.sonar.scm.git.GitScmProviderTest.randomizedLine": 4,
                "org.eclipse.jgit.api.CommitCommand.call": 6,
                "java.lang.String.join": 4,
                "java.nio.file.Files.write": 4,
                "java.util.Set.of": 2,
                "org.sonar.scm.git.GitScmProviderTest.createAndCommitFile": 4,
                "org.sonar.scm.git.GitScmProviderTest.createBranch": 1,
                "org.eclipse.jgit.api.Git.getRepository": 1,
                "java.util.Map.of": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.setStartPoint": 1,
                "org.eclipse.jgit.api.CommitCommand.setAuthor": 6,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "org.eclipse.jgit.lib.Ref.getObjectId": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedContent": 2
            },
            "objectInstantiations": {
                "java.lang.StringBuilder": 6,
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "java.lang": 54,
                "java.util": 13,
                "org.eclipse.jgit.api": 58,
                "org.mockito": 1,
                "org.sonar.scm.git": 29,
                "org.eclipse.jgit.lib": 4,
                "org.assertj.core.api": 2,
                "org.assertj.core.data": 2,
                "java.nio.file": 31
            },
            "numConditionals": 0,
            "numLoops": 14,
            "numNestedLoops": 4,
            "numMethodCalls": 156,
            "numRecursiveMethodCalls": 25,
            "linesOfCode": 105,
            "linesOfCodeJunitTest": 18,
            "logicalLinesOfCode": 119,
            "logicalLinesOfCodeJunitTest": 18
        },
        "stabilityMetricValue": 12.065011734038574
    },
    "org.sonar.scanner.report.ReportPublisherTest.use_write_timeout_from_properties": {
        "filePath": "org\\sonar\\scanner\\report\\ReportPublisherTest.java",
        "methodName": "use_write_timeout_from_properties",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 1,
                "org.mockito.ArgumentMatchers.argThat": 1,
                "org.sonar.scanner.report.ReportPublisher.execute": 1,
                "org.sonarqube.ws.Ce.SubmitResponse.Builder.setTaskId": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonar.scanner.scan.ScanProperties.reportPublishTimeout": 1,
                "org.sonarqube.ws.Ce.SubmitResponse.Builder.build": 1,
                "org.mockito.Mockito.when": 1,
                "org.mockito.Mockito.verify": 1,
                "org.sonarqube.ws.Ce.SubmitResponse.newBuilder": 1,
                "com.google.protobuf.AbstractMessageLite.toByteArray": 1,
                "org.sonarqube.ws.client.MockWsResponse.setContent": 1,
                "org.sonar.scanner.report.ReportPublisher.start": 1
            },
            "objectInstantiations": {
                "org.sonarqube.ws.client.MockWsResponse": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 3,
                "org.mockito": 4,
                "com.google.protobuf": 1,
                "org.sonar.scanner.scan": 1,
                "org.sonar.scanner.report": 2,
                "org.sonarqube.ws": 3,
                "org.mockito.stubbing": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 19,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 14.499382023342314
    },
    "org.sonar.scanner.phases.ModuleSensorsExecutorTest.should_execute_all_sensors_for_root_module": {
        "filePath": "org\\sonar\\scanner\\phases\\ModuleSensorsExecutorTest.java",
        "methodName": "should_execute_all_sensors_for_root_module",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.sensor.ModuleSensorsExecutor.execute": 1,
                "org.mockito.ArgumentMatchers.any": 1,
                "org.sonar.scanner.sensor.AbstractSensorWrapper.wrappedSensor": 2,
                "org.sonar.scanner.sensor.ExecutingSensorContext.clearExecutingSensor": 1,
                "org.mockito.Mockito.verifyNoMoreInteractions": 1,
                "org.sonar.scanner.sensor.AbstractSensorWrapper.analyse": 2,
                "org.mockito.Mockito.times": 2,
                "org.mockito.Mockito.verify": 6
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 10,
                "org.sonar.scanner.sensor": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 17,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 8,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 14.258825053209383
    },
    "org.sonar.scanner.bootstrap.ScannerPluginInstallerTest.reload_list_if_plugin_uninstalled_during_blue_green_switch": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ScannerPluginInstallerTest.java",
        "methodName": "reload_list_if_plugin_uninstalled_during_blue_green_switch",
        "stats": {
            "methodCalls": {
                "java.util.Optional.empty": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsExactlyInAnyOrder": 1,
                "org.mockito.ArgumentMatchers.argThat": 4,
                "java.util.Optional.of": 2,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.bootstrap.ScannerPluginInstallerTest.enqueueDownload": 2,
                "java.util.jar.Manifest.getMainAttributes": 4,
                "java.util.jar.Attributes.putValue": 2,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "java.lang.Object.getClass": 2,
                "java.lang.Class.getResourceAsStream": 2,
                "org.mockito.Mockito.doReturn": 3,
                "org.junit.rules.TemporaryFolder.newFile": 2,
                "java.util.Map.put": 2,
                "java.util.Map.keySet": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.sonar.scanner.WsTestUtil.mockReader": 1,
                "org.mockito.Mockito.when": 3,
                "org.sonar.scanner.bootstrap.ScannerPluginInstallerTest.enqueueNotFoundDownload": 1,
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller.installRequiredPlugins": 1,
                "org.apache.commons.io.FileUtils.openOutputStream": 2,
                "org.sonarqube.ws.client.WsResponse.contentReader": 2,
                "org.mockito.stubbing.Stubber.when": 3,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "java.util.jar.Manifest": 2,
                "org.sonar.scanner.WsTestUtil.RequestMatcher": 1,
                "java.io.InputStreamReader": 2,
                "java.util.jar.JarOutputStream": 2
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 4,
                "java.util": 7,
                "org.mockito": 12,
                "org.sonar.scanner": 2,
                "org.sonar.scanner.bootstrap": 5,
                "org.mockito.stubbing": 6,
                "org.apache.commons.io": 2,
                "org.assertj.core.api": 2,
                "java.lang": 4,
                "org.junit.rules": 2,
                "java.io": 4,
                "java.util.jar": 14
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 57,
            "numRecursiveMethodCalls": 4,
            "linesOfCode": 27,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 33,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 19.89627847433426
    },
    "org.sonar.scanner.bootstrap.PluginFilesTest.get_jar_from_cache_if_present": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\PluginFilesTest.java",
        "methodName": "get_jar_from_cache_if_present",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.PluginFilesTest.verifySameContent": 1,
                "org.assertj.core.api.AbstractFileAssert.isFile": 2,
                "org.sonar.scanner.bootstrap.PluginFilesTest.newInstalledPlugin": 1,
                "org.assertj.core.api.Assertions.assertThat": 4,
                "org.apache.commons.io.FileUtils.moveFile": 1,
                "org.assertj.core.api.AbstractFileAssert.hasSameContentAs": 1,
                "org.sonar.scanner.bootstrap.PluginFiles.get": 1,
                "okhttp3.mockwebserver.MockWebServer.getRequestCount": 1,
                "org.sonar.scanner.bootstrap.PluginFilesTest.moveToCache": 1,
                "org.assertj.core.api.AbstractIntegerAssert.isZero": 1,
                "java.util.Optional.get": 1,
                "org.sonar.scanner.bootstrap.PluginFilesTest.createFileInCache": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller.InstalledPlugin": 1,
                "org.sonar.scanner.bootstrap.PluginFilesTest.FileAndMd5": 2,
                "java.io.File": 1
            },
            "packageAccesses": {
                "java.util": 1,
                "java.io": 3,
                "org.sonar.scanner.bootstrap.PluginFilesTest": 2,
                "org.sonar.scanner.bootstrap": 8,
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller": 1,
                "org.apache.commons.io": 1,
                "org.assertj.core.api": 8,
                "okhttp3.mockwebserver": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 18,
            "numRecursiveMethodCalls": 4,
            "linesOfCode": 16,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 16,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 12.250675777629827
    },
    "org.sonar.scanner.bootstrap.ScannerPluginInstallerTest.download_installed_plugins": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ScannerPluginInstallerTest.java",
        "methodName": "download_installed_plugins",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractIterableAssert.containsExactlyInAnyOrder": 2,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 2,
                "org.mockito.ArgumentMatchers.argThat": 3,
                "java.util.Optional.of": 2,
                "org.assertj.core.api.Assertions.assertThat": 8,
                "org.sonar.scanner.bootstrap.ScannerPluginInstallerTest.enqueueDownload": 2,
                "java.util.jar.Manifest.getMainAttributes": 4,
                "java.util.List.of": 1,
                "org.assertj.core.api.AbstractFileAssert.exists": 2,
                "java.util.jar.Attributes.putValue": 2,
                "org.sonar.scanner.bootstrap.ScannerPlugin.getKey": 2,
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller.installPluginsForLanguages": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "java.lang.Object.getClass": 1,
                "java.lang.Class.getResourceAsStream": 1,
                "java.util.Map.get": 2,
                "org.junit.rules.TemporaryFolder.newFile": 2,
                "org.mockito.Mockito.doReturn": 2,
                "java.util.Map.put": 2,
                "java.util.Map.keySet": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.sonar.scanner.WsTestUtil.mockReader": 1,
                "org.mockito.Mockito.when": 3,
                "org.sonar.scanner.bootstrap.ScannerPlugin.getUpdatedAt": 2,
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller.installRequiredPlugins": 1,
                "org.sonar.core.platform.PluginInfo.getNonNullJarFile": 2,
                "org.apache.commons.io.FileUtils.openOutputStream": 2,
                "org.sonar.scanner.bootstrap.ScannerPlugin.getInfo": 2,
                "org.sonarqube.ws.client.WsResponse.contentReader": 2,
                "org.assertj.core.api.AbstractLongAssert.isEqualTo": 2,
                "org.mockito.stubbing.Stubber.when": 2,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "java.util.HashSet": 1,
                "java.util.jar.Manifest": 2,
                "org.sonar.scanner.WsTestUtil.RequestMatcher": 1,
                "java.io.InputStreamReader": 1,
                "java.util.jar.JarOutputStream": 2
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 4,
                "java.util": 12,
                "org.mockito": 10,
                "org.sonar.scanner": 2,
                "org.sonar.scanner.bootstrap": 13,
                "org.mockito.stubbing": 5,
                "org.apache.commons.io": 2,
                "org.assertj.core.api": 16,
                "java.lang": 2,
                "org.junit.rules": 2,
                "java.io": 3,
                "java.util.jar": 14,
                "org.sonar.core.platform": 2
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 76,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 35,
            "linesOfCodeJunitTest": 15,
            "logicalLinesOfCode": 40,
            "logicalLinesOfCodeJunitTest": 15
        },
        "stabilityMetricValue": 23.565535795670847
    },
    "org.sonar.scanner.bootstrap.ScannerPluginRepositoryTest.fail_if_requesting_missing_plugin": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ScannerPluginRepositoryTest.java",
        "methodName": "fail_if_requesting_missing_plugin",
        "stats": {
            "methodCalls": {
                "org.junit.Assert.fail": 2,
                "org.sonar.scanner.bootstrap.ScannerPluginRepository.getPluginInfo": 1,
                "org.sonar.scanner.bootstrap.ScannerPluginRepository.start": 1,
                "org.sonar.scanner.bootstrap.ScannerPluginRepository.getPluginInstance": 1,
                "org.assertj.core.api.Assertions.assertThat": 2
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.bootstrap": 3,
                "org.junit": 2,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 11,
            "linesOfCodeJunitTest": 11,
            "logicalLinesOfCode": 13,
            "logicalLinesOfCodeJunitTest": 13
        },
        "stabilityMetricValue": 24.30749082271864
    },
    "org.sonar.scm.git.GitScmProviderTest.revisionId_should_return_null_in_empty_repo": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "revisionId_should_return_null_in_empty_repo",
        "stats": {
            "methodCalls": {
                "java.io.File.toPath": 1,
                "java.nio.file.Path.toFile": 1,
                "org.sonar.scm.git.GitScmProvider.revisionId": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.eclipse.jgit.storage.file.FileRepositoryBuilder.create": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "java.nio.file.Path.resolve": 2,
                "org.sonar.scm.git.GitScmProviderTest.newGitScmProvider": 1,
                "org.eclipse.jgit.lib.Repository.create": 1,
                "java.nio.file.Files.createDirectory": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.GitScmProvider": 1,
                "org.eclipse.jgit.api.Git": 1
            },
            "packageAccesses": {
                "org.eclipse.jgit.storage.file": 1,
                "org.eclipse.jgit.api": 1,
                "org.junit.rules": 1,
                "org.mockito": 1,
                "java.io": 1,
                "org.eclipse.jgit.lib": 2,
                "org.sonar.scm.git": 4,
                "org.assertj.core.api": 2,
                "java.nio.file": 5
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 13,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 9,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 9,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 12.697267665948548
    },
    "org.sonar.scanner.ci.CiConfigurationProviderTest.configuration_defined_by_ci_vendor": {
        "filePath": "org\\sonar\\scanner\\ci\\CiConfigurationProviderTest.java",
        "methodName": "configuration_defined_by_ci_vendor",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 1,
                "org.sonar.scanner.ci.CiConfigurationProvider.provide": 1,
                "org.assertj.core.api.Assertions.assertThat": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.ci.CiConfigurationProviderTest.EnabledCiVendor": 1,
                "org.sonar.scanner.ci.CiConfigurationProviderTest.DisabledCiVendor": 1
            },
            "packageAccesses": {
                "org.sonar.api.config.internal": 1,
                "org.sonar.scanner.ci": 5,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 5,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 11.469183130751873
    },
    "org.sonar.scanner.rule.ActiveRulesProviderTest.testParamsAreTransformed": {
        "filePath": "org\\sonar\\scanner\\rule\\ActiveRulesProviderTest.java",
        "methodName": "testParamsAreTransformed",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.newBuilder": 1,
                "org.sonar.api.rule.RuleKey.of": 6,
                "org.sonar.scanner.rule.ActiveRulesProvider.provide": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.setKey": 1,
                "org.mockito.Mockito.verifyNoMoreInteractions": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.setLanguage": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsOnly": 1,
                "org.sonar.api.batch.rule.LoadedActiveRule.setParams": 1,
                "org.sonar.scanner.rule.ActiveRulesProviderTest.mockProfiles": 1,
                "org.sonar.api.utils.DateUtils.formatDateTime": 1,
                "com.google.common.collect.ImmutableSet.of": 2,
                "com.google.common.collect.ImmutableList.of": 1,
                "java.util.List.add": 1,
                "org.sonar.scanner.rule.DefaultActiveRulesLoader.load": 2,
                "org.sonar.scanner.rule.ActiveRulesProviderTest.mockRule": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.api.batch.rule.LoadedActiveRule.setDeprecatedKeys": 2,
                "com.google.common.collect.ImmutableMap.of": 3,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.setRulesUpdatedAt": 1,
                "org.sonar.api.batch.rule.LoadedActiveRule.setName": 2,
                "org.mockito.Mockito.verify": 1,
                "org.assertj.core.api.AbstractIterableAssert.extracting": 1,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse.QualityProfile.Builder.build": 1,
                "org.sonar.api.batch.rule.LoadedActiveRule.setRuleKey": 2,
                "org.sonar.api.batch.rule.ActiveRules.findAll": 2,
                "org.assertj.core.groups.Tuple.tuple": 2
            },
            "objectInstantiations": {
                "org.sonar.api.batch.rule.LoadedActiveRule": 2,
                "org.sonar.scanner.rule.QualityProfiles": 1,
                "java.util.LinkedList": 1,
                "java.util.Date": 1
            },
            "packageAccesses": {
                "java.util": 5,
                "org.mockito": 3,
                "org.sonarqube.ws.Qualityprofiles.SearchWsResponse": 1,
                "org.sonar.api.utils": 1,
                "org.sonar.api.batch.rule": 16,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 5,
                "org.sonar.api.rule": 6,
                "java.lang": 1,
                "org.assertj.core.groups": 2,
                "org.sonarqube.ws": 5,
                "org.sonar.scanner.rule": 8,
                "com.google.common.collect": 6
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 45,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 26,
            "linesOfCodeJunitTest": 11,
            "logicalLinesOfCode": 27,
            "logicalLinesOfCodeJunitTest": 11
        },
        "stabilityMetricValue": 14.015240953451272
    },
    "org.sonar.scanner.scan.DeprecatedPropertiesWarningGeneratorTest.execute_whenUsingPasswordAndDotNetScanner_shouldAddWarning": {
        "filePath": "org\\sonar\\scanner\\scan\\DeprecatedPropertiesWarningGeneratorTest.java",
        "methodName": "execute_whenUsingPasswordAndDotNetScanner_shouldAddWarning",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.setProperty": 2,
                "org.sonar.batch.bootstrapper.EnvironmentInformation.getKey": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.times": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.scan.DeprecatedPropertiesWarningGenerator.execute": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.mockito.Mockito.verify": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.batch.bootstrapper": 1,
                "org.sonar.api.testfixtures.log": 1,
                "org.sonar.api.config.internal": 2,
                "org.mockito": 3,
                "org.sonar.scanner.scan": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 13.330239592044551
    },
    "org.sonar.scanner.repository.language.DefaultLanguagesRepositoryTest.should_load_languages_from_ws": {
        "filePath": "org\\sonar\\scanner\\repository\\language\\DefaultLanguagesRepositoryTest.java",
        "methodName": "should_load_languages_from_ws",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractIterableAssert.containsExactlyInAnyOrder": 3,
                "org.mockito.ArgumentMatchers.argThat": 1,
                "org.sonar.scanner.repository.language.DefaultLanguagesRepository.get": 9,
                "org.assertj.core.api.Assertions.assertThat": 10,
                "org.sonar.scanner.repository.language.DefaultLanguagesRepository.start": 1,
                "org.sonar.scanner.repository.language.DefaultLanguagesRepository.all": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 6,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.sonar.api.config.Configuration.getStringArray": 3,
                "org.sonar.scanner.WsTestUtil.mockReader": 1,
                "org.mockito.Mockito.when": 6,
                "org.sonar.scanner.repository.language.Language.fileSuffixes": 3,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "java.lang.Object.getClass": 1,
                "org.assertj.core.api.AbstractAssert.isNotNull": 3,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 3,
                "org.sonar.scanner.repository.language.Language.isPublishAllFiles": 3,
                "org.sonarqube.ws.client.WsResponse.contentReader": 2,
                "java.lang.Class.getResourceAsStream": 1,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "java.io.InputStreamReader": 1,
                "org.sonar.scanner.WsTestUtil.RequestMatcher": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 4,
                "java.lang": 2,
                "org.mockito": 9,
                "java.io": 1,
                "org.sonar.scanner": 2,
                "org.sonar.scanner.bootstrap": 1,
                "org.sonar.api.config": 3,
                "org.sonar.scanner.repository.language": 17,
                "org.mockito.stubbing": 6,
                "org.assertj.core.api": 20
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 61,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 23,
            "linesOfCodeJunitTest": 15,
            "logicalLinesOfCode": 24,
            "logicalLinesOfCodeJunitTest": 15
        },
        "stabilityMetricValue": 15.805568138736032
    },
    "org.sonar.scanner.ci.vendors.AwsCodeBuildTest.loadConfiguration": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\AwsCodeBuildTest.java",
        "methodName": "loadConfiguration",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.assertj.core.api.AbstractOptionalAssert.isEmpty": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.utils.System2.envVariable": 2,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.sonar.scanner.ci.vendors.AwsCodeBuildTest.setEnvVariable": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.mockito.Mockito.when": 2
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 2,
                "org.sonar.api.utils": 2,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 2,
                "org.sonar.scanner.ci.vendors": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 12.68317820655652
    },
    "org.sonar.scanner.sensor.UnchangedFilesHandlerTest.dont_mark_file_if_no_sensor_running": {
        "filePath": "org\\sonar\\scanner\\sensor\\UnchangedFilesHandlerTest.java",
        "methodName": "dont_mark_file_if_no_sensor_running",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.sensor.ExecutingSensorContext.clearExecutingSensor": 1,
                "org.sonar.scanner.sensor.UnchangedFilesHandler.markAsUnchanged": 1,
                "org.mockito.Mockito.verifyNoInteractions": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.sensor.UnchangedFilesHandler": 1
            },
            "packageAccesses": {
                "org.mockito": 1,
                "org.sonar.scanner.sensor": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 15.21225415133152
    },
    "org.sonar.scanner.repository.QualityProfileProviderTest.testProvide": {
        "filePath": "org\\sonar\\scanner\\repository\\QualityProfileProviderTest.java",
        "methodName": "testProvide",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.rule.QualityProfiles.findAll": 1,
                "org.sonar.scanner.repository.QualityProfileProviderTest.assertResponse": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsExactly": 1,
                "org.mockito.Mockito.verifyNoMoreInteractions": 1,
                "org.assertj.core.api.AbstractIterableAssert.extracting": 1,
                "org.sonar.scanner.repository.QualityProfilesProvider.provide": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.repository.QualityProfileLoader.load": 2,
                "org.mockito.Mockito.verify": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.repository": 4,
                "org.mockito": 3,
                "org.sonar.scanner.rule": 2,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 12,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 16.77451096987654
    },
    "org.sonar.scanner.bootstrap.PluginFilesTest.fail_if_server_returns_error": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\PluginFilesTest.java",
        "methodName": "fail_if_server_returns_error",
        "stats": {
            "methodCalls": {
                "okhttp3.mockwebserver.MockResponse.setResponseCode": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.sonar.scanner.bootstrap.PluginFilesTest.newInstalledPlugin": 1,
                "okhttp3.mockwebserver.MockWebServer.enqueue": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonar.scanner.bootstrap.PluginFilesTest.expectISE": 1,
                "org.sonar.scanner.bootstrap.PluginFiles.get": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller.InstalledPlugin": 1,
                "okhttp3.mockwebserver.MockResponse": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.bootstrap": 4,
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller": 2,
                "okhttp3.mockwebserver": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 8,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 9,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 32.0919015692059
    },
    "org.sonar.scanner.scm.ScmRevisionImplTest.test_empty_values": {
        "filePath": "org\\sonar\\scanner\\scm\\ScmRevisionImplTest.java",
        "methodName": "test_empty_values",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 6,
                "java.util.Map.put": 6,
                "org.assertj.core.api.AbstractOptionalAssert.isEmpty": 1,
                "java.util.Optional.ofNullable": 6,
                "org.assertj.core.api.Assertions.assertThat": 6,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 6,
                "org.mockito.Mockito.when": 6,
                "org.sonar.scanner.scm.ScmConfiguration.provider": 6,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 6,
                "org.assertj.core.api.AbstractOptionalAssert.hasValue": 5,
                "org.sonar.scanner.scm.ScmRevisionImplTest.testGet": 6,
                "org.sonar.scanner.scm.ScmRevisionImpl.get": 6,
                "org.mockito.Mockito.mock": 18
            },
            "objectInstantiations": {
                "java.util.HashMap": 6,
                "org.sonar.scanner.scm.ScmRevisionImpl": 6,
                "org.sonar.scanner.bootstrap.ScannerProperties": 6
            },
            "packageAccesses": {
                "java.util": 24,
                "org.sonar.scanner.fs": 6,
                "org.mockito": 30,
                "org.sonar.scanner.scm": 36,
                "org.sonar.scanner.bootstrap": 6,
                "org.sonar.scanner.ci": 12,
                "org.assertj.core.api": 12,
                "org.mockito.stubbing": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 102,
            "numRecursiveMethodCalls": 6,
            "linesOfCode": 60,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 60,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 15.297316193800253
    },
    "org.sonar.scanner.sensor.UnchangedFilesHandlerTest.not_active_if_using_different_reference": {
        "filePath": "org\\sonar\\scanner\\sensor\\UnchangedFilesHandlerTest.java",
        "methodName": "not_active_if_using_different_reference",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.sonar.scanner.scan.branch.BranchConfiguration.isPullRequest": 1,
                "org.mockito.Mockito.when": 3,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.sonar.scanner.sensor.UnchangedFilesHandlerTest.branchConfiguration": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchName": 1,
                "org.mockito.Mockito.verifyNoInteractions": 1,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.setLevel": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.referenceBranchName": 1,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.scanner.sensor.UnchangedFilesHandler.markAsUnchanged": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.sensor.UnchangedFilesHandler": 1
            },
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 2,
                "org.sonar.scanner.scan.branch": 5,
                "org.mockito": 5,
                "org.sonar.scanner.sensor": 4,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 17,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 11,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 11,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 11.399998679384582
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedFiles_should_return_null_on_errors": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedFiles_should_return_null_on_errors",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 2,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.eclipse.jgit.api.DiffCommand.call": 2,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.mockito.Mockito.when": 3,
                "org.mockito.ArgumentMatchers.anyBoolean": 1,
                "org.eclipse.jgit.api.DiffCommand.setShowNameAndStatusOnly": 1,
                "org.eclipse.jgit.api.Git.diff": 1,
                "org.mockito.Mockito.verify": 1,
                "org.sonar.scm.git.GitScmProvider.branchChangedFiles": 1,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "org.mockito.stubbing.OngoingStubbing.thenThrow": 1,
                "org.mockito.Mockito.mock": 4
            },
            "objectInstantiations": {
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "org.eclipse.jgit.api": 6,
                "org.mockito": 11,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2,
                "org.sonar.scm.git": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 28,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 15,
            "linesOfCodeJunitTest": 14,
            "logicalLinesOfCode": 13,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 19.431985100843637
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedFiles_should_return_null_on_io_errors_of_repo_builder": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedFiles_should_return_null_on_io_errors_of_repo_builder",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitScmProvider.branchChangedFiles": 1,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.mockito.Mockito.mock": 1,
                "org.mockito.Mockito.verifyNoInteractions": 1
            },
            "objectInstantiations": {
                "java.io.IOException": 1,
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "org.mockito": 2,
                "java.io": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scm.git": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 8,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 12.313604269293107
    },
    "org.sonar.scanner.cache.AnalysisCacheMemoryStorageTest.get_throws_IAE_if_no_cache": {
        "filePath": "org\\sonar\\scanner\\cache\\AnalysisCacheMemoryStorageTest.java",
        "methodName": "get_throws_IAE_if_no_cache",
        "stats": {
            "methodCalls": {
                "java.util.Optional.empty": 1,
                "org.sonar.scanner.cache.AnalysisCacheLoader.load": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.cache.AnalysisCacheMemoryStorage.load": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonar.scanner.cache.AnalysisCacheMemoryStorage.contains": 1,
                "org.sonar.scanner.cache.AnalysisCacheMemoryStorage.get": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.cache": 4,
                "java.util": 1,
                "org.mockito": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 12.257313734685368
    },
    "org.sonar.batch.bootstrapper.LoggingConfiguratorTest.testNoListener": {
        "filePath": "org\\sonar\\batch\\bootstrapper\\LoggingConfiguratorTest.java",
        "methodName": "testNoListener",
        "stats": {
            "methodCalls": {
                "org.sonar.batch.bootstrapper.LoggingConfigurator.apply": 1,
                "java.lang.System.setOut": 1,
                "java.nio.charset.Charset.name": 1,
                "java.lang.Object.getClass": 1,
                "org.assertj.core.api.AbstractCharSequenceAssert.contains": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.slf4j.LoggerFactory.getLogger": 1,
                "java.io.ByteArrayOutputStream.toString": 1,
                "org.slf4j.Logger.info": 1
            },
            "objectInstantiations": {
                "java.io.PrintStream": 1
            },
            "packageAccesses": {
                "org.sonar.batch.bootstrapper": 1,
                "java.lang": 2,
                "org.slf4j": 3,
                "java.io": 2,
                "org.assertj.core.api": 2,
                "java.nio.charset": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 33.49027228817254
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedFiles_from_diverged": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedFiles_from_diverged",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitUtils.createFile": 5,
                "org.eclipse.jgit.api.Git.commit": 8,
                "java.nio.file.Path.getParent": 5,
                "java.lang.String.getBytes": 7,
                "org.assertj.core.api.AbstractIterableAssert.containsExactlyInAnyOrder": 1,
                "org.eclipse.jgit.api.AddCommand.call": 8,
                "org.eclipse.jgit.api.CheckoutCommand.setName": 1,
                "org.sonar.scm.git.GitScmProviderTest.appendToAndCommitFile": 2,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.lang.StringBuilder.append": 28,
                "java.lang.StringBuilder.toString": 14,
                "org.eclipse.jgit.api.CheckoutCommand.call": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedLine": 7,
                "java.util.Random.nextInt": 7,
                "java.nio.file.Path.resolve": 9,
                "org.eclipse.jgit.lib.Repository.exactRef": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.setName": 1,
                "org.eclipse.jgit.api.Git.rm": 1,
                "org.eclipse.jgit.api.CommitCommand.call": 8,
                "org.eclipse.jgit.api.RmCommand.addFilepattern": 1,
                "java.lang.String.join": 8,
                "java.nio.file.Files.write": 7,
                "org.sonar.scm.git.GitScmProviderTest.createAndCommitFile": 10,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "org.eclipse.jgit.api.Git.add": 8,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 8,
                "org.eclipse.jgit.api.Git.getRepository": 1,
                "org.eclipse.jgit.lib.AnyObjectId.getName": 1,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 8,
                "org.eclipse.jgit.api.Git.branchCreate": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.call": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.setStartPoint": 1,
                "java.nio.file.Files.createDirectories": 5,
                "org.eclipse.jgit.api.CommitCommand.setAuthor": 8,
                "org.sonar.scm.git.GitScmProvider.branchChangedFiles": 1,
                "java.lang.String.length": 7,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "org.eclipse.jgit.lib.Ref.getObjectId": 1,
                "org.eclipse.jgit.api.RmCommand.call": 1,
                "org.sonar.scm.git.GitScmProviderTest.commit": 8,
                "org.eclipse.jgit.api.Git.checkout": 1,
                "org.sonar.scm.git.GitScmProviderTest.deleteAndCommitFile": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedContent": 7,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.lang.StringBuilder": 14,
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "java.lang": 108,
                "org.eclipse.jgit.api": 67,
                "java.util": 7,
                "org.mockito": 1,
                "org.eclipse.jgit.lib": 4,
                "org.sonar.scm.git": 44,
                "org.assertj.core.api": 2,
                "java.nio.file": 31
            },
            "numConditionals": 0,
            "numLoops": 29,
            "numNestedLoops": 7,
            "numMethodCalls": 213,
            "numRecursiveMethodCalls": 42,
            "linesOfCode": 159,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 188,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 14.1348173170959
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedLines_should_not_fail_if_there_is_no_merge_base": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedLines_should_not_fail_if_there_is_no_merge_base",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitUtils.createFile": 2,
                "org.eclipse.jgit.api.Git.commit": 2,
                "java.nio.file.Path.getParent": 2,
                "java.lang.String.getBytes": 2,
                "org.eclipse.jgit.api.AddCommand.call": 2,
                "org.eclipse.jgit.api.CheckoutCommand.setName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.lang.StringBuilder.append": 8,
                "java.lang.StringBuilder.toString": 4,
                "org.eclipse.jgit.api.CheckoutCommand.call": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedLine": 2,
                "java.util.Random.nextInt": 2,
                "java.nio.file.Path.resolve": 2,
                "org.eclipse.jgit.api.CheckoutCommand.setOrphan": 1,
                "org.eclipse.jgit.api.CommitCommand.call": 2,
                "java.lang.String.join": 2,
                "java.util.Collections.singleton": 1,
                "java.nio.file.Files.write": 2,
                "org.sonar.scm.git.GitScmProviderTest.createAndCommitFile": 4,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "org.eclipse.jgit.api.Git.add": 2,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 2,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 2,
                "org.sonar.scm.git.GitScmProvider.branchChangedLines": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "java.nio.file.Files.createDirectories": 2,
                "org.eclipse.jgit.api.CommitCommand.setAuthor": 2,
                "java.lang.String.length": 2,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "java.nio.file.Paths.get": 1,
                "org.sonar.scm.git.GitScmProviderTest.commit": 2,
                "org.eclipse.jgit.api.Git.checkout": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedContent": 2,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.lang.StringBuilder": 4,
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "java.util": 4,
                "java.lang": 30,
                "org.eclipse.jgit.api": 18,
                "org.mockito": 1,
                "org.sonar.scm.git": 16,
                "org.assertj.core.api": 2,
                "java.nio.file": 11
            },
            "numConditionals": 0,
            "numLoops": 8,
            "numNestedLoops": 2,
            "numMethodCalls": 66,
            "numRecursiveMethodCalls": 14,
            "linesOfCode": 49,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 57,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 12.759103784924184
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedFilesWithFileMovementDetection_correctly_detects_several_file_moves_in_pull_request_base_branch": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedFilesWithFileMovementDetection_correctly_detects_several_file_moves_in_pull_request_base_branch",
        "stats": {
            "methodCalls": {
                "org.eclipse.jgit.api.Git.commit": 5,
                "java.nio.file.Path.getParent": 2,
                "org.eclipse.jgit.api.AddCommand.call": 7,
                "org.eclipse.jgit.api.CheckoutCommand.setName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.lang.StringBuilder.toString": 5,
                "org.eclipse.jgit.api.CheckoutCommand.call": 1,
                "java.util.Random.nextInt": 3,
                "java.nio.file.Path.resolve": 7,
                "org.eclipse.jgit.lib.Repository.exactRef": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.setName": 1,
                "org.sonar.scm.git.GitScmProviderTest.editLineOfFile": 1,
                "org.eclipse.jgit.api.AddCommand.setUpdate": 2,
                "java.util.List.set": 1,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "org.eclipse.jgit.api.Git.add": 7,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 7,
                "org.eclipse.jgit.lib.AnyObjectId.getName": 1,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 5,
                "org.eclipse.jgit.api.Git.branchCreate": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.call": 1,
                "java.nio.file.Path.resolveSibling": 2,
                "java.nio.file.Files.createDirectories": 2,
                "java.lang.String.format": 2,
                "java.lang.String.length": 3,
                "org.sonar.scm.git.GitScmProviderTest.commit": 4,
                "org.eclipse.jgit.api.Git.checkout": 1,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.scm.git.GitUtils.createFile": 2,
                "org.sonar.scm.git.GitScmProviderTest.moveAndCommitFile": 2,
                "java.lang.String.getBytes": 2,
                "java.nio.file.Files.move": 2,
                "java.lang.StringBuilder.append": 10,
                "java.nio.file.Files.readAllLines": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedLine": 3,
                "org.assertj.core.api.AbstractAssert.extracting": 1,
                "org.assertj.core.api.AssertionsForClassTypes.tuple": 2,
                "org.eclipse.jgit.api.CommitCommand.call": 5,
                "java.lang.String.join": 3,
                "java.nio.file.Files.write": 3,
                "org.sonar.scm.git.GitScmProviderTest.createAndCommitFile": 4,
                "org.sonar.scm.git.GitScmProviderTest.createBranch": 1,
                "org.eclipse.jgit.api.Git.getRepository": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.setStartPoint": 1,
                "org.eclipse.jgit.api.CommitCommand.setAuthor": 5,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "org.eclipse.jgit.lib.Ref.getObjectId": 1,
                "org.sonar.scm.git.GitScmProvider.branchChangedFilesWithFileMovementDetection": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedContent": 2
            },
            "objectInstantiations": {
                "java.lang.StringBuilder": 5,
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "java.lang": 45,
                "org.eclipse.jgit.api": 51,
                "java.util": 5,
                "org.mockito": 1,
                "org.sonar.scm.git": 23,
                "org.eclipse.jgit.lib": 4,
                "org.assertj.core.api": 4,
                "java.nio.file": 26
            },
            "numConditionals": 0,
            "numLoops": 11,
            "numNestedLoops": 3,
            "numMethodCalls": 130,
            "numRecursiveMethodCalls": 21,
            "linesOfCode": 86,
            "linesOfCodeJunitTest": 14,
            "logicalLinesOfCode": 97,
            "logicalLinesOfCodeJunitTest": 14
        },
        "stabilityMetricValue": 13.850390567084364
    },
    "org.sonar.scm.git.NativeGitBlameCommandTest.git_blame_uses_safe_local_repository": {
        "filePath": "org\\sonar\\scm\\git\\NativeGitBlameCommandTest.java",
        "methodName": "git_blame_uses_safe_local_repository",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 4,
                "java.io.File.toPath": 4,
                "org.sonar.scm.git.NativeGitBlameCommandTest.createNewTempFolder": 1,
                "java.nio.file.Path.toFile": 1,
                "org.mockito.ArgumentMatchers.eq": 3,
                "org.sonar.scm.git.NativeGitBlameCommand.blame": 1,
                "java.nio.file.Path.toString": 1,
                "org.mockito.Mockito.verify": 1,
                "java.nio.file.Path.toRealPath": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.mockito.Mockito.mock": 2,
                "org.mockito.ArgumentMatchers.anyString": 13
            },
            "objectInstantiations": {
                "org.sonar.scm.git.NativeGitBlameCommand": 1,
                "java.io.File": 1
            },
            "packageAccesses": {
                "java.lang": 1,
                "org.junit.rules": 1,
                "org.mockito": 23,
                "java.io": 7,
                "org.sonar.scm.git": 5,
                "org.sonar.scm.git.ProcessWrapperFactory": 1,
                "java.nio.file": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 42,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 10,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 11,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 14.165625595694845
    },
    "org.sonar.scanner.externalissue.sarif.RegionMapperTest.mapRegion_whenStartEndLinesDefined": {
        "filePath": "org\\sonar\\scanner\\externalissue\\sarif\\RegionMapperTest.java",
        "methodName": "mapRegion_whenStartEndLinesDefined",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.externalissue.sarif.RegionMapperTest.mockRegion": 1,
                "org.sonar.api.batch.fs.TextPointer.line": 2,
                "org.sonar.core.sarif.Region.getStartLine": 2,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.sonar.api.batch.fs.TextRange.end": 2,
                "org.mockito.Mockito.when": 4,
                "org.sonar.api.batch.fs.TextRange.start": 2,
                "org.sonar.core.sarif.Region.getEndLine": 2,
                "org.assertj.core.api.AbstractIntegerAssert.isEqualTo": 1,
                "org.sonar.core.sarif.Region.getStartColumn": 1,
                "org.assertj.core.api.AbstractIntegerAssert.isZero": 1,
                "java.util.Optional.get": 1,
                "org.sonar.api.batch.fs.TextPointer.lineOffset": 2,
                "org.assertj.core.api.AbstractOptionalAssert.isPresent": 1,
                "org.sonar.core.sarif.Region.getEndColumn": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 2,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.scanner.externalissue.sarif.RegionMapper.mapRegion": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 2,
                "org.mockito": 5,
                "org.sonar.core.sarif": 8,
                "org.sonar.scanner.externalissue.sarif": 2,
                "org.sonar.api.batch.fs": 9,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 10
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 36,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 14,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 14,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 30.829147962945687
    },
    "org.sonar.scm.svn.SvnScmSupportTest.newSvnClientManager_whenPasswordConfigured_shouldNotReturnNull": {
        "filePath": "org\\sonar\\scm\\svn\\SvnScmSupportTest.java",
        "methodName": "newSvnClientManager_whenPasswordConfigured_shouldNotReturnNull",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.svn.SvnConfiguration.password": 1,
                "org.assertj.core.api.AbstractAssert.isNotNull": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scm.svn.SvnScmSupport.newSvnClientManager": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scm.svn.SvnConfiguration.passPhrase": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 2,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 2,
                "org.sonar.scm.svn": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 29.134783179513907
    },
    "org.sonar.scm.git.GitScmProviderTest.relativePathFromScmRoot_should_return_dot_project_root": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "relativePathFromScmRoot_should_return_dot_project_root",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitScmProviderTest.newGitScmProvider": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scm.git.GitScmProvider.relativePathFromScmRoot": 1,
                "java.nio.file.Paths.get": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "org.mockito": 1,
                "org.assertj.core.api": 2,
                "java.nio.file": 1,
                "org.sonar.scm.git": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 15.142668409041935
    },
    "org.sonar.scanner.repository.language.DefaultLanguagesRepositoryTest.get_find_language_by_key": {
        "filePath": "org\\sonar\\scanner\\repository\\language\\DefaultLanguagesRepositoryTest.java",
        "methodName": "get_find_language_by_key",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.argThat": 1,
                "org.sonar.scanner.repository.language.DefaultLanguagesRepository.get": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.repository.language.DefaultLanguagesRepository.start": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.sonar.api.config.Configuration.getStringArray": 1,
                "org.sonar.scanner.WsTestUtil.mockReader": 1,
                "org.mockito.Mockito.when": 4,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "java.lang.Object.getClass": 1,
                "org.sonarqube.ws.client.WsResponse.contentReader": 2,
                "org.assertj.core.api.AbstractObjectAssert.extracting": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsOnly": 1,
                "java.lang.Class.getResourceAsStream": 1,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "java.io.InputStreamReader": 1,
                "org.sonar.scanner.WsTestUtil.RequestMatcher": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 4,
                "java.lang": 2,
                "org.mockito": 7,
                "java.io": 1,
                "org.sonar.scanner": 2,
                "org.sonar.scanner.bootstrap": 1,
                "org.sonar.api.config": 1,
                "org.sonar.scanner.repository.language": 2,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 3
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 23,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 12,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 13,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 47.355206745415
    },
    "org.sonar.scanner.report.ReportPublisherTest.send_pull_request_characteristic": {
        "filePath": "org\\sonar\\scanner\\report\\ReportPublisherTest.java",
        "methodName": "send_pull_request_characteristic",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsExactlyInAnyOrder": 1,
                "org.sonar.api.impl.utils.JUnitTempFolder.newFile": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.sonarqube.ws.client.WsResponse.contentStream": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchName": 1,
                "org.sonarqube.ws.Ce.SubmitResponse.newBuilder": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.pullRequestKey": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 2,
                "org.mockito.ArgumentCaptor.getValue": 1,
                "org.sonar.scanner.report.ReportPublisher.upload": 1,
                "com.google.protobuf.AbstractMessageLite.writeTo": 1,
                "org.sonarqube.ws.client.WsResponse.failIfNotSuccessful": 1,
                "org.assertj.core.api.AbstractIterableAssert.containsExactly": 1,
                "org.sonarqube.ws.client.Parameters.getValues": 2,
                "org.mockito.ArgumentCaptor.capture": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 6,
                "org.sonarqube.ws.Ce.SubmitResponse.Builder.build": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.mockito.Mockito.when": 6,
                "org.sonarqube.ws.client.WsRequest.getParameters": 3,
                "org.sonarqube.ws.client.Parameters.getKeys": 1,
                "org.mockito.Mockito.verify": 1,
                "java.io.PipedOutputStream.close": 1,
                "org.mockito.ArgumentCaptor.forClass": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchType": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.io.PipedInputStream": 1,
                "java.io.PipedOutputStream": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 10,
                "org.sonar.api.impl.utils": 1,
                "org.mockito": 13,
                "com.google.protobuf": 1,
                "org.sonar.scanner.report": 1,
                "org.sonar.scanner.bootstrap": 2,
                "org.mockito.stubbing": 6,
                "org.assertj.core.api": 6,
                "java.lang": 2,
                "org.sonar.scanner.scan.branch": 3,
                "java.io": 5,
                "org.sonarqube.ws": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 43,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 20,
            "linesOfCodeJunitTest": 20,
            "logicalLinesOfCode": 20,
            "logicalLinesOfCodeJunitTest": 20
        },
        "stabilityMetricValue": 13.392921952749909
    },
    "org.sonar.scanner.externalissue.sarif.RulesSeverityDetectorTest.detectRulesSeverities_detectsCorrectlyExtensionsDefinedRuleSeverities": {
        "filePath": "org\\sonar\\scanner\\externalissue\\sarif\\RulesSeverityDetectorTest.java",
        "methodName": "detectRulesSeverities_detectsCorrectlyExtensionsDefinedRuleSeverities",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.externalissue.sarif.RulesSeverityDetector.detectRulesSeveritiesForNewTaxonomy": 1,
                "org.sonar.scanner.externalissue.sarif.RulesSeverityDetectorTest.assertDetectedRuleSeverities": 2,
                "java.util.Map.entrySet": 2,
                "org.sonar.core.sarif.Extension.getRules": 1,
                "org.sonar.scanner.externalissue.sarif.RulesSeverityDetectorTest.assertNoLogs": 2,
                "org.assertj.core.api.Assertions.assertThat": 4,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 6,
                "org.sonar.scanner.externalissue.sarif.RulesSeverityDetector.detectRulesSeverities": 1,
                "org.sonar.core.sarif.Rule.getDefaultConfiguration": 1,
                "org.sonar.scanner.externalissue.sarif.RulesSeverityDetectorTest.mockExtensionsDefinedRuleSeverities": 1,
                "org.mockito.Mockito.when": 6,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 2,
                "org.assertj.core.api.AbstractAssert.extracting": 2,
                "org.assertj.core.api.AssertionsForClassTypes.tuple": 2,
                "org.sonar.core.sarif.Tool.getExtensions": 1,
                "org.sonar.core.sarif.Rule.getId": 1,
                "org.sonar.core.sarif.DefaultConfiguration.getLevel": 1,
                "java.util.Set.of": 3,
                "org.sonar.core.sarif.Driver.getRules": 1,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 2
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 2,
                "java.util": 6,
                "org.mockito": 6,
                "org.sonar.core.sarif": 7,
                "org.sonar.scanner.externalissue.sarif": 7,
                "org.mockito.stubbing": 6,
                "org.assertj.core.api": 10
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 44,
            "numRecursiveMethodCalls": 5,
            "linesOfCode": 18,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 18,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 21.751497745077458
    },
    "org.sonar.scm.git.GitScmProviderTest.relativePathFromScmRoot_should_return_filename_for_file_in_project_root": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "relativePathFromScmRoot_should_return_filename_for_file_in_project_root",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitScmProviderTest.newGitScmProvider": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.nio.file.Paths.get": 1,
                "org.sonar.scm.git.GitScmProvider.relativePathFromScmRoot": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "java.nio.file.Files.createFile": 1,
                "java.nio.file.Path.resolve": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "org.mockito": 1,
                "org.assertj.core.api": 2,
                "java.nio.file": 5,
                "org.sonar.scm.git": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 13.038654115486157
    },
    "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.call_whenMissingPermissions_shouldFailWithMsg": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\DefaultScannerWsClientTest.java",
        "methodName": "call_whenMissingPermissions_shouldFailWithMsg",
        "stats": {
            "methodCalls": {
                "java.util.Collections.emptyMap": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.newRequest": 1,
                "org.sonarqube.ws.client.WsClient.wsConnector": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.newResponse": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonarqube.ws.client.MockWsResponse.setCode": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "org.sonarqube.ws.client.MockWsResponse.setRequestUrl": 1,
                "org.sonarqube.ws.client.MockWsResponse.setContent": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonarqube.ws.client.WsConnector.call": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.GlobalAnalysisMode": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient": 1,
                "org.sonar.scanner.bootstrap.ScannerProperties": 1,
                "org.sonarqube.ws.client.GetRequest": 1,
                "org.sonarqube.ws.client.MockWsResponse": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 9,
                "java.util": 1,
                "org.mockito": 1,
                "org.sonar.scanner.bootstrap": 7,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 32.64876614542688
    },
    "org.sonar.scanner.report.ReportPublisherTest.parse_upload_error_message": {
        "filePath": "org\\sonar\\scanner\\report\\ReportPublisherTest.java",
        "methodName": "parse_upload_error_message",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 1,
                "org.sonarqube.ws.client.WsResponse.failIfNotSuccessful": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.mockito.stubbing.OngoingStubbing.thenThrow": 1,
                "org.sonar.scanner.report.ReportPublisher.upload": 1,
                "org.sonar.api.impl.utils.JUnitTempFolder.newFile": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 2,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonarqube.ws.client.HttpException": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 4,
                "org.sonar.api.impl.utils": 1,
                "org.mockito": 4,
                "org.sonar.scanner.report": 1,
                "org.sonar.scanner.bootstrap": 1,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 13,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 13.038883388332897
    },
    "org.sonar.scm.git.GitScmProviderTest.relativePathFromScmRoot_should_return_relative_path_for_file_in_project_subdir": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "relativePathFromScmRoot_should_return_relative_path_for_file_in_project_subdir",
        "stats": {
            "methodCalls": {
                "java.nio.file.Path.getParent": 1,
                "org.sonar.scm.git.GitScmProviderTest.newGitScmProvider": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.nio.file.Paths.get": 1,
                "org.sonar.scm.git.GitScmProvider.relativePathFromScmRoot": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "java.nio.file.Files.createDirectories": 1,
                "java.nio.file.Files.createFile": 1,
                "java.nio.file.Path.resolve": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "org.mockito": 1,
                "org.assertj.core.api": 2,
                "java.nio.file": 7,
                "org.sonar.scm.git": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 10,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 14.22846601944538
    },
    "org.sonar.scanner.externalissue.sarif.RulesSeverityDetectorTest.detectRulesSeverities_returnsEmptyMapAndLogsWarning_whenUnableToDetectSeverities": {
        "filePath": "org\\sonar\\scanner\\externalissue\\sarif\\RulesSeverityDetectorTest.java",
        "methodName": "detectRulesSeverities_returnsEmptyMapAndLogsWarning_whenUnableToDetectSeverities",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.externalissue.sarif.RulesSeverityDetector.detectRulesSeveritiesForNewTaxonomy": 1,
                "org.sonar.scanner.externalissue.sarif.RulesSeverityDetectorTest.assertDetectedRuleSeverities": 2,
                "java.util.Map.entrySet": 2,
                "org.sonar.core.sarif.Run.getTool": 1,
                "org.sonar.core.sarif.Extension.getRules": 1,
                "org.assertj.core.api.Assertions.assertThat": 4,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 5,
                "org.sonar.scanner.externalissue.sarif.RulesSeverityDetector.detectRulesSeverities": 1,
                "org.mockito.Mockito.when": 5,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 2,
                "java.lang.String.format": 2,
                "org.assertj.core.api.AbstractAssert.extracting": 2,
                "org.sonar.core.sarif.Tool.getExtensions": 1,
                "org.sonar.scanner.externalissue.sarif.RulesSeverityDetectorTest.mockUnsupportedRuleSeveritiesDefinition": 1,
                "org.assertj.core.api.AbstractIterableAssert.contains": 2,
                "org.sonar.core.sarif.Tool.getDriver": 1,
                "org.sonar.scanner.externalissue.sarif.RulesSeverityDetectorTest.assertWarningLog": 2,
                "java.util.Set.of": 3,
                "org.sonar.core.sarif.Driver.getRules": 1,
                "java.lang.Enum.name": 2
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 2,
                "java.util": 6,
                "java.lang": 4,
                "org.mockito": 5,
                "org.sonar.core.sarif": 6,
                "org.sonar.scanner.externalissue.sarif": 7,
                "org.mockito.stubbing": 5,
                "org.assertj.core.api": 8
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 43,
            "numRecursiveMethodCalls": 5,
            "linesOfCode": 17,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 17,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 13.128478723333986
    },
    "org.sonar.scanner.ci.vendors.CodeMagicTest.loadConfiguration_commitEnvVariableNotAvailable_addScmRevisionToConfig": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\CodeMagicTest.java",
        "methodName": "loadConfiguration_commitEnvVariableNotAvailable_addScmRevisionToConfig",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "org.sonar.scanner.ci.vendors.CodeMagicTest.setEnvVariable": 1,
                "org.assertj.core.api.AbstractOptionalAssert.isEmpty": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.sonar.api.utils.System2.envVariable": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "java.util.List.get": 1,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 1,
                "java.util": 2,
                "org.mockito": 1,
                "org.sonar.api.utils": 1,
                "org.sonar.scanner.ci": 3,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 6,
                "org.sonar.scanner.ci.vendors": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 13.083091384631043
    },
    "org.sonar.scanner.cache.WriteCacheImplTest.write_throws_IAE_if_writing_same_key_twice": {
        "filePath": "org\\sonar\\scanner\\cache\\WriteCacheImplTest.java",
        "methodName": "write_throws_IAE_if_writing_same_key_twice",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.cache.WriteCacheImpl.write": 2,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 2,
                "org.sonar.scanner.cache": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 5,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 15.748265886176405
    },
    "org.sonar.scanner.bootstrap.PluginFilesTest.fail_if_md5_header_is_missing_from_response": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\PluginFilesTest.java",
        "methodName": "fail_if_md5_header_is_missing_from_response",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.bootstrap.PluginFilesTest.enqueueDownload": 1,
                "okhttp3.mockwebserver.MockResponse.setBody": 1,
                "org.sonar.scanner.bootstrap.PluginFilesTest.newInstalledPlugin": 1,
                "org.sonar.scanner.bootstrap.PluginFilesTest.expectISE": 1,
                "org.sonar.scanner.bootstrap.PluginFiles.get": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "okhttp3.mockwebserver.MockResponse.setHeader": 1,
                "okio.Buffer.write": 1,
                "org.apache.commons.io.FileUtils.readFileToByteArray": 1,
                "okhttp3.mockwebserver.MockWebServer.enqueue": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller.InstalledPlugin": 1,
                "okio.Buffer": 1,
                "okhttp3.mockwebserver.MockResponse": 1
            },
            "packageAccesses": {
                "org.junit.rules": 1,
                "java.io": 1,
                "okio": 3,
                "org.sonar.scanner.bootstrap": 5,
                "org.sonar.scanner.bootstrap.ScannerPluginInstaller": 2,
                "okhttp3.mockwebserver": 5,
                "org.apache.commons.io": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 1,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 15,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 17,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 32.760364342543866
    },
    "org.sonar.scanner.issue.ignore.IgnoreIssuesFilterTest.shouldPassToChainIfMatcherHasNoPatternForIssue": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\IgnoreIssuesFilterTest.java",
        "methodName": "shouldPassToChainIfMatcherHasNoPatternForIssue",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.issue.ignore.IgnoreIssuesFilter.accept": 1,
                "org.mockito.ArgumentMatchers.any": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.api.scan.issue.filter.IssueFilterChain.accept": 1,
                "com.google.common.collect.ImmutableSet.of": 1,
                "org.mockito.Mockito.verify": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.IgnoreIssuesFilter": 1,
                "org.sonar.api.batch.rule.internal.DefaultActiveRules": 1
            },
            "packageAccesses": {
                "org.mockito": 3,
                "org.sonar.api.batch.rule.internal": 2,
                "org.sonar.api.scan.issue.filter": 1,
                "org.sonar.scanner.issue.ignore": 3,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2,
                "com.google.common.collect": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 10,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 12.915097157906711
    },
    "org.sonar.scanner.scan.ProjectReactorBuilderTest.shouldInitRootWorkDir": {
        "filePath": "org\\sonar\\scanner\\scan\\ProjectReactorBuilderTest.java",
        "methodName": "shouldInitRootWorkDir",
        "stats": {
            "methodCalls": {
                "java.util.Collections.emptyMap": 2,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.sonar.scanner.scan.ProjectReactorBuilder.initRootProjectWorkDir": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ScannerProperties": 1,
                "org.sonar.scanner.scan.ProjectReactorBuilder": 1,
                "java.io.File": 2
            },
            "packageAccesses": {
                "java.util": 2,
                "org.mockito": 1,
                "java.io": 4,
                "org.sonar.scanner.scan": 3,
                "org.sonar.scanner.bootstrap": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 16.618132143383253
    },
    "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.call_whenMissingCredentials_shouldFailWithMsg": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\DefaultScannerWsClientTest.java",
        "methodName": "call_whenMissingCredentials_shouldFailWithMsg",
        "stats": {
            "methodCalls": {
                "java.util.Collections.emptyMap": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.newRequest": 1,
                "org.sonarqube.ws.client.WsClient.wsConnector": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.newResponse": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonarqube.ws.client.MockWsResponse.setCode": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "org.sonarqube.ws.client.MockWsResponse.setRequestUrl": 1,
                "org.sonarqube.ws.client.MockWsResponse.setContent": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonarqube.ws.client.WsConnector.call": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.GlobalAnalysisMode": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient": 1,
                "org.sonar.scanner.bootstrap.ScannerProperties": 1,
                "org.sonarqube.ws.client.GetRequest": 1,
                "org.sonarqube.ws.client.MockWsResponse": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 9,
                "java.util": 1,
                "org.mockito": 1,
                "org.sonar.scanner.bootstrap": 7,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 27.342174203183024
    },
    "org.sonar.scanner.issue.ignore.EnforceIssuesFilterTest.shouldAcceptIssueIfFullyMatched": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\EnforceIssuesFilterTest.java",
        "methodName": "shouldAcceptIssueIfFullyMatched",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.issue.DefaultFilterableIssue.ruleKey": 1,
                "org.sonar.scanner.issue.DefaultFilterableIssue.getComponent": 1,
                "org.sonar.scanner.issue.ignore.pattern.AbstractPatternInitializer.getMulticriteriaPatterns": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.sonar.api.rule.RuleKey.of": 1,
                "org.mockito.Mockito.when": 3,
                "org.mockito.Mockito.verifyNoInteractions": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder.build": 1,
                "org.sonar.scanner.issue.ignore.EnforceIssuesFilterTest.createComponentWithPath": 1,
                "org.sonar.scanner.issue.ignore.EnforceIssuesFilter.accept": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.sonar.api.rule.RuleKey.toString": 1,
                "com.google.common.collect.ImmutableSet.of": 1,
                "com.google.common.collect.ImmutableList.of": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.EnforceIssuesFilter": 1,
                "org.sonar.api.batch.rule.internal.DefaultActiveRules": 1,
                "org.sonar.scanner.issue.ignore.pattern.IssuePattern": 1,
                "org.sonar.api.batch.fs.internal.TestInputFileBuilder": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.issue.ignore.pattern": 3,
                "java.lang": 1,
                "org.mockito": 4,
                "org.sonar.scanner.issue": 2,
                "org.sonar.api.batch.rule.internal": 2,
                "org.sonar.scanner.issue.ignore": 3,
                "org.sonar.api.batch.fs.internal": 2,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2,
                "org.sonar.api.rule": 3,
                "com.google.common.collect": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 19,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 11,
            "linesOfCodeJunitTest": 10,
            "logicalLinesOfCode": 11,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 13.714040241856038
    },
    "org.sonar.scanner.externalissue.sarif.RulesSeverityDetectorTest.detectRulesSeverities_detectsCorrectlyDriverDefinedRuleSeverities": {
        "filePath": "org\\sonar\\scanner\\externalissue\\sarif\\RulesSeverityDetectorTest.java",
        "methodName": "detectRulesSeverities_detectsCorrectlyDriverDefinedRuleSeverities",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.externalissue.sarif.RulesSeverityDetector.detectRulesSeveritiesForNewTaxonomy": 1,
                "org.sonar.scanner.externalissue.sarif.RulesSeverityDetectorTest.assertDetectedRuleSeverities": 2,
                "java.util.Map.entrySet": 2,
                "org.sonar.scanner.externalissue.sarif.RulesSeverityDetectorTest.assertNoLogs": 2,
                "org.assertj.core.api.Assertions.assertThat": 4,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.sonar.scanner.externalissue.sarif.RulesSeverityDetector.detectRulesSeverities": 1,
                "org.sonar.core.sarif.Rule.getDefaultConfiguration": 1,
                "org.mockito.Mockito.when": 4,
                "org.sonar.scanner.externalissue.sarif.RulesSeverityDetectorTest.mockDriverDefinedRuleSeverities": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 2,
                "org.assertj.core.api.AbstractAssert.extracting": 2,
                "org.assertj.core.api.AssertionsForClassTypes.tuple": 2,
                "org.sonar.core.sarif.Rule.getId": 1,
                "org.sonar.core.sarif.DefaultConfiguration.getLevel": 1,
                "java.util.Set.of": 1,
                "org.sonar.core.sarif.Driver.getRules": 1,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 2
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 2,
                "java.util": 4,
                "org.mockito": 4,
                "org.sonar.core.sarif": 5,
                "org.sonar.scanner.externalissue.sarif": 7,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 10
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 36,
            "numRecursiveMethodCalls": 5,
            "linesOfCode": 16,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 16,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 27.859440291051897
    },
    "org.sonar.scanner.report.ReportPublisherTest.dump_public_url_if_defined_for_main_branch": {
        "filePath": "org\\sonar\\scanner\\report\\ReportPublisherTest.java",
        "methodName": "dump_public_url_if_defined_for_main_branch",
        "stats": {
            "methodCalls": {
                "org.sonar.api.platform.Server.getPublicRootUrl": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "java.nio.file.Path.toFile": 1,
                "org.sonar.scanner.scan.ScanProperties.metadataFilePath": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonar.scanner.report.ReportPublisher.prepareAndDumpMetadata": 1,
                "org.mockito.Mockito.when": 1,
                "org.apache.commons.io.FileUtils.readFileToString": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 1,
                "org.sonar.api.platform": 1,
                "org.sonar.scanner.scan": 1,
                "org.sonar.scanner.report": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2,
                "org.apache.commons.io": 1,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 14.014316810024985
    },
    "org.sonar.scanner.scan.DeprecatedPropertiesWarningGeneratorTest.execute_whenUsingLogin_shouldAddWarning": {
        "filePath": "org\\sonar\\scanner\\scan\\DeprecatedPropertiesWarningGeneratorTest.java",
        "methodName": "execute_whenUsingLogin_shouldAddWarning",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.setProperty": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.Mockito.times": 1,
                "org.sonar.scanner.scan.DeprecatedPropertiesWarningGenerator.execute": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.mockito.Mockito.verify": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan": 1,
                "org.sonar.api.testfixtures.log": 1,
                "org.sonar.api.config.internal": 1,
                "org.mockito": 2,
                "org.assertj.core.api": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 15.038650188100123
    },
    "org.sonar.scanner.externalissue.sarif.RegionMapperTest.mapRegion_whenStartEndLinesDefinedAndStartColumn": {
        "filePath": "org\\sonar\\scanner\\externalissue\\sarif\\RegionMapperTest.java",
        "methodName": "mapRegion_whenStartEndLinesDefinedAndStartColumn",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.externalissue.sarif.RegionMapperTest.mockRegion": 1,
                "org.sonar.api.batch.fs.TextPointer.line": 2,
                "org.sonar.core.sarif.Region.getStartLine": 2,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.sonar.api.batch.fs.TextRange.end": 2,
                "org.mockito.Mockito.when": 4,
                "org.sonar.api.batch.fs.TextRange.start": 2,
                "org.sonar.core.sarif.Region.getEndLine": 2,
                "org.assertj.core.api.AbstractIntegerAssert.isEqualTo": 2,
                "org.sonar.core.sarif.Region.getStartColumn": 1,
                "java.util.Optional.get": 1,
                "org.sonar.api.batch.fs.TextPointer.lineOffset": 2,
                "org.assertj.core.api.AbstractOptionalAssert.isPresent": 1,
                "org.sonar.core.sarif.Region.getEndColumn": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 2,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.scanner.externalissue.sarif.RegionMapper.mapRegion": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 2,
                "org.mockito": 5,
                "org.sonar.core.sarif": 8,
                "org.sonar.scanner.externalissue.sarif": 2,
                "org.sonar.api.batch.fs": 9,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 10
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 36,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 14,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 14,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 29.785103216347224
    },
    "org.sonar.scanner.sensor.UnchangedFilesHandlerTest.dont_mark_file_is_status_is_not_same": {
        "filePath": "org\\sonar\\scanner\\sensor\\UnchangedFilesHandlerTest.java",
        "methodName": "dont_mark_file_is_status_is_not_same",
        "stats": {
            "methodCalls": {
                "org.mockito.Mockito.never": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.status": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonar.api.batch.fs.internal.DefaultInputFile.setMarkedAsUnchanged": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.sensor.ExecutingSensorContext.setSensorExecuting": 1,
                "org.sonar.scanner.sensor.UnchangedFilesHandler.markAsUnchanged": 1,
                "org.mockito.Mockito.verify": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.sensor.UnchangedFilesHandler": 1,
                "org.sonar.scanner.sensor.SensorId": 1
            },
            "packageAccesses": {
                "org.mockito": 3,
                "org.sonar.scanner.sensor": 5,
                "org.sonar.api.batch.fs.internal": 2,
                "org.mockito.stubbing": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 15.78715459026564
    },
    "org.sonar.scanner.externalissue.sarif.RegionMapperTest.mapRegion_whenRangeIsEmpty_shouldSelectWholeLine": {
        "filePath": "org\\sonar\\scanner\\externalissue\\sarif\\RegionMapperTest.java",
        "methodName": "mapRegion_whenRangeIsEmpty_shouldSelectWholeLine",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.externalissue.sarif.RegionMapperTest.mockRegion": 1,
                "org.sonar.api.batch.fs.TextPointer.line": 2,
                "org.sonar.core.sarif.Region.getStartLine": 2,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 4,
                "org.sonar.api.batch.fs.TextRange.end": 2,
                "org.mockito.Mockito.when": 4,
                "org.sonar.api.batch.fs.TextRange.start": 2,
                "org.sonar.core.sarif.Region.getEndLine": 2,
                "org.assertj.core.api.AbstractIntegerAssert.isEqualTo": 1,
                "org.sonar.core.sarif.Region.getStartColumn": 1,
                "org.assertj.core.api.AbstractIntegerAssert.isZero": 1,
                "java.util.Optional.get": 1,
                "org.sonar.api.batch.fs.TextPointer.lineOffset": 2,
                "org.assertj.core.api.AbstractOptionalAssert.isPresent": 1,
                "org.sonar.core.sarif.Region.getEndColumn": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 2,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.scanner.externalissue.sarif.RegionMapper.mapRegion": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.util": 2,
                "org.mockito": 5,
                "org.sonar.core.sarif": 8,
                "org.sonar.scanner.externalissue.sarif": 2,
                "org.sonar.api.batch.fs": 9,
                "org.mockito.stubbing": 4,
                "org.assertj.core.api": 10
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 36,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 14,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 14,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 19.50748182999925
    },
    "org.sonar.scanner.ci.vendors.GithubActionsTest.loadConfiguration_whenMissingGitHubEnvironmentVariables_shouldLogWarn": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\GithubActionsTest.java",
        "methodName": "loadConfiguration_whenMissingGitHubEnvironmentVariables_shouldLogWarn",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.ci.CiConfiguration.getDevOpsPlatformInfo": 1,
                "org.sonar.scanner.ci.CiVendor.loadConfiguration": 1,
                "org.assertj.core.api.AbstractOptionalAssert.isEmpty": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "org.sonar.api.utils.System2.envVariable": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.ci.vendors.GithubActionsTest.setEnvVariable": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 1,
                "org.mockito": 1,
                "org.sonar.api.utils": 1,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 4,
                "org.sonar.scanner.ci.vendors": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 11,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 14.973025527748321
    },
    "org.sonar.scanner.report.ReportPublisherTest.dump_information_about_report_uploading": {
        "filePath": "org\\sonar\\scanner\\report\\ReportPublisherTest.java",
        "methodName": "dump_information_about_report_uploading",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "java.nio.file.Path.toFile": 1,
                "org.sonar.scanner.scan.ScanProperties.metadataFilePath": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.report.ReportPublisher.prepareAndDumpMetadata": 1,
                "org.apache.commons.io.FileUtils.readFileToString": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan": 1,
                "org.sonar.scanner.report": 1,
                "org.assertj.core.api": 2,
                "org.apache.commons.io": 1,
                "java.nio.file": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 2,
            "logicalLinesOfCodeJunitTest": 2
        },
        "stabilityMetricValue": 19.219888638846967
    },
    "org.sonar.scanner.scan.ProjectBuildersExecutorTest.testProjectBuilderFailsWithToString": {
        "filePath": "org\\sonar\\scanner\\scan\\ProjectBuildersExecutorTest.java",
        "methodName": "testProjectBuilderFailsWithToString",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 1,
                "org.mockito.Mockito.doThrow": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.sonar.scanner.scan.ProjectBuildersExecutor.execute": 1,
                "org.mockito.stubbing.Stubber.when": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonar.api.batch.bootstrap.ProjectBuilder.build": 1,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.ProjectBuildersExecutor": 1,
                "java.lang.IllegalStateException": 1
            },
            "packageAccesses": {
                "java.lang": 1,
                "org.mockito": 4,
                "org.sonar.scanner.scan": 2,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2,
                "org.sonar.api.batch.bootstrap": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 10,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 31.41550824888198
    },
    "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.dependsUponInheritedPhase": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\ModuleSensorExtensionDictionaryTest.java",
        "methodName": "dependsUponInheritedPhase",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractIterableAssert.containsExactly": 1,
                "org.sonar.scanner.bootstrap.AbstractExtensionDictionary.select": 1,
                "org.sonar.core.platform.Container.getComponentsByType": 1,
                "java.util.Arrays.asList": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.newSelector": 1,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.PreSensorSubclass": 1,
                "org.sonar.scanner.sensor.ModuleSensorExtensionDictionary": 1,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.NormalSensor": 1,
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest.PostSensorSubclass": 1,
                "java.util.ArrayList": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.bootstrap.ModuleSensorExtensionDictionaryTest": 3,
                "java.util": 3,
                "org.mockito": 3,
                "org.sonar.scanner.bootstrap": 5,
                "org.sonar.core.platform": 2,
                "org.sonar.scanner.sensor": 2,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 10,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 9,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 9,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 13.13141673556126
    },
    "org.sonar.scanner.scan.filesystem.ByteCharsetDetectorTest.invalidBOM": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\ByteCharsetDetectorTest.java",
        "methodName": "invalidBOM",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractAssert.isNull": 3,
                "org.sonar.scanner.scan.filesystem.ByteCharsetDetector.detectBOM": 3,
                "org.assertj.core.api.Assertions.assertThat": 3
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.assertj.core.api": 6,
                "org.sonar.scanner.scan.filesystem": 3
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 19.8144891686111
    },
    "org.sonar.scm.git.GitScmProviderTest.returnImplem": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "returnImplem",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.sonar.scm.git.GitScmProvider.blameCommand": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.JGitBlameCommand": 1,
                "org.sonar.api.scan.filesystem.PathResolver": 1,
                "org.sonar.scm.git.CompositeBlameCommand": 1,
                "org.sonar.scm.git.strategy.DefaultBlameStrategy": 1,
                "org.sonar.scm.git.NativeGitBlameCommand": 1,
                "org.sonar.scm.git.ProcessWrapperFactory": 1,
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "org.sonar.api.scan.filesystem": 1,
                "org.sonar.scm.git.strategy": 1,
                "org.mockito": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scm.git": 10
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 5,
            "linesOfCodeJunitTest": 5,
            "logicalLinesOfCode": 5,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 11.538430965684949
    },
    "org.sonar.scanner.report.ReportPublisherTest.dump_information_to_custom_path": {
        "filePath": "org\\sonar\\scanner\\report\\ReportPublisherTest.java",
        "methodName": "dump_information_to_custom_path",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.scan.ScanProperties.metadataFilePath": 2,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "org.sonar.scanner.report.ReportPublisher.prepareAndDumpMetadata": 1,
                "org.assertj.core.api.AbstractPathAssert.exists": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan": 2,
                "org.sonar.api.testfixtures.log": 1,
                "org.sonar.scanner.report": 1,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 14.69664611393456
    },
    "org.sonar.scanner.externalissue.sarif.RulesSeverityDetectorTest.detectRulesSeveritiesForNewTaxonomy_shouldReturnsEmptyMapAndLogsWarning_whenOnlyResultDefinedRuleSeverities": {
        "filePath": "org\\sonar\\scanner\\externalissue\\sarif\\RulesSeverityDetectorTest.java",
        "methodName": "detectRulesSeveritiesForNewTaxonomy_shouldReturnsEmptyMapAndLogsWarning_whenOnlyResultDefinedRuleSeverities",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.externalissue.sarif.RulesSeverityDetectorTest.mockResultDefinedRuleSeverities": 1,
                "org.sonar.scanner.externalissue.sarif.RulesSeverityDetector.detectRulesSeveritiesForNewTaxonomy": 1,
                "org.sonar.scanner.externalissue.sarif.RulesSeverityDetectorTest.assertDetectedRuleSeverities": 1,
                "org.sonar.core.sarif.Run.getResults": 1,
                "java.util.Map.entrySet": 1,
                "org.sonar.core.sarif.Result.getLevel": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 3,
                "org.mockito.Mockito.when": 3,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "java.lang.String.format": 1,
                "org.assertj.core.api.AbstractAssert.extracting": 1,
                "org.sonar.core.sarif.Result.getRuleId": 1,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "org.sonar.scanner.externalissue.sarif.RulesSeverityDetectorTest.assertWarningLog": 1,
                "java.util.Set.of": 1,
                "java.lang.Enum.name": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 1,
                "java.util": 3,
                "java.lang": 2,
                "org.mockito": 3,
                "org.sonar.core.sarif": 4,
                "org.sonar.scanner.externalissue.sarif": 4,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 23,
            "numRecursiveMethodCalls": 3,
            "linesOfCode": 10,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 10,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 11.695472038111982
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedLines_returns_empty_set_for_files_with_lines_removed_only": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedLines_returns_empty_set_for_files_with_lines_removed_only",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitScmProviderTest.removeLineInFile": 1,
                "org.eclipse.jgit.api.Git.commit": 1,
                "org.eclipse.jgit.api.AddCommand.call": 1,
                "org.eclipse.jgit.api.CheckoutCommand.setName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.eclipse.jgit.api.CheckoutCommand.call": 1,
                "java.nio.file.Files.readAllLines": 1,
                "java.nio.file.Path.resolve": 2,
                "org.eclipse.jgit.api.CreateBranchCommand.setName": 1,
                "org.eclipse.jgit.api.CommitCommand.call": 1,
                "java.lang.String.join": 1,
                "java.util.Collections.singleton": 1,
                "java.nio.file.Files.write": 1,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "java.util.Collections.emptySet": 1,
                "org.eclipse.jgit.api.Git.add": 1,
                "org.assertj.core.api.AbstractMapAssert.containsExactly": 1,
                "java.util.List.remove": 1,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 1,
                "org.eclipse.jgit.api.Git.branchCreate": 1,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 1,
                "org.sonar.scm.git.GitScmProvider.branchChangedLines": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.call": 1,
                "org.eclipse.jgit.api.CommitCommand.setAuthor": 1,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "org.sonar.scm.git.GitScmProviderTest.commit": 2,
                "org.eclipse.jgit.api.Git.checkout": 1,
                "org.assertj.core.data.MapEntry.entry": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "java.lang": 4,
                "java.util": 5,
                "org.eclipse.jgit.api": 13,
                "org.mockito": 1,
                "org.sonar.scm.git": 7,
                "org.assertj.core.api": 2,
                "org.assertj.core.data": 1,
                "java.nio.file": 6
            },
            "numConditionals": 0,
            "numLoops": 1,
            "numNestedLoops": 0,
            "numMethodCalls": 31,
            "numRecursiveMethodCalls": 5,
            "linesOfCode": 19,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 20,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 13.399139194709097
    },
    "org.sonar.scanner.repository.DefaultMetricsRepositoryLoaderTest.testIOError": {
        "filePath": "org\\sonar\\scanner\\repository\\DefaultMetricsRepositoryLoaderTest.java",
        "methodName": "testIOError",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 2,
                "org.sonar.scanner.repository.DefaultMetricsRepositoryLoader.load": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.mockito.Mockito.when": 3,
                "org.sonar.scanner.WsTestUtil.mockReader": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.mockito.stubbing.OngoingStubbing.thenThrow": 1,
                "org.sonarqube.ws.client.WsResponse.contentReader": 1,
                "java.io.Reader.read": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.mockito.ArgumentMatchers.anyInt": 2,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "java.io.IOException": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 2,
                "org.mockito": 9,
                "java.io": 3,
                "org.sonar.scanner": 1,
                "org.sonar.scanner.repository": 1,
                "org.sonar.scanner.bootstrap": 1,
                "org.mockito.stubbing": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 19,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 5
        },
        "stabilityMetricValue": 36.83679062891142
    },
    "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.call_whenTokenExpirationApproaches_shouldLogWarnings": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\DefaultScannerWsClientTest.java",
        "methodName": "call_whenTokenExpirationApproaches_shouldLogWarnings",
        "stats": {
            "methodCalls": {
                "java.time.format.DateTimeFormatter.ofPattern": 2,
                "java.util.Collections.emptyMap": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.newRequest": 1,
                "java.time.LocalDateTime.atZone": 1,
                "org.sonarqube.ws.client.MockWsResponse.setExpirationDate": 1,
                "org.sonarqube.ws.client.WsClient.wsConnector": 1,
                "java.time.ZonedDateTime.format": 1,
                "org.assertj.core.api.Assertions.assertThat": 3,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "java.time.format.DateTimeFormatter.format": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.newResponse": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.sonarqube.ws.client.MockWsResponse.setCode": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 2,
                "java.util.List.get": 2,
                "java.time.ZonedDateTime.plusDays": 1,
                "org.assertj.core.api.AbstractCharSequenceAssert.contains": 2,
                "org.sonarqube.ws.client.MockWsResponse.setRequestUrl": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.setLevel": 1,
                "java.time.LocalDateTime.now": 1,
                "org.sonarqube.ws.client.WsConnector.call": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.GlobalAnalysisMode": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient": 1,
                "org.sonar.scanner.bootstrap.ScannerProperties": 1,
                "org.sonarqube.ws.client.GetRequest": 1,
                "org.sonarqube.ws.client.MockWsResponse": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 9,
                "org.sonar.api.testfixtures.log": 2,
                "java.time": 5,
                "java.lang": 1,
                "java.util": 4,
                "java.time.format": 3,
                "org.mockito": 1,
                "org.sonar.scanner.bootstrap": 8,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 29,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 15,
            "linesOfCodeJunitTest": 13,
            "logicalLinesOfCode": 15,
            "logicalLinesOfCodeJunitTest": 13
        },
        "stabilityMetricValue": 22.035581920776988
    },
    "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.call_whenUnauthorizedAndDebugEnabled_shouldLogResponseDetails": {
        "filePath": "org\\sonar\\scanner\\bootstrap\\DefaultScannerWsClientTest.java",
        "methodName": "call_whenUnauthorizedAndDebugEnabled_shouldLogResponseDetails",
        "stats": {
            "methodCalls": {
                "java.util.Collections.emptyMap": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.newRequest": 1,
                "org.sonarqube.ws.client.WsClient.wsConnector": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.assertj.core.api.AbstractIterableAssert.hasSize": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClientTest.newResponse": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.sonarqube.ws.client.MockWsResponse.setHeader": 1,
                "org.sonarqube.ws.client.MockWsResponse.setCode": 1,
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 1,
                "java.util.List.get": 1,
                "org.assertj.core.api.AbstractCharSequenceAssert.contains": 1,
                "org.sonarqube.ws.client.MockWsResponse.setRequestUrl": 1,
                "org.sonarqube.ws.client.MockWsResponse.setContent": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.setLevel": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonarqube.ws.client.WsConnector.call": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.bootstrap.GlobalAnalysisMode": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient": 1,
                "org.sonar.scanner.bootstrap.ScannerProperties": 1,
                "org.sonarqube.ws.client.GetRequest": 1,
                "org.sonarqube.ws.client.MockWsResponse": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 10,
                "org.sonar.api.testfixtures.log": 2,
                "java.util": 3,
                "org.mockito": 1,
                "org.sonar.scanner.bootstrap": 7,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 22,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 11,
            "linesOfCodeJunitTest": 9,
            "logicalLinesOfCode": 12,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 17.931695395491687
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedFiles_should_return_null_when_branch_nonexistent": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedFiles_should_return_null_when_branch_nonexistent",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitScmProvider.branchChangedFiles": 1,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "org.mockito": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scm.git": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 11.951613318478019
    },
    "org.sonar.scanner.scm.ScmRevisionImplTest.ignore_failure_if_scm_does_not_support_revisions": {
        "filePath": "org\\sonar\\scanner\\scm\\ScmRevisionImplTest.java",
        "methodName": "ignore_failure_if_scm_does_not_support_revisions",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 1,
                "java.util.Optional.empty": 1,
                "org.sonar.scanner.scm.ScmConfiguration.provider": 1,
                "org.assertj.core.api.AbstractOptionalAssert.isEmpty": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scanner.ci.CiConfiguration.getScmRevision": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.scanner.scm.ScmRevisionImpl.get": 1,
                "org.mockito.Mockito.mock": 3
            },
            "objectInstantiations": {
                "java.lang.UnsupportedOperationException": 1,
                "java.util.HashMap": 1,
                "org.sonar.scanner.scm.ScmRevisionImpl": 1,
                "org.sonar.scanner.bootstrap.ScannerProperties": 1
            },
            "packageAccesses": {
                "java.util": 3,
                "java.lang": 1,
                "org.sonar.scanner.fs": 1,
                "org.mockito": 5,
                "org.sonar.scanner.scm": 5,
                "org.sonar.scanner.bootstrap": 1,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 15,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 8,
            "linesOfCodeJunitTest": 8,
            "logicalLinesOfCode": 8,
            "logicalLinesOfCodeJunitTest": 8
        },
        "stabilityMetricValue": 24.28226746640009
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedLines_uses_relative_paths_from_project_root": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedLines_uses_relative_paths_from_project_root",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitUtils.createFile": 1,
                "org.eclipse.jgit.api.Git.commit": 2,
                "java.nio.file.Path.getParent": 1,
                "java.lang.String.getBytes": 1,
                "org.eclipse.jgit.api.AddCommand.call": 2,
                "org.eclipse.jgit.api.CheckoutCommand.setName": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.lang.StringBuilder.append": 8,
                "java.lang.StringBuilder.toString": 4,
                "org.eclipse.jgit.api.CheckoutCommand.call": 1,
                "java.nio.file.Files.readAllLines": 2,
                "org.sonar.scm.git.GitScmProviderTest.randomizedLine": 3,
                "java.util.Random.nextInt": 3,
                "java.nio.file.Path.resolve": 5,
                "org.eclipse.jgit.api.CreateBranchCommand.setName": 1,
                "org.eclipse.jgit.api.CommitCommand.call": 2,
                "java.lang.String.join": 2,
                "java.util.Collections.singleton": 1,
                "java.util.Arrays.asList": 1,
                "java.nio.file.Files.write": 3,
                "org.sonar.scm.git.GitScmProviderTest.createAndCommitFile": 2,
                "java.util.List.add": 2,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "org.eclipse.jgit.api.Git.add": 2,
                "org.assertj.core.api.AbstractMapAssert.containsExactly": 1,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 2,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 2,
                "org.eclipse.jgit.api.Git.branchCreate": 1,
                "org.sonar.scm.git.GitScmProvider.branchChangedLines": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.call": 1,
                "java.nio.file.Files.createDirectories": 1,
                "org.eclipse.jgit.api.CommitCommand.setAuthor": 2,
                "java.lang.String.length": 3,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "org.sonar.scm.git.GitScmProviderTest.commit": 3,
                "org.eclipse.jgit.api.Git.checkout": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedContent": 1,
                "org.sonar.scm.git.GitScmProviderTest.addLineToFile": 2,
                "org.assertj.core.data.MapEntry.entry": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.util.HashSet": 1,
                "java.lang.StringBuilder": 4,
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "java.util": 11,
                "java.lang": 31,
                "org.eclipse.jgit.api": 20,
                "org.mockito": 1,
                "org.sonar.scm.git": 16,
                "org.assertj.core.api": 2,
                "org.assertj.core.data": 1,
                "java.nio.file": 16
            },
            "numConditionals": 0,
            "numLoops": 9,
            "numNestedLoops": 3,
            "numMethodCalls": 76,
            "numRecursiveMethodCalls": 14,
            "linesOfCode": 58,
            "linesOfCodeJunitTest": 10,
            "logicalLinesOfCode": 67,
            "logicalLinesOfCodeJunitTest": 10
        },
        "stabilityMetricValue": 11.849661786493584
    },
    "org.sonar.scanner.genericcoverage.GenericTestExecutionReportParserTest.unittest_invalid_report_version": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericTestExecutionReportParserTest.java",
        "methodName": "unittest_invalid_report_version",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.genericcoverage.GenericTestExecutionReportParserTest.parseUnitTestReport": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.junit.rules.TemporaryFolder.newFile": 1,
                "org.sonar.scanner.genericcoverage.GenericTestExecutionReportParser.parse": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericTestExecutionReportParser": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.genericcoverage": 4,
                "org.junit.rules": 1,
                "java.io": 1,
                "org.apache.commons.io": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 4,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 12.0454803798696
    },
    "org.sonar.scanner.sensor.UnchangedFilesHandlerTest.dont_mark_file_if_sensor_is_not_enabled": {
        "filePath": "org\\sonar\\scanner\\sensor\\UnchangedFilesHandlerTest.java",
        "methodName": "dont_mark_file_if_sensor_is_not_enabled",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.sensor.ExecutingSensorContext.setSensorExecuting": 1,
                "org.sonar.scanner.sensor.UnchangedFilesHandler.markAsUnchanged": 1,
                "org.mockito.Mockito.verifyNoInteractions": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.sensor.UnchangedFilesHandler": 1,
                "org.sonar.scanner.sensor.SensorId": 1
            },
            "packageAccesses": {
                "org.mockito": 1,
                "org.sonar.scanner.sensor": 5
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 3,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 21.560867916104133
    },
    "org.sonar.scanner.ci.vendors.GitlabCiTest.isDetected": {
        "filePath": "org\\sonar\\scanner\\ci\\vendors\\GitlabCiTest.java",
        "methodName": "isDetected",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractBooleanAssert.isTrue": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.sonar.api.utils.System2.envVariable": 2,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.sonar.scanner.ci.CiVendor.isDetected": 2,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.ci.vendors.GitlabCiTest.setEnvVariable": 2
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.mockito": 2,
                "org.sonar.api.utils": 2,
                "org.sonar.scanner.ci": 2,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 4,
                "org.sonar.scanner.ci.vendors": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 11.72547284335574
    },
    "org.sonar.scm.git.NativeGitBlameCommandTest.git_should_not_be_enabled_if_version_command_does_not_return_string_output": {
        "filePath": "org\\sonar\\scm\\git\\NativeGitBlameCommandTest.java",
        "methodName": "git_should_not_be_enabled_if_version_command_does_not_return_string_output",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.isNull": 1,
                "org.mockito.ArgumentMatchers.any": 1,
                "org.mockito.ArgumentMatchers.eq": 2,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.sonar.scm.git.NativeGitBlameCommand.checkIfEnabled": 1,
                "java.util.function.Consumer.accept": 1,
                "org.sonar.scm.git.NativeGitBlameCommandTest.mockGitVersionCommand": 1,
                "org.mockito.Mockito.mock": 2
            },
            "objectInstantiations": {
                "org.sonar.scm.git.NativeGitBlameCommand": 1
            },
            "packageAccesses": {
                "org.mockito": 6,
                "java.util.function": 2,
                "org.assertj.core.api": 2,
                "org.sonar.scm.git.ProcessWrapperFactory": 1,
                "org.sonar.scm.git": 6
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 15,
            "numRecursiveMethodCalls": 1,
            "linesOfCode": 11,
            "linesOfCodeJunitTest": 3,
            "logicalLinesOfCode": 11,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 13.946268330359434
    },
    "org.sonar.batch.bootstrapper.LoggingConfiguratorTest.testWithFile": {
        "filePath": "org\\sonar\\batch\\bootstrapper\\LoggingConfiguratorTest.java",
        "methodName": "testWithFile",
        "stats": {
            "methodCalls": {
                "org.sonar.batch.bootstrapper.LoggingConfigurator.apply": 1,
                "java.io.OutputStream.close": 1,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.junit.rules.TemporaryFolder.getRoot": 1,
                "org.apache.commons.io.IOUtils.copy": 1,
                "org.slf4j.Logger.info": 1,
                "org.sonar.batch.bootstrapper.LoggingConfiguration.setLogOutput": 1,
                "java.lang.Object.getClass": 2,
                "org.slf4j.LoggerFactory.getLogger": 1,
                "java.lang.Class.getResourceAsStream": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 1,
                "org.assertj.core.api.AbstractCharSequenceAssert.endsWith": 1
            },
            "objectInstantiations": {
                "java.io.FileOutputStream": 1,
                "java.io.File": 1
            },
            "packageAccesses": {
                "org.sonar.batch.bootstrapper": 2,
                "java.lang": 3,
                "org.junit.rules": 1,
                "org.slf4j": 3,
                "java.io": 7,
                "org.apache.commons.io": 1,
                "org.assertj.core.api": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 14,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 12,
            "linesOfCodeJunitTest": 12,
            "logicalLinesOfCode": 12,
            "logicalLinesOfCodeJunitTest": 12
        },
        "stabilityMetricValue": 30.12236157306969
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedLines_returns_null_when_branch_doesnt_exist": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedLines_returns_null_when_branch_doesnt_exist",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "org.sonar.scm.git.GitScmProviderTest.newScmProvider": 1,
                "java.util.Collections.emptySet": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.scm.git.GitScmProvider.branchChangedLines": 1,
                "org.assertj.core.api.AbstractAssert.isNull": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scm.git.GitScmProvider": 1
            },
            "packageAccesses": {
                "java.util": 1,
                "org.mockito": 1,
                "org.assertj.core.api": 2,
                "org.sonar.scm.git": 4
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 7,
            "numRecursiveMethodCalls": 2,
            "linesOfCode": 3,
            "linesOfCodeJunitTest": 1,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 1
        },
        "stabilityMetricValue": 12.455558582766349
    },
    "org.sonar.scanner.scan.filesystem.CharsetValidationTest.detectUTF16NewLine": {
        "filePath": "org\\sonar\\scanner\\scan\\filesystem\\CharsetValidationTest.java",
        "methodName": "detectUTF16NewLine",
        "stats": {
            "methodCalls": {
                "java.nio.charset.CharsetEncoder.onMalformedInput": 4,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.Result.valid": 3,
                "java.io.PrintStream.println": 1,
                "java.nio.charset.CharsetEncoder.encode": 4,
                "org.assertj.core.api.Assertions.assertThat": 5,
                "java.nio.charset.Charset.newEncoder": 4,
                "java.nio.charset.CharsetEncoder.onUnmappableCharacter": 4,
                "java.nio.charset.Charset.forName": 1,
                "java.nio.CharBuffer.wrap": 4,
                "java.nio.Buffer.remaining": 4,
                "java.nio.ByteBuffer.get": 4,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.Result.charset": 2,
                "org.sonar.scanner.scan.filesystem.CharsetValidationTest.encode": 4,
                "java.util.Arrays.toString": 1,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 5,
                "org.sonar.scanner.scan.filesystem.CharsetValidation.isUTF16": 5
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "java.lang": 1,
                "java.util": 1,
                "java.io": 1,
                "org.sonar.scanner.scan.filesystem": 14,
                "java.nio": 16,
                "org.assertj.core.api": 10,
                "java.nio.charset": 21
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 55,
            "numRecursiveMethodCalls": 4,
            "linesOfCode": 31,
            "linesOfCodeJunitTest": 11,
            "logicalLinesOfCode": 31,
            "logicalLinesOfCodeJunitTest": 11
        },
        "stabilityMetricValue": 16.244500148171362
    },
    "org.sonar.scm.git.GitScmProviderTest.branchChangedLines_omits_files_with_git_api_errors": {
        "filePath": "org\\sonar\\scm\\git\\GitScmProviderTest.java",
        "methodName": "branchChangedLines_omits_files_with_git_api_errors",
        "stats": {
            "methodCalls": {
                "org.sonar.scm.git.GitUtils.createFile": 2,
                "org.eclipse.jgit.api.Git.commit": 5,
                "java.nio.file.Path.getParent": 2,
                "java.lang.String.getBytes": 2,
                "org.eclipse.jgit.api.AddCommand.call": 5,
                "org.eclipse.jgit.api.CheckoutCommand.setName": 1,
                "java.util.concurrent.atomic.AtomicInteger.getAndIncrement": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "java.lang.StringBuilder.append": 14,
                "java.lang.StringBuilder.toString": 7,
                "org.assertj.core.api.AbstractMapAssert.containsOnly": 1,
                "org.eclipse.jgit.api.CheckoutCommand.call": 1,
                "java.nio.file.Files.readAllLines": 3,
                "org.sonar.scm.git.GitScmProviderTest.randomizedLine": 5,
                "java.util.Random.nextInt": 5,
                "java.nio.file.Path.resolve": 10,
                "org.sonar.scm.git.GitScmProvider.prepareTreeParser": 1,
                "java.util.List.of": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.setName": 1,
                "org.eclipse.jgit.api.CommitCommand.call": 5,
                "java.lang.String.join": 5,
                "java.util.Collections.singleton": 2,
                "java.nio.file.Files.write": 5,
                "org.sonar.scm.git.GitScmProviderTest.createAndCommitFile": 4,
                "java.util.List.add": 3,
                "org.eclipse.jgit.api.Git.add": 5,
                "org.eclipse.jgit.api.AddCommand.addFilepattern": 5,
                "org.eclipse.jgit.api.CommitCommand.setMessage": 5,
                "org.eclipse.jgit.api.Git.branchCreate": 1,
                "org.sonar.scm.git.GitScmProvider.branchChangedLines": 1,
                "org.eclipse.jgit.api.CreateBranchCommand.call": 1,
                "java.nio.file.Files.createDirectories": 2,
                "org.eclipse.jgit.api.CommitCommand.setAuthor": 5,
                "java.lang.String.length": 5,
                "org.sonar.scm.git.GitScmProviderTest.mockCommand": 1,
                "org.sonar.scm.git.GitScmProviderTest.commit": 8,
                "org.eclipse.jgit.api.Git.checkout": 1,
                "org.sonar.scm.git.GitScmProviderTest.randomizedContent": 2,
                "org.sonar.scm.git.GitScmProviderTest.addLineToFile": 3,
                "org.assertj.core.data.MapEntry.entry": 2,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "java.lang.StringBuilder": 7,
                "java.lang.RuntimeException": 1,
                "java.util.concurrent.atomic.AtomicInteger": 1,
                "org.sonar.scm.git.GitScmProvider": 1,
                "java.util.LinkedHashSet": 1
            },
            "packageAccesses": {
                "java.lang": 61,
                "java.util": 16,
                "org.eclipse.jgit.api": 41,
                "org.mockito": 1,
                "org.sonar.scm.git": 29,
                "java.util.concurrent.atomic": 3,
                "org.assertj.core.api": 2,
                "org.assertj.core.data": 2,
                "java.nio.file": 27
            },
            "numConditionals": 1,
            "numLoops": 17,
            "numNestedLoops": 5,
            "numMethodCalls": 140,
            "numRecursiveMethodCalls": 25,
            "linesOfCode": 111,
            "linesOfCodeJunitTest": 23,
            "logicalLinesOfCode": 127,
            "logicalLinesOfCodeJunitTest": 22
        },
        "stabilityMetricValue": 15.83560777150312
    },
    "org.sonar.scm.git.strategy.DefaultBlameStrategyTest.useRepositoryBlame_whenProcessorsCountAndFileSizeSpecified_shouldEnableRepoBlame": {
        "filePath": "org\\sonar\\scm\\git\\strategy\\DefaultBlameStrategyTest.java",
        "methodName": "useRepositoryBlame_whenProcessorsCountAndFileSizeSpecified_shouldEnableRepoBlame",
        "stats": {
            "methodCalls": {
                "java.util.Optional.empty": 1,
                "org.sonar.api.config.Configuration.getBoolean": 1,
                "org.assertj.core.api.Assertions.assertThat": 6,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.sonar.scm.git.strategy.BlameStrategy.getBlameAlgorithm": 5,
                "org.assertj.core.api.AbstractAssert.isEqualTo": 5,
                "org.mockito.Mockito.when": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 1,
                "java.util": 1,
                "org.mockito": 1,
                "org.sonar.scm.git.strategy": 5,
                "org.sonar.api.config": 1,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 12
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 22,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 7,
            "linesOfCodeJunitTest": 7,
            "logicalLinesOfCode": 7,
            "logicalLinesOfCodeJunitTest": 7
        },
        "stabilityMetricValue": 12.292516322607634
    },
    "org.sonar.batch.bootstrapper.LoggingConfiguratorTest.testFormatNoEffect": {
        "filePath": "org\\sonar\\batch\\bootstrapper\\LoggingConfiguratorTest.java",
        "methodName": "testFormatNoEffect",
        "stats": {
            "methodCalls": {
                "org.sonar.batch.bootstrapper.LoggingConfiguration.setLogOutput": 1,
                "org.sonar.batch.bootstrapper.LoggingConfigurator.apply": 1,
                "org.assertj.core.api.AbstractStringAssert.isEqualTo": 1,
                "java.lang.Object.getClass": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.slf4j.LoggerFactory.getLogger": 1,
                "org.sonar.batch.bootstrapper.LoggingConfiguration.setFormat": 1,
                "org.slf4j.Logger.info": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.batch.bootstrapper": 3,
                "java.lang": 1,
                "org.slf4j": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 8,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 37.88565000381101
    },
    "org.sonar.scanner.genericcoverage.GenericTestExecutionSensorTest.logWhenDeprecatedPropsAreUsed": {
        "filePath": "org\\sonar\\scanner\\genericcoverage\\GenericTestExecutionSensorTest.java",
        "methodName": "logWhenDeprecatedPropsAreUsed",
        "stats": {
            "methodCalls": {
                "java.util.Map.put": 1,
                "org.sonar.scanner.genericcoverage.GenericTestExecutionSensor.properties": 1,
                "org.apache.commons.io.FileUtils.write": 1,
                "org.sonar.scanner.genericcoverage.GenericTestExecutionSensor.execute": 1,
                "org.junit.rules.TemporaryFolder.newFolder": 1,
                "org.assertj.core.api.AbstractIterableAssert.contains": 2,
                "org.assertj.core.api.Assertions.assertThat": 2,
                "org.sonar.api.batch.sensor.internal.SensorContextTester.create": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 2,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.genericcoverage.GenericTestExecutionSensor": 1,
                "org.sonar.api.config.internal.Encryption": 1,
                "java.util.HashMap": 1,
                "java.io.File": 1,
                "org.sonar.api.config.PropertyDefinitions": 1,
                "org.sonar.scanner.scan.ProjectConfiguration": 1
            },
            "packageAccesses": {
                "java.util": 3,
                "org.mockito": 1,
                "org.sonar.scanner.config": 1,
                "org.sonar.scanner.genericcoverage": 3,
                "org.sonar.api.batch.sensor.internal": 2,
                "org.apache.commons.io": 1,
                "org.assertj.core.api": 4,
                "org.sonar.api.testfixtures.log": 2,
                "org.junit.rules": 1,
                "org.sonar.api.config.internal": 1,
                "java.io": 3,
                "org.sonar.scanner.scan": 1,
                "org.sonar.api.config": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 13,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 11,
            "linesOfCodeJunitTest": 11,
            "logicalLinesOfCode": 11,
            "logicalLinesOfCodeJunitTest": 11
        },
        "stabilityMetricValue": 24.567205975243475
    },
    "org.sonar.scanner.report.ReportPublisherTest.upload_whenDevOpsPlatformInformationPresentInCiConfiguration_shouldUploadDevOpsPlatformInfoAsCharacteristic": {
        "filePath": "org\\sonar\\scanner\\report\\ReportPublisherTest.java",
        "methodName": "upload_whenDevOpsPlatformInformationPresentInCiConfiguration_shouldUploadDevOpsPlatformInfoAsCharacteristic",
        "stats": {
            "methodCalls": {
                "org.mockito.ArgumentMatchers.any": 1,
                "java.util.Optional.of": 1,
                "org.sonar.api.impl.utils.JUnitTempFolder.newFile": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonarqube.ws.client.WsResponse.contentStream": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchName": 1,
                "org.sonarqube.ws.Ce.SubmitResponse.newBuilder": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.pullRequestKey": 1,
                "org.sonar.scanner.bootstrap.DefaultScannerWsClient.call": 2,
                "org.sonar.scanner.ci.DevOpsPlatformInfo.getProjectIdentifier": 1,
                "org.mockito.ArgumentCaptor.getValue": 1,
                "org.sonar.scanner.report.ReportPublisher.upload": 1,
                "org.assertj.core.api.AbstractIterableAssert.contains": 1,
                "com.google.protobuf.AbstractMessageLite.writeTo": 1,
                "org.sonarqube.ws.client.WsResponse.failIfNotSuccessful": 1,
                "org.sonar.scanner.ci.DevOpsPlatformInfo.getUrl": 1,
                "org.sonarqube.ws.client.Parameters.getValues": 1,
                "org.mockito.ArgumentCaptor.capture": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 7,
                "org.sonarqube.ws.Ce.SubmitResponse.Builder.build": 1,
                "org.mockito.Mockito.when": 7,
                "org.sonarqube.ws.client.WsRequest.getParameters": 1,
                "org.mockito.Mockito.verify": 1,
                "org.sonar.scanner.ci.CiConfiguration.getDevOpsPlatformInfo": 1,
                "java.io.PipedOutputStream.close": 1,
                "org.mockito.ArgumentCaptor.forClass": 1,
                "org.sonar.scanner.scan.branch.BranchConfiguration.branchType": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.ci.DevOpsPlatformInfo": 1,
                "java.io.PipedOutputStream": 1,
                "java.io.PipedInputStream": 1
            },
            "packageAccesses": {
                "org.sonarqube.ws.client": 6,
                "org.sonar.api.impl.utils": 1,
                "java.util": 1,
                "org.mockito": 14,
                "com.google.protobuf": 1,
                "org.sonar.scanner.report": 1,
                "org.sonar.scanner.bootstrap": 2,
                "org.sonar.scanner.ci": 5,
                "org.mockito.stubbing": 7,
                "org.assertj.core.api": 2,
                "java.lang": 2,
                "org.sonar.scanner.scan.branch": 3,
                "java.io": 5,
                "org.sonarqube.ws": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 41,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 20,
            "linesOfCodeJunitTest": 20,
            "logicalLinesOfCode": 20,
            "logicalLinesOfCodeJunitTest": 20
        },
        "stabilityMetricValue": 13.702672837414795
    },
    "org.sonar.scanner.sensor.UnchangedFilesHandlerTest.not_active_if_property_not_defined": {
        "filePath": "org\\sonar\\scanner\\sensor\\UnchangedFilesHandlerTest.java",
        "methodName": "not_active_if_property_not_defined",
        "stats": {
            "methodCalls": {
                "org.sonar.api.config.internal.MapSettings.asConfig": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.sonar.api.testfixtures.log.AbstractLogTester.logs": 1,
                "org.sonar.scanner.sensor.UnchangedFilesHandler.markAsUnchanged": 1,
                "org.mockito.Mockito.verifyNoInteractions": 1,
                "org.assertj.core.api.AbstractIterableAssert.isEmpty": 1
            },
            "objectInstantiations": {
                "org.sonar.api.config.internal.MapSettings": 1,
                "org.sonar.scanner.sensor.UnchangedFilesHandler": 1
            },
            "packageAccesses": {
                "org.sonar.api.testfixtures.log": 1,
                "org.sonar.api.config.internal": 2,
                "org.mockito": 1,
                "org.sonar.scanner.sensor": 3,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 6,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 14.880567155602028
    },
    "org.sonar.scanner.issue.ignore.IgnoreIssuesFilterTest.shouldAcceptIfRulePatternDoesNotMatch": {
        "filePath": "org\\sonar\\scanner\\issue\\ignore\\IgnoreIssuesFilterTest.java",
        "methodName": "shouldAcceptIfRulePatternDoesNotMatch",
        "stats": {
            "methodCalls": {
                "org.sonar.scanner.issue.ignore.IgnoreIssuesFilter.accept": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.assertj.core.api.AbstractBooleanAssert.isFalse": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 1,
                "org.mockito.Mockito.when": 1,
                "org.sonar.api.utils.WildcardPattern.match": 1,
                "org.sonar.api.rule.RuleKey.toString": 1,
                "com.google.common.collect.ImmutableSet.of": 1,
                "org.mockito.Mockito.mock": 1,
                "org.sonar.scanner.issue.ignore.IgnoreIssuesFilter.addRuleExclusionPatternForComponent": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.issue.ignore.IgnoreIssuesFilter": 1,
                "org.sonar.api.batch.rule.internal.DefaultActiveRules": 1
            },
            "packageAccesses": {
                "org.mockito": 2,
                "org.sonar.api.utils": 2,
                "org.sonar.api.batch.rule.internal": 2,
                "org.sonar.scanner.issue.ignore": 4,
                "org.mockito.stubbing": 1,
                "org.assertj.core.api": 2,
                "com.google.common.collect": 1,
                "org.sonar.api.rule": 1
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 10,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 6,
            "linesOfCodeJunitTest": 6,
            "logicalLinesOfCode": 6,
            "logicalLinesOfCodeJunitTest": 6
        },
        "stabilityMetricValue": 16.627299993010208
    },
    "org.sonar.scanner.scan.ProjectBuildersExecutorTest.testProjectBuilderFailsWithoutToString": {
        "filePath": "org\\sonar\\scanner\\scan\\ProjectBuildersExecutorTest.java",
        "methodName": "testProjectBuilderFailsWithoutToString",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.Assertions.assertThatThrownBy": 1,
                "org.assertj.core.api.AbstractAssert.isInstanceOf": 1,
                "org.sonar.scanner.scan.ProjectBuildersExecutor.execute": 1,
                "org.mockito.Mockito.mock": 1
            },
            "objectInstantiations": {
                "org.sonar.scanner.scan.ProjectBuildersExecutor": 1,
                "org.sonar.scanner.scan.ProjectBuildersExecutorTest.MyProjectBuilder": 1
            },
            "packageAccesses": {
                "org.sonar.scanner.scan": 3,
                "org.mockito": 1,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 5,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 2,
            "linesOfCodeJunitTest": 2,
            "logicalLinesOfCode": 3,
            "logicalLinesOfCodeJunitTest": 3
        },
        "stabilityMetricValue": 18.4281216283106
    },
    "org.sonar.scanner.scan.branch.ProjectBranchesProviderTest.should_use_loader": {
        "filePath": "org\\sonar\\scanner\\scan\\branch\\ProjectBranchesProviderTest.java",
        "methodName": "should_use_loader",
        "stats": {
            "methodCalls": {
                "org.assertj.core.api.AbstractAssert.isSameAs": 1,
                "org.assertj.core.api.Assertions.assertThat": 1,
                "org.mockito.stubbing.OngoingStubbing.thenReturn": 2,
                "org.sonar.scanner.bootstrap.ScannerProperties.getProjectKey": 1,
                "org.mockito.Mockito.when": 2,
                "org.sonar.scanner.scan.branch.ProjectBranchesLoader.load": 1,
                "org.sonar.scanner.scan.branch.ProjectBranchesProvider.provide": 1
            },
            "objectInstantiations": {},
            "packageAccesses": {
                "org.sonar.scanner.scan.branch": 3,
                "org.sonar.scanner.bootstrap": 1,
                "org.mockito": 2,
                "org.mockito.stubbing": 2,
                "org.assertj.core.api": 2
            },
            "numConditionals": 0,
            "numLoops": 0,
            "numNestedLoops": 0,
            "numMethodCalls": 9,
            "numRecursiveMethodCalls": 0,
            "linesOfCode": 4,
            "linesOfCodeJunitTest": 4,
            "logicalLinesOfCode": 4,
            "logicalLinesOfCodeJunitTest": 4
        },
        "stabilityMetricValue": 16.179533756639394
    }
}